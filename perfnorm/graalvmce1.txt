[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed May 19, 2018 10:54:31 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:991:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1077:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:443:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:451:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:967:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 5 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.26.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.26.1-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:56: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = d0(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = d0(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           e0(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           e0(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "a"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "l"
[info]         case 1 => "r"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:60: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d7(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d10(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d5(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d15(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d8(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(d0(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e7(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e15(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e8(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e14(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "properties"
[info]         case 1 => "geometry"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "coordinates"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd, 300)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "bd"
[info]         case 2 => "os"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null, 300));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Char] = new Array[Char](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Double] = new Array[Double](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Float] = new Array[Float](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Int] = new Array[Int](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Long] = new Array[Long](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Short] = new Array[Short](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "l"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "destination_addresses"
[info]         case 1 => "origin_addresses"
[info]         case 2 => "rows"
[info]         case 3 => "status"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "distance"
[info]         case 1 => "duration"
[info]         case 2 => "status"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "text"
[info]         case 1 => "value"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "i"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]         case 1 => "s"
[info]         case 2 => "i"
[info]         case 3 => "l"
[info]         case 4 => "bl"
[info]         case 5 => "ch"
[info]         case 6 => "dbl"
[info]         case 7 => "f"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(f5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "retweeted_status"
[info]         case 18 => "is_quote_status"
[info]         case 19 => "retweet_count"
[info]         case 20 => "favorite_count"
[info]         case 21 => "favorited"
[info]         case 22 => "retweeted"
[info]         case 23 => "possibly_sensitive"
[info]         case 24 => "lang"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "screen_name"
[info]         case 1 => "name"
[info]         case 2 => "id"
[info]         case 3 => "id_str"
[info]         case 4 => "indices"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "expanded_url"
[info]         case 2 => "display_url"
[info]         case 3 => "indices"
[info]       };
[info]       private[this] def f3(i: Int): String = (i: @switch) match {
[info]         case 0 => "id"
[info]         case 1 => "id_str"
[info]         case 2 => "name"
[info]         case 3 => "screen_name"
[info]         case 4 => "location"
[info]         case 5 => "description"
[info]         case 6 => "url"
[info]         case 7 => "entities"
[info]         case 8 => "protected"
[info]         case 9 => "followers_count"
[info]         case 10 => "friends_count"
[info]         case 11 => "listed_count"
[info]         case 12 => "created_at"
[info]         case 13 => "favourites_count"
[info]         case 14 => "utc_offset"
[info]         case 15 => "time_zone"
[info]         case 16 => "geo_enabled"
[info]         case 17 => "verified"
[info]         case 18 => "statuses_count"
[info]         case 19 => "lang"
[info]         case 20 => "contributors_enabled"
[info]         case 21 => "is_translator"
[info]         case 22 => "is_translation_enabled"
[info]         case 23 => "profile_background_color"
[info]         case 24 => "profile_background_image_url"
[info]         case 25 => "profile_background_image_url_https"
[info]         case 26 => "profile_background_tile"
[info]         case 27 => "profile_image_url"
[info]         case 28 => "profile_image_url_https"
[info]         case 29 => "profile_banner_url"
[info]         case 30 => "profile_link_color"
[info]         case 31 => "profile_sidebar_border_color"
[info]         case 32 => "profile_sidebar_fill_color"
[info]         case 33 => "profile_text_color"
[info]         case 34 => "profile_use_background_image"
[info]         case 35 => "has_extended_profile"
[info]         case 36 => "default_profile"
[info]         case 37 => "default_profile_image"
[info]         case 38 => "following"
[info]         case 39 => "follow_request_sent"
[info]         case 40 => "notifications"
[info]         case 41 => "translator_type"
[info]       };
[info]       private[this] def f4(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "description"
[info]       };
[info]       private[this] def f5(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "is_quote_status"
[info]         case 18 => "retweet_count"
[info]         case 19 => "favorite_count"
[info]         case 20 => "favorited"
[info]         case 21 => "retweeted"
[info]         case 22 => "possibly_sensitive"
[info]         case 23 => "lang"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:49:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:50:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:51:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:55:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:56:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:57:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:58:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:59:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:60:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:61:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.26.1-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.26.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.26.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java -prof perfnorm -rf json -rff graalvmce1.json .*Benchmark.*
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 01:10:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 203171.208 ops/s
[info] # Warmup Iteration   2: 722932.342 ops/s
[info] # Warmup Iteration   3: 745241.081 ops/s
[info] # Warmup Iteration   4: 744992.465 ops/s
[info] # Warmup Iteration   5: 744135.501 ops/s
[info] Iteration   1: 753092.248 ops/s
[info] Iteration   2: 756913.975 ops/s
[info] Iteration   3: 747575.113 ops/s
[info] Iteration   4: 745999.003 ops/s
[info] Iteration   5: 744678.533 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   749651.774 ±(99.9%) 19912.409 ops/s [Average]
[info]   (min, avg, max) = (744678.533, 749651.774, 756913.975), stdev = 5171.189
[info]   CI (99.9%): [729739.366, 769564.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-dcache-load-misses":
[info]   76.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-dcache-loads":
[info]   3604.900 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-dcache-stores":
[info]   2287.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-icache-load-misses":
[info]   38.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-loads":
[info]   0.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-store-misses":
[info]   2.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-stores":
[info]   13.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:branch-misses":
[info]   5.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:branches":
[info]   3452.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:cycles":
[info]   5120.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-load-misses":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-loads":
[info]   3598.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-stores":
[info]   2211.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:iTLB-load-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:iTLB-loads":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:instructions":
[info]   15299.833 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:28:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 255175.754 ops/s
[info] # Warmup Iteration   2: 1876945.178 ops/s
[info] # Warmup Iteration   3: 1866446.681 ops/s
[info] # Warmup Iteration   4: 1937226.435 ops/s
[info] # Warmup Iteration   5: 1976394.473 ops/s
[info] Iteration   1: 1861969.423 ops/s
[info] Iteration   2: 1973744.229 ops/s
[info] Iteration   3: 1973685.690 ops/s
[info] Iteration   4: 1942785.086 ops/s
[info] Iteration   5: 1960977.460 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1942632.378 ±(99.9%) 180357.900 ops/s [Average]
[info]   (min, avg, max) = (1861969.423, 1942632.378, 1973744.229), stdev = 46838.374
[info]   CI (99.9%): [1762274.477, 2122990.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:CPI":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   27.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-dcache-loads":
[info]   1518.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-dcache-stores":
[info]   942.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-loads":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-stores":
[info]   4.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:branch-misses":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:branches":
[info]   1216.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:cycles":
[info]   1933.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-loads":
[info]   1540.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-stores":
[info]   906.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:iTLB-loads":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:instructions":
[info]   6020.907 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:31:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5172343.545 ops/s
[info] # Warmup Iteration   2: 5576032.468 ops/s
[info] # Warmup Iteration   3: 5869848.859 ops/s
[info] # Warmup Iteration   4: 6012577.089 ops/s
[info] # Warmup Iteration   5: 6024902.883 ops/s
[info] Iteration   1: 6039758.911 ops/s
[info] Iteration   2: 6033920.666 ops/s
[info] Iteration   3: 5661347.079 ops/s
[info] Iteration   4: 5628379.291 ops/s
[info] Iteration   5: 5636169.168 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5799915.023 ±(99.9%) 834182.306 ops/s [Average]
[info]   (min, avg, max) = (5628379.291, 5799915.023, 6039758.911), stdev = 216634.496
[info]   CI (99.9%): [4965732.717, 6634097.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:CPI":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   389.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   198.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-stores":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:branch-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:branches":
[info]   675.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:cycles":
[info]   627.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-loads":
[info]   385.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-stores":
[info]   195.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:instructions":
[info]   2335.567 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:32:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3528.626 ops/s
[info] # Warmup Iteration   2: 253169.900 ops/s
[info] # Warmup Iteration   3: 306568.226 ops/s
[info] # Warmup Iteration   4: 308631.700 ops/s
[info] # Warmup Iteration   5: 310777.633 ops/s
[info] Iteration   1: 310925.149 ops/s
[info] Iteration   2: 310409.204 ops/s
[info] Iteration   3: 310814.380 ops/s
[info] Iteration   4: 310631.551 ops/s
[info] Iteration   5: 310734.646 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   310702.986 ±(99.9%) 755.987 ops/s [Average]
[info]   (min, avg, max) = (310409.204, 310702.986, 310925.149), stdev = 196.327
[info]   CI (99.9%): [309946.999, 311458.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:CPI":
[info]   0.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   423.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-dcache-loads":
[info]   9452.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-dcache-stores":
[info]   6606.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-icache-load-misses":
[info]   309.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-load-misses":
[info]   0.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-loads":
[info]   8.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-store-misses":
[info]   3.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-stores":
[info]   49.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:branch-misses":
[info]   6.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:branches":
[info]   4856.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:cycles":
[info]   12250.863 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-loads":
[info]   9700.777 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-stores":
[info]   6841.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:iTLB-loads":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:instructions":
[info]   31445.690 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:33:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 111321.525 ops/s
[info] # Warmup Iteration   2: 861268.422 ops/s
[info] # Warmup Iteration   3: 901790.362 ops/s
[info] # Warmup Iteration   4: 863456.234 ops/s
[info] # Warmup Iteration   5: 901456.342 ops/s
[info] Iteration   1: 915739.226 ops/s
[info] Iteration   2: 913787.097 ops/s
[info] Iteration   3: 910860.989 ops/s
[info] Iteration   4: 865436.975 ops/s
[info] Iteration   5: 913047.726 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   903774.403 ±(99.9%) 82797.433 ops/s [Average]
[info]   (min, avg, max) = (865436.975, 903774.403, 915739.226), stdev = 21502.230
[info]   CI (99.9%): [820976.970, 986571.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:CPI":
[info]   0.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-dcache-load-misses":
[info]   67.936 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-dcache-loads":
[info]   2776.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-dcache-stores":
[info]   2017.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-icache-load-misses":
[info]   33.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-loads":
[info]   0.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-store-misses":
[info]   3.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-stores":
[info]   16.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:branch-misses":
[info]   1.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:branches":
[info]   2473.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:cycles":
[info]   4203.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-load-misses":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-loads":
[info]   2802.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-stores":
[info]   2014.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:iTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:iTLB-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:instructions":
[info]   11613.205 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:33:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 870746.802 ops/s
[info] # Warmup Iteration   2: 3123615.540 ops/s
[info] # Warmup Iteration   3: 2927203.248 ops/s
[info] # Warmup Iteration   4: 2919178.797 ops/s
[info] # Warmup Iteration   5: 2937798.815 ops/s
[info] Iteration   1: 3101720.395 ops/s
[info] Iteration   2: 3070784.438 ops/s
[info] Iteration   3: 3140345.204 ops/s
[info] Iteration   4: 3115398.204 ops/s
[info] Iteration   5: 3081066.084 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   3101862.865 ±(99.9%) 106546.886 ops/s [Average]
[info]   (min, avg, max) = (3070784.438, 3101862.865, 3140345.204), stdev = 27669.888
[info]   CI (99.9%): [2995315.979, 3208409.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   8.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   999.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   620.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-loads":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-stores":
[info]   1.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:branch-misses":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:branches":
[info]   890.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:cycles":
[info]   1249.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-loads":
[info]   987.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-stores":
[info]   592.458 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:instructions":
[info]   4066.059 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:33:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9220948.366 ops/s
[info] # Warmup Iteration   2: 14444222.684 ops/s
[info] # Warmup Iteration   3: 14169325.639 ops/s
[info] # Warmup Iteration   4: 14237068.650 ops/s
[info] # Warmup Iteration   5: 14286638.509 ops/s
[info] Iteration   1: 14291663.138 ops/s
[info] Iteration   2: 14324288.631 ops/s
[info] Iteration   3: 14901552.740 ops/s
[info] Iteration   4: 14448223.889 ops/s
[info] Iteration   5: 15020137.690 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   14597173.218 ±(99.9%) 1307992.592 ops/s [Average]
[info]   (min, avg, max) = (14291663.138, 14597173.218, 15020137.690), stdev = 339681.523
[info]   CI (99.9%): [13289180.625, 15905165.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:CPI":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   1.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   173.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   197.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:branch-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:branches":
[info]   196.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:cycles":
[info]   255.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-loads":
[info]   172.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-stores":
[info]   189.906 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:instructions":
[info]   902.405 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:33:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10562673.321 ops/s
[info] # Warmup Iteration   2: 16512442.658 ops/s
[info] # Warmup Iteration   3: 16899247.483 ops/s
[info] # Warmup Iteration   4: 16912626.689 ops/s
[info] # Warmup Iteration   5: 16907660.014 ops/s
[info] Iteration   1: 16902866.590 ops/s
[info] Iteration   2: 16902350.416 ops/s
[info] Iteration   3: 16900185.405 ops/s
[info] Iteration   4: 16915418.352 ops/s
[info] Iteration   5: 16906902.607 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   16905544.674 ±(99.9%) 23218.352 ops/s [Average]
[info]   (min, avg, max) = (16900185.405, 16905544.674, 16915418.352), stdev = 6029.732
[info]   CI (99.9%): [16882326.321, 16928763.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   155.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   180.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   169.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   227.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   156.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   181.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   791.947 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:33:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20145.306 ops/s
[info] # Warmup Iteration   2: 508914.680 ops/s
[info] # Warmup Iteration   3: 677067.280 ops/s
[info] # Warmup Iteration   4: 678399.857 ops/s
[info] # Warmup Iteration   5: 655802.808 ops/s
[info] Iteration   1: 679235.678 ops/s
[info] Iteration   2: 682468.841 ops/s
[info] Iteration   3: 655993.298 ops/s
[info] Iteration   4: 652598.509 ops/s
[info] Iteration   5: 651915.709 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   664442.407 ±(99.9%) 58155.455 ops/s [Average]
[info]   (min, avg, max) = (651915.709, 664442.407, 682468.841), stdev = 15102.787
[info]   CI (99.9%): [606286.952, 722597.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:CPI":
[info]   0.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   123.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-dcache-loads":
[info]   3769.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-dcache-stores":
[info]   2351.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-icache-load-misses":
[info]   75.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-load-misses":
[info]   0.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-loads":
[info]   1.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-store-misses":
[info]   0.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-stores":
[info]   15.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:branch-misses":
[info]   2.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:branches":
[info]   2914.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:cycles":
[info]   5678.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-loads":
[info]   3746.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-stores":
[info]   2348.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:iTLB-loads":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:instructions":
[info]   15818.211 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:33:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 948616.767 ops/s
[info] # Warmup Iteration   2: 1941163.461 ops/s
[info] # Warmup Iteration   3: 1985314.425 ops/s
[info] # Warmup Iteration   4: 1990864.610 ops/s
[info] # Warmup Iteration   5: 1993376.183 ops/s
[info] Iteration   1: 2002845.060 ops/s
[info] Iteration   2: 2006820.108 ops/s
[info] Iteration   3: 2005648.743 ops/s
[info] Iteration   4: 1995817.428 ops/s
[info] Iteration   5: 1995959.419 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   2001418.152 ±(99.9%) 20218.721 ops/s [Average]
[info]   (min, avg, max) = (1995817.428, 2001418.152, 2006820.108), stdev = 5250.738
[info]   CI (99.9%): [1981199.431, 2021636.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:CPI":
[info]   0.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-dcache-load-misses":
[info]   35.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-dcache-loads":
[info]   1160.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-dcache-stores":
[info]   953.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-icache-load-misses":
[info]   0.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-loads":
[info]   0.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-store-misses":
[info]   2.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-stores":
[info]   10.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:branch-misses":
[info]   0.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:branches":
[info]   1168.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:cycles":
[info]   1937.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-load-misses":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-loads":
[info]   1145.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-stores":
[info]   907.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:iTLB-loads":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:instructions":
[info]   5264.524 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:33:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.805 ops/s
[info] # Warmup Iteration   2: 9558458.578 ops/s
[info] # Warmup Iteration   3: 10284559.600 ops/s
[info] # Warmup Iteration   4: 10568131.208 ops/s
[info] # Warmup Iteration   5: 10586187.033 ops/s
[info] Iteration   1: 10561498.999 ops/s
[info] Iteration   2: 10612967.137 ops/s
[info] Iteration   3: 10631363.369 ops/s
[info] Iteration   4: 10556772.449 ops/s
[info] Iteration   5: 10650244.671 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   10602569.325 ±(99.9%) 161018.114 ops/s [Average]
[info]   (min, avg, max) = (10556772.449, 10602569.325, 10650244.671), stdev = 41815.893
[info]   CI (99.9%): [10441551.211, 10763587.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:CPI":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   3.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   369.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   189.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:branch-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:branches":
[info]   322.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:cycles":
[info]   368.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-loads":
[info]   353.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-stores":
[info]   188.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:instructions":
[info]   1482.328 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:33:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 812199.575 ops/s
[info] # Warmup Iteration   2: 3000321.988 ops/s
[info] # Warmup Iteration   3: 3239108.133 ops/s
[info] # Warmup Iteration   4: 3251011.247 ops/s
[info] # Warmup Iteration   5: 3254862.623 ops/s
[info] Iteration   1: 3253616.939 ops/s
[info] Iteration   2: 3133054.162 ops/s
[info] Iteration   3: 3188149.164 ops/s
[info] Iteration   4: 3221949.557 ops/s
[info] Iteration   5: 3156816.915 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3190717.348 ±(99.9%) 186792.822 ops/s [Average]
[info]   (min, avg, max) = (3133054.162, 3190717.348, 3253616.939), stdev = 48509.503
[info]   CI (99.9%): [3003924.526, 3377510.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:CPI":
[info]   0.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   16.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   884.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   613.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-loads":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-stores":
[info]   2.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:branch-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:branches":
[info]   704.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:cycles":
[info]   1186.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-loads":
[info]   885.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-stores":
[info]   599.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:instructions":
[info]   3546.951 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:32:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10908037.033 ops/s
[info] # Warmup Iteration   2: 12813677.745 ops/s
[info] # Warmup Iteration   3: 13185625.930 ops/s
[info] # Warmup Iteration   4: 12960254.558 ops/s
[info] # Warmup Iteration   5: 13168056.031 ops/s
[info] Iteration   1: 12946149.165 ops/s
[info] Iteration   2: 13228635.164 ops/s
[info] Iteration   3: 13275656.080 ops/s
[info] Iteration   4: 13174198.834 ops/s
[info] Iteration   5: 13277489.449 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   13180425.739 ±(99.9%) 529861.119 ops/s [Average]
[info]   (min, avg, max) = (12946149.165, 13180425.739, 13277489.449), stdev = 137603.250
[info]   CI (99.9%): [12650564.619, 13710286.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:CPI":
[info]   0.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   3.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   230.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   154.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:branch-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:branches":
[info]   294.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:cycles":
[info]   291.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-loads":
[info]   231.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-stores":
[info]   153.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:instructions":
[info]   1162.335 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:32:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 46186.571 ops/s
[info] # Warmup Iteration   2: 392265.754 ops/s
[info] # Warmup Iteration   3: 471911.609 ops/s
[info] # Warmup Iteration   4: 938922.939 ops/s
[info] # Warmup Iteration   5: 1262669.647 ops/s
[info] Iteration   1: 1319302.685 ops/s
[info] Iteration   2: 1334519.939 ops/s
[info] Iteration   3: 1332146.017 ops/s
[info] Iteration   4: 1334199.014 ops/s
[info] Iteration   5: 1336121.223 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1331257.776 ±(99.9%) 26304.357 ops/s [Average]
[info]   (min, avg, max) = (1319302.685, 1331257.776, 1336121.223), stdev = 6831.158
[info]   CI (99.9%): [1304953.419, 1357562.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:CPI":
[info]   0.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   59.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-dcache-loads":
[info]   2237.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-dcache-stores":
[info]   1583.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   41.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-loads":
[info]   0.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-store-misses":
[info]   1.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-stores":
[info]   11.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:branch-misses":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:branches":
[info]   1341.947 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:cycles":
[info]   2867.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-loads":
[info]   2260.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-stores":
[info]   1632.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:iTLB-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:instructions":
[info]   7998.471 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:32:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 858168.783 ops/s
[info] # Warmup Iteration   2: 2345765.443 ops/s
[info] # Warmup Iteration   3: 2292580.117 ops/s
[info] # Warmup Iteration   4: 2383071.245 ops/s
[info] # Warmup Iteration   5: 2377520.922 ops/s
[info] Iteration   1: 2375961.726 ops/s
[info] Iteration   2: 2317194.683 ops/s
[info] Iteration   3: 2354347.978 ops/s
[info] Iteration   4: 2329473.126 ops/s
[info] Iteration   5: 2348658.229 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   2345127.149 ±(99.9%) 87671.613 ops/s [Average]
[info]   (min, avg, max) = (2317194.683, 2345127.149, 2375961.726), stdev = 22768.039
[info]   CI (99.9%): [2257455.536, 2432798.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:CPI":
[info]   0.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   22.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-dcache-loads":
[info]   1056.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-dcache-stores":
[info]   829.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-loads":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-store-misses":
[info]   0.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-stores":
[info]   5.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:branch-misses":
[info]   0.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:branches":
[info]   820.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:cycles":
[info]   1608.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-loads":
[info]   1046.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-stores":
[info]   824.935 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:instructions":
[info]   4087.535 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:32:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.793 ops/s
[info] # Warmup Iteration   2: 18640390.088 ops/s
[info] # Warmup Iteration   3: 19621233.135 ops/s
[info] # Warmup Iteration   4: 19859440.341 ops/s
[info] # Warmup Iteration   5: 19906729.262 ops/s
[info] Iteration   1: 19510963.790 ops/s
[info] Iteration   2: 19801667.021 ops/s
[info] Iteration   3: 20101603.642 ops/s
[info] Iteration   4: 18977904.029 ops/s
[info] Iteration   5: 18989313.771 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   19476290.451 ±(99.9%) 1909492.404 ops/s [Average]
[info]   (min, avg, max) = (18977904.029, 19476290.451, 20101603.642), stdev = 495889.114
[info]   CI (99.9%): [17566798.046, 21385782.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:CPI":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   0.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   176.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   81.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-stores":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:branch-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:branches":
[info]   194.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:cycles":
[info]   191.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   179.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   83.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:instructions":
[info]   793.830 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:32:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1308285.558 ops/s
[info] # Warmup Iteration   2: 6244400.675 ops/s
[info] # Warmup Iteration   3: 6605474.547 ops/s
[info] # Warmup Iteration   4: 6660910.397 ops/s
[info] # Warmup Iteration   5: 6645906.926 ops/s
[info] Iteration   1: 6404210.696 ops/s
[info] Iteration   2: 6608953.573 ops/s
[info] Iteration   3: 6610059.944 ops/s
[info] Iteration   4: 6496932.991 ops/s
[info] Iteration   5: 6601877.256 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   6544406.892 ±(99.9%) 353380.165 ops/s [Average]
[info]   (min, avg, max) = (6404210.696, 6544406.892, 6610059.944), stdev = 91771.707
[info]   CI (99.9%): [6191026.726, 6897787.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:CPI":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   7.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   514.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   366.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-stores":
[info]   0.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:branch-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:branches":
[info]   366.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:cycles":
[info]   579.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-loads":
[info]   520.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-stores":
[info]   360.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:instructions":
[info]   1846.840 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:32:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20022132.229 ops/s
[info] # Warmup Iteration   2: 27755005.366 ops/s
[info] # Warmup Iteration   3: 27079394.011 ops/s
[info] # Warmup Iteration   4: 26836843.883 ops/s
[info] # Warmup Iteration   5: 27424481.100 ops/s
[info] Iteration   1: 28703662.586 ops/s
[info] Iteration   2: 27806748.757 ops/s
[info] Iteration   3: 28671528.494 ops/s
[info] Iteration   4: 28616930.086 ops/s
[info] Iteration   5: 28622948.077 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   28484363.600 ±(99.9%) 1465098.096 ops/s [Average]
[info]   (min, avg, max) = (27806748.757, 28484363.600, 28703662.586), stdev = 380481.323
[info]   CI (99.9%): [27019265.504, 29949461.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   0.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   101.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   93.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:branches":
[info]   120.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:cycles":
[info]   137.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   98.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   90.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:instructions":
[info]   523.446 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:31:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 24687171.228 ops/s
[info] # Warmup Iteration   2: 33917288.070 ops/s
[info] # Warmup Iteration   3: 34656059.928 ops/s
[info] # Warmup Iteration   4: 34662422.842 ops/s
[info] # Warmup Iteration   5: 34659806.931 ops/s
[info] Iteration   1: 34644794.568 ops/s
[info] Iteration   2: 34630696.052 ops/s
[info] Iteration   3: 34643510.599 ops/s
[info] Iteration   4: 34656907.354 ops/s
[info] Iteration   5: 34658031.618 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   34646788.038 ±(99.9%) 43158.410 ops/s [Average]
[info]   (min, avg, max) = (34630696.052, 34646788.038, 34658031.618), stdev = 11208.102
[info]   CI (99.9%): [34603629.629, 34689946.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   84.440 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   81.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   96.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   109.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   84.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   81.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   428.341 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:31:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 99634.924 ops/s
[info] # Warmup Iteration   2: 1608672.447 ops/s
[info] # Warmup Iteration   3: 1868264.443 ops/s
[info] # Warmup Iteration   4: 1868858.833 ops/s
[info] # Warmup Iteration   5: 1875005.690 ops/s
[info] Iteration   1: 1876212.156 ops/s
[info] Iteration   2: 1872640.539 ops/s
[info] Iteration   3: 1833677.399 ops/s
[info] Iteration   4: 1871745.227 ops/s
[info] Iteration   5: 1859441.407 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1862743.346 ±(99.9%) 67141.838 ops/s [Average]
[info]   (min, avg, max) = (1833677.399, 1862743.346, 1876212.156), stdev = 17436.522
[info]   CI (99.9%): [1795601.508, 1929885.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:CPI":
[info]   0.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   38.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-dcache-loads":
[info]   1484.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-dcache-stores":
[info]   1133.679 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-loads":
[info]   0.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-store-misses":
[info]   0.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-stores":
[info]   8.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:branch-misses":
[info]   0.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:branches":
[info]   1003.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:cycles":
[info]   2064.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-loads":
[info]   1525.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-stores":
[info]   1185.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:instructions":
[info]   5730.883 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:31:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 197508.511 ops/s
[info] # Warmup Iteration   2: 304073.559 ops/s
[info] # Warmup Iteration   3: 314291.829 ops/s
[info] # Warmup Iteration   4: 313810.475 ops/s
[info] # Warmup Iteration   5: 313398.931 ops/s
[info] Iteration   1: 313572.663 ops/s
[info] Iteration   2: 303389.147 ops/s
[info] Iteration   3: 295885.544 ops/s
[info] Iteration   4: 297691.444 ops/s
[info] Iteration   5: 315151.119 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   305137.983 ±(99.9%) 34199.471 ops/s [Average]
[info]   (min, avg, max) = (295885.544, 305137.983, 315151.119), stdev = 8881.494
[info]   CI (99.9%): [270938.513, 339337.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:CPI":
[info]   0.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   151.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   10674.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   5454.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   3.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-loads":
[info]   1.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   20.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-stores":
[info]   51.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:branch-misses":
[info]   10.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:branches":
[info]   11779.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:cycles":
[info]   12065.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   0.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   10828.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   5467.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:instructions":
[info]   46636.887 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:31:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 249497.938 ops/s
[info] # Warmup Iteration   2: 449597.485 ops/s
[info] # Warmup Iteration   3: 477845.040 ops/s
[info] # Warmup Iteration   4: 470909.123 ops/s
[info] # Warmup Iteration   5: 492242.202 ops/s
[info] Iteration   1: 496777.337 ops/s
[info] Iteration   2: 496413.649 ops/s
[info] Iteration   3: 496122.467 ops/s
[info] Iteration   4: 496930.107 ops/s
[info] Iteration   5: 496476.572 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   496544.026 ±(99.9%) 1221.864 ops/s [Average]
[info]   (min, avg, max) = (496122.467, 496544.026, 496930.107), stdev = 317.314
[info]   CI (99.9%): [495322.162, 497765.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   38.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   6103.803 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   3274.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.357 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   3.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   10.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   8.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:branches":
[info]   6568.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:cycles":
[info]   7721.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   5928.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   3163.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:instructions":
[info]   27629.243 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:31:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1141396.025 ops/s
[info] # Warmup Iteration   2: 1282952.388 ops/s
[info] # Warmup Iteration   3: 1344167.432 ops/s
[info] # Warmup Iteration   4: 1350225.362 ops/s
[info] # Warmup Iteration   5: 1345915.226 ops/s
[info] Iteration   1: 1351528.042 ops/s
[info] Iteration   2: 1349577.333 ops/s
[info] Iteration   3: 1347655.568 ops/s
[info] Iteration   4: 1349213.070 ops/s
[info] Iteration   5: 1350241.712 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1349643.145 ±(99.9%) 5462.922 ops/s [Average]
[info]   (min, avg, max) = (1347655.568, 1349643.145, 1351528.042), stdev = 1418.703
[info]   CI (99.9%): [1344180.223, 1355106.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   17.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2106.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1281.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   3.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   4.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:branches":
[info]   3256.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   2873.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   2064.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   1241.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   12778.910 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:30:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 63027.170 ops/s
[info] # Warmup Iteration   2: 107399.310 ops/s
[info] # Warmup Iteration   3: 111946.473 ops/s
[info] # Warmup Iteration   4: 112550.673 ops/s
[info] # Warmup Iteration   5: 114477.713 ops/s
[info] Iteration   1: 115364.721 ops/s
[info] Iteration   2: 115403.138 ops/s
[info] Iteration   3: 110153.026 ops/s
[info] Iteration   4: 111671.405 ops/s
[info] Iteration   5: 115389.191 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   113596.296 ±(99.9%) 9658.861 ops/s [Average]
[info]   (min, avg, max) = (110153.026, 113596.296, 115403.138), stdev = 2508.375
[info]   CI (99.9%): [103937.436, 123255.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   899.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   27523.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   21712.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   32.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   0.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   6.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   40.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   203.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   33.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:branches":
[info]   18539.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:cycles":
[info]   33229.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   29203.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   22263.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:instructions":
[info]   103555.105 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:30:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 237570.242 ops/s
[info] # Warmup Iteration   2: 328900.994 ops/s
[info] # Warmup Iteration   3: 333485.696 ops/s
[info] # Warmup Iteration   4: 334536.895 ops/s
[info] # Warmup Iteration   5: 334173.545 ops/s
[info] Iteration   1: 334887.245 ops/s
[info] Iteration   2: 333801.823 ops/s
[info] Iteration   3: 333900.335 ops/s
[info] Iteration   4: 333480.874 ops/s
[info] Iteration   5: 327304.445 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   332674.944 ±(99.9%) 11736.176 ops/s [Average]
[info]   (min, avg, max) = (327304.445, 332674.944, 334887.245), stdev = 3047.848
[info]   CI (99.9%): [320938.768, 344411.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:CPI":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   88.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   10590.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   6275.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   46.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   59.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:branch-misses":
[info]   12.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:branches":
[info]   10175.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:cycles":
[info]   11502.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   10335.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6157.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:instructions":
[info]   43221.902 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:30:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 529644.071 ops/s
[info] # Warmup Iteration   2: 883340.398 ops/s
[info] # Warmup Iteration   3: 897596.344 ops/s
[info] # Warmup Iteration   4: 889520.684 ops/s
[info] # Warmup Iteration   5: 834021.292 ops/s
[info] Iteration   1: 830723.355 ops/s
[info] Iteration   2: 839853.795 ops/s
[info] Iteration   3: 836747.302 ops/s
[info] Iteration   4: 898752.920 ops/s
[info] Iteration   5: 898127.171 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   860840.909 ±(99.9%) 132772.049 ops/s [Average]
[info]   (min, avg, max) = (830723.355, 860840.909, 898752.920), stdev = 34480.479
[info]   CI (99.9%): [728068.860, 993612.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   19.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   4136.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2168.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   2.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   6.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:branches":
[info]   3705.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   4305.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   4091.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   2120.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   16732.178 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:30:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2286359.838 ops/s
[info] # Warmup Iteration   2: 2557182.006 ops/s
[info] # Warmup Iteration   3: 2607538.866 ops/s
[info] # Warmup Iteration   4: 2485026.525 ops/s
[info] # Warmup Iteration   5: 2459855.727 ops/s
[info] Iteration   1: 2465959.941 ops/s
[info] Iteration   2: 2588914.795 ops/s
[info] Iteration   3: 2598388.316 ops/s
[info] Iteration   4: 2606461.317 ops/s
[info] Iteration   5: 2608211.681 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2573587.210 ±(99.9%) 233537.822 ops/s [Average]
[info]   (min, avg, max) = (2465959.941, 2573587.210, 2608211.681), stdev = 60649.031
[info]   CI (99.9%): [2340049.388, 2807125.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   11.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   600.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1263.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   3.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   6.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   1716.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   1473.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   607.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1250.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   6455.377 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:30:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2586274.005 ops/s
[info] # Warmup Iteration   2: 2919726.348 ops/s
[info] # Warmup Iteration   3: 2936565.167 ops/s
[info] # Warmup Iteration   4: 2944539.405 ops/s
[info] # Warmup Iteration   5: 2943498.365 ops/s
[info] Iteration   1: 2888682.222 ops/s
[info] Iteration   2: 2933424.429 ops/s
[info] Iteration   3: 2934778.715 ops/s
[info] Iteration   4: 2933087.569 ops/s
[info] Iteration   5: 2934620.917 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2924918.771 ±(99.9%) 78053.062 ops/s [Average]
[info]   (min, avg, max) = (2888682.222, 2924918.771, 2934778.715), stdev = 20270.132
[info]   CI (99.9%): [2846865.708, 3002971.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   563.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1121.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1624.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1293.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   563.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1109.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   6053.190 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:30:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 330993.460 ops/s
[info] # Warmup Iteration   2: 444402.368 ops/s
[info] # Warmup Iteration   3: 457785.842 ops/s
[info] # Warmup Iteration   4: 462998.114 ops/s
[info] # Warmup Iteration   5: 463160.907 ops/s
[info] Iteration   1: 463717.899 ops/s
[info] Iteration   2: 463384.563 ops/s
[info] Iteration   3: 463512.590 ops/s
[info] Iteration   4: 463420.368 ops/s
[info] Iteration   5: 463670.852 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   463541.254 ±(99.9%) 571.099 ops/s [Average]
[info]   (min, avg, max) = (463384.563, 463541.254, 463717.899), stdev = 148.313
[info]   CI (99.9%): [462970.156, 464112.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   38.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   9084.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   3185.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   0.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   4.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   14.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   4.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:branches":
[info]   6211.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:cycles":
[info]   8307.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   9055.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   3162.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:instructions":
[info]   29701.400 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:29:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12091.572 ops/s
[info] # Warmup Iteration   2: 17307.264 ops/s
[info] # Warmup Iteration   3: 17439.001 ops/s
[info] # Warmup Iteration   4: 17243.782 ops/s
[info] # Warmup Iteration   5: 17241.413 ops/s
[info] Iteration   1: 17249.727 ops/s
[info] Iteration   2: 16433.367 ops/s
[info] Iteration   3: 16932.849 ops/s
[info] Iteration   4: 16932.117 ops/s
[info] Iteration   5: 16936.314 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   16896.875 ±(99.9%) 1128.305 ops/s [Average]
[info]   (min, avg, max) = (16433.367, 16896.875, 17249.727), stdev = 293.017
[info]   CI (99.9%): [15768.570, 18025.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:CPI":
[info]   0.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-load-misses":
[info]   2764.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-loads":
[info]   88778.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-stores":
[info]   53391.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-icache-load-misses":
[info]   326.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-load-misses":
[info]   5.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-loads":
[info]   59.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-store-misses":
[info]   137.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-stores":
[info]   420.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:branch-misses":
[info]   2174.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:branches":
[info]   149949.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:cycles":
[info]   234381.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-load-misses":
[info]   22.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-loads":
[info]   88338.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-store-misses":
[info]   0.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-stores":
[info]   51092.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:iTLB-load-misses":
[info]   6.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:iTLB-loads":
[info]   32.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:instructions":
[info]   586151.645 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:29:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 19926.255 ops/s
[info] # Warmup Iteration   2: 35978.505 ops/s
[info] # Warmup Iteration   3: 36365.758 ops/s
[info] # Warmup Iteration   4: 36352.388 ops/s
[info] # Warmup Iteration   5: 36470.630 ops/s
[info] Iteration   1: 36696.177 ops/s
[info] Iteration   2: 36510.891 ops/s
[info] Iteration   3: 36638.782 ops/s
[info] Iteration   4: 36542.455 ops/s
[info] Iteration   5: 36590.698 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   36595.801 ±(99.9%) 285.600 ops/s [Average]
[info]   (min, avg, max) = (36510.891, 36595.801, 36696.177), stdev = 74.169
[info]   CI (99.9%): [36310.201, 36881.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:CPI":
[info]   0.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   919.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   53940.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   43010.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   16.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-loads":
[info]   6.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-store-misses":
[info]   12.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-stores":
[info]   106.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:branch-misses":
[info]   146.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:branches":
[info]   82052.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:cycles":
[info]   104238.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   2.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-loads":
[info]   53751.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-stores":
[info]   42245.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-loads":
[info]   1.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:instructions":
[info]   383169.305 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:29:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 36862.995 ops/s
[info] # Warmup Iteration   2: 41387.991 ops/s
[info] # Warmup Iteration   3: 41861.968 ops/s
[info] # Warmup Iteration   4: 41946.017 ops/s
[info] # Warmup Iteration   5: 42249.923 ops/s
[info] Iteration   1: 42049.214 ops/s
[info] Iteration   2: 42135.733 ops/s
[info] Iteration   3: 42136.119 ops/s
[info] Iteration   4: 41122.411 ops/s
[info] Iteration   5: 40309.285 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   41550.552 ±(99.9%) 3138.946 ops/s [Average]
[info]   (min, avg, max) = (40309.285, 41550.552, 42136.119), stdev = 815.174
[info]   CI (99.9%): [38411.606, 44689.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   390.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   45838.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   30163.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   8.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-loads":
[info]   2.894 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   4.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-stores":
[info]   57.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:branch-misses":
[info]   223.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:branches":
[info]   76674.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:cycles":
[info]   90080.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-loads":
[info]   45712.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-stores":
[info]   29625.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.911 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:instructions":
[info]   344163.287 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:29:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13875.715 ops/s
[info] # Warmup Iteration   2: 29536.451 ops/s
[info] # Warmup Iteration   3: 28860.172 ops/s
[info] # Warmup Iteration   4: 28261.860 ops/s
[info] # Warmup Iteration   5: 27676.687 ops/s
[info] Iteration   1: 28404.565 ops/s
[info] Iteration   2: 28277.551 ops/s
[info] Iteration   3: 29603.933 ops/s
[info] Iteration   4: 29665.125 ops/s
[info] Iteration   5: 29680.884 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   29126.412 ±(99.9%) 2768.253 ops/s [Average]
[info]   (min, avg, max) = (28277.551, 29126.412, 29680.884), stdev = 718.906
[info]   CI (99.9%): [26358.159, 31894.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1995.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-loads":
[info]   79400.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-stores":
[info]   59449.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   305.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-load-misses":
[info]   2.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-loads":
[info]   15.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-store-misses":
[info]   34.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-stores":
[info]   278.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:branch-misses":
[info]   160.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:branches":
[info]   93549.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:cycles":
[info]   130699.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-load-misses":
[info]   6.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-loads":
[info]   75789.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-stores":
[info]   57281.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-loads":
[info]   1.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:instructions":
[info]   460852.311 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:29:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15427.882 ops/s
[info] # Warmup Iteration   2: 23617.906 ops/s
[info] # Warmup Iteration   3: 24098.991 ops/s
[info] # Warmup Iteration   4: 24638.701 ops/s
[info] # Warmup Iteration   5: 24591.161 ops/s
[info] Iteration   1: 24680.701 ops/s
[info] Iteration   2: 24800.471 ops/s
[info] Iteration   3: 24768.547 ops/s
[info] Iteration   4: 24742.203 ops/s
[info] Iteration   5: 24736.480 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   24745.680 ±(99.9%) 170.518 ops/s [Average]
[info]   (min, avg, max) = (24680.701, 24745.680, 24800.471), stdev = 44.283
[info]   CI (99.9%): [24575.162, 24916.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:CPI":
[info]   0.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2897.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-loads":
[info]   70875.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-stores":
[info]   54240.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-icache-load-misses":
[info]   212.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-load-misses":
[info]   3.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-loads":
[info]   53.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-store-misses":
[info]   220.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-stores":
[info]   493.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:branch-misses":
[info]   191.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:branches":
[info]   73669.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:cycles":
[info]   153946.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-load-misses":
[info]   11.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-loads":
[info]   72579.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-store-misses":
[info]   1.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-stores":
[info]   54816.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-loads":
[info]   1.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:instructions":
[info]   374550.322 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:28:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9572.671 ops/s
[info] # Warmup Iteration   2: 24604.615 ops/s
[info] # Warmup Iteration   3: 24954.114 ops/s
[info] # Warmup Iteration   4: 25086.539 ops/s
[info] # Warmup Iteration   5: 24875.642 ops/s
[info] Iteration   1: 24931.423 ops/s
[info] Iteration   2: 24183.960 ops/s
[info] Iteration   3: 25058.202 ops/s
[info] Iteration   4: 25071.935 ops/s
[info] Iteration   5: 25057.263 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   24860.556 ±(99.9%) 1472.893 ops/s [Average]
[info]   (min, avg, max) = (24183.960, 24860.556, 25071.935), stdev = 382.506
[info]   CI (99.9%): [23387.663, 26333.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:CPI":
[info]   0.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   2633.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   70487.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   54471.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   159.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   1.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-loads":
[info]   20.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   106.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-stores":
[info]   330.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:branch-misses":
[info]   261.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:branches":
[info]   68467.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:cycles":
[info]   153545.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   4.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-loads":
[info]   71255.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-stores":
[info]   54116.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   1.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-loads":
[info]   4.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:instructions":
[info]   366959.693 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:28:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22915.837 ops/s
[info] # Warmup Iteration   2: 27051.527 ops/s
[info] # Warmup Iteration   3: 26342.126 ops/s
[info] # Warmup Iteration   4: 26047.197 ops/s
[info] # Warmup Iteration   5: 26075.495 ops/s
[info] Iteration   1: 26563.258 ops/s
[info] Iteration   2: 27261.970 ops/s
[info] Iteration   3: 27217.155 ops/s
[info] Iteration   4: 27219.333 ops/s
[info] Iteration   5: 27125.730 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   27077.489 ±(99.9%) 1123.340 ops/s [Average]
[info]   (min, avg, max) = (26563.258, 27077.489, 27261.970), stdev = 291.728
[info]   CI (99.9%): [25954.149, 28200.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:CPI":
[info]   0.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   2441.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   62316.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   47630.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   104.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   1.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-loads":
[info]   24.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   57.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-stores":
[info]   257.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branch-misses":
[info]   200.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branches":
[info]   63242.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:cycles":
[info]   141600.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   5.980 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   62420.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   46965.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   1.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:instructions":
[info]   330156.680 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:28:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21443.632 ops/s
[info] # Warmup Iteration   2: 26641.395 ops/s
[info] # Warmup Iteration   3: 27004.534 ops/s
[info] # Warmup Iteration   4: 27228.695 ops/s
[info] # Warmup Iteration   5: 27016.304 ops/s
[info] Iteration   1: 27334.384 ops/s
[info] Iteration   2: 27276.651 ops/s
[info] Iteration   3: 27315.576 ops/s
[info] Iteration   4: 27310.170 ops/s
[info] Iteration   5: 27166.771 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   27280.711 ±(99.9%) 258.044 ops/s [Average]
[info]   (min, avg, max) = (27166.771, 27280.711, 27334.384), stdev = 67.013
[info]   CI (99.9%): [27022.667, 27538.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   2358.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   61602.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   47695.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   43.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   1.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   25.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   12.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   183.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   210.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   61752.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   140686.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   5.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   62748.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   47661.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   1.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   332935.065 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:28:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4887.365 ops/s
[info] # Warmup Iteration   2: 7506.433 ops/s
[info] # Warmup Iteration   3: 7738.305 ops/s
[info] # Warmup Iteration   4: 7799.363 ops/s
[info] # Warmup Iteration   5: 7775.299 ops/s
[info] Iteration   1: 7770.180 ops/s
[info] Iteration   2: 7787.299 ops/s
[info] Iteration   3: 7777.438 ops/s
[info] Iteration   4: 7742.305 ops/s
[info] Iteration   5: 7798.546 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   7775.154 ±(99.9%) 81.768 ops/s [Average]
[info]   (min, avg, max) = (7742.305, 7775.154, 7798.546), stdev = 21.235
[info]   CI (99.9%): [7693.386, 7856.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:CPI":
[info]   0.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   5250.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-loads":
[info]   180533.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-stores":
[info]   136895.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   3126.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-load-misses":
[info]   6.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-loads":
[info]   268.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-store-misses":
[info]   157.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-stores":
[info]   671.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:branch-misses":
[info]   3448.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:branches":
[info]   204647.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:cycles":
[info]   495621.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-load-misses":
[info]   29.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-loads":
[info]   179165.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-stores":
[info]   133220.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-load-misses":
[info]   3.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-loads":
[info]   12.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:instructions":
[info]   1057769.404 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:28:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11781.133 ops/s
[info] # Warmup Iteration   2: 17924.813 ops/s
[info] # Warmup Iteration   3: 17682.470 ops/s
[info] # Warmup Iteration   4: 17651.773 ops/s
[info] # Warmup Iteration   5: 17856.279 ops/s
[info] Iteration   1: 17814.477 ops/s
[info] Iteration   2: 17725.385 ops/s
[info] Iteration   3: 18123.953 ops/s
[info] Iteration   4: 18060.734 ops/s
[info] Iteration   5: 18110.831 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   17967.076 ±(99.9%) 709.367 ops/s [Average]
[info]   (min, avg, max) = (17725.385, 17967.076, 18123.953), stdev = 184.220
[info]   CI (99.9%): [17257.709, 18676.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:CPI":
[info]   0.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   2854.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-dcache-loads":
[info]   96671.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-dcache-stores":
[info]   63476.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   456.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-load-misses":
[info]   5.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-loads":
[info]   50.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-store-misses":
[info]   87.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-stores":
[info]   389.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:branch-misses":
[info]   393.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:branches":
[info]   135046.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:cycles":
[info]   219164.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-load-misses":
[info]   12.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-loads":
[info]   97313.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-stores":
[info]   61934.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:iTLB-load-misses":
[info]   4.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:iTLB-loads":
[info]   29.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:instructions":
[info]   583367.595 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:27:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 24536.905 ops/s
[info] # Warmup Iteration   2: 41793.092 ops/s
[info] # Warmup Iteration   3: 41240.875 ops/s
[info] # Warmup Iteration   4: 42534.027 ops/s
[info] # Warmup Iteration   5: 42631.689 ops/s
[info] Iteration   1: 42646.144 ops/s
[info] Iteration   2: 41388.857 ops/s
[info] Iteration   3: 41687.751 ops/s
[info] Iteration   4: 42560.772 ops/s
[info] Iteration   5: 42648.478 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   42186.400 ±(99.9%) 2318.203 ops/s [Average]
[info]   (min, avg, max) = (41388.857, 42186.400, 42648.478), stdev = 602.030
[info]   CI (99.9%): [39868.197, 44504.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   941.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   47625.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   28580.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   27.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-loads":
[info]   8.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   5.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-stores":
[info]   73.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:branch-misses":
[info]   215.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:branches":
[info]   81496.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:cycles":
[info]   91302.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   47312.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   27872.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   1.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:instructions":
[info]   317057.366 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:27:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 56453.589 ops/s
[info] # Warmup Iteration   2: 61783.969 ops/s
[info] # Warmup Iteration   3: 60441.822 ops/s
[info] # Warmup Iteration   4: 62813.572 ops/s
[info] # Warmup Iteration   5: 62694.802 ops/s
[info] Iteration   1: 62757.578 ops/s
[info] Iteration   2: 62833.390 ops/s
[info] Iteration   3: 62620.011 ops/s
[info] Iteration   4: 62661.433 ops/s
[info] Iteration   5: 62631.633 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   62700.809 ±(99.9%) 353.255 ops/s [Average]
[info]   (min, avg, max) = (62620.011, 62700.809, 62833.390), stdev = 91.739
[info]   CI (99.9%): [62347.554, 63054.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   351.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   27866.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   16117.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   7.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   2.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   46.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:branch-misses":
[info]   140.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:branches":
[info]   59203.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:cycles":
[info]   60414.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   28060.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   15829.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.566 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:instructions":
[info]   249763.330 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:27:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8881.588 ops/s
[info] # Warmup Iteration   2: 31965.893 ops/s
[info] # Warmup Iteration   3: 31480.692 ops/s
[info] # Warmup Iteration   4: 31697.586 ops/s
[info] # Warmup Iteration   5: 33220.946 ops/s
[info] Iteration   1: 33308.959 ops/s
[info] Iteration   2: 33365.238 ops/s
[info] Iteration   3: 33355.127 ops/s
[info] Iteration   4: 32829.424 ops/s
[info] Iteration   5: 33384.031 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   33248.556 ±(99.9%) 908.470 ops/s [Average]
[info]   (min, avg, max) = (32829.424, 33248.556, 33384.031), stdev = 235.927
[info]   CI (99.9%): [32340.086, 34157.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:CPI":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2422.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   70371.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   48590.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   324.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   6.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-loads":
[info]   35.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   52.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-stores":
[info]   340.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:branch-misses":
[info]   190.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:branches":
[info]   88467.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:cycles":
[info]   114197.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-loads":
[info]   71022.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-stores":
[info]   50713.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:iTLB-loads":
[info]   0.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:instructions":
[info]   383846.232 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:27:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10939.514 ops/s
[info] # Warmup Iteration   2: 27685.636 ops/s
[info] # Warmup Iteration   3: 27848.407 ops/s
[info] # Warmup Iteration   4: 28028.451 ops/s
[info] # Warmup Iteration   5: 27872.166 ops/s
[info] Iteration   1: 28018.298 ops/s
[info] Iteration   2: 27880.602 ops/s
[info] Iteration   3: 27730.201 ops/s
[info] Iteration   4: 28100.479 ops/s
[info] Iteration   5: 27278.052 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   27801.526 ±(99.9%) 1250.316 ops/s [Average]
[info]   (min, avg, max) = (27278.052, 27801.526, 28100.479), stdev = 324.703
[info]   CI (99.9%): [26551.211, 29051.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:CPI":
[info]   0.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1896.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   59347.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   48635.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   43.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   9.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   86.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   307.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:branch-misses":
[info]   145.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:branches":
[info]   60256.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:cycles":
[info]   135706.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   5.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   60644.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   48439.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   1.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   2.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:instructions":
[info]   328589.162 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:27:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 29846.428 ops/s
[info] # Warmup Iteration   2: 33634.123 ops/s
[info] # Warmup Iteration   3: 34204.166 ops/s
[info] # Warmup Iteration   4: 32891.319 ops/s
[info] # Warmup Iteration   5: 33195.728 ops/s
[info] Iteration   1: 33253.868 ops/s
[info] Iteration   2: 33219.491 ops/s
[info] Iteration   3: 33220.350 ops/s
[info] Iteration   4: 33220.311 ops/s
[info] Iteration   5: 33049.381 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   33192.680 ±(99.9%) 313.576 ops/s [Average]
[info]   (min, avg, max) = (33049.381, 33192.680, 33253.868), stdev = 81.435
[info]   CI (99.9%): [32879.104, 33506.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   1356.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   40725.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   34798.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   20.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   6.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   49.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   181.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   144.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:branches":
[info]   47095.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:cycles":
[info]   111637.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   3.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   41625.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   34462.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   2.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:instructions":
[info]   252707.325 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:26:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30524.189 ops/s
[info] # Warmup Iteration   2: 34819.786 ops/s
[info] # Warmup Iteration   3: 35053.918 ops/s
[info] # Warmup Iteration   4: 34756.430 ops/s
[info] # Warmup Iteration   5: 35095.771 ops/s
[info] Iteration   1: 34556.533 ops/s
[info] Iteration   2: 34017.662 ops/s
[info] Iteration   3: 34122.696 ops/s
[info] Iteration   4: 35095.482 ops/s
[info] Iteration   5: 35141.461 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   34586.767 ±(99.9%) 2025.374 ops/s [Average]
[info]   (min, avg, max) = (34017.662, 34586.767, 35141.461), stdev = 525.983
[info]   CI (99.9%): [32561.392, 36612.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1307.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   39883.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   33994.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   9.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   1.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   6.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   12.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   158.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   122.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   48025.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   109510.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   4.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   39299.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   32453.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   257101.886 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:26:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 222764.330 ops/s
[info] # Warmup Iteration   2: 323055.498 ops/s
[info] # Warmup Iteration   3: 329728.373 ops/s
[info] # Warmup Iteration   4: 327171.891 ops/s
[info] # Warmup Iteration   5: 326945.721 ops/s
[info] Iteration   1: 328257.379 ops/s
[info] Iteration   2: 328926.762 ops/s
[info] Iteration   3: 341503.189 ops/s
[info] Iteration   4: 346442.898 ops/s
[info] Iteration   5: 345605.039 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   338147.054 ±(99.9%) 34361.774 ops/s [Average]
[info]   (min, avg, max) = (328257.379, 338147.054, 346442.898), stdev = 8923.644
[info]   CI (99.9%): [303785.279, 372508.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   142.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   10873.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   4920.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   1.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-loads":
[info]   1.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   19.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-stores":
[info]   45.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:branch-misses":
[info]   8.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:branches":
[info]   11722.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:cycles":
[info]   11165.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   0.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   10950.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   4875.761 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:instructions":
[info]   44996.667 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:26:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.945 ops/s
[info] # Warmup Iteration   2: 1440361.338 ops/s
[info] # Warmup Iteration   3: 1509548.884 ops/s
[info] # Warmup Iteration   4: 1518655.437 ops/s
[info] # Warmup Iteration   5: 1519057.017 ops/s
[info] Iteration   1: 1523839.220 ops/s
[info] Iteration   2: 1518280.413 ops/s
[info] Iteration   3: 1519809.978 ops/s
[info] Iteration   4: 1519752.340 ops/s
[info] Iteration   5: 1523721.434 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1521080.677 ±(99.9%) 9780.141 ops/s [Average]
[info]   (min, avg, max) = (1518280.413, 1521080.677, 1523839.220), stdev = 2539.872
[info]   CI (99.9%): [1511300.536, 1530860.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:CPI":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   8.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   2397.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   1072.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-loads":
[info]   0.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-stores":
[info]   1.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:branch-misses":
[info]   1.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:branches":
[info]   2753.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:cycles":
[info]   2527.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-loads":
[info]   2409.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-stores":
[info]   1067.771 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:instructions":
[info]   11559.296 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:26:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 459083.747 ops/s
[info] # Warmup Iteration   2: 699507.251 ops/s
[info] # Warmup Iteration   3: 683327.395 ops/s
[info] # Warmup Iteration   4: 685734.064 ops/s
[info] # Warmup Iteration   5: 723044.868 ops/s
[info] Iteration   1: 722738.938 ops/s
[info] Iteration   2: 723689.788 ops/s
[info] Iteration   3: 725165.509 ops/s
[info] Iteration   4: 723112.299 ops/s
[info] Iteration   5: 719095.153 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   722760.337 ±(99.9%) 8654.669 ops/s [Average]
[info]   (min, avg, max) = (719095.153, 722760.337, 725165.509), stdev = 2247.590
[info]   CI (99.9%): [714105.669, 731415.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   20.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   4279.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   2816.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   4.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   4.636 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:branches":
[info]   5318.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:cycles":
[info]   5337.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   4196.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   2731.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:instructions":
[info]   21103.005 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:26:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1748006.496 ops/s
[info] # Warmup Iteration   2: 1860267.809 ops/s
[info] # Warmup Iteration   3: 1887467.078 ops/s
[info] # Warmup Iteration   4: 1890175.409 ops/s
[info] # Warmup Iteration   5: 1889389.511 ops/s
[info] Iteration   1: 1896348.436 ops/s
[info] Iteration   2: 1889997.919 ops/s
[info] Iteration   3: 1897348.332 ops/s
[info] Iteration   4: 1891169.225 ops/s
[info] Iteration   5: 1894841.607 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1893941.104 ±(99.9%) 12395.154 ops/s [Average]
[info]   (min, avg, max) = (1889997.919, 1893941.104, 1897348.332), stdev = 3218.982
[info]   CI (99.9%): [1881545.950, 1906336.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   5.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1706.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   618.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   0.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   1.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:branches":
[info]   2844.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   2013.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   1705.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   623.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   9403.097 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:25:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 48147.753 ops/s
[info] # Warmup Iteration   2: 99462.740 ops/s
[info] # Warmup Iteration   3: 98660.593 ops/s
[info] # Warmup Iteration   4: 96380.556 ops/s
[info] # Warmup Iteration   5: 98302.411 ops/s
[info] Iteration   1: 101809.633 ops/s
[info] Iteration   2: 101919.704 ops/s
[info] Iteration   3: 101997.784 ops/s
[info] Iteration   4: 101893.318 ops/s
[info] Iteration   5: 101807.036 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   101885.495 ±(99.9%) 308.960 ops/s [Average]
[info]   (min, avg, max) = (101807.036, 101885.495, 101997.784), stdev = 80.236
[info]   CI (99.9%): [101576.536, 102194.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   984.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   33289.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   23560.357 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   7.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   0.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   5.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   31.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   206.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   41.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:branches":
[info]   22992.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:cycles":
[info]   37909.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   34381.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   23799.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:instructions":
[info]   118508.100 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:25:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 208404.737 ops/s
[info] # Warmup Iteration   2: 303909.806 ops/s
[info] # Warmup Iteration   3: 306095.180 ops/s
[info] # Warmup Iteration   4: 307148.342 ops/s
[info] # Warmup Iteration   5: 307803.458 ops/s
[info] Iteration   1: 324814.119 ops/s
[info] Iteration   2: 324738.789 ops/s
[info] Iteration   3: 325816.009 ops/s
[info] Iteration   4: 325555.585 ops/s
[info] Iteration   5: 309266.139 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   322038.128 ±(99.9%) 27550.833 ops/s [Average]
[info]   (min, avg, max) = (309266.139, 322038.128, 325816.009), stdev = 7154.864
[info]   CI (99.9%): [294487.296, 349588.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:CPI":
[info]   0.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   88.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   10880.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   7070.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   44.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   62.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:branch-misses":
[info]   13.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:branches":
[info]   9562.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:cycles":
[info]   11840.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   10462.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6764.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:instructions":
[info]   43387.197 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:25:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.895 ops/s
[info] # Warmup Iteration   2: 1534898.569 ops/s
[info] # Warmup Iteration   3: 1578088.169 ops/s
[info] # Warmup Iteration   4: 1590139.615 ops/s
[info] # Warmup Iteration   5: 1584739.017 ops/s
[info] Iteration   1: 1588913.157 ops/s
[info] Iteration   2: 1562761.153 ops/s
[info] Iteration   3: 1583119.067 ops/s
[info] Iteration   4: 1559780.173 ops/s
[info] Iteration   5: 1579755.093 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1574865.729 ±(99.9%) 49591.468 ops/s [Average]
[info]   (min, avg, max) = (1559780.173, 1574865.729, 1588913.157), stdev = 12878.747
[info]   CI (99.9%): [1525274.261, 1624457.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:CPI":
[info]   0.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   12.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   1560.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   1098.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   3.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-stores":
[info]   6.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:branch-misses":
[info]   2.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:branches":
[info]   2985.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:cycles":
[info]   2465.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-loads":
[info]   1590.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-stores":
[info]   1134.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:instructions":
[info]   10843.877 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:25:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 657804.157 ops/s
[info] # Warmup Iteration   2: 947620.163 ops/s
[info] # Warmup Iteration   3: 950801.802 ops/s
[info] # Warmup Iteration   4: 949913.776 ops/s
[info] # Warmup Iteration   5: 951224.848 ops/s
[info] Iteration   1: 954617.719 ops/s
[info] Iteration   2: 914420.485 ops/s
[info] Iteration   3: 880662.496 ops/s
[info] Iteration   4: 953425.235 ops/s
[info] Iteration   5: 958205.629 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   932266.313 ±(99.9%) 130603.842 ops/s [Average]
[info]   (min, avg, max) = (880662.496, 932266.313, 958205.629), stdev = 33917.403
[info]   CI (99.9%): [801662.471, 1062870.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   19.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   2981.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2147.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   7.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:branches":
[info]   3088.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   3912.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   2933.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   2134.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   14905.039 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:25:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2581333.964 ops/s
[info] # Warmup Iteration   2: 2620506.029 ops/s
[info] # Warmup Iteration   3: 2688729.485 ops/s
[info] # Warmup Iteration   4: 2688510.462 ops/s
[info] # Warmup Iteration   5: 2690807.821 ops/s
[info] Iteration   1: 2720031.466 ops/s
[info] Iteration   2: 2806414.587 ops/s
[info] Iteration   3: 2801184.751 ops/s
[info] Iteration   4: 2794544.059 ops/s
[info] Iteration   5: 2785619.486 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2781558.870 ±(99.9%) 135782.396 ops/s [Average]
[info]   (min, avg, max) = (2720031.466, 2781558.870, 2806414.587), stdev = 35262.257
[info]   CI (99.9%): [2645776.474, 2917341.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   11.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   216.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1271.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   7.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   1654.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   1387.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   221.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1224.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   6151.752 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:24:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3017546.495 ops/s
[info] # Warmup Iteration   2: 3221892.767 ops/s
[info] # Warmup Iteration   3: 3232767.393 ops/s
[info] # Warmup Iteration   4: 3232989.880 ops/s
[info] # Warmup Iteration   5: 3231713.425 ops/s
[info] Iteration   1: 3232856.587 ops/s
[info] Iteration   2: 3235265.691 ops/s
[info] Iteration   3: 3235638.939 ops/s
[info] Iteration   4: 3233508.944 ops/s
[info] Iteration   5: 3231211.170 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3233696.266 ±(99.9%) 6982.558 ops/s [Average]
[info]   (min, avg, max) = (3231211.170, 3233696.266, 3235638.939), stdev = 1813.348
[info]   CI (99.9%): [3226713.708, 3240678.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   182.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1123.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1506.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1185.901 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   176.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1130.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   5585.215 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:24:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 386163.934 ops/s
[info] # Warmup Iteration   2: 543665.438 ops/s
[info] # Warmup Iteration   3: 557457.743 ops/s
[info] # Warmup Iteration   4: 556787.472 ops/s
[info] # Warmup Iteration   5: 556522.857 ops/s
[info] Iteration   1: 558081.306 ops/s
[info] Iteration   2: 583520.089 ops/s
[info] Iteration   3: 590857.270 ops/s
[info] Iteration   4: 590277.059 ops/s
[info] Iteration   5: 590174.903 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   582582.125 ±(99.9%) 53995.250 ops/s [Average]
[info]   (min, avg, max) = (558081.306, 582582.125, 590857.270), stdev = 14022.395
[info]   CI (99.9%): [528586.875, 636577.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   29.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   5982.873 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   2776.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   0.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   6.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   11.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   2.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:branches":
[info]   5223.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:cycles":
[info]   6563.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   5725.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   2703.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:instructions":
[info]   24477.649 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:24:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 102935.885 ops/s
[info] # Warmup Iteration   2: 153372.872 ops/s
[info] # Warmup Iteration   3: 158621.439 ops/s
[info] # Warmup Iteration   4: 159721.934 ops/s
[info] # Warmup Iteration   5: 153732.843 ops/s
[info] Iteration   1: 157338.028 ops/s
[info] Iteration   2: 156300.372 ops/s
[info] Iteration   3: 155458.502 ops/s
[info] Iteration   4: 155474.877 ops/s
[info] Iteration   5: 155390.565 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   155992.469 ±(99.9%) 3233.535 ops/s [Average]
[info]   (min, avg, max) = (155390.565, 155992.469, 157338.028), stdev = 839.739
[info]   CI (99.9%): [152758.934, 159226.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:CPI":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-dcache-load-misses":
[info]   355.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-dcache-loads":
[info]   17470.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-dcache-stores":
[info]   9160.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-icache-load-misses":
[info]   1.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-load-misses":
[info]   0.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-loads":
[info]   1.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-store-misses":
[info]   10.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-stores":
[info]   55.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:branch-misses":
[info]   14.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:branches":
[info]   19128.409 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:cycles":
[info]   24515.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-load-misses":
[info]   0.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-loads":
[info]   17552.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-store-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-stores":
[info]   8954.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:iTLB-load-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:iTLB-loads":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:instructions":
[info]   81535.247 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:24:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 288280.461 ops/s
[info] # Warmup Iteration   2: 440104.574 ops/s
[info] # Warmup Iteration   3: 453216.379 ops/s
[info] # Warmup Iteration   4: 452957.960 ops/s
[info] # Warmup Iteration   5: 454647.188 ops/s
[info] Iteration   1: 452754.286 ops/s
[info] Iteration   2: 451458.461 ops/s
[info] Iteration   3: 454448.476 ops/s
[info] Iteration   4: 453754.054 ops/s
[info] Iteration   5: 454884.818 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   453460.019 ±(99.9%) 5306.995 ops/s [Average]
[info]   (min, avg, max) = (451458.461, 453460.019, 454884.818), stdev = 1378.210
[info]   CI (99.9%): [448153.024, 458767.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   22.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   7621.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   5363.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-loads":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-stores":
[info]   4.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:branch-misses":
[info]   8.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:branches":
[info]   8211.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:cycles":
[info]   8466.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-loads":
[info]   7462.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-stores":
[info]   5229.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:iTLB-loads":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:instructions":
[info]   34234.068 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:23:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1126193.612 ops/s
[info] # Warmup Iteration   2: 1202892.877 ops/s
[info] # Warmup Iteration   3: 1238757.475 ops/s
[info] # Warmup Iteration   4: 1237305.845 ops/s
[info] # Warmup Iteration   5: 1240832.332 ops/s
[info] Iteration   1: 1237316.348 ops/s
[info] Iteration   2: 1239852.620 ops/s
[info] Iteration   3: 1237337.459 ops/s
[info] Iteration   4: 1240640.436 ops/s
[info] Iteration   5: 1228308.560 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1236691.085 ±(99.9%) 18929.759 ops/s [Average]
[info]   (min, avg, max) = (1228308.560, 1236691.085, 1240640.436), stdev = 4915.998
[info]   CI (99.9%): [1217761.326, 1255620.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:CPI":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   5.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2138.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   923.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-stores":
[info]   0.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:branch-misses":
[info]   3.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:branches":
[info]   3988.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:cycles":
[info]   3112.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-loads":
[info]   2106.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-stores":
[info]   913.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:instructions":
[info]   14453.316 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:23:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 43365.138 ops/s
[info] # Warmup Iteration   2: 81245.668 ops/s
[info] # Warmup Iteration   3: 81725.743 ops/s
[info] # Warmup Iteration   4: 84088.095 ops/s
[info] # Warmup Iteration   5: 84328.481 ops/s
[info] Iteration   1: 81685.297 ops/s
[info] Iteration   2: 84106.620 ops/s
[info] Iteration   3: 84360.780 ops/s
[info] Iteration   4: 84056.096 ops/s
[info] Iteration   5: 84622.064 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   83766.172 ±(99.9%) 4562.693 ops/s [Average]
[info]   (min, avg, max) = (81685.297, 83766.172, 84622.064), stdev = 1184.917
[info]   CI (99.9%): [79203.479, 88328.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1541.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-dcache-loads":
[info]   40406.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-dcache-stores":
[info]   28769.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   47.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-load-misses":
[info]   0.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-loads":
[info]   8.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-store-misses":
[info]   46.943 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-stores":
[info]   208.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:branch-misses":
[info]   46.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:branches":
[info]   26284.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:cycles":
[info]   44885.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-loads":
[info]   40595.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-stores":
[info]   28509.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:iTLB-loads":
[info]   0.636 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:instructions":
[info]   141295.089 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:23:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 204448.971 ops/s
[info] # Warmup Iteration   2: 308761.285 ops/s
[info] # Warmup Iteration   3: 298197.372 ops/s
[info] # Warmup Iteration   4: 308840.793 ops/s
[info] # Warmup Iteration   5: 313625.540 ops/s
[info] Iteration   1: 314206.119 ops/s
[info] Iteration   2: 314962.529 ops/s
[info] Iteration   3: 308216.489 ops/s
[info] Iteration   4: 315260.814 ops/s
[info] Iteration   5: 314193.049 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   313367.800 ±(99.9%) 11234.131 ops/s [Average]
[info]   (min, avg, max) = (308216.489, 313367.800, 315260.814), stdev = 2917.468
[info]   CI (99.9%): [302133.670, 324601.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:CPI":
[info]   0.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   142.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-dcache-loads":
[info]   10452.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-dcache-stores":
[info]   6382.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-load-misses":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-loads":
[info]   1.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-store-misses":
[info]   23.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-stores":
[info]   54.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:branch-misses":
[info]   11.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:branches":
[info]   10367.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:cycles":
[info]   12348.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-load-misses":
[info]   0.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-loads":
[info]   10358.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-stores":
[info]   6191.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:iTLB-loads":
[info]   0.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:instructions":
[info]   47455.191 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:23:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1339794.232 ops/s
[info] # Warmup Iteration   2: 1832674.968 ops/s
[info] # Warmup Iteration   3: 1833203.139 ops/s
[info] # Warmup Iteration   4: 1838393.448 ops/s
[info] # Warmup Iteration   5: 1928968.251 ops/s
[info] Iteration   1: 1941059.755 ops/s
[info] Iteration   2: 1933217.861 ops/s
[info] Iteration   3: 1938177.376 ops/s
[info] Iteration   4: 1938699.207 ops/s
[info] Iteration   5: 1859052.302 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1922041.300 ±(99.9%) 136033.090 ops/s [Average]
[info]   (min, avg, max) = (1859052.302, 1922041.300, 1941059.755), stdev = 35327.361
[info]   CI (99.9%): [1786008.211, 2058074.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   13.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   930.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1373.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-loads":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   1.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-stores":
[info]   3.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:branch-misses":
[info]   2.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:branches":
[info]   1839.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:cycles":
[info]   1996.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-loads":
[info]   918.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-stores":
[info]   1336.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:instructions":
[info]   8661.705 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:23:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2470273.175 ops/s
[info] # Warmup Iteration   2: 2799014.205 ops/s
[info] # Warmup Iteration   3: 2760074.960 ops/s
[info] # Warmup Iteration   4: 2759511.126 ops/s
[info] # Warmup Iteration   5: 2745747.761 ops/s
[info] Iteration   1: 2759513.949 ops/s
[info] Iteration   2: 2756707.960 ops/s
[info] Iteration   3: 2760897.669 ops/s
[info] Iteration   4: 2759503.857 ops/s
[info] Iteration   5: 2762415.591 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   2759807.805 ±(99.9%) 8117.494 ops/s [Average]
[info]   (min, avg, max) = (2756707.960, 2759807.805, 2762415.591), stdev = 2108.087
[info]   CI (99.9%): [2751690.311, 2767925.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:CPI":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   7.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   714.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   789.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:branch-misses":
[info]   1.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:branches":
[info]   1827.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:cycles":
[info]   1398.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   713.635 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   768.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:instructions":
[info]   6719.642 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:22:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2739601.614 ops/s
[info] # Warmup Iteration   2: 2963869.084 ops/s
[info] # Warmup Iteration   3: 2980095.121 ops/s
[info] # Warmup Iteration   4: 2980121.705 ops/s
[info] # Warmup Iteration   5: 2979667.609 ops/s
[info] Iteration   1: 2945063.592 ops/s
[info] Iteration   2: 2923193.528 ops/s
[info] Iteration   3: 2887761.055 ops/s
[info] Iteration   4: 2909487.182 ops/s
[info] Iteration   5: 2988642.069 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   2930829.485 ±(99.9%) 148057.085 ops/s [Average]
[info]   (min, avg, max) = (2887761.055, 2930829.485, 2988642.069), stdev = 38449.955
[info]   CI (99.9%): [2782772.400, 3078886.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   661.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   695.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1703.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1271.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   662.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   692.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   6295.234 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:22:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30860.656 ops/s
[info] # Warmup Iteration   2: 47416.793 ops/s
[info] # Warmup Iteration   3: 46549.384 ops/s
[info] # Warmup Iteration   4: 47415.448 ops/s
[info] # Warmup Iteration   5: 47543.905 ops/s
[info] Iteration   1: 47673.321 ops/s
[info] Iteration   2: 45578.801 ops/s
[info] Iteration   3: 45474.021 ops/s
[info] Iteration   4: 46443.513 ops/s
[info] Iteration   5: 47733.269 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   46580.585 ±(99.9%) 4204.788 ops/s [Average]
[info]   (min, avg, max) = (45474.021, 46580.585, 47733.269), stdev = 1091.970
[info]   CI (99.9%): [42375.797, 50785.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:CPI":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1363.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-dcache-loads":
[info]   50611.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-dcache-stores":
[info]   36106.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   16.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-load-misses":
[info]   0.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-loads":
[info]   15.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-store-misses":
[info]   8.736 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-stores":
[info]   92.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:branch-misses":
[info]   108.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:branches":
[info]   48482.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:cycles":
[info]   79315.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.602 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-loads":
[info]   50452.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-stores":
[info]   35081.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:iTLB-loads":
[info]   1.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:instructions":
[info]   233821.679 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:22:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 158492.418 ops/s
[info] # Warmup Iteration   2: 224966.480 ops/s
[info] # Warmup Iteration   3: 242343.903 ops/s
[info] # Warmup Iteration   4: 242667.825 ops/s
[info] # Warmup Iteration   5: 243389.432 ops/s
[info] Iteration   1: 243036.205 ops/s
[info] Iteration   2: 243561.897 ops/s
[info] Iteration   3: 243795.190 ops/s
[info] Iteration   4: 238978.858 ops/s
[info] Iteration   5: 241021.365 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   242078.703 ±(99.9%) 7889.124 ops/s [Average]
[info]   (min, avg, max) = (238978.858, 242078.703, 243795.190), stdev = 2048.780
[info]   CI (99.9%): [234189.580, 249967.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-dcache-load-misses":
[info]   278.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-dcache-loads":
[info]   13499.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-dcache-stores":
[info]   7801.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-icache-load-misses":
[info]   2.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-load-misses":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-loads":
[info]   2.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-store-misses":
[info]   13.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-stores":
[info]   51.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:branch-misses":
[info]   9.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:branches":
[info]   14711.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:cycles":
[info]   15827.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-load-misses":
[info]   0.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-loads":
[info]   14167.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-stores":
[info]   7978.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:iTLB-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:iTLB-loads":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:instructions":
[info]   60428.846 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:22:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 228221.763 ops/s
[info] # Warmup Iteration   2: 365917.943 ops/s
[info] # Warmup Iteration   3: 377598.857 ops/s
[info] # Warmup Iteration   4: 375814.877 ops/s
[info] # Warmup Iteration   5: 376605.969 ops/s
[info] Iteration   1: 376901.465 ops/s
[info] Iteration   2: 369840.402 ops/s
[info] Iteration   3: 362565.115 ops/s
[info] Iteration   4: 377641.257 ops/s
[info] Iteration   5: 377374.390 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   372864.526 ±(99.9%) 25446.034 ops/s [Average]
[info]   (min, avg, max) = (362565.115, 372864.526, 377641.257), stdev = 6608.254
[info]   CI (99.9%): [347418.492, 398310.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:CPI":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   132.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   8976.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   6606.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-loads":
[info]   0.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-store-misses":
[info]   2.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-stores":
[info]   15.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:branch-misses":
[info]   3.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:branches":
[info]   8931.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:cycles":
[info]   10217.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-loads":
[info]   8992.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-stores":
[info]   6424.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:instructions":
[info]   40726.590 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:21:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2128020.427 ops/s
[info] # Warmup Iteration   2: 2307646.408 ops/s
[info] # Warmup Iteration   3: 2313404.089 ops/s
[info] # Warmup Iteration   4: 2323534.013 ops/s
[info] # Warmup Iteration   5: 2321529.436 ops/s
[info] Iteration   1: 2321816.661 ops/s
[info] Iteration   2: 2321834.895 ops/s
[info] Iteration   3: 2316921.773 ops/s
[info] Iteration   4: 2322997.698 ops/s
[info] Iteration   5: 2322327.981 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2321179.802 ±(99.9%) 9350.925 ops/s [Average]
[info]   (min, avg, max) = (2316921.773, 2321179.802, 2322997.698), stdev = 2428.405
[info]   CI (99.9%): [2311828.877, 2330530.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:CPI":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   9.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1540.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   537.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-stores":
[info]   1.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:branch-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:branches":
[info]   2233.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:cycles":
[info]   1657.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-loads":
[info]   1506.952 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-stores":
[info]   519.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:instructions":
[info]   7882.994 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:21:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 24424.805 ops/s
[info] # Warmup Iteration   2: 82304.616 ops/s
[info] # Warmup Iteration   3: 85767.343 ops/s
[info] # Warmup Iteration   4: 85853.575 ops/s
[info] # Warmup Iteration   5: 86093.752 ops/s
[info] Iteration   1: 85896.086 ops/s
[info] Iteration   2: 85825.592 ops/s
[info] Iteration   3: 84487.261 ops/s
[info] Iteration   4: 83494.769 ops/s
[info] Iteration   5: 85161.809 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   84973.103 ±(99.9%) 3867.816 ops/s [Average]
[info]   (min, avg, max) = (83494.769, 84973.103, 85896.086), stdev = 1004.460
[info]   CI (99.9%): [81105.287, 88840.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1564.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-dcache-loads":
[info]   40463.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-dcache-stores":
[info]   28077.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   91.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-loads":
[info]   7.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-store-misses":
[info]   42.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-stores":
[info]   243.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:branch-misses":
[info]   45.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:branches":
[info]   27810.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:cycles":
[info]   45278.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-loads":
[info]   39057.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-stores":
[info]   27902.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:iTLB-loads":
[info]   0.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:instructions":
[info]   148433.467 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:21:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 166930.898 ops/s
[info] # Warmup Iteration   2: 244711.831 ops/s
[info] # Warmup Iteration   3: 253987.653 ops/s
[info] # Warmup Iteration   4: 255542.689 ops/s
[info] # Warmup Iteration   5: 255883.722 ops/s
[info] Iteration   1: 256650.589 ops/s
[info] Iteration   2: 256280.542 ops/s
[info] Iteration   3: 256451.391 ops/s
[info] Iteration   4: 256579.124 ops/s
[info] Iteration   5: 252202.200 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   255632.769 ±(99.9%) 7404.385 ops/s [Average]
[info]   (min, avg, max) = (252202.200, 255632.769, 256650.589), stdev = 1922.895
[info]   CI (99.9%): [248228.384, 263037.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   206.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-dcache-loads":
[info]   13275.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-dcache-stores":
[info]   9250.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-load-misses":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-loads":
[info]   1.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-store-misses":
[info]   36.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-stores":
[info]   75.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:branch-misses":
[info]   12.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:branches":
[info]   9968.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:cycles":
[info]   14895.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-loads":
[info]   13533.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-stores":
[info]   9259.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:iTLB-loads":
[info]   0.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:instructions":
[info]   48580.876 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:21:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 945989.892 ops/s
[info] # Warmup Iteration   2: 1499401.240 ops/s
[info] # Warmup Iteration   3: 1494762.754 ops/s
[info] # Warmup Iteration   4: 1482311.642 ops/s
[info] # Warmup Iteration   5: 1499461.871 ops/s
[info] Iteration   1: 1493352.196 ops/s
[info] Iteration   2: 1492367.530 ops/s
[info] Iteration   3: 1498693.647 ops/s
[info] Iteration   4: 1500791.418 ops/s
[info] Iteration   5: 1423768.984 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1481794.755 ±(99.9%) 125645.424 ops/s [Average]
[info]   (min, avg, max) = (1423768.984, 1481794.755, 1500791.418), stdev = 32629.718
[info]   CI (99.9%): [1356149.331, 1607440.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   15.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   1822.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1617.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   2.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-stores":
[info]   5.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:branch-misses":
[info]   1.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:branches":
[info]   2416.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:cycles":
[info]   2546.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-loads":
[info]   1813.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-stores":
[info]   1582.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:instructions":
[info]   10833.780 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:21:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2624067.414 ops/s
[info] # Warmup Iteration   2: 2823136.543 ops/s
[info] # Warmup Iteration   3: 2866855.389 ops/s
[info] # Warmup Iteration   4: 2857627.245 ops/s
[info] # Warmup Iteration   5: 2866705.006 ops/s
[info] Iteration   1: 2779434.281 ops/s
[info] Iteration   2: 2753823.458 ops/s
[info] Iteration   3: 2796583.651 ops/s
[info] Iteration   4: 2772455.674 ops/s
[info] Iteration   5: 2873860.251 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2795231.463 ±(99.9%) 179243.495 ops/s [Average]
[info]   (min, avg, max) = (2753823.458, 2795231.463, 2873860.251), stdev = 46548.966
[info]   CI (99.9%): [2615987.968, 2974474.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:CPI":
[info]   0.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   8.935 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   345.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1161.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   1.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-stores":
[info]   3.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:branches":
[info]   1551.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:cycles":
[info]   1348.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   343.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1116.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:instructions":
[info]   6026.288 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:20:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2787681.937 ops/s
[info] # Warmup Iteration   2: 3091907.025 ops/s
[info] # Warmup Iteration   3: 3175136.312 ops/s
[info] # Warmup Iteration   4: 3174787.749 ops/s
[info] # Warmup Iteration   5: 3172441.574 ops/s
[info] Iteration   1: 3173474.576 ops/s
[info] Iteration   2: 3176176.611 ops/s
[info] Iteration   3: 3171490.492 ops/s
[info] Iteration   4: 3173559.832 ops/s
[info] Iteration   5: 3175399.824 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3174020.267 ±(99.9%) 7064.263 ops/s [Average]
[info]   (min, avg, max) = (3171490.492, 3174020.267, 3176176.611), stdev = 1834.567
[info]   CI (99.9%): [3166956.004, 3181084.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   313.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1063.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1447.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1212.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   311.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1062.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   5607.417 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:20:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 200397.353 ops/s
[info] # Warmup Iteration   2: 442825.230 ops/s
[info] # Warmup Iteration   3: 446561.135 ops/s
[info] # Warmup Iteration   4: 447019.151 ops/s
[info] # Warmup Iteration   5: 447705.805 ops/s
[info] Iteration   1: 448325.079 ops/s
[info] Iteration   2: 447639.441 ops/s
[info] Iteration   3: 447178.000 ops/s
[info] Iteration   4: 448121.581 ops/s
[info] Iteration   5: 448350.227 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   447922.866 ±(99.9%) 1943.579 ops/s [Average]
[info]   (min, avg, max) = (447178.000, 447922.866, 448350.227), stdev = 504.741
[info]   CI (99.9%): [445979.286, 449866.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:CPI":
[info]   0.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   168.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-dcache-loads":
[info]   6836.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-dcache-stores":
[info]   5303.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   2.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-loads":
[info]   1.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-store-misses":
[info]   22.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-stores":
[info]   48.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:branch-misses":
[info]   3.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:branches":
[info]   4849.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:cycles":
[info]   8658.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-loads":
[info]   6678.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-stores":
[info]   5370.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:iTLB-loads":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:instructions":
[info]   26722.796 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:20:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16221.449 ops/s
[info] # Warmup Iteration   2: 25622.593 ops/s
[info] # Warmup Iteration   3: 24810.059 ops/s
[info] # Warmup Iteration   4: 24683.275 ops/s
[info] # Warmup Iteration   5: 24565.535 ops/s
[info] Iteration   1: 25278.874 ops/s
[info] Iteration   2: 25850.696 ops/s
[info] Iteration   3: 25925.695 ops/s
[info] Iteration   4: 25897.687 ops/s
[info] Iteration   5: 25918.587 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25774.308 ±(99.9%) 1072.400 ops/s [Average]
[info]   (min, avg, max) = (25278.874, 25774.308, 25925.695), stdev = 278.499
[info]   CI (99.9%): [24701.907, 26846.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-dcache-load-misses":
[info]   2089.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-dcache-loads":
[info]   74787.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-dcache-stores":
[info]   47799.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-icache-load-misses":
[info]   247.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-load-misses":
[info]   1.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-loads":
[info]   19.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-store-misses":
[info]   73.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-stores":
[info]   268.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:branch-misses":
[info]   248.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:branches":
[info]   112015.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:cycles":
[info]   150202.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-load-misses":
[info]   7.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-loads":
[info]   72326.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-store-misses":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-stores":
[info]   45401.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:iTLB-load-misses":
[info]   0.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:iTLB-loads":
[info]   1.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:instructions":
[info]   454682.858 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:20:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.936 ops/s
[info] # Warmup Iteration   2: 91454.717 ops/s
[info] # Warmup Iteration   3: 98926.759 ops/s
[info] # Warmup Iteration   4: 97913.901 ops/s
[info] # Warmup Iteration   5: 100788.273 ops/s
[info] Iteration   1: 99529.276 ops/s
[info] Iteration   2: 95914.792 ops/s
[info] Iteration   3: 98713.733 ops/s
[info] Iteration   4: 100410.049 ops/s
[info] Iteration   5: 100382.589 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   98990.088 ±(99.9%) 7147.040 ops/s [Average]
[info]   (min, avg, max) = (95914.792, 98990.088, 100410.049), stdev = 1856.064
[info]   CI (99.9%): [91843.048, 106137.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:CPI":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   261.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   18832.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   12014.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   4.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-load-misses":
[info]   1.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-loads":
[info]   6.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-store-misses":
[info]   9.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-stores":
[info]   43.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:branch-misses":
[info]   58.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:branches":
[info]   34663.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:cycles":
[info]   38724.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-loads":
[info]   18837.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-stores":
[info]   12468.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:instructions":
[info]   140300.821 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:19:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 36870.477 ops/s
[info] # Warmup Iteration   2: 63769.394 ops/s
[info] # Warmup Iteration   3: 65515.721 ops/s
[info] # Warmup Iteration   4: 67877.359 ops/s
[info] # Warmup Iteration   5: 67630.715 ops/s
[info] Iteration   1: 67415.488 ops/s
[info] Iteration   2: 67513.137 ops/s
[info] Iteration   3: 67741.653 ops/s
[info] Iteration   4: 65041.189 ops/s
[info] Iteration   5: 64584.361 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   66459.166 ±(99.9%) 5838.436 ops/s [Average]
[info]   (min, avg, max) = (64584.361, 66459.166, 67741.653), stdev = 1516.223
[info]   CI (99.9%): [60620.730, 72297.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:CPI":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   536.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   29690.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   23221.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   30.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-loads":
[info]   5.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-store-misses":
[info]   9.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-stores":
[info]   64.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:branch-misses":
[info]   55.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:branches":
[info]   47470.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:cycles":
[info]   57196.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-loads":
[info]   28468.904 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-stores":
[info]   21962.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:iTLB-loads":
[info]   0.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:instructions":
[info]   200654.920 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:19:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 117319.612 ops/s
[info] # Warmup Iteration   2: 133652.048 ops/s
[info] # Warmup Iteration   3: 134273.004 ops/s
[info] # Warmup Iteration   4: 134752.901 ops/s
[info] # Warmup Iteration   5: 134463.313 ops/s
[info] Iteration   1: 129147.764 ops/s
[info] Iteration   2: 129520.132 ops/s
[info] Iteration   3: 129265.956 ops/s
[info] Iteration   4: 129676.308 ops/s
[info] Iteration   5: 128964.357 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   129314.903 ±(99.9%) 1099.199 ops/s [Average]
[info]   (min, avg, max) = (128964.357, 129314.903, 129676.308), stdev = 285.459
[info]   CI (99.9%): [128215.704, 130414.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   190.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   13738.602 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   8207.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   9.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-loads":
[info]   1.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   5.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-stores":
[info]   25.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:branch-misses":
[info]   40.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:branches":
[info]   23820.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:cycles":
[info]   29220.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-loads":
[info]   13652.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-stores":
[info]   8016.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-loads":
[info]   2.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:instructions":
[info]   102719.457 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:19:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16837.003 ops/s
[info] # Warmup Iteration   2: 36760.175 ops/s
[info] # Warmup Iteration   3: 36208.079 ops/s
[info] # Warmup Iteration   4: 36453.590 ops/s
[info] # Warmup Iteration   5: 36435.935 ops/s
[info] Iteration   1: 36916.972 ops/s
[info] Iteration   2: 37186.070 ops/s
[info] Iteration   3: 37299.154 ops/s
[info] Iteration   4: 37190.381 ops/s
[info] Iteration   5: 36760.732 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   37070.662 ±(99.9%) 860.035 ops/s [Average]
[info]   (min, avg, max) = (36760.732, 37070.662, 37299.154), stdev = 223.348
[info]   CI (99.9%): [36210.627, 37930.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:CPI":
[info]   0.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2039.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-loads":
[info]   59452.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-stores":
[info]   48208.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   408.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-load-misses":
[info]   0.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-loads":
[info]   12.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-store-misses":
[info]   37.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-stores":
[info]   277.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:branch-misses":
[info]   156.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:branches":
[info]   66972.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:cycles":
[info]   103537.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-loads":
[info]   59203.690 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-stores":
[info]   47091.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:iTLB-loads":
[info]   0.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:instructions":
[info]   319294.800 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:19:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22278.377 ops/s
[info] # Warmup Iteration   2: 31905.673 ops/s
[info] # Warmup Iteration   3: 31695.935 ops/s
[info] # Warmup Iteration   4: 31661.635 ops/s
[info] # Warmup Iteration   5: 31790.091 ops/s
[info] Iteration   1: 31754.058 ops/s
[info] Iteration   2: 31844.499 ops/s
[info] Iteration   3: 31636.012 ops/s
[info] Iteration   4: 31713.327 ops/s
[info] Iteration   5: 31675.134 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   31724.606 ±(99.9%) 308.444 ops/s [Average]
[info]   (min, avg, max) = (31636.012, 31724.606, 31844.499), stdev = 80.102
[info]   CI (99.9%): [31416.162, 32033.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:CPI":
[info]   0.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   511.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-dcache-loads":
[info]   44752.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-dcache-stores":
[info]   25516.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-icache-load-misses":
[info]   46.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-load-misses":
[info]   1.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-loads":
[info]   6.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-store-misses":
[info]   138.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-stores":
[info]   213.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:branch-misses":
[info]   76.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:branches":
[info]   48638.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:cycles":
[info]   121212.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-load-misses":
[info]   3.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-loads":
[info]   44593.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-stores":
[info]   24994.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:iTLB-loads":
[info]   1.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:instructions":
[info]   237694.514 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:19:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21661.851 ops/s
[info] # Warmup Iteration   2: 31398.668 ops/s
[info] # Warmup Iteration   3: 31359.744 ops/s
[info] # Warmup Iteration   4: 31338.834 ops/s
[info] # Warmup Iteration   5: 31422.845 ops/s
[info] Iteration   1: 31531.309 ops/s
[info] Iteration   2: 31296.908 ops/s
[info] Iteration   3: 31396.827 ops/s
[info] Iteration   4: 32180.767 ops/s
[info] Iteration   5: 32056.674 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   31692.497 ±(99.9%) 1541.370 ops/s [Average]
[info]   (min, avg, max) = (31296.908, 31692.497, 32180.767), stdev = 400.289
[info]   CI (99.9%): [30151.127, 33233.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:CPI":
[info]   0.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   358.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   42836.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   25122.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   15.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-loads":
[info]   4.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   19.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-stores":
[info]   55.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:branch-misses":
[info]   86.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:branches":
[info]   46039.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:cycles":
[info]   119240.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   1.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-loads":
[info]   42529.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-stores":
[info]   24697.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.482 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-loads":
[info]   2.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:instructions":
[info]   236897.068 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:18:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30408.884 ops/s
[info] # Warmup Iteration   2: 33192.761 ops/s
[info] # Warmup Iteration   3: 34114.589 ops/s
[info] # Warmup Iteration   4: 33383.428 ops/s
[info] # Warmup Iteration   5: 34140.893 ops/s
[info] Iteration   1: 34138.729 ops/s
[info] Iteration   2: 34242.699 ops/s
[info] Iteration   3: 33885.649 ops/s
[info] Iteration   4: 34194.452 ops/s
[info] Iteration   5: 34109.211 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   34114.148 ±(99.9%) 530.126 ops/s [Average]
[info]   (min, avg, max) = (33885.649, 34114.148, 34242.699), stdev = 137.672
[info]   CI (99.9%): [33584.022, 34644.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:CPI":
[info]   0.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   350.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   38084.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   21316.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   25.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   1.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-loads":
[info]   6.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   18.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-stores":
[info]   51.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:branch-misses":
[info]   76.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:branches":
[info]   41856.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:cycles":
[info]   112942.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   2.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   37785.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   21035.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.582 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:instructions":
[info]   211758.594 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:18:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30310.423 ops/s
[info] # Warmup Iteration   2: 34244.887 ops/s
[info] # Warmup Iteration   3: 34003.896 ops/s
[info] # Warmup Iteration   4: 34027.682 ops/s
[info] # Warmup Iteration   5: 34268.481 ops/s
[info] Iteration   1: 34272.346 ops/s
[info] Iteration   2: 34239.514 ops/s
[info] Iteration   3: 34327.649 ops/s
[info] Iteration   4: 34255.649 ops/s
[info] Iteration   5: 34149.474 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   34248.926 ±(99.9%) 249.330 ops/s [Average]
[info]   (min, avg, max) = (34149.474, 34248.926, 34327.649), stdev = 64.750
[info]   CI (99.9%): [33999.596, 34498.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   302.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   37879.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   20983.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   6.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   2.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   3.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   2.900 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   31.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   73.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   41553.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   111683.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   2.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   37483.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   1.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   20536.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   210566.479 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:18:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4221.934 ops/s
[info] # Warmup Iteration   2: 14455.353 ops/s
[info] # Warmup Iteration   3: 15226.822 ops/s
[info] # Warmup Iteration   4: 15256.877 ops/s
[info] # Warmup Iteration   5: 15237.800 ops/s
[info] Iteration   1: 14444.064 ops/s
[info] Iteration   2: 14345.853 ops/s
[info] Iteration   3: 14248.293 ops/s
[info] Iteration   4: 14191.182 ops/s
[info] Iteration   5: 15247.866 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   14495.452 ±(99.9%) 1661.604 ops/s [Average]
[info]   (min, avg, max) = (14191.182, 14495.452, 15247.866), stdev = 431.513
[info]   CI (99.9%): [12833.848, 16157.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:CPI":
[info]   0.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-dcache-load-misses":
[info]   2679.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-dcache-loads":
[info]   205913.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-dcache-stores":
[info]   106924.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-icache-load-misses":
[info]   538.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-load-misses":
[info]   9.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-loads":
[info]   94.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-store-misses":
[info]   65.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-stores":
[info]   376.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:branch-misses":
[info]   500.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:branches":
[info]   189179.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:cycles":
[info]   273488.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-load-misses":
[info]   14.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-loads":
[info]   206859.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-store-misses":
[info]   0.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-stores":
[info]   106041.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:iTLB-load-misses":
[info]   9.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:iTLB-loads":
[info]   47.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:instructions":
[info]   819471.268 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:18:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2960.775 ops/s
[info] # Warmup Iteration   2: 14405.825 ops/s
[info] # Warmup Iteration   3: 15123.380 ops/s
[info] # Warmup Iteration   4: 15137.455 ops/s
[info] # Warmup Iteration   5: 15044.657 ops/s
[info] Iteration   1: 15134.359 ops/s
[info] Iteration   2: 15169.536 ops/s
[info] Iteration   3: 14019.639 ops/s
[info] Iteration   4: 14215.466 ops/s
[info] Iteration   5: 14260.963 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   14559.993 ±(99.9%) 2110.437 ops/s [Average]
[info]   (min, avg, max) = (14019.639, 14559.993, 15169.536), stdev = 548.074
[info]   CI (99.9%): [12449.556, 16670.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:CPI":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   2341.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   197036.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   102131.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   376.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-load-misses":
[info]   10.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-loads":
[info]   83.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-store-misses":
[info]   13.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-stores":
[info]   248.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:branch-misses":
[info]   527.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:branches":
[info]   170447.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:cycles":
[info]   264268.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   8.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-loads":
[info]   202558.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-stores":
[info]   106031.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   4.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:iTLB-loads":
[info]   39.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:instructions":
[info]   776966.934 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:17:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 96242.958 ops/s
[info] # Warmup Iteration   2: 100624.420 ops/s
[info] # Warmup Iteration   3: 102036.314 ops/s
[info] # Warmup Iteration   4: 102455.689 ops/s
[info] # Warmup Iteration   5: 102122.948 ops/s
[info] Iteration   1: 102240.183 ops/s
[info] Iteration   2: 102332.010 ops/s
[info] Iteration   3: 103852.289 ops/s
[info] Iteration   4: 106250.825 ops/s
[info] Iteration   5: 106616.574 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   104258.376 ±(99.9%) 8049.561 ops/s [Average]
[info]   (min, avg, max) = (102240.183, 104258.376, 106616.574), stdev = 2090.445
[info]   CI (99.9%): [96208.815, 112307.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   78.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   19637.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   10491.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   7.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-loads":
[info]   2.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-stores":
[info]   12.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:branch-misses":
[info]   49.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:branches":
[info]   24924.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:cycles":
[info]   36187.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-loads":
[info]   19542.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-stores":
[info]   10449.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:instructions":
[info]   138032.882 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:17:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1725.207 ops/s
[info] # Warmup Iteration   2: 12461.716 ops/s
[info] # Warmup Iteration   3: 13299.492 ops/s
[info] # Warmup Iteration   4: 13419.374 ops/s
[info] # Warmup Iteration   5: 13377.090 ops/s
[info] Iteration   1: 13362.172 ops/s
[info] Iteration   2: 13349.750 ops/s
[info] Iteration   3: 13367.726 ops/s
[info] Iteration   4: 13180.280 ops/s
[info] Iteration   5: 13360.554 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   13324.096 ±(99.9%) 310.590 ops/s [Average]
[info]   (min, avg, max) = (13180.280, 13324.096, 13367.726), stdev = 80.659
[info]   CI (99.9%): [13013.506, 13634.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:CPI":
[info]   0.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3621.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-loads":
[info]   225052.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-stores":
[info]   123410.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   586.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-load-misses":
[info]   4.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-loads":
[info]   134.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-store-misses":
[info]   26.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-stores":
[info]   469.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:branch-misses":
[info]   523.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:branches":
[info]   185983.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:cycles":
[info]   290789.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-load-misses":
[info]   12.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-loads":
[info]   225933.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-stores":
[info]   122918.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:iTLB-load-misses":
[info]   2.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:iTLB-loads":
[info]   13.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:instructions":
[info]   844666.709 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:17:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30941.477 ops/s
[info] # Warmup Iteration   2: 43930.476 ops/s
[info] # Warmup Iteration   3: 43726.873 ops/s
[info] # Warmup Iteration   4: 44189.460 ops/s
[info] # Warmup Iteration   5: 44312.277 ops/s
[info] Iteration   1: 44095.281 ops/s
[info] Iteration   2: 44336.490 ops/s
[info] Iteration   3: 44150.606 ops/s
[info] Iteration   4: 44424.757 ops/s
[info] Iteration   5: 44098.663 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   44221.159 ±(99.9%) 579.461 ops/s [Average]
[info]   (min, avg, max) = (44095.281, 44221.159, 44424.757), stdev = 150.484
[info]   CI (99.9%): [43641.698, 44800.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:CPI":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1017.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-dcache-loads":
[info]   33581.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-dcache-stores":
[info]   24427.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-icache-load-misses":
[info]   12.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-load-misses":
[info]   1.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-loads":
[info]   6.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-store-misses":
[info]   161.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-stores":
[info]   284.761 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:branch-misses":
[info]   157.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:branches":
[info]   70497.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:cycles":
[info]   87539.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-load-misses":
[info]   5.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-loads":
[info]   33952.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.936 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-stores":
[info]   24446.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:iTLB-loads":
[info]   0.863 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:instructions":
[info]   258639.021 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:17:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 34193.366 ops/s
[info] # Warmup Iteration   2: 60526.254 ops/s
[info] # Warmup Iteration   3: 59255.784 ops/s
[info] # Warmup Iteration   4: 58996.863 ops/s
[info] # Warmup Iteration   5: 61034.765 ops/s
[info] Iteration   1: 60684.777 ops/s
[info] Iteration   2: 59496.951 ops/s
[info] Iteration   3: 61014.652 ops/s
[info] Iteration   4: 61075.579 ops/s
[info] Iteration   5: 60860.415 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   60626.475 ±(99.9%) 2500.198 ops/s [Average]
[info]   (min, avg, max) = (59496.951, 60626.475, 61075.579), stdev = 649.293
[info]   CI (99.9%): [58126.277, 63126.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:CPI":
[info]   0.357 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   558.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   27451.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   17663.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   4.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-loads":
[info]   2.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   59.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-stores":
[info]   127.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:branch-misses":
[info]   58.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:branches":
[info]   39739.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:cycles":
[info]   63491.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-loads":
[info]   26843.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-stores":
[info]   17393.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:instructions":
[info]   177789.939 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:16:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 152706.365 ops/s
[info] # Warmup Iteration   2: 170496.624 ops/s
[info] # Warmup Iteration   3: 170720.615 ops/s
[info] # Warmup Iteration   4: 171646.638 ops/s
[info] # Warmup Iteration   5: 171680.765 ops/s
[info] Iteration   1: 171790.934 ops/s
[info] Iteration   2: 171467.443 ops/s
[info] Iteration   3: 172417.700 ops/s
[info] Iteration   4: 171708.359 ops/s
[info] Iteration   5: 170979.522 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   171672.792 ±(99.9%) 2012.769 ops/s [Average]
[info]   (min, avg, max) = (170979.522, 171672.792, 172417.700), stdev = 522.710
[info]   CI (99.9%): [169660.022, 173685.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:CPI":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   45.980 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   7440.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5453.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   29.672 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-stores":
[info]   36.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:branch-misses":
[info]   16.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:branches":
[info]   12232.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:cycles":
[info]   22474.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   7360.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5380.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:instructions":
[info]   63969.994 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:16:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 171998.663 ops/s
[info] # Warmup Iteration   2: 181588.002 ops/s
[info] # Warmup Iteration   3: 184630.847 ops/s
[info] # Warmup Iteration   4: 184665.643 ops/s
[info] # Warmup Iteration   5: 184607.831 ops/s
[info] Iteration   1: 184503.503 ops/s
[info] Iteration   2: 184523.213 ops/s
[info] Iteration   3: 184653.095 ops/s
[info] Iteration   4: 184467.032 ops/s
[info] Iteration   5: 184593.883 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   184548.145 ±(99.9%) 287.515 ops/s [Average]
[info]   (min, avg, max) = (184467.032, 184548.145, 184653.095), stdev = 74.667
[info]   CI (99.9%): [184260.630, 184835.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   4.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   5134.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5545.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   13.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   11731.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   20645.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5117.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5516.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   60292.652 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:16:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 38642.662 ops/s
[info] # Warmup Iteration   2: 55360.305 ops/s
[info] # Warmup Iteration   3: 54732.425 ops/s
[info] # Warmup Iteration   4: 55299.751 ops/s
[info] # Warmup Iteration   5: 55399.167 ops/s
[info] Iteration   1: 55028.279 ops/s
[info] Iteration   2: 55249.345 ops/s
[info] Iteration   3: 55457.037 ops/s
[info] Iteration   4: 55379.216 ops/s
[info] Iteration   5: 55460.980 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   55314.971 ±(99.9%) 699.843 ops/s [Average]
[info]   (min, avg, max) = (55028.279, 55314.971, 55460.980), stdev = 181.747
[info]   CI (99.9%): [54615.128, 56014.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:CPI":
[info]   0.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   885.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-loads":
[info]   32153.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-stores":
[info]   20277.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   9.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-loads":
[info]   4.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-store-misses":
[info]   69.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-stores":
[info]   145.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:branch-misses":
[info]   105.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:branches":
[info]   41399.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:cycles":
[info]   69171.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-load-misses":
[info]   5.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-loads":
[info]   31589.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-stores":
[info]   19625.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:iTLB-loads":
[info]   0.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:instructions":
[info]   189125.848 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:16:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 49014.178 ops/s
[info] # Warmup Iteration   2: 88292.380 ops/s
[info] # Warmup Iteration   3: 92406.004 ops/s
[info] # Warmup Iteration   4: 97174.627 ops/s
[info] # Warmup Iteration   5: 97371.257 ops/s
[info] Iteration   1: 97232.646 ops/s
[info] Iteration   2: 97313.060 ops/s
[info] Iteration   3: 97464.487 ops/s
[info] Iteration   4: 96796.115 ops/s
[info] Iteration   5: 97247.881 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   97210.838 ±(99.9%) 960.020 ops/s [Average]
[info]   (min, avg, max) = (96796.115, 97210.838, 97464.487), stdev = 249.314
[info]   CI (99.9%): [96250.818, 98170.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-dcache-load-misses":
[info]   644.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-dcache-loads":
[info]   31343.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-dcache-stores":
[info]   17663.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-icache-load-misses":
[info]   6.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-load-misses":
[info]   0.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-loads":
[info]   4.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-store-misses":
[info]   42.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-stores":
[info]   102.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:branch-misses":
[info]   19.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:branches":
[info]   32322.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:cycles":
[info]   39628.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-load-misses":
[info]   1.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-loads":
[info]   32755.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-store-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-stores":
[info]   17848.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:iTLB-load-misses":
[info]   0.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:iTLB-loads":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:instructions":
[info]   137709.053 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:16:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 72983.336 ops/s
[info] # Warmup Iteration   2: 116994.591 ops/s
[info] # Warmup Iteration   3: 118974.566 ops/s
[info] # Warmup Iteration   4: 123435.855 ops/s
[info] # Warmup Iteration   5: 124087.441 ops/s
[info] Iteration   1: 126976.089 ops/s
[info] Iteration   2: 126913.733 ops/s
[info] Iteration   3: 127126.699 ops/s
[info] Iteration   4: 122509.489 ops/s
[info] Iteration   5: 127232.944 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   126151.791 ±(99.9%) 7855.154 ops/s [Average]
[info]   (min, avg, max) = (122509.489, 126151.791, 127232.944), stdev = 2039.959
[info]   CI (99.9%): [118296.637, 134006.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:CPI":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   387.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   24879.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   15419.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   5.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-loads":
[info]   3.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-store-misses":
[info]   4.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-stores":
[info]   76.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:branch-misses":
[info]   11.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:branches":
[info]   23844.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:cycles":
[info]   29658.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-loads":
[info]   25126.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-stores":
[info]   15170.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:instructions":
[info]   104968.897 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:15:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 129824.751 ops/s
[info] # Warmup Iteration   2: 157800.806 ops/s
[info] # Warmup Iteration   3: 163243.896 ops/s
[info] # Warmup Iteration   4: 164081.953 ops/s
[info] # Warmup Iteration   5: 158836.839 ops/s
[info] Iteration   1: 159289.440 ops/s
[info] Iteration   2: 159408.764 ops/s
[info] Iteration   3: 159649.507 ops/s
[info] Iteration   4: 162178.517 ops/s
[info] Iteration   5: 165992.352 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   161303.716 ±(99.9%) 11082.422 ops/s [Average]
[info]   (min, avg, max) = (159289.440, 161303.716, 165992.352), stdev = 2878.070
[info]   CI (99.9%): [150221.294, 172386.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:CPI":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   242.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   19776.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   9558.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-stores":
[info]   26.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:branch-misses":
[info]   10.901 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:branches":
[info]   21361.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:cycles":
[info]   23208.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-loads":
[info]   19499.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-stores":
[info]   9269.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:instructions":
[info]   83529.735 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:15:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17119.665 ops/s
[info] # Warmup Iteration   2: 53783.601 ops/s
[info] # Warmup Iteration   3: 53374.256 ops/s
[info] # Warmup Iteration   4: 54014.018 ops/s
[info] # Warmup Iteration   5: 53192.349 ops/s
[info] Iteration   1: 54228.922 ops/s
[info] Iteration   2: 54246.849 ops/s
[info] Iteration   3: 54282.416 ops/s
[info] Iteration   4: 54313.348 ops/s
[info] Iteration   5: 54221.840 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   54258.675 ±(99.9%) 148.321 ops/s [Average]
[info]   (min, avg, max) = (54221.840, 54258.675, 54313.348), stdev = 38.518
[info]   CI (99.9%): [54110.354, 54406.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:CPI":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2039.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-loads":
[info]   63495.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-stores":
[info]   40318.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   190.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-load-misses":
[info]   3.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-loads":
[info]   17.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-store-misses":
[info]   41.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-stores":
[info]   285.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:branch-misses":
[info]   44.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:branches":
[info]   45488.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:cycles":
[info]   70667.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-loads":
[info]   61553.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-stores":
[info]   40563.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:iTLB-loads":
[info]   0.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:instructions":
[info]   233364.340 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:15:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 127288.151 ops/s
[info] # Warmup Iteration   2: 179081.378 ops/s
[info] # Warmup Iteration   3: 175579.923 ops/s
[info] # Warmup Iteration   4: 177683.400 ops/s
[info] # Warmup Iteration   5: 180289.713 ops/s
[info] Iteration   1: 180165.221 ops/s
[info] Iteration   2: 179959.255 ops/s
[info] Iteration   3: 179874.255 ops/s
[info] Iteration   4: 180814.424 ops/s
[info] Iteration   5: 180728.109 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   180308.253 ±(99.9%) 1681.877 ops/s [Average]
[info]   (min, avg, max) = (179874.255, 180308.253, 180814.424), stdev = 436.778
[info]   CI (99.9%): [178626.376, 181990.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   174.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-dcache-loads":
[info]   15399.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-dcache-stores":
[info]   9672.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-load-misses":
[info]   0.616 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-loads":
[info]   1.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-store-misses":
[info]   89.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-stores":
[info]   121.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:branch-misses":
[info]   13.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:branches":
[info]   24005.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:cycles":
[info]   21485.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-loads":
[info]   15001.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-stores":
[info]   9320.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:iTLB-loads":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:instructions":
[info]   83646.420 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:15:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 360496.458 ops/s
[info] # Warmup Iteration   2: 527750.598 ops/s
[info] # Warmup Iteration   3: 528518.509 ops/s
[info] # Warmup Iteration   4: 537601.206 ops/s
[info] # Warmup Iteration   5: 527285.200 ops/s
[info] Iteration   1: 513186.370 ops/s
[info] Iteration   2: 517263.907 ops/s
[info] Iteration   3: 538545.868 ops/s
[info] Iteration   4: 536060.431 ops/s
[info] Iteration   5: 535343.139 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   528079.943 ±(99.9%) 45755.589 ops/s [Average]
[info]   (min, avg, max) = (513186.370, 528079.943, 538545.868), stdev = 11882.581
[info]   CI (99.9%): [482324.354, 573835.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   27.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   4846.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2986.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   10.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-stores":
[info]   18.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:branch-misses":
[info]   2.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:branches":
[info]   8071.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:cycles":
[info]   7193.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-loads":
[info]   4816.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2928.635 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:instructions":
[info]   28137.100 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:14:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 622778.748 ops/s
[info] # Warmup Iteration   2: 707748.868 ops/s
[info] # Warmup Iteration   3: 717850.133 ops/s
[info] # Warmup Iteration   4: 721685.302 ops/s
[info] # Warmup Iteration   5: 718267.016 ops/s
[info] Iteration   1: 710048.024 ops/s
[info] Iteration   2: 693422.056 ops/s
[info] Iteration   3: 696478.024 ops/s
[info] Iteration   4: 720581.731 ops/s
[info] Iteration   5: 719417.639 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   707989.495 ±(99.9%) 48635.961 ops/s [Average]
[info]   (min, avg, max) = (693422.056, 707989.495, 720581.731), stdev = 12630.605
[info]   CI (99.9%): [659353.534, 756625.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:CPI":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   20.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2776.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1948.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   10.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-stores":
[info]   17.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:branch-misses":
[info]   2.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:branches":
[info]   7509.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:cycles":
[info]   5264.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2767.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1927.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:instructions":
[info]   23989.286 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:14:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 734585.804 ops/s
[info] # Warmup Iteration   2: 786369.538 ops/s
[info] # Warmup Iteration   3: 789659.758 ops/s
[info] # Warmup Iteration   4: 789368.486 ops/s
[info] # Warmup Iteration   5: 789774.637 ops/s
[info] Iteration   1: 789633.528 ops/s
[info] Iteration   2: 789509.371 ops/s
[info] Iteration   3: 785634.284 ops/s
[info] Iteration   4: 784293.456 ops/s
[info] Iteration   5: 785489.511 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   786912.030 ±(99.9%) 9562.060 ops/s [Average]
[info]   (min, avg, max) = (784293.456, 786912.030, 789633.528), stdev = 2483.237
[info]   CI (99.9%): [777349.970, 796474.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2701.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1741.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   7298.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4812.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2679.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1731.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   23168.012 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:14:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 150846.360 ops/s
[info] # Warmup Iteration   2: 293962.125 ops/s
[info] # Warmup Iteration   3: 294084.902 ops/s
[info] # Warmup Iteration   4: 294865.658 ops/s
[info] # Warmup Iteration   5: 295088.079 ops/s
[info] Iteration   1: 294889.516 ops/s
[info] Iteration   2: 294300.571 ops/s
[info] Iteration   3: 294834.265 ops/s
[info] Iteration   4: 294909.589 ops/s
[info] Iteration   5: 294682.401 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   294723.269 ±(99.9%) 972.272 ops/s [Average]
[info]   (min, avg, max) = (294300.571, 294723.269, 294909.589), stdev = 252.496
[info]   CI (99.9%): [293750.996, 295695.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:CPI":
[info]   0.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   73.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-loads":
[info]   12582.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-stores":
[info]   6069.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-loads":
[info]   1.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-store-misses":
[info]   12.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-stores":
[info]   26.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:branch-misses":
[info]   4.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:branches":
[info]   11575.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:cycles":
[info]   12944.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-loads":
[info]   12576.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-stores":
[info]   6033.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:iTLB-loads":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:instructions":
[info]   49981.902 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:14:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 27269.972 ops/s
[info] # Warmup Iteration   2: 36367.544 ops/s
[info] # Warmup Iteration   3: 36988.638 ops/s
[info] # Warmup Iteration   4: 37262.083 ops/s
[info] # Warmup Iteration   5: 37854.757 ops/s
[info] Iteration   1: 37793.650 ops/s
[info] Iteration   2: 37676.293 ops/s
[info] Iteration   3: 37895.865 ops/s
[info] Iteration   4: 37639.295 ops/s
[info] Iteration   5: 37803.156 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   37761.652 ±(99.9%) 399.322 ops/s [Average]
[info]   (min, avg, max) = (37639.295, 37761.652, 37895.865), stdev = 103.703
[info]   CI (99.9%): [37362.330, 38160.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:CPI":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-dcache-load-misses":
[info]   1527.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-dcache-loads":
[info]   57409.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-dcache-stores":
[info]   36928.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-icache-load-misses":
[info]   19.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-load-misses":
[info]   1.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-loads":
[info]   6.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-store-misses":
[info]   56.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-stores":
[info]   179.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:branch-misses":
[info]   177.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:branches":
[info]   77395.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:cycles":
[info]   102244.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-load-misses":
[info]   3.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-loads":
[info]   57611.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-store-misses":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-stores":
[info]   36255.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:iTLB-load-misses":
[info]   1.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:iTLB-loads":
[info]   1.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:instructions":
[info]   314813.873 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:14:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.976 ops/s
[info] # Warmup Iteration   2: 286101.177 ops/s
[info] # Warmup Iteration   3: 291275.221 ops/s
[info] # Warmup Iteration   4: 293537.925 ops/s
[info] # Warmup Iteration   5: 282965.514 ops/s
[info] Iteration   1: 282487.552 ops/s
[info] Iteration   2: 283653.890 ops/s
[info] Iteration   3: 283308.250 ops/s
[info] Iteration   4: 284702.466 ops/s
[info] Iteration   5: 290902.250 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   285010.881 ±(99.9%) 13045.519 ops/s [Average]
[info]   (min, avg, max) = (282487.552, 285010.881, 290902.250), stdev = 3387.880
[info]   CI (99.9%): [271965.363, 298056.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   32.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   7228.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   3361.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   1.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-stores":
[info]   8.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:branch-misses":
[info]   24.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:branches":
[info]   15323.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:cycles":
[info]   12836.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-loads":
[info]   7266.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-stores":
[info]   3414.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:instructions":
[info]   54691.727 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:13:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 67901.780 ops/s
[info] # Warmup Iteration   2: 112286.243 ops/s
[info] # Warmup Iteration   3: 116091.971 ops/s
[info] # Warmup Iteration   4: 116155.033 ops/s
[info] # Warmup Iteration   5: 116052.007 ops/s
[info] Iteration   1: 116279.538 ops/s
[info] Iteration   2: 115757.221 ops/s
[info] Iteration   3: 116293.102 ops/s
[info] Iteration   4: 116443.723 ops/s
[info] Iteration   5: 116383.360 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   116231.389 ±(99.9%) 1053.035 ops/s [Average]
[info]   (min, avg, max) = (115757.221, 116231.389, 116443.723), stdev = 273.470
[info]   CI (99.9%): [115178.353, 117284.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   330.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   20004.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   16688.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   7.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-loads":
[info]   4.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-store-misses":
[info]   3.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-stores":
[info]   30.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:branch-misses":
[info]   34.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:branches":
[info]   30029.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:cycles":
[info]   33151.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-loads":
[info]   20251.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-stores":
[info]   16715.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:instructions":
[info]   125397.847 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:13:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 436821.516 ops/s
[info] # Warmup Iteration   2: 471463.023 ops/s
[info] # Warmup Iteration   3: 475932.070 ops/s
[info] # Warmup Iteration   4: 477269.288 ops/s
[info] # Warmup Iteration   5: 451628.844 ops/s
[info] Iteration   1: 450519.402 ops/s
[info] Iteration   2: 451783.387 ops/s
[info] Iteration   3: 451584.805 ops/s
[info] Iteration   4: 477051.793 ops/s
[info] Iteration   5: 476126.969 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   461413.271 ±(99.9%) 53393.108 ops/s [Average]
[info]   (min, avg, max) = (450519.402, 461413.271, 477051.793), stdev = 13866.021
[info]   CI (99.9%): [408020.163, 514806.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   18.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   4848.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2050.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-stores":
[info]   3.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:branch-misses":
[info]   10.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:branches":
[info]   8356.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:cycles":
[info]   7974.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-loads":
[info]   4811.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2045.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:instructions":
[info]   33862.968 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:13:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17904.496 ops/s
[info] # Warmup Iteration   2: 42508.203 ops/s
[info] # Warmup Iteration   3: 42480.686 ops/s
[info] # Warmup Iteration   4: 42691.162 ops/s
[info] # Warmup Iteration   5: 42898.701 ops/s
[info] Iteration   1: 42219.278 ops/s
[info] Iteration   2: 43008.970 ops/s
[info] Iteration   3: 43078.749 ops/s
[info] Iteration   4: 43057.659 ops/s
[info] Iteration   5: 41769.003 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   42626.732 ±(99.9%) 2308.654 ops/s [Average]
[info]   (min, avg, max) = (41769.003, 42626.732, 43078.749), stdev = 599.550
[info]   CI (99.9%): [40318.079, 44935.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:CPI":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1941.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-loads":
[info]   53287.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-stores":
[info]   44034.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   353.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-loads":
[info]   17.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-store-misses":
[info]   22.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-stores":
[info]   223.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:branch-misses":
[info]   179.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:branches":
[info]   56123.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:cycles":
[info]   88242.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-loads":
[info]   53596.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-stores":
[info]   42010.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:iTLB-loads":
[info]   1.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:instructions":
[info]   271546.318 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:13:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 52726.043 ops/s
[info] # Warmup Iteration   2: 75160.953 ops/s
[info] # Warmup Iteration   3: 74862.637 ops/s
[info] # Warmup Iteration   4: 74886.523 ops/s
[info] # Warmup Iteration   5: 75753.691 ops/s
[info] Iteration   1: 75238.419 ops/s
[info] Iteration   2: 75162.457 ops/s
[info] Iteration   3: 75245.625 ops/s
[info] Iteration   4: 75022.740 ops/s
[info] Iteration   5: 74659.465 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   75065.741 ±(99.9%) 940.139 ops/s [Average]
[info]   (min, avg, max) = (74659.465, 75065.741, 75245.625), stdev = 244.151
[info]   CI (99.9%): [74125.602, 76005.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:CPI":
[info]   0.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   220.912 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-dcache-loads":
[info]   18669.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-dcache-stores":
[info]   13137.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-icache-load-misses":
[info]   10.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-load-misses":
[info]   0.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-loads":
[info]   3.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-store-misses":
[info]   97.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-stores":
[info]   133.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:branch-misses":
[info]   40.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:branches":
[info]   23896.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:cycles":
[info]   50835.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-loads":
[info]   18858.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-stores":
[info]   13190.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:iTLB-loads":
[info]   0.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:instructions":
[info]   112107.909 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:12:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.946 ops/s
[info] # Warmup Iteration   2: 81144.794 ops/s
[info] # Warmup Iteration   3: 86971.528 ops/s
[info] # Warmup Iteration   4: 87900.079 ops/s
[info] # Warmup Iteration   5: 87904.994 ops/s
[info] Iteration   1: 88465.398 ops/s
[info] Iteration   2: 88177.529 ops/s
[info] Iteration   3: 88216.393 ops/s
[info] Iteration   4: 88101.420 ops/s
[info] Iteration   5: 88241.449 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   88240.438 ±(99.9%) 525.404 ops/s [Average]
[info]   (min, avg, max) = (88101.420, 88240.438, 88465.398), stdev = 136.446
[info]   CI (99.9%): [87715.033, 88765.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:CPI":
[info]   0.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   159.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   12293.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   9929.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   2.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   1.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-loads":
[info]   4.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   7.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-stores":
[info]   23.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:branch-misses":
[info]   31.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:branches":
[info]   18720.996 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:cycles":
[info]   43933.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   12202.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   9879.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:instructions":
[info]   91832.689 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:12:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 52703.672 ops/s
[info] # Warmup Iteration   2: 75746.989 ops/s
[info] # Warmup Iteration   3: 76415.857 ops/s
[info] # Warmup Iteration   4: 76433.369 ops/s
[info] # Warmup Iteration   5: 76268.543 ops/s
[info] Iteration   1: 76314.155 ops/s
[info] Iteration   2: 76168.819 ops/s
[info] Iteration   3: 76340.251 ops/s
[info] Iteration   4: 76219.631 ops/s
[info] Iteration   5: 76326.837 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   76273.939 ±(99.9%) 290.796 ops/s [Average]
[info]   (min, avg, max) = (76168.819, 76273.939, 76340.251), stdev = 75.519
[info]   CI (99.9%): [75983.143, 76564.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:CPI":
[info]   0.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   167.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   16746.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   12896.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   8.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-loads":
[info]   2.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   9.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-stores":
[info]   28.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:branch-misses":
[info]   47.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:branches":
[info]   21949.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:cycles":
[info]   50009.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   1.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-loads":
[info]   16617.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-stores":
[info]   12755.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:instructions":
[info]   111980.676 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:12:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 77906.471 ops/s
[info] # Warmup Iteration   2: 86905.398 ops/s
[info] # Warmup Iteration   3: 87704.887 ops/s
[info] # Warmup Iteration   4: 87657.472 ops/s
[info] # Warmup Iteration   5: 87586.110 ops/s
[info] Iteration   1: 87925.378 ops/s
[info] Iteration   2: 87608.582 ops/s
[info] Iteration   3: 87691.505 ops/s
[info] Iteration   4: 87616.022 ops/s
[info] Iteration   5: 87887.921 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   87745.882 ±(99.9%) 581.005 ops/s [Average]
[info]   (min, avg, max) = (87608.582, 87745.882, 87925.378), stdev = 150.885
[info]   CI (99.9%): [87164.876, 88326.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:CPI":
[info]   0.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   152.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   12323.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   9708.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   6.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-loads":
[info]   2.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   7.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-stores":
[info]   23.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:branch-misses":
[info]   35.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:branches":
[info]   18197.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:cycles":
[info]   43606.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   12109.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   9502.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:instructions":
[info]   91114.876 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:12:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 80780.529 ops/s
[info] # Warmup Iteration   2: 86081.483 ops/s
[info] # Warmup Iteration   3: 88647.334 ops/s
[info] # Warmup Iteration   4: 88688.786 ops/s
[info] # Warmup Iteration   5: 88661.575 ops/s
[info] Iteration   1: 88325.728 ops/s
[info] Iteration   2: 88648.901 ops/s
[info] Iteration   3: 88482.842 ops/s
[info] Iteration   4: 88536.644 ops/s
[info] Iteration   5: 88802.180 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   88559.259 ±(99.9%) 688.647 ops/s [Average]
[info]   (min, avg, max) = (88325.728, 88559.259, 88802.180), stdev = 178.839
[info]   CI (99.9%): [87870.612, 89247.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   130.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   12264.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   9498.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   1.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   8.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   36.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   17897.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   43145.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   12221.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   9403.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   89809.118 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:12:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5705.111 ops/s
[info] # Warmup Iteration   2: 9477.733 ops/s
[info] # Warmup Iteration   3: 10109.206 ops/s
[info] # Warmup Iteration   4: 10108.984 ops/s
[info] # Warmup Iteration   5: 10134.853 ops/s
[info] Iteration   1: 9807.680 ops/s
[info] Iteration   2: 10009.393 ops/s
[info] Iteration   3: 10064.701 ops/s
[info] Iteration   4: 10086.053 ops/s
[info] Iteration   5: 10085.166 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   10010.599 ±(99.9%) 452.995 ops/s [Average]
[info]   (min, avg, max) = (9807.680, 10010.599, 10086.053), stdev = 117.641
[info]   CI (99.9%): [9557.604, 10463.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:CPI":
[info]   0.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-dcache-load-misses":
[info]   5065.803 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-dcache-loads":
[info]   280053.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-dcache-stores":
[info]   148943.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-icache-load-misses":
[info]   6966.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-load-misses":
[info]   10.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-loads":
[info]   213.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-store-misses":
[info]   204.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-stores":
[info]   980.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:branch-misses":
[info]   247.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:branches":
[info]   232370.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:cycles":
[info]   390207.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-load-misses":
[info]   9.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-loads":
[info]   279367.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-store-misses":
[info]   1.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-stores":
[info]   142568.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:iTLB-load-misses":
[info]   3.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:iTLB-loads":
[info]   12.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:instructions":
[info]   1097505.578 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:11:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4967.978 ops/s
[info] # Warmup Iteration   2: 10919.402 ops/s
[info] # Warmup Iteration   3: 11435.367 ops/s
[info] # Warmup Iteration   4: 11413.577 ops/s
[info] # Warmup Iteration   5: 11288.642 ops/s
[info] Iteration   1: 11201.390 ops/s
[info] Iteration   2: 11384.654 ops/s
[info] Iteration   3: 10993.122 ops/s
[info] Iteration   4: 10991.170 ops/s
[info] Iteration   5: 10871.182 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   11088.304 ±(99.9%) 785.022 ops/s [Average]
[info]   (min, avg, max) = (10871.182, 11088.304, 11384.654), stdev = 203.868
[info]   CI (99.9%): [10303.281, 11873.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:CPI":
[info]   0.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4513.558 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   248683.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   132978.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   4598.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-load-misses":
[info]   9.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-loads":
[info]   165.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-store-misses":
[info]   190.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-stores":
[info]   892.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:branch-misses":
[info]   249.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:branches":
[info]   198573.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:cycles":
[info]   348183.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   11.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-loads":
[info]   240990.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-stores":
[info]   126724.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   3.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:iTLB-loads":
[info]   29.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:instructions":
[info]   952377.939 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:11:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 139952.977 ops/s
[info] # Warmup Iteration   2: 153010.395 ops/s
[info] # Warmup Iteration   3: 156369.337 ops/s
[info] # Warmup Iteration   4: 156641.851 ops/s
[info] # Warmup Iteration   5: 156616.817 ops/s
[info] Iteration   1: 156566.492 ops/s
[info] Iteration   2: 156015.142 ops/s
[info] Iteration   3: 156535.612 ops/s
[info] Iteration   4: 152404.756 ops/s
[info] Iteration   5: 156484.980 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   155601.396 ±(99.9%) 6935.057 ops/s [Average]
[info]   (min, avg, max) = (152404.756, 155601.396, 156566.492), stdev = 1801.012
[info]   CI (99.9%): [148666.340, 162536.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   73.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   10628.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5500.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   4.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-loads":
[info]   1.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   1.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-stores":
[info]   11.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:branch-misses":
[info]   9.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:branches":
[info]   17258.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:cycles":
[info]   24499.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-loads":
[info]   10456.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-stores":
[info]   5382.906 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-loads":
[info]   1.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:instructions":
[info]   73591.347 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:11:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2316.923 ops/s
[info] # Warmup Iteration   2: 5592.725 ops/s
[info] # Warmup Iteration   3: 5738.219 ops/s
[info] # Warmup Iteration   4: 5808.249 ops/s
[info] # Warmup Iteration   5: 5818.379 ops/s
[info] Iteration   1: 5820.438 ops/s
[info] Iteration   2: 5801.406 ops/s
[info] Iteration   3: 5632.565 ops/s
[info] Iteration   4: 5848.360 ops/s
[info] Iteration   5: 5847.892 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   5790.132 ±(99.9%) 347.623 ops/s [Average]
[info]   (min, avg, max) = (5632.565, 5790.132, 5848.360), stdev = 90.277
[info]   CI (99.9%): [5442.509, 6137.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:CPI":
[info]   0.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   8268.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-loads":
[info]   533757.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-stores":
[info]   302495.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   13734.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-load-misses":
[info]   10.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-loads":
[info]   339.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-store-misses":
[info]   111.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-stores":
[info]   1110.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:branch-misses":
[info]   534.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:branches":
[info]   369896.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:cycles":
[info]   662240.778 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-load-misses":
[info]   135.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-loads":
[info]   514397.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-stores":
[info]   290966.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:iTLB-load-misses":
[info]   4.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:iTLB-loads":
[info]   12.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:instructions":
[info]   1944792.188 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:11:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12771.635 ops/s
[info] # Warmup Iteration   2: 19355.471 ops/s
[info] # Warmup Iteration   3: 19196.763 ops/s
[info] # Warmup Iteration   4: 19933.754 ops/s
[info] # Warmup Iteration   5: 19939.598 ops/s
[info] Iteration   1: 19827.926 ops/s
[info] Iteration   2: 19946.502 ops/s
[info] Iteration   3: 20037.370 ops/s
[info] Iteration   4: 20050.468 ops/s
[info] Iteration   5: 19555.921 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   19883.637 ±(99.9%) 784.246 ops/s [Average]
[info]   (min, avg, max) = (19555.921, 19883.637, 20050.468), stdev = 203.666
[info]   CI (99.9%): [19099.392, 20667.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:CPI":
[info]   0.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2774.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-dcache-loads":
[info]   77867.409 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-dcache-stores":
[info]   65190.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-icache-load-misses":
[info]   49.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-load-misses":
[info]   2.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-loads":
[info]   19.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-store-misses":
[info]   233.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-stores":
[info]   447.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:branch-misses":
[info]   167.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:branches":
[info]   120494.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:cycles":
[info]   190612.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-load-misses":
[info]   6.912 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-loads":
[info]   78795.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-store-misses":
[info]   2.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-stores":
[info]   64902.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:iTLB-load-misses":
[info]   1.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:iTLB-loads":
[info]   5.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:instructions":
[info]   499879.844 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:10:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15411.640 ops/s
[info] # Warmup Iteration   2: 23470.312 ops/s
[info] # Warmup Iteration   3: 22811.564 ops/s
[info] # Warmup Iteration   4: 23021.650 ops/s
[info] # Warmup Iteration   5: 23542.517 ops/s
[info] Iteration   1: 23608.019 ops/s
[info] Iteration   2: 23074.291 ops/s
[info] Iteration   3: 22852.199 ops/s
[info] Iteration   4: 23764.844 ops/s
[info] Iteration   5: 23698.782 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   23399.627 ±(99.9%) 1578.090 ops/s [Average]
[info]   (min, avg, max) = (22852.199, 23399.627, 23764.844), stdev = 409.825
[info]   CI (99.9%): [21821.537, 24977.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:CPI":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1918.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   69167.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   54338.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   13.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   2.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-loads":
[info]   14.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   105.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-stores":
[info]   196.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:branch-misses":
[info]   148.600 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:branches":
[info]   77722.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:cycles":
[info]   163269.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   7.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-loads":
[info]   70079.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-stores":
[info]   54176.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   1.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-loads":
[info]   1.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:instructions":
[info]   384506.953 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:10:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 125075.943 ops/s
[info] # Warmup Iteration   2: 131568.174 ops/s
[info] # Warmup Iteration   3: 133927.499 ops/s
[info] # Warmup Iteration   4: 133979.536 ops/s
[info] # Warmup Iteration   5: 133260.512 ops/s
[info] Iteration   1: 133391.043 ops/s
[info] Iteration   2: 133633.750 ops/s
[info] Iteration   3: 133352.391 ops/s
[info] Iteration   4: 132736.425 ops/s
[info] Iteration   5: 132656.054 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   133153.933 ±(99.9%) 1665.184 ops/s [Average]
[info]   (min, avg, max) = (132656.054, 133153.933, 133633.750), stdev = 432.443
[info]   CI (99.9%): [131488.748, 134819.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:CPI":
[info]   0.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   58.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   7847.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   8852.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   34.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-stores":
[info]   48.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:branch-misses":
[info]   3.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:branches":
[info]   7007.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:cycles":
[info]   28445.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   7820.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   8736.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:instructions":
[info]   49312.837 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:10:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 127377.237 ops/s
[info] # Warmup Iteration   2: 138148.649 ops/s
[info] # Warmup Iteration   3: 139847.322 ops/s
[info] # Warmup Iteration   4: 139828.693 ops/s
[info] # Warmup Iteration   5: 138310.209 ops/s
[info] Iteration   1: 140258.944 ops/s
[info] Iteration   2: 140229.493 ops/s
[info] Iteration   3: 140241.760 ops/s
[info] Iteration   4: 140205.727 ops/s
[info] Iteration   5: 140184.327 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   140224.050 ±(99.9%) 113.489 ops/s [Average]
[info]   (min, avg, max) = (140184.327, 140224.050, 140258.944), stdev = 29.473
[info]   CI (99.9%): [140110.561, 140337.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   6.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   7815.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   8356.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   6563.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   27306.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   7825.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   8325.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   47641.202 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:10:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15660.099 ops/s
[info] # Warmup Iteration   2: 23271.376 ops/s
[info] # Warmup Iteration   3: 23327.567 ops/s
[info] # Warmup Iteration   4: 23266.694 ops/s
[info] # Warmup Iteration   5: 22700.421 ops/s
[info] Iteration   1: 23294.576 ops/s
[info] Iteration   2: 23300.136 ops/s
[info] Iteration   3: 23390.912 ops/s
[info] Iteration   4: 23388.140 ops/s
[info] Iteration   5: 23228.678 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   23320.489 ±(99.9%) 265.745 ops/s [Average]
[info]   (min, avg, max) = (23228.678, 23320.489, 23390.912), stdev = 69.013
[info]   CI (99.9%): [23054.744, 23586.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:CPI":
[info]   0.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2519.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-loads":
[info]   74149.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-stores":
[info]   56517.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   58.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-load-misses":
[info]   1.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-loads":
[info]   15.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-store-misses":
[info]   100.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-stores":
[info]   192.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:branch-misses":
[info]   142.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:branches":
[info]   81382.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:cycles":
[info]   164777.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-load-misses":
[info]   8.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-loads":
[info]   71580.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-stores":
[info]   53699.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:iTLB-loads":
[info]   2.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:instructions":
[info]   406044.789 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:09:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 87740.318 ops/s
[info] # Warmup Iteration   2: 119509.663 ops/s
[info] # Warmup Iteration   3: 119458.526 ops/s
[info] # Warmup Iteration   4: 120454.578 ops/s
[info] # Warmup Iteration   5: 120245.548 ops/s
[info] Iteration   1: 122317.226 ops/s
[info] Iteration   2: 121040.622 ops/s
[info] Iteration   3: 121963.395 ops/s
[info] Iteration   4: 121846.193 ops/s
[info] Iteration   5: 119553.559 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   121344.199 ±(99.9%) 4253.495 ops/s [Average]
[info]   (min, avg, max) = (119553.559, 121344.199, 122317.226), stdev = 1104.619
[info]   CI (99.9%): [117090.704, 125597.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:CPI":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   406.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-dcache-loads":
[info]   18888.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-dcache-stores":
[info]   9926.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   5.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-load-misses":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-loads":
[info]   2.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-store-misses":
[info]   29.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-stores":
[info]   86.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:branch-misses":
[info]   65.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:branches":
[info]   25364.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:cycles":
[info]   31503.996 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-load-misses":
[info]   1.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-loads":
[info]   19531.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-stores":
[info]   10042.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:iTLB-load-misses":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:iTLB-loads":
[info]   0.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:instructions":
[info]   106207.467 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:09:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.980 ops/s
[info] # Warmup Iteration   2: 533458.812 ops/s
[info] # Warmup Iteration   3: 559735.258 ops/s
[info] # Warmup Iteration   4: 566255.384 ops/s
[info] # Warmup Iteration   5: 565419.556 ops/s
[info] Iteration   1: 565367.505 ops/s
[info] Iteration   2: 566116.439 ops/s
[info] Iteration   3: 566114.110 ops/s
[info] Iteration   4: 564946.473 ops/s
[info] Iteration   5: 553827.287 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   563274.363 ±(99.9%) 20427.112 ops/s [Average]
[info]   (min, avg, max) = (553827.287, 563274.363, 566116.439), stdev = 5304.856
[info]   CI (99.9%): [542847.251, 583701.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   28.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   4079.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   2225.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   1.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-stores":
[info]   8.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:branch-misses":
[info]   7.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:branches":
[info]   8093.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:cycles":
[info]   6837.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-loads":
[info]   4116.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-stores":
[info]   2231.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:instructions":
[info]   31964.074 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:09:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 203179.414 ops/s
[info] # Warmup Iteration   2: 313465.273 ops/s
[info] # Warmup Iteration   3: 323672.501 ops/s
[info] # Warmup Iteration   4: 322624.494 ops/s
[info] # Warmup Iteration   5: 322625.512 ops/s
[info] Iteration   1: 322423.284 ops/s
[info] Iteration   2: 322902.587 ops/s
[info] Iteration   3: 323563.904 ops/s
[info] Iteration   4: 322782.401 ops/s
[info] Iteration   5: 322718.163 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   322878.068 ±(99.9%) 1625.184 ops/s [Average]
[info]   (min, avg, max) = (322423.284, 322878.068, 323563.904), stdev = 422.055
[info]   CI (99.9%): [321252.884, 324503.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   38.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   9260.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   7112.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-loads":
[info]   0.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   2.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-stores":
[info]   9.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:branch-misses":
[info]   4.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:branches":
[info]   10394.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:cycles":
[info]   11751.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   9215.935 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   7022.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:instructions":
[info]   48099.946 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:09:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 685359.017 ops/s
[info] # Warmup Iteration   2: 761626.374 ops/s
[info] # Warmup Iteration   3: 771716.077 ops/s
[info] # Warmup Iteration   4: 767250.320 ops/s
[info] # Warmup Iteration   5: 771466.263 ops/s
[info] Iteration   1: 771449.141 ops/s
[info] Iteration   2: 761159.255 ops/s
[info] Iteration   3: 768053.347 ops/s
[info] Iteration   4: 763047.543 ops/s
[info] Iteration   5: 766272.608 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   765996.379 ±(99.9%) 15657.194 ops/s [Average]
[info]   (min, avg, max) = (761159.255, 765996.379, 771449.141), stdev = 4066.124
[info]   CI (99.9%): [750339.184, 781653.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   20.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2461.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1595.911 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   3.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   3.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:branch-misses":
[info]   4.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:branches":
[info]   6283.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:cycles":
[info]   5123.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   2479.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   1588.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:instructions":
[info]   23673.426 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:09:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 38001.972 ops/s
[info] # Warmup Iteration   2: 67764.817 ops/s
[info] # Warmup Iteration   3: 71096.576 ops/s
[info] # Warmup Iteration   4: 72074.535 ops/s
[info] # Warmup Iteration   5: 72623.650 ops/s
[info] Iteration   1: 72872.685 ops/s
[info] Iteration   2: 70984.410 ops/s
[info] Iteration   3: 69896.830 ops/s
[info] Iteration   4: 72039.139 ops/s
[info] Iteration   5: 72254.859 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   71609.584 ±(99.9%) 4523.765 ops/s [Average]
[info]   (min, avg, max) = (69896.830, 71609.584, 72872.685), stdev = 1174.807
[info]   CI (99.9%): [67085.819, 76133.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1619.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   42234.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   31689.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   148.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-loads":
[info]   10.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   31.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-stores":
[info]   214.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:branch-misses":
[info]   94.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:branches":
[info]   29217.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:cycles":
[info]   52648.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-loads":
[info]   43540.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-stores":
[info]   32008.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:iTLB-loads":
[info]   0.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:instructions":
[info]   158143.677 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:08:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 135426.183 ops/s
[info] # Warmup Iteration   2: 187193.429 ops/s
[info] # Warmup Iteration   3: 190351.990 ops/s
[info] # Warmup Iteration   4: 190784.590 ops/s
[info] # Warmup Iteration   5: 190712.574 ops/s
[info] Iteration   1: 191205.500 ops/s
[info] Iteration   2: 190515.711 ops/s
[info] Iteration   3: 191999.442 ops/s
[info] Iteration   4: 193278.211 ops/s
[info] Iteration   5: 199174.742 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   193234.721 ±(99.9%) 13383.744 ops/s [Average]
[info]   (min, avg, max) = (190515.711, 193234.721, 199174.742), stdev = 3475.716
[info]   CI (99.9%): [179850.977, 206618.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:CPI":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   189.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-dcache-loads":
[info]   12406.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-dcache-stores":
[info]   7974.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-load-misses":
[info]   0.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-loads":
[info]   1.980 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-store-misses":
[info]   66.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-stores":
[info]   99.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:branch-misses":
[info]   28.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:branches":
[info]   13897.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:cycles":
[info]   19602.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-loads":
[info]   12729.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-stores":
[info]   7957.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:iTLB-loads":
[info]   0.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:instructions":
[info]   64767.701 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:08:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.952 ops/s
[info] # Warmup Iteration   2: 615290.209 ops/s
[info] # Warmup Iteration   3: 643148.558 ops/s
[info] # Warmup Iteration   4: 653243.366 ops/s
[info] # Warmup Iteration   5: 653267.151 ops/s
[info] Iteration   1: 654531.295 ops/s
[info] Iteration   2: 646813.783 ops/s
[info] Iteration   3: 660112.317 ops/s
[info] Iteration   4: 656889.900 ops/s
[info] Iteration   5: 656895.094 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   655048.478 ±(99.9%) 19303.307 ops/s [Average]
[info]   (min, avg, max) = (646813.783, 655048.478, 660112.317), stdev = 5013.008
[info]   CI (99.9%): [635745.171, 674351.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:CPI":
[info]   0.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   15.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   2017.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   1941.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   4.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-stores":
[info]   8.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:branch-misses":
[info]   1.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:branches":
[info]   2581.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:cycles":
[info]   5846.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   2023.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   1920.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:instructions":
[info]   14387.314 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:08:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 460449.319 ops/s
[info] # Warmup Iteration   2: 656199.583 ops/s
[info] # Warmup Iteration   3: 661096.436 ops/s
[info] # Warmup Iteration   4: 662249.848 ops/s
[info] # Warmup Iteration   5: 662561.899 ops/s
[info] Iteration   1: 666203.851 ops/s
[info] Iteration   2: 661767.037 ops/s
[info] Iteration   3: 638791.276 ops/s
[info] Iteration   4: 639696.561 ops/s
[info] Iteration   5: 639062.617 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   649104.268 ±(99.9%) 52672.212 ops/s [Average]
[info]   (min, avg, max) = (638791.276, 649104.268, 666203.851), stdev = 13678.806
[info]   CI (99.9%): [596432.056, 701776.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:CPI":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   20.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   3476.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2298.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   5.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   11.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:branch-misses":
[info]   5.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:branches":
[info]   3748.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:cycles":
[info]   5721.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   3446.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2275.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:instructions":
[info]   18908.109 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:08:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1003976.239 ops/s
[info] # Warmup Iteration   2: 1142857.738 ops/s
[info] # Warmup Iteration   3: 1115142.362 ops/s
[info] # Warmup Iteration   4: 1159385.285 ops/s
[info] # Warmup Iteration   5: 1156956.351 ops/s
[info] Iteration   1: 1143286.597 ops/s
[info] Iteration   2: 1100619.357 ops/s
[info] Iteration   3: 1165104.789 ops/s
[info] Iteration   4: 1159164.176 ops/s
[info] Iteration   5: 1159760.900 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1145587.164 ±(99.9%) 101761.307 ops/s [Average]
[info]   (min, avg, max) = (1100619.357, 1145587.164, 1165104.789), stdev = 26427.088
[info]   CI (99.9%): [1043825.857, 1247348.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   14.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1458.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1509.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   9.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   5.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:branches":
[info]   3390.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:cycles":
[info]   3305.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1431.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1480.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:instructions":
[info]   14579.228 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:07:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1094964.973 ops/s
[info] # Warmup Iteration   2: 1211546.851 ops/s
[info] # Warmup Iteration   3: 1205581.214 ops/s
[info] # Warmup Iteration   4: 1208597.090 ops/s
[info] # Warmup Iteration   5: 1209101.751 ops/s
[info] Iteration   1: 1208171.806 ops/s
[info] Iteration   2: 1207720.253 ops/s
[info] Iteration   3: 1208439.395 ops/s
[info] Iteration   4: 1208613.131 ops/s
[info] Iteration   5: 1208231.405 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1208235.198 ±(99.9%) 1296.889 ops/s [Average]
[info]   (min, avg, max) = (1207720.253, 1208235.198, 1208613.131), stdev = 336.798
[info]   CI (99.9%): [1206938.309, 1209532.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1428.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1368.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   4.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   3246.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   3180.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1415.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1367.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   14045.445 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:07:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21454.296 ops/s
[info] # Warmup Iteration   2: 33471.218 ops/s
[info] # Warmup Iteration   3: 33577.862 ops/s
[info] # Warmup Iteration   4: 33308.501 ops/s
[info] # Warmup Iteration   5: 33607.282 ops/s
[info] Iteration   1: 33699.178 ops/s
[info] Iteration   2: 33675.113 ops/s
[info] Iteration   3: 33815.694 ops/s
[info] Iteration   4: 35087.782 ops/s
[info] Iteration   5: 34755.697 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   34206.693 ±(99.9%) 2562.019 ops/s [Average]
[info]   (min, avg, max) = (33675.113, 34206.693, 35087.782), stdev = 665.348
[info]   CI (99.9%): [31644.674, 36768.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:CPI":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1787.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-dcache-loads":
[info]   61032.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-dcache-stores":
[info]   43981.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   46.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-loads":
[info]   14.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-store-misses":
[info]   16.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-stores":
[info]   225.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:branch-misses":
[info]   132.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:branches":
[info]   64575.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:cycles":
[info]   110502.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-loads":
[info]   61975.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-stores":
[info]   43471.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:iTLB-loads":
[info]   1.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:instructions":
[info]   312231.750 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:07:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 77190.219 ops/s
[info] # Warmup Iteration   2: 127716.867 ops/s
[info] # Warmup Iteration   3: 132407.408 ops/s
[info] # Warmup Iteration   4: 131299.501 ops/s
[info] # Warmup Iteration   5: 132779.850 ops/s
[info] Iteration   1: 132762.341 ops/s
[info] Iteration   2: 133549.324 ops/s
[info] Iteration   3: 133640.838 ops/s
[info] Iteration   4: 133888.066 ops/s
[info] Iteration   5: 133719.635 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   133512.041 ±(99.9%) 1683.440 ops/s [Average]
[info]   (min, avg, max) = (132762.341, 133512.041, 133888.066), stdev = 437.184
[info]   CI (99.9%): [131828.601, 135195.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-load-misses":
[info]   368.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-loads":
[info]   23024.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-stores":
[info]   10939.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-icache-load-misses":
[info]   6.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-load-misses":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-loads":
[info]   3.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-store-misses":
[info]   42.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-stores":
[info]   80.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:branch-misses":
[info]   15.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:branches":
[info]   28196.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:cycles":
[info]   29008.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-load-misses":
[info]   1.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-loads":
[info]   23384.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-store-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-stores":
[info]   11088.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:iTLB-load-misses":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:iTLB-loads":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:instructions":
[info]   109720.941 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:07:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 118615.214 ops/s
[info] # Warmup Iteration   2: 197873.331 ops/s
[info] # Warmup Iteration   3: 201258.021 ops/s
[info] # Warmup Iteration   4: 191319.896 ops/s
[info] # Warmup Iteration   5: 190461.564 ops/s
[info] Iteration   1: 201266.908 ops/s
[info] Iteration   2: 201503.757 ops/s
[info] Iteration   3: 201290.372 ops/s
[info] Iteration   4: 202286.323 ops/s
[info] Iteration   5: 201878.241 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   201645.120 ±(99.9%) 1672.217 ops/s [Average]
[info]   (min, avg, max) = (201266.908, 201645.120, 202286.323), stdev = 434.270
[info]   CI (99.9%): [199972.903, 203317.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   162.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   15978.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   9475.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-loads":
[info]   1.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-store-misses":
[info]   2.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-stores":
[info]   17.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:branch-misses":
[info]   11.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:branches":
[info]   16648.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:cycles":
[info]   19016.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-loads":
[info]   16178.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-stores":
[info]   9338.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:instructions":
[info]   74233.418 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:06:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 236641.969 ops/s
[info] # Warmup Iteration   2: 254268.564 ops/s
[info] # Warmup Iteration   3: 262257.331 ops/s
[info] # Warmup Iteration   4: 263087.913 ops/s
[info] # Warmup Iteration   5: 263242.225 ops/s
[info] Iteration   1: 263478.919 ops/s
[info] Iteration   2: 263343.764 ops/s
[info] Iteration   3: 263567.082 ops/s
[info] Iteration   4: 253695.426 ops/s
[info] Iteration   5: 250666.644 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   258950.367 ±(99.9%) 24151.723 ops/s [Average]
[info]   (min, avg, max) = (250666.644, 258950.367, 263567.082), stdev = 6272.126
[info]   CI (99.9%): [234798.644, 283102.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   135.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   11080.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5263.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-stores":
[info]   13.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:branch-misses":
[info]   10.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:branches":
[info]   15279.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:cycles":
[info]   14698.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-loads":
[info]   10860.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-stores":
[info]   5112.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:instructions":
[info]   60652.980 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:06:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23264.044 ops/s
[info] # Warmup Iteration   2: 69099.877 ops/s
[info] # Warmup Iteration   3: 68980.977 ops/s
[info] # Warmup Iteration   4: 70135.040 ops/s
[info] # Warmup Iteration   5: 70179.689 ops/s
[info] Iteration   1: 70346.700 ops/s
[info] Iteration   2: 70310.911 ops/s
[info] Iteration   3: 70272.858 ops/s
[info] Iteration   4: 69358.900 ops/s
[info] Iteration   5: 68050.567 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   69667.987 ±(99.9%) 3827.207 ops/s [Average]
[info]   (min, avg, max) = (68050.567, 69667.987, 70346.700), stdev = 993.913
[info]   CI (99.9%): [65840.780, 73495.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1639.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-loads":
[info]   46169.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-stores":
[info]   30489.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   76.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-load-misses":
[info]   2.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-loads":
[info]   9.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-store-misses":
[info]   41.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-stores":
[info]   245.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:branch-misses":
[info]   47.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:branches":
[info]   37343.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:cycles":
[info]   54540.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-loads":
[info]   46062.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-stores":
[info]   30638.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-loads":
[info]   0.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:instructions":
[info]   180648.150 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:06:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 120388.610 ops/s
[info] # Warmup Iteration   2: 177943.629 ops/s
[info] # Warmup Iteration   3: 180044.843 ops/s
[info] # Warmup Iteration   4: 181380.743 ops/s
[info] # Warmup Iteration   5: 181855.449 ops/s
[info] Iteration   1: 181003.897 ops/s
[info] Iteration   2: 180566.296 ops/s
[info] Iteration   3: 180984.022 ops/s
[info] Iteration   4: 181835.160 ops/s
[info] Iteration   5: 181904.613 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   181258.797 ±(99.9%) 2252.960 ops/s [Average]
[info]   (min, avg, max) = (180566.296, 181258.797, 181904.613), stdev = 585.087
[info]   CI (99.9%): [179005.837, 183511.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:CPI":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   172.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-loads":
[info]   15380.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-stores":
[info]   9646.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-load-misses":
[info]   0.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-loads":
[info]   1.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-store-misses":
[info]   86.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-stores":
[info]   118.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:branch-misses":
[info]   13.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:branches":
[info]   24197.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:cycles":
[info]   21406.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-loads":
[info]   14829.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-stores":
[info]   9295.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-loads":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:instructions":
[info]   83953.639 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:06:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 411130.786 ops/s
[info] # Warmup Iteration   2: 718390.226 ops/s
[info] # Warmup Iteration   3: 718717.172 ops/s
[info] # Warmup Iteration   4: 716935.222 ops/s
[info] # Warmup Iteration   5: 716170.342 ops/s
[info] Iteration   1: 723739.006 ops/s
[info] Iteration   2: 718044.891 ops/s
[info] Iteration   3: 723447.659 ops/s
[info] Iteration   4: 719351.553 ops/s
[info] Iteration   5: 717032.840 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   720323.190 ±(99.9%) 11929.421 ops/s [Average]
[info]   (min, avg, max) = (717032.840, 720323.190, 723739.006), stdev = 3098.033
[info]   CI (99.9%): [708393.769, 732252.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:CPI":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   26.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   4741.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2889.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   9.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-stores":
[info]   16.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:branch-misses":
[info]   2.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:branches":
[info]   4265.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:cycles":
[info]   5328.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-loads":
[info]   4555.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2833.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:instructions":
[info]   19879.130 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:06:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 613898.707 ops/s
[info] # Warmup Iteration   2: 669335.506 ops/s
[info] # Warmup Iteration   3: 688452.765 ops/s
[info] # Warmup Iteration   4: 686171.164 ops/s
[info] # Warmup Iteration   5: 686538.811 ops/s
[info] Iteration   1: 682898.905 ops/s
[info] Iteration   2: 666743.610 ops/s
[info] Iteration   3: 666181.189 ops/s
[info] Iteration   4: 688105.206 ops/s
[info] Iteration   5: 685641.834 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   677914.149 ±(99.9%) 40881.519 ops/s [Average]
[info]   (min, avg, max) = (666181.189, 677914.149, 688105.206), stdev = 10616.801
[info]   CI (99.9%): [637032.630, 718795.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:CPI":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   19.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2768.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1941.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   10.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-stores":
[info]   14.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branch-misses":
[info]   2.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branches":
[info]   7557.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:cycles":
[info]   5546.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2739.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1927.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:instructions":
[info]   24059.239 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:05:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 723657.271 ops/s
[info] # Warmup Iteration   2: 779113.086 ops/s
[info] # Warmup Iteration   3: 790293.771 ops/s
[info] # Warmup Iteration   4: 792223.829 ops/s
[info] # Warmup Iteration   5: 792782.224 ops/s
[info] Iteration   1: 792918.152 ops/s
[info] Iteration   2: 792581.081 ops/s
[info] Iteration   3: 786604.027 ops/s
[info] Iteration   4: 793497.019 ops/s
[info] Iteration   5: 793540.167 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   791828.089 ±(99.9%) 11351.663 ops/s [Average]
[info]   (min, avg, max) = (786604.027, 791828.089, 793540.167), stdev = 2947.991
[info]   CI (99.9%): [780476.426, 803179.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2699.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1736.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   7362.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4796.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2703.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1742.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   23473.869 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:05:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 194616.295 ops/s
[info] # Warmup Iteration   2: 400233.722 ops/s
[info] # Warmup Iteration   3: 402297.182 ops/s
[info] # Warmup Iteration   4: 405148.014 ops/s
[info] # Warmup Iteration   5: 404885.848 ops/s
[info] Iteration   1: 418447.580 ops/s
[info] Iteration   2: 420977.731 ops/s
[info] Iteration   3: 417783.020 ops/s
[info] Iteration   4: 420289.071 ops/s
[info] Iteration   5: 421847.110 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   419868.902 ±(99.9%) 6582.915 ops/s [Average]
[info]   (min, avg, max) = (417783.020, 419868.902, 421847.110), stdev = 1709.562
[info]   CI (99.9%): [413285.987, 426451.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   69.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-loads":
[info]   6948.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-stores":
[info]   4275.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.532 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-loads":
[info]   0.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-store-misses":
[info]   15.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-stores":
[info]   31.947 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:branch-misses":
[info]   4.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:branches":
[info]   9036.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:cycles":
[info]   9072.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-loads":
[info]   7093.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-stores":
[info]   4370.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-loads":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:instructions":
[info]   35488.122 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:05:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5705.612 ops/s
[info] # Warmup Iteration   2: 10379.154 ops/s
[info] # Warmup Iteration   3: 10780.878 ops/s
[info] # Warmup Iteration   4: 10770.710 ops/s
[info] # Warmup Iteration   5: 10759.180 ops/s
[info] Iteration   1: 10794.754 ops/s
[info] Iteration   2: 10599.270 ops/s
[info] Iteration   3: 10734.035 ops/s
[info] Iteration   4: 10753.459 ops/s
[info] Iteration   5: 10710.524 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   10718.409 ±(99.9%) 282.684 ops/s [Average]
[info]   (min, avg, max) = (10599.270, 10718.409, 10794.754), stdev = 73.412
[info]   CI (99.9%): [10435.724, 11001.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   4166.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-loads":
[info]   308873.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-stores":
[info]   161048.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   6178.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-load-misses":
[info]   14.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-loads":
[info]   179.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-store-misses":
[info]   108.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-stores":
[info]   709.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:branch-misses":
[info]   394.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:branches":
[info]   230713.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:cycles":
[info]   373633.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-load-misses":
[info]   11.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-loads":
[info]   302991.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-store-misses":
[info]   1.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-stores":
[info]   154446.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-load-misses":
[info]   9.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-loads":
[info]   39.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:instructions":
[info]   1134668.833 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:05:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5421.488 ops/s
[info] # Warmup Iteration   2: 10752.550 ops/s
[info] # Warmup Iteration   3: 10573.758 ops/s
[info] # Warmup Iteration   4: 10500.738 ops/s
[info] # Warmup Iteration   5: 10563.103 ops/s
[info] Iteration   1: 10517.864 ops/s
[info] Iteration   2: 10464.313 ops/s
[info] Iteration   3: 10512.967 ops/s
[info] Iteration   4: 10540.997 ops/s
[info] Iteration   5: 10886.130 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   10584.454 ±(99.9%) 658.211 ops/s [Average]
[info]   (min, avg, max) = (10464.313, 10584.454, 10886.130), stdev = 170.935
[info]   CI (99.9%): [9926.244, 11242.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:CPI":
[info]   0.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   3628.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   300648.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   154833.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   715.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   6.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-loads":
[info]   114.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   97.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-stores":
[info]   563.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:branch-misses":
[info]   367.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:branches":
[info]   208154.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:cycles":
[info]   355250.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   7.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   299809.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   152000.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   7.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   44.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:instructions":
[info]   1053714.880 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:04:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 247197.891 ops/s
[info] # Warmup Iteration   2: 250748.196 ops/s
[info] # Warmup Iteration   3: 273570.772 ops/s
[info] # Warmup Iteration   4: 274202.004 ops/s
[info] # Warmup Iteration   5: 273209.451 ops/s
[info] Iteration   1: 273569.757 ops/s
[info] Iteration   2: 273401.302 ops/s
[info] Iteration   3: 272730.832 ops/s
[info] Iteration   4: 273752.378 ops/s
[info] Iteration   5: 273040.285 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   273298.911 ±(99.9%) 1586.581 ops/s [Average]
[info]   (min, avg, max) = (272730.832, 273298.911, 273752.378), stdev = 412.030
[info]   CI (99.9%): [271712.330, 274885.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:CPI":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   169.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   8315.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   6264.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   22.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branch-misses":
[info]   9.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branches":
[info]   14004.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:cycles":
[info]   14110.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   8306.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   6132.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:instructions":
[info]   55748.843 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:04:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3685.257 ops/s
[info] # Warmup Iteration   2: 7892.279 ops/s
[info] # Warmup Iteration   3: 8073.847 ops/s
[info] # Warmup Iteration   4: 8149.315 ops/s
[info] # Warmup Iteration   5: 8190.056 ops/s
[info] Iteration   1: 8551.708 ops/s
[info] Iteration   2: 8499.906 ops/s
[info] Iteration   3: 8577.317 ops/s
[info] Iteration   4: 8600.544 ops/s
[info] Iteration   5: 8629.486 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   8571.792 ±(99.9%) 190.177 ops/s [Average]
[info]   (min, avg, max) = (8499.906, 8571.792, 8629.486), stdev = 49.388
[info]   CI (99.9%): [8381.615, 8761.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5810.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   374081.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   214554.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   4694.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   3.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-loads":
[info]   241.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   127.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-stores":
[info]   810.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:branch-misses":
[info]   457.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:branches":
[info]   249621.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:cycles":
[info]   446020.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   128.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-loads":
[info]   386614.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-stores":
[info]   214107.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   2.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-loads":
[info]   6.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:instructions":
[info]   1332018.577 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 01:04:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 14025.309 ops/s
[info] # Warmup Iteration   2: 24294.897 ops/s
[info] # Warmup Iteration   3: 24126.905 ops/s
[info] # Warmup Iteration   4: 24128.768 ops/s
[info] # Warmup Iteration   5: 24057.476 ops/s
[info] Iteration   1: 24078.591 ops/s
[info] Iteration   2: 23556.654 ops/s
[info] Iteration   3: 24134.451 ops/s
[info] Iteration   4: 24171.712 ops/s
[info] Iteration   5: 24201.859 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   24028.654 ±(99.9%) 1031.326 ops/s [Average]
[info]   (min, avg, max) = (23556.654, 24028.654, 24201.859), stdev = 267.832
[info]   CI (99.9%): [22997.328, 25059.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2269.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   122352.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   60637.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   10.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-load-misses":
[info]   1.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-loads":
[info]   15.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-store-misses":
[info]   194.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-stores":
[info]   420.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:branch-misses":
[info]   325.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:branches":
[info]   130862.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:cycles":
[info]   160415.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   48.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-loads":
[info]   123334.777 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   1.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-stores":
[info]   60036.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   1.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-loads":
[info]   3.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:instructions":
[info]   531754.356 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 01:04:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 19082.393 ops/s
[info] # Warmup Iteration   2: 30150.324 ops/s
[info] # Warmup Iteration   3: 28403.202 ops/s
[info] # Warmup Iteration   4: 28394.346 ops/s
[info] # Warmup Iteration   5: 29955.364 ops/s
[info] Iteration   1: 29891.662 ops/s
[info] Iteration   2: 29906.179 ops/s
[info] Iteration   3: 29677.782 ops/s
[info] Iteration   4: 28429.961 ops/s
[info] Iteration   5: 28421.540 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   29265.425 ±(99.9%) 2972.063 ops/s [Average]
[info]   (min, avg, max) = (28421.540, 29265.425, 29906.179), stdev = 771.835
[info]   CI (99.9%): [26293.361, 32237.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:CPI":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1363.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   103581.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   48813.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   6.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   8.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   78.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   197.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branch-misses":
[info]   306.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branches":
[info]   90171.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:cycles":
[info]   128948.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   68.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   104993.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   48405.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   1.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:instructions":
[info]   413311.086 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 01:03:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 368496.386 ops/s
[info] # Warmup Iteration   2: 390988.251 ops/s
[info] # Warmup Iteration   3: 405484.086 ops/s
[info] # Warmup Iteration   4: 406814.534 ops/s
[info] # Warmup Iteration   5: 407538.886 ops/s
[info] Iteration   1: 395956.951 ops/s
[info] Iteration   2: 392462.464 ops/s
[info] Iteration   3: 390942.718 ops/s
[info] Iteration   4: 391801.455 ops/s
[info] Iteration   5: 390533.702 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   392339.458 ±(99.9%) 8304.026 ops/s [Average]
[info]   (min, avg, max) = (390533.702, 392339.458, 395956.951), stdev = 2156.529
[info]   CI (99.9%): [384035.432, 400643.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   49.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   8073.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   7594.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   35.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   46.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branches":
[info]   5721.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:cycles":
[info]   9556.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   7941.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   7350.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:instructions":
[info]   34540.350 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 01:03:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 402334.182 ops/s
[info] # Warmup Iteration   2: 431397.948 ops/s
[info] # Warmup Iteration   3: 437567.918 ops/s
[info] # Warmup Iteration   4: 438693.359 ops/s
[info] # Warmup Iteration   5: 439900.842 ops/s
[info] Iteration   1: 440038.717 ops/s
[info] Iteration   2: 440774.540 ops/s
[info] Iteration   3: 440736.710 ops/s
[info] Iteration   4: 441167.217 ops/s
[info] Iteration   5: 441556.925 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   440854.822 ±(99.9%) 2175.667 ops/s [Average]
[info]   (min, avg, max) = (440038.717, 440854.822, 441556.925), stdev = 565.014
[info]   CI (99.9%): [438679.155, 443030.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   4.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   7816.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   6998.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5207.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   8702.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   7823.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   6999.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   32594.071 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 01:03:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17913.697 ops/s
[info] # Warmup Iteration   2: 27975.868 ops/s
[info] # Warmup Iteration   3: 27957.491 ops/s
[info] # Warmup Iteration   4: 27866.837 ops/s
[info] # Warmup Iteration   5: 27877.778 ops/s
[info] Iteration   1: 27880.943 ops/s
[info] Iteration   2: 26692.780 ops/s
[info] Iteration   3: 27990.509 ops/s
[info] Iteration   4: 27956.406 ops/s
[info] Iteration   5: 28119.307 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   27727.989 ±(99.9%) 2252.934 ops/s [Average]
[info]   (min, avg, max) = (26692.780, 27727.989, 28119.307), stdev = 585.080
[info]   CI (99.9%): [25475.055, 29980.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:CPI":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2021.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   116134.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   52097.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   17.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   1.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-loads":
[info]   10.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   82.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-stores":
[info]   270.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:branch-misses":
[info]   300.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:branches":
[info]   97397.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:cycles":
[info]   137887.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   83.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-loads":
[info]   114614.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-stores":
[info]   49946.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-loads":
[info]   2.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:instructions":
[info]   450833.956 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 01:03:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 18284.943 ops/s
[info] # Warmup Iteration   2: 30207.906 ops/s
[info] # Warmup Iteration   3: 30561.513 ops/s
[info] # Warmup Iteration   4: 29879.057 ops/s
[info] # Warmup Iteration   5: 29871.051 ops/s
[info] Iteration   1: 32022.164 ops/s
[info] Iteration   2: 32130.920 ops/s
[info] Iteration   3: 32113.975 ops/s
[info] Iteration   4: 32118.468 ops/s
[info] Iteration   5: 30866.336 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   31850.373 ±(99.9%) 2124.764 ops/s [Average]
[info]   (min, avg, max) = (30866.336, 31850.373, 32130.920), stdev = 551.794
[info]   CI (99.9%): [29725.609, 33975.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-load-misses":
[info]   1672.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-loads":
[info]   99811.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-stores":
[info]   52380.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-icache-load-misses":
[info]   76.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-load-misses":
[info]   0.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-loads":
[info]   12.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-store-misses":
[info]   59.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-stores":
[info]   246.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:branch-misses":
[info]   57.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:branches":
[info]   86475.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:cycles":
[info]   119184.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-load-misses":
[info]   2.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-loads":
[info]   100528.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-store-misses":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-stores":
[info]   51642.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:iTLB-load-misses":
[info]   0.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:iTLB-loads":
[info]   0.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:instructions":
[info]   387728.495 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 01:03:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13311.393 ops/s
[info] # Warmup Iteration   2: 34263.235 ops/s
[info] # Warmup Iteration   3: 33990.495 ops/s
[info] # Warmup Iteration   4: 34117.339 ops/s
[info] # Warmup Iteration   5: 34445.029 ops/s
[info] Iteration   1: 34323.286 ops/s
[info] Iteration   2: 34119.250 ops/s
[info] Iteration   3: 32362.009 ops/s
[info] Iteration   4: 32379.845 ops/s
[info] Iteration   5: 34433.272 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   33523.532 ±(99.9%) 4074.806 ops/s [Average]
[info]   (min, avg, max) = (32362.009, 33523.532, 34433.272), stdev = 1058.214
[info]   CI (99.9%): [29448.727, 37598.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1416.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   92921.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   51171.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   120.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-loads":
[info]   12.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-store-misses":
[info]   12.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-stores":
[info]   173.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:branch-misses":
[info]   48.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:branches":
[info]   75828.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:cycles":
[info]   113016.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-loads":
[info]   94797.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-stores":
[info]   50456.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-loads":
[info]   1.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:instructions":
[info]   355789.409 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 01:02:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 426991.739 ops/s
[info] # Warmup Iteration   2: 457922.013 ops/s
[info] # Warmup Iteration   3: 468404.339 ops/s
[info] # Warmup Iteration   4: 462290.241 ops/s
[info] # Warmup Iteration   5: 451196.940 ops/s
[info] Iteration   1: 466543.232 ops/s
[info] Iteration   2: 468985.329 ops/s
[info] Iteration   3: 448456.867 ops/s
[info] Iteration   4: 468501.207 ops/s
[info] Iteration   5: 469193.756 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   464336.078 ±(99.9%) 34418.690 ops/s [Average]
[info]   (min, avg, max) = (448456.867, 464336.078, 469193.756), stdev = 8938.425
[info]   CI (99.9%): [429917.388, 498754.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:CPI":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   68.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   5730.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   3196.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-stores":
[info]   11.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:branch-misses":
[info]   10.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:branches":
[info]   8879.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:cycles":
[info]   8247.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-loads":
[info]   5730.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-stores":
[info]   3122.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:instructions":
[info]   35404.983 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 01:02:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8084.896 ops/s
[info] # Warmup Iteration   2: 18546.491 ops/s
[info] # Warmup Iteration   3: 17743.839 ops/s
[info] # Warmup Iteration   4: 17649.104 ops/s
[info] # Warmup Iteration   5: 18300.764 ops/s
[info] Iteration   1: 18268.851 ops/s
[info] Iteration   2: 17630.788 ops/s
[info] Iteration   3: 17753.455 ops/s
[info] Iteration   4: 17798.812 ops/s
[info] Iteration   5: 18602.153 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   18010.812 ±(99.9%) 1578.133 ops/s [Average]
[info]   (min, avg, max) = (17630.788, 18010.812, 18602.153), stdev = 409.836
[info]   CI (99.9%): [16432.679, 19588.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:CPI":
[info]   0.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3427.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-loads":
[info]   172339.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-stores":
[info]   97690.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   546.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-load-misses":
[info]   3.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-loads":
[info]   93.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-store-misses":
[info]   33.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-stores":
[info]   276.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:branch-misses":
[info]   115.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:branches":
[info]   126408.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:cycles":
[info]   210644.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-loads":
[info]   171731.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-stores":
[info]   96209.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-load-misses":
[info]   2.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-loads":
[info]   13.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:instructions":
[info]   618324.580 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 01:02:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 36401.059 ops/s
[info] # Warmup Iteration   2: 54291.623 ops/s
[info] # Warmup Iteration   3: 53319.989 ops/s
[info] # Warmup Iteration   4: 52528.324 ops/s
[info] # Warmup Iteration   5: 52384.097 ops/s
[info] Iteration   1: 52445.731 ops/s
[info] Iteration   2: 53640.644 ops/s
[info] Iteration   3: 52762.759 ops/s
[info] Iteration   4: 51673.803 ops/s
[info] Iteration   5: 52313.899 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   52567.367 ±(99.9%) 2768.449 ops/s [Average]
[info]   (min, avg, max) = (51673.803, 52567.367, 53640.644), stdev = 718.958
[info]   CI (99.9%): [49798.918, 55335.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:CPI":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1345.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-loads":
[info]   54996.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-stores":
[info]   31409.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-icache-load-misses":
[info]   11.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-load-misses":
[info]   1.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-loads":
[info]   6.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-store-misses":
[info]   130.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-stores":
[info]   224.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:branch-misses":
[info]   37.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:branches":
[info]   62947.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:cycles":
[info]   72135.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-load-misses":
[info]   5.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-loads":
[info]   56692.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-stores":
[info]   31380.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:iTLB-loads":
[info]   0.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:instructions":
[info]   257645.227 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 01:02:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 83092.203 ops/s
[info] # Warmup Iteration   2: 128921.995 ops/s
[info] # Warmup Iteration   3: 131217.960 ops/s
[info] # Warmup Iteration   4: 131223.831 ops/s
[info] # Warmup Iteration   5: 131601.714 ops/s
[info] Iteration   1: 131759.921 ops/s
[info] Iteration   2: 131751.758 ops/s
[info] Iteration   3: 131057.248 ops/s
[info] Iteration   4: 131687.512 ops/s
[info] Iteration   5: 131418.528 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   131534.993 ±(99.9%) 1159.430 ops/s [Average]
[info]   (min, avg, max) = (131057.248, 131534.993, 131759.921), stdev = 301.100
[info]   CI (99.9%): [130375.563, 132694.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:CPI":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   278.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   22187.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   13400.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-loads":
[info]   1.674 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   16.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-stores":
[info]   41.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:branch-misses":
[info]   16.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:branches":
[info]   23836.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:cycles":
[info]   28816.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-loads":
[info]   22710.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-stores":
[info]   13396.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:instructions":
[info]   110234.399 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 01:01:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1051794.965 ops/s
[info] # Warmup Iteration   2: 1116340.771 ops/s
[info] # Warmup Iteration   3: 1187586.874 ops/s
[info] # Warmup Iteration   4: 1157198.578 ops/s
[info] # Warmup Iteration   5: 1174330.913 ops/s
[info] Iteration   1: 1174472.541 ops/s
[info] Iteration   2: 1182777.717 ops/s
[info] Iteration   3: 1180445.684 ops/s
[info] Iteration   4: 1161499.319 ops/s
[info] Iteration   5: 1163984.846 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   1172636.021 ±(99.9%) 36837.935 ops/s [Average]
[info]   (min, avg, max) = (1161499.319, 1172636.021, 1182777.717), stdev = 9566.695
[info]   CI (99.9%): [1135798.086, 1209473.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:CPI":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   27.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1433.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2269.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   19.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-stores":
[info]   22.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:branches":
[info]   3128.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:cycles":
[info]   3286.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1391.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2199.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:instructions":
[info]   14429.884 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 01:01:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1257428.725 ops/s
[info] # Warmup Iteration   2: 1355290.259 ops/s
[info] # Warmup Iteration   3: 1365791.749 ops/s
[info] # Warmup Iteration   4: 1365652.384 ops/s
[info] # Warmup Iteration   5: 1369510.399 ops/s
[info] Iteration   1: 1374240.912 ops/s
[info] Iteration   2: 1375517.381 ops/s
[info] Iteration   3: 1376826.196 ops/s
[info] Iteration   4: 1379355.580 ops/s
[info] Iteration   5: 1379719.724 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   1377131.958 ±(99.9%) 9173.008 ops/s [Average]
[info]   (min, avg, max) = (1374240.912, 1377131.958, 1379719.724), stdev = 2382.201
[info]   CI (99.9%): [1367958.951, 1386304.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1364.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1985.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2867.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2769.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1363.647 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1975.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   13373.076 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 01:01:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 45842.037 ops/s
[info] # Warmup Iteration   2: 64080.104 ops/s
[info] # Warmup Iteration   3: 67512.217 ops/s
[info] # Warmup Iteration   4: 68600.879 ops/s
[info] # Warmup Iteration   5: 64784.430 ops/s
[info] Iteration   1: 65616.688 ops/s
[info] Iteration   2: 68305.101 ops/s
[info] Iteration   3: 68294.035 ops/s
[info] Iteration   4: 68360.871 ops/s
[info] Iteration   5: 68705.796 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   67856.498 ±(99.9%) 4865.060 ops/s [Average]
[info]   (min, avg, max) = (65616.688, 67856.498, 68705.796), stdev = 1263.441
[info]   CI (99.9%): [62991.438, 72721.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:CPI":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1230.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-loads":
[info]   51943.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-stores":
[info]   27568.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   3.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-load-misses":
[info]   1.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-loads":
[info]   4.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-store-misses":
[info]   28.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-stores":
[info]   93.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:branch-misses":
[info]   19.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:branches":
[info]   43874.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:cycles":
[info]   55795.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-loads":
[info]   52867.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-stores":
[info]   27160.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-loads":
[info]   0.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:instructions":
[info]   208240.213 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 01:01:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9282.945 ops/s
[info] # Warmup Iteration   2: 16567.678 ops/s
[info] # Warmup Iteration   3: 16522.349 ops/s
[info] # Warmup Iteration   4: 16797.185 ops/s
[info] # Warmup Iteration   5: 16250.245 ops/s
[info] Iteration   1: 16707.934 ops/s
[info] Iteration   2: 16689.791 ops/s
[info] Iteration   3: 16733.856 ops/s
[info] Iteration   4: 16827.369 ops/s
[info] Iteration   5: 16387.040 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   16669.198 ±(99.9%) 640.692 ops/s [Average]
[info]   (min, avg, max) = (16387.040, 16669.198, 16827.369), stdev = 166.386
[info]   CI (99.9%): [16028.506, 17309.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:CPI":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   2701.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-loads":
[info]   186129.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-stores":
[info]   100185.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   1998.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-load-misses":
[info]   4.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-loads":
[info]   53.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-store-misses":
[info]   62.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-stores":
[info]   359.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:branch-misses":
[info]   76.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:branches":
[info]   141775.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:cycles":
[info]   233276.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-load-misses":
[info]   3.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-loads":
[info]   189784.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-store-misses":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-stores":
[info]   99302.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:iTLB-load-misses":
[info]   2.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:iTLB-loads":
[info]   10.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:instructions":
[info]   689901.948 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 01:00:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8604.281 ops/s
[info] # Warmup Iteration   2: 17477.271 ops/s
[info] # Warmup Iteration   3: 17933.644 ops/s
[info] # Warmup Iteration   4: 17984.885 ops/s
[info] # Warmup Iteration   5: 17994.303 ops/s
[info] Iteration   1: 17834.760 ops/s
[info] Iteration   2: 16908.580 ops/s
[info] Iteration   3: 18087.773 ops/s
[info] Iteration   4: 18117.809 ops/s
[info] Iteration   5: 18095.303 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   17808.845 ±(99.9%) 1988.278 ops/s [Average]
[info]   (min, avg, max) = (16908.580, 17808.845, 18117.809), stdev = 516.349
[info]   CI (99.9%): [15820.567, 19797.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:CPI":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   2559.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   181436.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   99641.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   294.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   5.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-loads":
[info]   55.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   25.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-stores":
[info]   253.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:branch-misses":
[info]   57.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:branches":
[info]   128268.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:cycles":
[info]   216006.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   4.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   178718.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   97098.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   3.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   16.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:instructions":
[info]   635829.747 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 01:00:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 564010.351 ops/s
[info] # Warmup Iteration   2: 604007.692 ops/s
[info] # Warmup Iteration   3: 612485.731 ops/s
[info] # Warmup Iteration   4: 593768.641 ops/s
[info] # Warmup Iteration   5: 597504.653 ops/s
[info] Iteration   1: 613796.781 ops/s
[info] Iteration   2: 605760.343 ops/s
[info] Iteration   3: 612048.393 ops/s
[info] Iteration   4: 595510.690 ops/s
[info] Iteration   5: 611627.883 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   607748.818 ±(99.9%) 28805.105 ops/s [Average]
[info]   (min, avg, max) = (595510.690, 607748.818, 613796.781), stdev = 7480.594
[info]   CI (99.9%): [578943.713, 636553.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   66.863 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   4725.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2569.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   10.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:branch-misses":
[info]   3.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:branches":
[info]   6755.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:cycles":
[info]   6283.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   4584.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   2468.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:instructions":
[info]   27131.415 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 01:00:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4149.406 ops/s
[info] # Warmup Iteration   2: 12043.109 ops/s
[info] # Warmup Iteration   3: 12519.580 ops/s
[info] # Warmup Iteration   4: 12521.432 ops/s
[info] # Warmup Iteration   5: 12434.604 ops/s
[info] Iteration   1: 12446.764 ops/s
[info] Iteration   2: 12454.371 ops/s
[info] Iteration   3: 12488.123 ops/s
[info] Iteration   4: 12444.588 ops/s
[info] Iteration   5: 12527.117 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   12472.193 ±(99.9%) 136.096 ops/s [Average]
[info]   (min, avg, max) = (12444.588, 12472.193, 12527.117), stdev = 35.344
[info]   CI (99.9%): [12336.096, 12608.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:CPI":
[info]   0.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   4529.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   252510.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   147139.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   2230.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   10.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-loads":
[info]   194.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   139.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-stores":
[info]   646.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:branch-misses":
[info]   167.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:branches":
[info]   172510.694 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:cycles":
[info]   314815.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-loads":
[info]   261874.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-stores":
[info]   145951.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   4.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-loads":
[info]   30.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:instructions":
[info]   907189.111 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 01:00:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 28930.731 ops/s
[info] # Warmup Iteration   2: 44080.085 ops/s
[info] # Warmup Iteration   3: 43726.583 ops/s
[info] # Warmup Iteration   4: 44245.559 ops/s
[info] # Warmup Iteration   5: 43237.790 ops/s
[info] Iteration   1: 42072.008 ops/s
[info] Iteration   2: 42167.427 ops/s
[info] Iteration   3: 42143.328 ops/s
[info] Iteration   4: 42277.995 ops/s
[info] Iteration   5: 43322.010 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   42396.554 ±(99.9%) 2012.378 ops/s [Average]
[info]   (min, avg, max) = (42072.008, 42396.554, 43322.010), stdev = 522.608
[info]   CI (99.9%): [40384.175, 44408.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:CPI":
[info]   0.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1595.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   68967.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   37648.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   10.952 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-load-misses":
[info]   0.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-loads":
[info]   5.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-store-misses":
[info]   116.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-stores":
[info]   253.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:branch-misses":
[info]   127.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:branches":
[info]   69643.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:cycles":
[info]   87111.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   5.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-loads":
[info]   68668.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-stores":
[info]   36795.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:iTLB-loads":
[info]   1.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:instructions":
[info]   294884.039 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 01:00:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 34702.140 ops/s
[info] # Warmup Iteration   2: 55101.119 ops/s
[info] # Warmup Iteration   3: 55551.881 ops/s
[info] # Warmup Iteration   4: 55825.376 ops/s
[info] # Warmup Iteration   5: 55558.353 ops/s
[info] Iteration   1: 55100.672 ops/s
[info] Iteration   2: 55736.917 ops/s
[info] Iteration   3: 55877.632 ops/s
[info] Iteration   4: 55786.234 ops/s
[info] Iteration   5: 55867.281 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   55673.747 ±(99.9%) 1253.801 ops/s [Average]
[info]   (min, avg, max) = (55100.672, 55673.747, 55877.632), stdev = 325.608
[info]   CI (99.9%): [54419.946, 56927.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:CPI":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   879.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   51501.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   27839.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   11.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   5.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   22.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   101.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:branch-misses":
[info]   111.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:branches":
[info]   46899.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:cycles":
[info]   68755.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   52712.805 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   27907.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:instructions":
[info]   218015.321 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:59:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1240389.391 ops/s
[info] # Warmup Iteration   2: 1330326.433 ops/s
[info] # Warmup Iteration   3: 1348853.123 ops/s
[info] # Warmup Iteration   4: 1330749.056 ops/s
[info] # Warmup Iteration   5: 1303526.996 ops/s
[info] Iteration   1: 1297515.374 ops/s
[info] Iteration   2: 1304564.520 ops/s
[info] Iteration   3: 1325309.297 ops/s
[info] Iteration   4: 1355193.356 ops/s
[info] Iteration   5: 1355985.660 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1327713.641 ±(99.9%) 105595.438 ops/s [Average]
[info]   (min, avg, max) = (1297515.374, 1327713.641, 1355985.660), stdev = 27422.800
[info]   CI (99.9%): [1222118.204, 1433309.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   23.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1423.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1967.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   16.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   18.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:branches":
[info]   2836.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:cycles":
[info]   2850.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1414.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1930.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:instructions":
[info]   12288.443 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:59:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1413782.605 ops/s
[info] # Warmup Iteration   2: 1547493.267 ops/s
[info] # Warmup Iteration   3: 1549182.986 ops/s
[info] # Warmup Iteration   4: 1552062.969 ops/s
[info] # Warmup Iteration   5: 1553374.373 ops/s
[info] Iteration   1: 1556056.570 ops/s
[info] Iteration   2: 1559461.277 ops/s
[info] Iteration   3: 1565613.158 ops/s
[info] Iteration   4: 1569411.683 ops/s
[info] Iteration   5: 1573443.854 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1564797.309 ±(99.9%) 27336.492 ops/s [Average]
[info]   (min, avg, max) = (1556056.570, 1564797.309, 1573443.854), stdev = 7099.200
[info]   CI (99.9%): [1537460.817, 1592133.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1365.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1717.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2609.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2432.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1357.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1725.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   11445.763 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:59:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2631.403 ops/s
[info] # Warmup Iteration   2: 3774.732 ops/s
[info] # Warmup Iteration   3: 3736.725 ops/s
[info] # Warmup Iteration   4: 3771.676 ops/s
[info] # Warmup Iteration   5: 3762.428 ops/s
[info] Iteration   1: 3783.386 ops/s
[info] Iteration   2: 3642.455 ops/s
[info] Iteration   3: 3629.446 ops/s
[info] Iteration   4: 3620.447 ops/s
[info] Iteration   5: 3785.314 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3692.210 ±(99.9%) 325.295 ops/s [Average]
[info]   (min, avg, max) = (3620.447, 3692.210, 3785.314), stdev = 84.478
[info]   CI (99.9%): [3366.914, 4017.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:CPI":
[info]   0.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   51964.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   866444.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   372877.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   2007.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   30.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-loads":
[info]   496.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   213.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-stores":
[info]   621.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:branch-misses":
[info]   1180.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:branches":
[info]   452342.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:cycles":
[info]   1016788.906 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   130.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-loads":
[info]   837689.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   4.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-stores":
[info]   363299.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   31.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-loads":
[info]   88.851 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:instructions":
[info]   2465509.212 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:59:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 83511.306 ops/s
[info] # Warmup Iteration   2: 122389.037 ops/s
[info] # Warmup Iteration   3: 124113.301 ops/s
[info] # Warmup Iteration   4: 124579.744 ops/s
[info] # Warmup Iteration   5: 124752.830 ops/s
[info] Iteration   1: 124888.137 ops/s
[info] Iteration   2: 125031.201 ops/s
[info] Iteration   3: 124504.759 ops/s
[info] Iteration   4: 123983.007 ops/s
[info] Iteration   5: 125131.760 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   124707.773 ±(99.9%) 1809.600 ops/s [Average]
[info]   (min, avg, max) = (123983.007, 124707.773, 125131.760), stdev = 469.947
[info]   CI (99.9%): [122898.173, 126517.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-dcache-load-misses":
[info]   466.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-dcache-loads":
[info]   20751.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-dcache-stores":
[info]   10235.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-icache-load-misses":
[info]   1.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-load-misses":
[info]   0.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-loads":
[info]   3.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-store-misses":
[info]   50.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-stores":
[info]   110.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:branch-misses":
[info]   19.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:branches":
[info]   30085.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:cycles":
[info]   30746.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-load-misses":
[info]   1.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-loads":
[info]   20844.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-store-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-stores":
[info]   10147.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:iTLB-load-misses":
[info]   0.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:iTLB-loads":
[info]   0.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:instructions":
[info]   124032.890 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:58:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.910 ops/s
[info] # Warmup Iteration   2: 347144.239 ops/s
[info] # Warmup Iteration   3: 375339.491 ops/s
[info] # Warmup Iteration   4: 376485.046 ops/s
[info] # Warmup Iteration   5: 366497.686 ops/s
[info] Iteration   1: 377837.322 ops/s
[info] Iteration   2: 382284.136 ops/s
[info] Iteration   3: 380853.262 ops/s
[info] Iteration   4: 382998.446 ops/s
[info] Iteration   5: 383173.472 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   381429.328 ±(99.9%) 8495.280 ops/s [Average]
[info]   (min, avg, max) = (377837.322, 381429.328, 383173.472), stdev = 2206.197
[info]   CI (99.9%): [372934.048, 389924.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:CPI":
[info]   0.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   54.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   5325.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   3095.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   14.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-stores":
[info]   27.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:branch-misses":
[info]   7.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:branches":
[info]   11778.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:cycles":
[info]   10082.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.616 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-loads":
[info]   5410.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-stores":
[info]   3094.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:instructions":
[info]   47444.188 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:58:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 162672.174 ops/s
[info] # Warmup Iteration   2: 248425.327 ops/s
[info] # Warmup Iteration   3: 254203.876 ops/s
[info] # Warmup Iteration   4: 254114.647 ops/s
[info] # Warmup Iteration   5: 244413.986 ops/s
[info] Iteration   1: 243230.402 ops/s
[info] Iteration   2: 244268.109 ops/s
[info] Iteration   3: 243769.807 ops/s
[info] Iteration   4: 243925.159 ops/s
[info] Iteration   5: 244577.563 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   243954.208 ±(99.9%) 1968.963 ops/s [Average]
[info]   (min, avg, max) = (243230.402, 243954.208, 244577.563), stdev = 511.333
[info]   CI (99.9%): [241985.245, 245923.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   58.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   11104.906 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   8240.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-loads":
[info]   0.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-store-misses":
[info]   11.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-stores":
[info]   23.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:branch-misses":
[info]   10.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:branches":
[info]   13688.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:cycles":
[info]   15053.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-loads":
[info]   10948.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-stores":
[info]   8011.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:instructions":
[info]   63110.100 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:58:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 457641.186 ops/s
[info] # Warmup Iteration   2: 487231.673 ops/s
[info] # Warmup Iteration   3: 510128.386 ops/s
[info] # Warmup Iteration   4: 512750.863 ops/s
[info] # Warmup Iteration   5: 512891.588 ops/s
[info] Iteration   1: 511699.337 ops/s
[info] Iteration   2: 512028.528 ops/s
[info] Iteration   3: 493963.789 ops/s
[info] Iteration   4: 513266.782 ops/s
[info] Iteration   5: 513818.238 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   508955.335 ±(99.9%) 32443.641 ops/s [Average]
[info]   (min, avg, max) = (493963.789, 508955.335, 513818.238), stdev = 8425.511
[info]   CI (99.9%): [476511.694, 541398.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:CPI":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   32.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   3408.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1967.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   7.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-stores":
[info]   16.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:branch-misses":
[info]   6.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:branches":
[info]   8150.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:cycles":
[info]   7389.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-loads":
[info]   3373.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-stores":
[info]   1934.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:instructions":
[info]   33748.604 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:58:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 38360.574 ops/s
[info] # Warmup Iteration   2: 73906.757 ops/s
[info] # Warmup Iteration   3: 72931.415 ops/s
[info] # Warmup Iteration   4: 74722.898 ops/s
[info] # Warmup Iteration   5: 75190.004 ops/s
[info] Iteration   1: 75458.236 ops/s
[info] Iteration   2: 72967.951 ops/s
[info] Iteration   3: 74453.504 ops/s
[info] Iteration   4: 72392.328 ops/s
[info] Iteration   5: 72517.234 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   73557.851 ±(99.9%) 5167.246 ops/s [Average]
[info]   (min, avg, max) = (72392.328, 73557.851, 75458.236), stdev = 1341.917
[info]   CI (99.9%): [68390.605, 78725.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:CPI":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1681.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-dcache-loads":
[info]   41059.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-dcache-stores":
[info]   32081.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   77.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.936 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-loads":
[info]   6.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-store-misses":
[info]   49.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-stores":
[info]   220.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:branch-misses":
[info]   51.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:branches":
[info]   32749.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:cycles":
[info]   50664.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-loads":
[info]   41503.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-stores":
[info]   31366.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:iTLB-loads":
[info]   0.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:instructions":
[info]   167036.821 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:58:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 94794.450 ops/s
[info] # Warmup Iteration   2: 132310.494 ops/s
[info] # Warmup Iteration   3: 133652.243 ops/s
[info] # Warmup Iteration   4: 133791.180 ops/s
[info] # Warmup Iteration   5: 133566.544 ops/s
[info] Iteration   1: 133542.939 ops/s
[info] Iteration   2: 131993.573 ops/s
[info] Iteration   3: 133816.253 ops/s
[info] Iteration   4: 133491.808 ops/s
[info] Iteration   5: 133768.379 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   133322.590 ±(99.9%) 2910.936 ops/s [Average]
[info]   (min, avg, max) = (131993.573, 133322.590, 133816.253), stdev = 755.961
[info]   CI (99.9%): [130411.655, 136233.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:CPI":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   232.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-dcache-loads":
[info]   13454.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-dcache-stores":
[info]   8617.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-icache-load-misses":
[info]   4.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-load-misses":
[info]   0.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-loads":
[info]   2.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-store-misses":
[info]   95.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-stores":
[info]   139.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:branch-misses":
[info]   18.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:branches":
[info]   17074.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:cycles":
[info]   28899.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-loads":
[info]   12986.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-stores":
[info]   8391.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:iTLB-loads":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:instructions":
[info]   81567.232 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:57:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.974 ops/s
[info] # Warmup Iteration   2: 202615.481 ops/s
[info] # Warmup Iteration   3: 206886.580 ops/s
[info] # Warmup Iteration   4: 204428.347 ops/s
[info] # Warmup Iteration   5: 206924.071 ops/s
[info] Iteration   1: 206878.257 ops/s
[info] Iteration   2: 205917.991 ops/s
[info] Iteration   3: 206844.709 ops/s
[info] Iteration   4: 206738.671 ops/s
[info] Iteration   5: 206462.587 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   206568.443 ±(99.9%) 1534.928 ops/s [Average]
[info]   (min, avg, max) = (205917.991, 206568.443, 206878.257), stdev = 398.616
[info]   CI (99.9%): [205033.515, 208103.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:CPI":
[info]   0.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   24.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   3557.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   3670.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-loads":
[info]   1.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   11.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-stores":
[info]   15.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:branch-misses":
[info]   3.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:branches":
[info]   3306.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:cycles":
[info]   18702.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   3509.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   3685.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:instructions":
[info]   21947.963 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:57:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 302756.203 ops/s
[info] # Warmup Iteration   2: 424694.920 ops/s
[info] # Warmup Iteration   3: 426242.623 ops/s
[info] # Warmup Iteration   4: 426003.609 ops/s
[info] # Warmup Iteration   5: 425541.500 ops/s
[info] Iteration   1: 424426.133 ops/s
[info] Iteration   2: 416907.584 ops/s
[info] Iteration   3: 415784.310 ops/s
[info] Iteration   4: 416071.326 ops/s
[info] Iteration   5: 419111.215 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   418460.113 ±(99.9%) 13789.110 ops/s [Average]
[info]   (min, avg, max) = (415784.310, 418460.113, 424426.133), stdev = 3580.988
[info]   CI (99.9%): [404671.003, 432249.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:CPI":
[info]   0.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   27.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   3614.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2799.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   9.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-stores":
[info]   16.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:branch-misses":
[info]   5.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:branches":
[info]   4435.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:cycles":
[info]   8997.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-loads":
[info]   3558.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2749.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:instructions":
[info]   22533.480 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:57:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 419030.367 ops/s
[info] # Warmup Iteration   2: 459634.538 ops/s
[info] # Warmup Iteration   3: 459190.402 ops/s
[info] # Warmup Iteration   4: 461753.869 ops/s
[info] # Warmup Iteration   5: 462842.506 ops/s
[info] Iteration   1: 458382.125 ops/s
[info] Iteration   2: 457519.394 ops/s
[info] Iteration   3: 459258.830 ops/s
[info] Iteration   4: 459035.525 ops/s
[info] Iteration   5: 460401.886 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   458919.552 ±(99.9%) 4118.184 ops/s [Average]
[info]   (min, avg, max) = (457519.394, 458919.552, 460401.886), stdev = 1069.479
[info]   CI (99.9%): [454801.368, 463037.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:CPI":
[info]   0.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   21.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3592.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2805.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   11.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-stores":
[info]   14.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:branch-misses":
[info]   6.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:branches":
[info]   4557.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:cycles":
[info]   8274.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3615.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2826.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:instructions":
[info]   23773.586 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:57:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 448882.017 ops/s
[info] # Warmup Iteration   2: 484395.514 ops/s
[info] # Warmup Iteration   3: 495025.948 ops/s
[info] # Warmup Iteration   4: 494959.479 ops/s
[info] # Warmup Iteration   5: 494687.826 ops/s
[info] Iteration   1: 494790.366 ops/s
[info] Iteration   2: 495010.086 ops/s
[info] Iteration   3: 495082.925 ops/s
[info] Iteration   4: 496355.127 ops/s
[info] Iteration   5: 495065.979 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   495260.897 ±(99.9%) 2398.021 ops/s [Average]
[info]   (min, avg, max) = (494790.366, 495260.897, 496355.127), stdev = 622.759
[info]   CI (99.9%): [492862.875, 497658.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3559.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2620.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   5.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   4320.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   7617.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3551.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2605.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   22745.868 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:56:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17825.636 ops/s
[info] # Warmup Iteration   2: 28927.867 ops/s
[info] # Warmup Iteration   3: 29014.397 ops/s
[info] # Warmup Iteration   4: 28764.262 ops/s
[info] # Warmup Iteration   5: 29044.261 ops/s
[info] Iteration   1: 29111.610 ops/s
[info] Iteration   2: 28601.931 ops/s
[info] Iteration   3: 29002.442 ops/s
[info] Iteration   4: 29084.359 ops/s
[info] Iteration   5: 29073.072 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   28974.683 ±(99.9%) 817.237 ops/s [Average]
[info]   (min, avg, max) = (28601.931, 28974.683, 29111.610), stdev = 212.234
[info]   CI (99.9%): [28157.446, 29791.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:CPI":
[info]   0.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1801.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-dcache-loads":
[info]   62736.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-dcache-stores":
[info]   44866.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   21.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-load-misses":
[info]   1.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-loads":
[info]   18.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-store-misses":
[info]   22.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-stores":
[info]   187.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:branch-misses":
[info]   126.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:branches":
[info]   77635.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:cycles":
[info]   131492.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-loads":
[info]   63322.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-stores":
[info]   44558.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:iTLB-loads":
[info]   1.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:instructions":
[info]   359145.046 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:56:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4963.458 ops/s
[info] # Warmup Iteration   2: 7976.189 ops/s
[info] # Warmup Iteration   3: 8191.515 ops/s
[info] # Warmup Iteration   4: 8205.571 ops/s
[info] # Warmup Iteration   5: 8184.849 ops/s
[info] Iteration   1: 8270.747 ops/s
[info] Iteration   2: 8504.757 ops/s
[info] Iteration   3: 8358.429 ops/s
[info] Iteration   4: 8501.989 ops/s
[info] Iteration   5: 8498.633 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8426.911 ±(99.9%) 412.568 ops/s [Average]
[info]   (min, avg, max) = (8270.747, 8426.911, 8504.757), stdev = 107.143
[info]   CI (99.9%): [8014.343, 8839.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   5043.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-loads":
[info]   367633.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-stores":
[info]   181091.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   8441.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-load-misses":
[info]   10.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-loads":
[info]   226.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-store-misses":
[info]   224.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-stores":
[info]   865.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:branch-misses":
[info]   237.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:branches":
[info]   288836.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:cycles":
[info]   464052.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-load-misses":
[info]   8.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-loads":
[info]   378499.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-store-misses":
[info]   1.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-stores":
[info]   183919.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-load-misses":
[info]   4.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-loads":
[info]   25.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:instructions":
[info]   1392309.795 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:56:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3578.946 ops/s
[info] # Warmup Iteration   2: 8057.968 ops/s
[info] # Warmup Iteration   3: 8411.596 ops/s
[info] # Warmup Iteration   4: 8089.121 ops/s
[info] # Warmup Iteration   5: 8298.451 ops/s
[info] Iteration   1: 8431.346 ops/s
[info] Iteration   2: 8418.371 ops/s
[info] Iteration   3: 8438.091 ops/s
[info] Iteration   4: 8373.290 ops/s
[info] Iteration   5: 8447.130 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   8421.645 ±(99.9%) 111.652 ops/s [Average]
[info]   (min, avg, max) = (8373.290, 8421.645, 8447.130), stdev = 28.996
[info]   CI (99.9%): [8309.994, 8533.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:CPI":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4732.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   355131.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   173994.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   9866.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   12.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-loads":
[info]   171.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   89.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-stores":
[info]   531.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branch-misses":
[info]   441.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branches":
[info]   271179.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:cycles":
[info]   464791.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   6.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   365512.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   178336.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   8.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   118.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:instructions":
[info]   1348418.166 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:56:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 154707.461 ops/s
[info] # Warmup Iteration   2: 173242.298 ops/s
[info] # Warmup Iteration   3: 178660.748 ops/s
[info] # Warmup Iteration   4: 182270.734 ops/s
[info] # Warmup Iteration   5: 185195.627 ops/s
[info] Iteration   1: 184633.193 ops/s
[info] Iteration   2: 186255.802 ops/s
[info] Iteration   3: 185680.400 ops/s
[info] Iteration   4: 186062.590 ops/s
[info] Iteration   5: 182992.193 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   185124.835 ±(99.9%) 5186.589 ops/s [Average]
[info]   (min, avg, max) = (182992.193, 185124.835, 186255.802), stdev = 1346.941
[info]   CI (99.9%): [179938.247, 190311.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:CPI":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   258.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   12877.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   9490.440 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   1.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   31.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branch-misses":
[info]   11.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branches":
[info]   19471.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:cycles":
[info]   20809.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.674 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   12378.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   9304.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:instructions":
[info]   81760.101 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:55:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3228.730 ops/s
[info] # Warmup Iteration   2: 7093.868 ops/s
[info] # Warmup Iteration   3: 7307.881 ops/s
[info] # Warmup Iteration   4: 7326.172 ops/s
[info] # Warmup Iteration   5: 7351.518 ops/s
[info] Iteration   1: 7322.638 ops/s
[info] Iteration   2: 7330.246 ops/s
[info] Iteration   3: 7333.294 ops/s
[info] Iteration   4: 7353.844 ops/s
[info] Iteration   5: 7632.058 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   7394.416 ±(99.9%) 513.472 ops/s [Average]
[info]   (min, avg, max) = (7322.638, 7394.416, 7632.058), stdev = 133.347
[info]   CI (99.9%): [6880.944, 7907.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:CPI":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   6291.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   395012.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   195420.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   15200.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   12.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-loads":
[info]   320.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   175.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-stores":
[info]   774.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:branch-misses":
[info]   443.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:branches":
[info]   288589.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:cycles":
[info]   500976.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-loads":
[info]   399992.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-stores":
[info]   198437.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   5.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-loads":
[info]   39.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:instructions":
[info]   1426414.760 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:55:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12558.973 ops/s
[info] # Warmup Iteration   2: 20019.692 ops/s
[info] # Warmup Iteration   3: 20079.877 ops/s
[info] # Warmup Iteration   4: 20161.866 ops/s
[info] # Warmup Iteration   5: 20128.786 ops/s
[info] Iteration   1: 19770.374 ops/s
[info] Iteration   2: 20037.788 ops/s
[info] Iteration   3: 19987.007 ops/s
[info] Iteration   4: 19672.367 ops/s
[info] Iteration   5: 19324.740 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   19758.455 ±(99.9%) 1099.163 ops/s [Average]
[info]   (min, avg, max) = (19324.740, 19758.455, 20037.788), stdev = 285.449
[info]   CI (99.9%): [18659.292, 20857.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:CPI":
[info]   0.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2579.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   134093.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   64826.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   66.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-load-misses":
[info]   1.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-loads":
[info]   17.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-store-misses":
[info]   231.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-stores":
[info]   484.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:branch-misses":
[info]   366.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:branches":
[info]   154826.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:cycles":
[info]   193771.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   72.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-loads":
[info]   137886.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   2.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-stores":
[info]   64848.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   2.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-loads":
[info]   7.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:instructions":
[info]   618166.374 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:55:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13176.142 ops/s
[info] # Warmup Iteration   2: 24265.261 ops/s
[info] # Warmup Iteration   3: 24344.947 ops/s
[info] # Warmup Iteration   4: 24485.786 ops/s
[info] # Warmup Iteration   5: 24528.386 ops/s
[info] Iteration   1: 24521.358 ops/s
[info] Iteration   2: 23898.765 ops/s
[info] Iteration   3: 23938.248 ops/s
[info] Iteration   4: 24416.065 ops/s
[info] Iteration   5: 24432.856 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   24241.458 ±(99.9%) 1146.884 ops/s [Average]
[info]   (min, avg, max) = (23898.765, 24241.458, 24521.358), stdev = 297.842
[info]   CI (99.9%): [23094.574, 25388.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:CPI":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1543.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   123007.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   54265.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   11.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   13.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   106.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   222.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branch-misses":
[info]   293.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branches":
[info]   110925.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:cycles":
[info]   157154.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   45.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   123940.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   52717.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   1.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:instructions":
[info]   503938.257 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:55:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 281586.230 ops/s
[info] # Warmup Iteration   2: 317530.525 ops/s
[info] # Warmup Iteration   3: 331299.113 ops/s
[info] # Warmup Iteration   4: 329653.361 ops/s
[info] # Warmup Iteration   5: 329315.111 ops/s
[info] Iteration   1: 327616.137 ops/s
[info] Iteration   2: 328322.490 ops/s
[info] Iteration   3: 331465.032 ops/s
[info] Iteration   4: 274092.586 ops/s
[info] Iteration   5: 331198.759 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   318539.001 ±(99.9%) 95898.558 ops/s [Average]
[info]   (min, avg, max) = (274092.586, 318539.001, 331465.032), stdev = 24904.551
[info]   CI (99.9%): [222640.443, 414437.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   79.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   9267.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   9374.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   40.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   59.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branches":
[info]   7100.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:cycles":
[info]   11993.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   9056.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   9187.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:instructions":
[info]   44094.680 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:55:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 328731.793 ops/s
[info] # Warmup Iteration   2: 355370.217 ops/s
[info] # Warmup Iteration   3: 359079.935 ops/s
[info] # Warmup Iteration   4: 359158.039 ops/s
[info] # Warmup Iteration   5: 359254.377 ops/s
[info] Iteration   1: 359156.186 ops/s
[info] Iteration   2: 359884.789 ops/s
[info] Iteration   3: 360213.018 ops/s
[info] Iteration   4: 360506.269 ops/s
[info] Iteration   5: 366056.561 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   361163.365 ±(99.9%) 10709.675 ops/s [Average]
[info]   (min, avg, max) = (359156.186, 361163.365, 366056.561), stdev = 2781.269
[info]   CI (99.9%): [350453.690, 371873.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   49.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   9123.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   8784.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   6583.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   10502.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   9074.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   8784.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   41976.206 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:54:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15537.267 ops/s
[info] # Warmup Iteration   2: 23066.981 ops/s
[info] # Warmup Iteration   3: 23411.771 ops/s
[info] # Warmup Iteration   4: 23548.581 ops/s
[info] # Warmup Iteration   5: 22783.479 ops/s
[info] Iteration   1: 23368.103 ops/s
[info] Iteration   2: 23512.530 ops/s
[info] Iteration   3: 23430.244 ops/s
[info] Iteration   4: 23448.998 ops/s
[info] Iteration   5: 22558.144 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   23263.604 ±(99.9%) 1531.445 ops/s [Average]
[info]   (min, avg, max) = (22558.144, 23263.604, 23512.530), stdev = 397.711
[info]   CI (99.9%): [21732.159, 24795.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:CPI":
[info]   0.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2276.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   130336.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   58875.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   40.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   2.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-loads":
[info]   19.616 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   94.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-stores":
[info]   286.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:branch-misses":
[info]   331.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:branches":
[info]   112839.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:cycles":
[info]   164489.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   66.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-loads":
[info]   127696.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-stores":
[info]   57442.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.805 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-loads":
[info]   1.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:instructions":
[info]   524954.000 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:54:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8137.656 ops/s
[info] # Warmup Iteration   2: 13220.787 ops/s
[info] # Warmup Iteration   3: 13924.185 ops/s
[info] # Warmup Iteration   4: 13933.261 ops/s
[info] # Warmup Iteration   5: 13820.559 ops/s
[info] Iteration   1: 13344.135 ops/s
[info] Iteration   2: 13271.841 ops/s
[info] Iteration   3: 13669.529 ops/s
[info] Iteration   4: 13429.567 ops/s
[info] Iteration   5: 13347.203 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13412.455 ±(99.9%) 593.667 ops/s [Average]
[info]   (min, avg, max) = (13271.841, 13412.455, 13669.529), stdev = 154.173
[info]   CI (99.9%): [12818.788, 14006.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   3703.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-loads":
[info]   228164.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-stores":
[info]   114645.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   768.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-load-misses":
[info]   10.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-loads":
[info]   122.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-store-misses":
[info]   81.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-stores":
[info]   407.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:branch-misses":
[info]   84.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:branches":
[info]   182004.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:cycles":
[info]   285871.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-load-misses":
[info]   8.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-loads":
[info]   224405.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-store-misses":
[info]   0.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-stores":
[info]   112444.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:iTLB-load-misses":
[info]   2.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:iTLB-loads":
[info]   15.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:instructions":
[info]   859256.537 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:54:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6095.531 ops/s
[info] # Warmup Iteration   2: 13415.547 ops/s
[info] # Warmup Iteration   3: 13677.083 ops/s
[info] # Warmup Iteration   4: 13327.056 ops/s
[info] # Warmup Iteration   5: 13363.999 ops/s
[info] Iteration   1: 13415.325 ops/s
[info] Iteration   2: 13081.034 ops/s
[info] Iteration   3: 13029.527 ops/s
[info] Iteration   4: 13036.601 ops/s
[info] Iteration   5: 13692.244 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13250.946 ±(99.9%) 1131.861 ops/s [Average]
[info]   (min, avg, max) = (13029.527, 13250.946, 13692.244), stdev = 293.941
[info]   CI (99.9%): [12119.085, 14382.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:CPI":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   3313.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   227096.803 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   114089.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   7962.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   9.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-loads":
[info]   145.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   39.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-stores":
[info]   421.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:branch-misses":
[info]   130.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:branches":
[info]   170754.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:cycles":
[info]   293503.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   7.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   227133.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   111833.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   6.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   29.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:instructions":
[info]   836272.211 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:54:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 237711.845 ops/s
[info] # Warmup Iteration   2: 263597.232 ops/s
[info] # Warmup Iteration   3: 276542.125 ops/s
[info] # Warmup Iteration   4: 276605.885 ops/s
[info] # Warmup Iteration   5: 273628.323 ops/s
[info] Iteration   1: 265947.358 ops/s
[info] Iteration   2: 266882.283 ops/s
[info] Iteration   3: 266995.469 ops/s
[info] Iteration   4: 266674.354 ops/s
[info] Iteration   5: 274045.698 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   268109.032 ±(99.9%) 12875.218 ops/s [Average]
[info]   (min, avg, max) = (265947.358, 268109.032, 274045.698), stdev = 3343.653
[info]   CI (99.9%): [255233.815, 280984.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   151.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   9392.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5797.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   19.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:branch-misses":
[info]   6.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:branches":
[info]   12741.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:cycles":
[info]   14011.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   9383.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   5593.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:instructions":
[info]   53069.922 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:53:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3425.529 ops/s
[info] # Warmup Iteration   2: 11670.204 ops/s
[info] # Warmup Iteration   3: 12206.356 ops/s
[info] # Warmup Iteration   4: 12230.620 ops/s
[info] # Warmup Iteration   5: 12614.248 ops/s
[info] Iteration   1: 12692.063 ops/s
[info] Iteration   2: 12756.806 ops/s
[info] Iteration   3: 12283.343 ops/s
[info] Iteration   4: 12220.728 ops/s
[info] Iteration   5: 12211.913 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   12432.971 ±(99.9%) 1033.774 ops/s [Average]
[info]   (min, avg, max) = (12211.913, 12432.971, 12756.806), stdev = 268.468
[info]   CI (99.9%): [11399.197, 13466.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:CPI":
[info]   0.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   4529.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   243132.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   130232.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1123.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   17.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-loads":
[info]   204.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   82.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-stores":
[info]   473.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:branch-misses":
[info]   118.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:branches":
[info]   182018.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:cycles":
[info]   303754.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   7.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-loads":
[info]   242220.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-stores":
[info]   130306.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   3.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-loads":
[info]   27.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:instructions":
[info]   900886.271 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:53:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 18599.050 ops/s
[info] # Warmup Iteration   2: 32682.791 ops/s
[info] # Warmup Iteration   3: 32975.891 ops/s
[info] # Warmup Iteration   4: 32397.276 ops/s
[info] # Warmup Iteration   5: 33006.171 ops/s
[info] Iteration   1: 31999.676 ops/s
[info] Iteration   2: 33063.894 ops/s
[info] Iteration   3: 32984.968 ops/s
[info] Iteration   4: 33104.268 ops/s
[info] Iteration   5: 33093.425 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   32849.246 ±(99.9%) 1837.571 ops/s [Average]
[info]   (min, avg, max) = (31999.676, 32849.246, 33104.268), stdev = 477.211
[info]   CI (99.9%): [31011.676, 34686.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1902.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   84634.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   45130.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   7.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-load-misses":
[info]   1.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-loads":
[info]   7.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-store-misses":
[info]   166.929 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-stores":
[info]   307.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:branch-misses":
[info]   152.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:branches":
[info]   93917.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:cycles":
[info]   117328.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   7.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-loads":
[info]   84100.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-stores":
[info]   43627.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-loads":
[info]   0.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:instructions":
[info]   388144.819 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:53:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 54354.144 ops/s
[info] # Warmup Iteration   2: 82415.716 ops/s
[info] # Warmup Iteration   3: 79949.178 ops/s
[info] # Warmup Iteration   4: 82451.107 ops/s
[info] # Warmup Iteration   5: 82347.105 ops/s
[info] Iteration   1: 83082.822 ops/s
[info] Iteration   2: 83097.171 ops/s
[info] Iteration   3: 81394.047 ops/s
[info] Iteration   4: 81483.700 ops/s
[info] Iteration   5: 83235.893 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   82458.727 ±(99.9%) 3594.384 ops/s [Average]
[info]   (min, avg, max) = (81394.047, 82458.727, 83235.893), stdev = 933.450
[info]   CI (99.9%): [78864.343, 86053.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   780.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   32899.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   22068.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   2.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   1.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   4.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   60.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   117.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:branch-misses":
[info]   115.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:branches":
[info]   36961.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:cycles":
[info]   46239.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   3.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   32831.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   21925.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:instructions":
[info]   160605.415 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:53:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 494096.473 ops/s
[info] # Warmup Iteration   2: 508823.787 ops/s
[info] # Warmup Iteration   3: 532181.361 ops/s
[info] # Warmup Iteration   4: 531741.177 ops/s
[info] # Warmup Iteration   5: 532998.239 ops/s
[info] Iteration   1: 531348.810 ops/s
[info] Iteration   2: 538044.155 ops/s
[info] Iteration   3: 530940.123 ops/s
[info] Iteration   4: 532768.510 ops/s
[info] Iteration   5: 531091.078 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   532838.535 ±(99.9%) 11548.760 ops/s [Average]
[info]   (min, avg, max) = (530940.123, 532838.535, 538044.155), stdev = 2999.176
[info]   CI (99.9%): [521289.775, 544387.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   36.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   5671.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5470.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   26.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   30.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branches":
[info]   4796.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:cycles":
[info]   7120.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   5576.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5445.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:instructions":
[info]   28243.424 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:52:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 553763.842 ops/s
[info] # Warmup Iteration   2: 587679.555 ops/s
[info] # Warmup Iteration   3: 592049.741 ops/s
[info] # Warmup Iteration   4: 591999.117 ops/s
[info] # Warmup Iteration   5: 591993.855 ops/s
[info] Iteration   1: 592087.243 ops/s
[info] Iteration   2: 591072.816 ops/s
[info] Iteration   3: 591253.642 ops/s
[info] Iteration   4: 591232.674 ops/s
[info] Iteration   5: 591518.384 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   591432.952 ±(99.9%) 1537.073 ops/s [Average]
[info]   (min, avg, max) = (591072.816, 591432.952, 592087.243), stdev = 399.173
[info]   CI (99.9%): [589895.879, 592970.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   2.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   5531.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5097.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   4419.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   6366.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5534.535 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5077.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   26587.621 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:52:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 36273.277 ops/s
[info] # Warmup Iteration   2: 71559.593 ops/s
[info] # Warmup Iteration   3: 74397.831 ops/s
[info] # Warmup Iteration   4: 75338.452 ops/s
[info] # Warmup Iteration   5: 75322.706 ops/s
[info] Iteration   1: 72650.855 ops/s
[info] Iteration   2: 75299.569 ops/s
[info] Iteration   3: 75376.414 ops/s
[info] Iteration   4: 74970.675 ops/s
[info] Iteration   5: 75000.506 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   74659.604 ±(99.9%) 4378.330 ops/s [Average]
[info]   (min, avg, max) = (72650.855, 74659.604, 75376.414), stdev = 1137.038
[info]   CI (99.9%): [70281.274, 79037.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1372.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   37832.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   26142.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   6.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   2.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-loads":
[info]   5.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   68.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-stores":
[info]   141.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:branch-misses":
[info]   118.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:branches":
[info]   39442.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:cycles":
[info]   51412.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-loads":
[info]   37446.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-stores":
[info]   26271.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-loads":
[info]   0.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:instructions":
[info]   180780.441 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:52:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5910.977 ops/s
[info] # Warmup Iteration   2: 14645.666 ops/s
[info] # Warmup Iteration   3: 14769.373 ops/s
[info] # Warmup Iteration   4: 14141.949 ops/s
[info] # Warmup Iteration   5: 14099.609 ops/s
[info] Iteration   1: 14679.520 ops/s
[info] Iteration   2: 14815.652 ops/s
[info] Iteration   3: 14478.750 ops/s
[info] Iteration   4: 14858.387 ops/s
[info] Iteration   5: 14978.433 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   14762.148 ±(99.9%) 735.779 ops/s [Average]
[info]   (min, avg, max) = (14478.750, 14762.148, 14978.433), stdev = 191.079
[info]   CI (99.9%): [14026.369, 15497.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:CPI":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-dcache-load-misses":
[info]   2123.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-dcache-loads":
[info]   221372.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-dcache-stores":
[info]   105522.863 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-icache-load-misses":
[info]   354.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-load-misses":
[info]   11.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-loads":
[info]   67.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-store-misses":
[info]   68.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-stores":
[info]   284.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:branch-misses":
[info]   496.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:branches":
[info]   198356.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:cycles":
[info]   270573.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-load-misses":
[info]   11.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-loads":
[info]   217621.532 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-store-misses":
[info]   0.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-stores":
[info]   103167.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:iTLB-load-misses":
[info]   3.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:iTLB-loads":
[info]   35.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:instructions":
[info]   857795.957 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:52:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4499.105 ops/s
[info] # Warmup Iteration   2: 15163.901 ops/s
[info] # Warmup Iteration   3: 16024.735 ops/s
[info] # Warmup Iteration   4: 16016.799 ops/s
[info] # Warmup Iteration   5: 16031.992 ops/s
[info] Iteration   1: 16081.536 ops/s
[info] Iteration   2: 16032.625 ops/s
[info] Iteration   3: 15164.046 ops/s
[info] Iteration   4: 16041.856 ops/s
[info] Iteration   5: 15993.475 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   15862.708 ±(99.9%) 1508.744 ops/s [Average]
[info]   (min, avg, max) = (15164.046, 15862.708, 16081.536), stdev = 391.816
[info]   CI (99.9%): [14353.963, 17371.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:CPI":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1873.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   211720.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   98275.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   375.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-load-misses":
[info]   6.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-loads":
[info]   64.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-store-misses":
[info]   9.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-stores":
[info]   175.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:branch-misses":
[info]   334.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:branches":
[info]   176073.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:cycles":
[info]   248545.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   5.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-loads":
[info]   210628.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-stores":
[info]   97977.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   3.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-loads":
[info]   22.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:instructions":
[info]   783313.374 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:52:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 109382.334 ops/s
[info] # Warmup Iteration   2: 121623.000 ops/s
[info] # Warmup Iteration   3: 122488.777 ops/s
[info] # Warmup Iteration   4: 122793.670 ops/s
[info] # Warmup Iteration   5: 122716.985 ops/s
[info] Iteration   1: 122528.052 ops/s
[info] Iteration   2: 122832.877 ops/s
[info] Iteration   3: 122356.503 ops/s
[info] Iteration   4: 122647.560 ops/s
[info] Iteration   5: 122371.309 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   122547.260 ±(99.9%) 768.571 ops/s [Average]
[info]   (min, avg, max) = (122356.503, 122547.260, 122832.877), stdev = 199.595
[info]   CI (99.9%): [121778.689, 123315.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:CPI":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   69.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   11464.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2955.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-stores":
[info]   12.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:branch-misses":
[info]   54.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:branches":
[info]   29995.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:cycles":
[info]   30850.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-loads":
[info]   11342.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2934.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:instructions":
[info]   130411.786 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:51:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7002.883 ops/s
[info] # Warmup Iteration   2: 13691.761 ops/s
[info] # Warmup Iteration   3: 14076.405 ops/s
[info] # Warmup Iteration   4: 13590.696 ops/s
[info] # Warmup Iteration   5: 14051.784 ops/s
[info] Iteration   1: 13590.520 ops/s
[info] Iteration   2: 13471.289 ops/s
[info] Iteration   3: 13425.891 ops/s
[info] Iteration   4: 13477.228 ops/s
[info] Iteration   5: 13426.751 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   13478.336 ±(99.9%) 258.651 ops/s [Average]
[info]   (min, avg, max) = (13425.891, 13478.336, 13590.520), stdev = 67.171
[info]   CI (99.9%): [13219.685, 13736.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:CPI":
[info]   0.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2973.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-loads":
[info]   231204.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-stores":
[info]   116880.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   403.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-loads":
[info]   56.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-store-misses":
[info]   18.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-stores":
[info]   390.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:branch-misses":
[info]   425.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:branches":
[info]   189903.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:cycles":
[info]   275335.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-loads":
[info]   235073.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-stores":
[info]   113970.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:iTLB-load-misses":
[info]   3.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:iTLB-loads":
[info]   18.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:instructions":
[info]   850456.657 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:51:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 32331.337 ops/s
[info] # Warmup Iteration   2: 45463.700 ops/s
[info] # Warmup Iteration   3: 44890.695 ops/s
[info] # Warmup Iteration   4: 45686.223 ops/s
[info] # Warmup Iteration   5: 46770.760 ops/s
[info] Iteration   1: 46727.207 ops/s
[info] Iteration   2: 46758.738 ops/s
[info] Iteration   3: 46812.818 ops/s
[info] Iteration   4: 46884.836 ops/s
[info] Iteration   5: 46907.039 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   46818.128 ±(99.9%) 299.367 ops/s [Average]
[info]   (min, avg, max) = (46727.207, 46818.128, 46907.039), stdev = 77.745
[info]   CI (99.9%): [46518.760, 47117.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:CPI":
[info]   0.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1304.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-loads":
[info]   39947.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-stores":
[info]   27921.409 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-icache-load-misses":
[info]   9.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-load-misses":
[info]   1.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-loads":
[info]   7.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-store-misses":
[info]   202.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-stores":
[info]   354.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:branch-misses":
[info]   157.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:branches":
[info]   83482.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:cycles":
[info]   82346.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-load-misses":
[info]   4.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-loads":
[info]   39852.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-store-misses":
[info]   1.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-stores":
[info]   27390.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:iTLB-loads":
[info]   0.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:instructions":
[info]   292467.032 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:51:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 51410.195 ops/s
[info] # Warmup Iteration   2: 75479.495 ops/s
[info] # Warmup Iteration   3: 76492.510 ops/s
[info] # Warmup Iteration   4: 76451.590 ops/s
[info] # Warmup Iteration   5: 76658.716 ops/s
[info] Iteration   1: 76375.000 ops/s
[info] Iteration   2: 75779.369 ops/s
[info] Iteration   3: 76885.529 ops/s
[info] Iteration   4: 76799.511 ops/s
[info] Iteration   5: 76821.905 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   76532.263 ±(99.9%) 1797.567 ops/s [Average]
[info]   (min, avg, max) = (75779.369, 76532.263, 76885.529), stdev = 466.822
[info]   CI (99.9%): [74734.696, 78329.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:CPI":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   687.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   28291.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   18759.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   2.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-loads":
[info]   3.761 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   75.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-stores":
[info]   141.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:branch-misses":
[info]   59.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:branches":
[info]   43236.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:cycles":
[info]   50080.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-loads":
[info]   27753.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-stores":
[info]   17909.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:instructions":
[info]   180049.413 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:51:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 270890.369 ops/s
[info] # Warmup Iteration   2: 290168.250 ops/s
[info] # Warmup Iteration   3: 294893.709 ops/s
[info] # Warmup Iteration   4: 295240.449 ops/s
[info] # Warmup Iteration   5: 294880.703 ops/s
[info] Iteration   1: 295459.708 ops/s
[info] Iteration   2: 295378.316 ops/s
[info] Iteration   3: 295337.292 ops/s
[info] Iteration   4: 295049.373 ops/s
[info] Iteration   5: 295833.731 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   295411.684 ±(99.9%) 1086.309 ops/s [Average]
[info]   (min, avg, max) = (295049.373, 295411.684, 295833.731), stdev = 282.111
[info]   CI (99.9%): [294325.375, 296497.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   52.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   8514.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   6028.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   30.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-stores":
[info]   42.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:branch-misses":
[info]   9.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:branches":
[info]   11137.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:cycles":
[info]   13030.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   8407.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5913.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:instructions":
[info]   53658.135 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:50:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 333217.913 ops/s
[info] # Warmup Iteration   2: 349277.315 ops/s
[info] # Warmup Iteration   3: 332948.611 ops/s
[info] # Warmup Iteration   4: 362673.830 ops/s
[info] # Warmup Iteration   5: 362616.858 ops/s
[info] Iteration   1: 362154.187 ops/s
[info] Iteration   2: 361572.093 ops/s
[info] Iteration   3: 361535.268 ops/s
[info] Iteration   4: 361572.950 ops/s
[info] Iteration   5: 361563.323 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   361679.564 ±(99.9%) 1023.353 ops/s [Average]
[info]   (min, avg, max) = (361535.268, 361679.564, 362154.187), stdev = 265.762
[info]   CI (99.9%): [360656.211, 362702.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   2.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   5149.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5304.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   10.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   10432.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   10413.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5141.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5269.636 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   46362.251 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:50:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 47197.114 ops/s
[info] # Warmup Iteration   2: 63802.678 ops/s
[info] # Warmup Iteration   3: 64678.269 ops/s
[info] # Warmup Iteration   4: 65876.356 ops/s
[info] # Warmup Iteration   5: 65907.770 ops/s
[info] Iteration   1: 65868.318 ops/s
[info] Iteration   2: 63910.243 ops/s
[info] Iteration   3: 63759.502 ops/s
[info] Iteration   4: 66052.703 ops/s
[info] Iteration   5: 65967.983 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   65111.750 ±(99.9%) 4500.115 ops/s [Average]
[info]   (min, avg, max) = (63759.502, 65111.750, 66052.703), stdev = 1168.666
[info]   CI (99.9%): [60611.635, 69611.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:CPI":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1132.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-loads":
[info]   34278.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-stores":
[info]   21876.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   4.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-loads":
[info]   3.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-store-misses":
[info]   81.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-stores":
[info]   156.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:branch-misses":
[info]   111.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:branches":
[info]   45697.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:cycles":
[info]   57578.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-loads":
[info]   33763.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-stores":
[info]   21139.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:iTLB-load-misses":
[info]   2.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:iTLB-loads":
[info]   0.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:instructions":
[info]   197481.708 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:50:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 104207.428 ops/s
[info] # Warmup Iteration   2: 143250.921 ops/s
[info] # Warmup Iteration   3: 144177.779 ops/s
[info] # Warmup Iteration   4: 141687.779 ops/s
[info] # Warmup Iteration   5: 141875.632 ops/s
[info] Iteration   1: 146041.319 ops/s
[info] Iteration   2: 142556.673 ops/s
[info] Iteration   3: 146851.739 ops/s
[info] Iteration   4: 146740.373 ops/s
[info] Iteration   5: 143219.040 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   145081.829 ±(99.9%) 7856.250 ops/s [Average]
[info]   (min, avg, max) = (142556.673, 145081.829, 146851.739), stdev = 2040.243
[info]   CI (99.9%): [137225.579, 152938.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-dcache-load-misses":
[info]   366.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-dcache-loads":
[info]   17636.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-dcache-stores":
[info]   9253.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-icache-load-misses":
[info]   10.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-load-misses":
[info]   0.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-loads":
[info]   4.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-store-misses":
[info]   14.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-stores":
[info]   67.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:branch-misses":
[info]   34.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:branches":
[info]   20937.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:cycles":
[info]   25799.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-load-misses":
[info]   0.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-loads":
[info]   17466.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-store-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-stores":
[info]   9036.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:iTLB-load-misses":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:iTLB-loads":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:instructions":
[info]   86100.796 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:50:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.957 ops/s
[info] # Warmup Iteration   2: 798314.025 ops/s
[info] # Warmup Iteration   3: 848901.042 ops/s
[info] # Warmup Iteration   4: 852739.587 ops/s
[info] # Warmup Iteration   5: 845729.766 ops/s
[info] Iteration   1: 856266.970 ops/s
[info] Iteration   2: 852966.333 ops/s
[info] Iteration   3: 850801.041 ops/s
[info] Iteration   4: 855874.401 ops/s
[info] Iteration   5: 823939.021 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   847969.553 ±(99.9%) 52437.561 ops/s [Average]
[info]   (min, avg, max) = (823939.021, 847969.553, 856266.970), stdev = 13617.868
[info]   CI (99.9%): [795531.992, 900407.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   15.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   3093.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   1728.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-stores":
[info]   2.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:branch-misses":
[info]   4.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:branches":
[info]   5315.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:cycles":
[info]   4480.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-loads":
[info]   3127.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-stores":
[info]   1764.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:instructions":
[info]   20928.983 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:50:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 236270.314 ops/s
[info] # Warmup Iteration   2: 378323.606 ops/s
[info] # Warmup Iteration   3: 384660.147 ops/s
[info] # Warmup Iteration   4: 385304.848 ops/s
[info] # Warmup Iteration   5: 385133.418 ops/s
[info] Iteration   1: 385233.879 ops/s
[info] Iteration   2: 384896.486 ops/s
[info] Iteration   3: 384956.764 ops/s
[info] Iteration   4: 386556.848 ops/s
[info] Iteration   5: 384142.697 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   385157.335 ±(99.9%) 3391.113 ops/s [Average]
[info]   (min, avg, max) = (384142.697, 385157.335, 386556.848), stdev = 880.661
[info]   CI (99.9%): [381766.222, 388548.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   28.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   9009.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   6582.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-loads":
[info]   0.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-stores":
[info]   6.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:branch-misses":
[info]   2.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:branches":
[info]   9157.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:cycles":
[info]   9978.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-loads":
[info]   8946.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-stores":
[info]   6537.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:instructions":
[info]   40460.346 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:49:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1035066.397 ops/s
[info] # Warmup Iteration   2: 1133154.099 ops/s
[info] # Warmup Iteration   3: 1134792.813 ops/s
[info] # Warmup Iteration   4: 1133870.536 ops/s
[info] # Warmup Iteration   5: 1132143.351 ops/s
[info] Iteration   1: 1137935.374 ops/s
[info] Iteration   2: 1135785.086 ops/s
[info] Iteration   3: 1133621.134 ops/s
[info] Iteration   4: 1137012.981 ops/s
[info] Iteration   5: 1134644.519 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1135799.819 ±(99.9%) 6701.106 ops/s [Average]
[info]   (min, avg, max) = (1133621.134, 1135799.819, 1137935.374), stdev = 1740.256
[info]   CI (99.9%): [1129098.713, 1142500.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:CPI":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   9.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1789.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1149.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-stores":
[info]   1.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:branch-misses":
[info]   3.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:branches":
[info]   4332.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:cycles":
[info]   3353.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-loads":
[info]   1772.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-stores":
[info]   1118.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:instructions":
[info]   15464.035 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:49:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 39749.286 ops/s
[info] # Warmup Iteration   2: 79316.107 ops/s
[info] # Warmup Iteration   3: 78939.958 ops/s
[info] # Warmup Iteration   4: 80100.112 ops/s
[info] # Warmup Iteration   5: 80450.634 ops/s
[info] Iteration   1: 80225.068 ops/s
[info] Iteration   2: 80318.589 ops/s
[info] Iteration   3: 79865.552 ops/s
[info] Iteration   4: 80051.537 ops/s
[info] Iteration   5: 78606.938 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   79813.537 ±(99.9%) 2681.433 ops/s [Average]
[info]   (min, avg, max) = (78606.938, 79813.537, 80318.589), stdev = 696.360
[info]   CI (99.9%): [77132.104, 82494.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1556.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-dcache-loads":
[info]   38372.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-dcache-stores":
[info]   30521.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   158.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-loads":
[info]   11.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-store-misses":
[info]   38.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-stores":
[info]   202.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:branch-misses":
[info]   84.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:branches":
[info]   27538.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:cycles":
[info]   48042.912 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-loads":
[info]   39410.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-stores":
[info]   30757.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:iTLB-loads":
[info]   0.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:instructions":
[info]   145473.124 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:49:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 167340.610 ops/s
[info] # Warmup Iteration   2: 269039.246 ops/s
[info] # Warmup Iteration   3: 268078.236 ops/s
[info] # Warmup Iteration   4: 274632.978 ops/s
[info] # Warmup Iteration   5: 275356.694 ops/s
[info] Iteration   1: 274766.967 ops/s
[info] Iteration   2: 273887.033 ops/s
[info] Iteration   3: 264257.373 ops/s
[info] Iteration   4: 269694.690 ops/s
[info] Iteration   5: 275846.781 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   271690.569 ±(99.9%) 18346.076 ops/s [Average]
[info]   (min, avg, max) = (264257.373, 271690.569, 275846.781), stdev = 4764.418
[info]   CI (99.9%): [253344.493, 290036.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:CPI":
[info]   0.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   154.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-dcache-loads":
[info]   10834.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-dcache-stores":
[info]   6806.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-load-misses":
[info]   0.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-loads":
[info]   1.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-store-misses":
[info]   33.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-stores":
[info]   70.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:branch-misses":
[info]   26.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:branches":
[info]   10349.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:cycles":
[info]   13838.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-loads":
[info]   10545.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-stores":
[info]   6455.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:iTLB-loads":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:instructions":
[info]   49512.762 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:49:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.901 ops/s
[info] # Warmup Iteration   2: 1173482.485 ops/s
[info] # Warmup Iteration   3: 1226038.647 ops/s
[info] # Warmup Iteration   4: 1254934.662 ops/s
[info] # Warmup Iteration   5: 1251459.191 ops/s
[info] Iteration   1: 1245857.566 ops/s
[info] Iteration   2: 1242384.381 ops/s
[info] Iteration   3: 1247608.512 ops/s
[info] Iteration   4: 1245448.088 ops/s
[info] Iteration   5: 1249664.973 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1246192.704 ±(99.9%) 10409.433 ops/s [Average]
[info]   (min, avg, max) = (1242384.381, 1246192.704, 1249664.973), stdev = 2703.297
[info]   CI (99.9%): [1235783.271, 1256602.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:CPI":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   10.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   1031.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   1382.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   1.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-stores":
[info]   3.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:branch-misses":
[info]   0.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:branches":
[info]   1835.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:cycles":
[info]   3113.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   1044.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   1370.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:instructions":
[info]   9979.670 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:48:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 624571.000 ops/s
[info] # Warmup Iteration   2: 875873.633 ops/s
[info] # Warmup Iteration   3: 933372.041 ops/s
[info] # Warmup Iteration   4: 934126.748 ops/s
[info] # Warmup Iteration   5: 933442.275 ops/s
[info] Iteration   1: 933315.464 ops/s
[info] Iteration   2: 928410.954 ops/s
[info] Iteration   3: 933068.292 ops/s
[info] Iteration   4: 933837.405 ops/s
[info] Iteration   5: 933728.540 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   932472.131 ±(99.9%) 8823.420 ops/s [Average]
[info]   (min, avg, max) = (928410.954, 932472.131, 933837.405), stdev = 2291.414
[info]   CI (99.9%): [923648.712, 941295.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:CPI":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   15.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   3133.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1767.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   2.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-stores":
[info]   4.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:branch-misses":
[info]   4.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:branches":
[info]   3213.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:cycles":
[info]   4126.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-loads":
[info]   3151.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-stores":
[info]   1770.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:instructions":
[info]   15522.684 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:48:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1834584.391 ops/s
[info] # Warmup Iteration   2: 1948896.000 ops/s
[info] # Warmup Iteration   3: 1959549.961 ops/s
[info] # Warmup Iteration   4: 1967220.161 ops/s
[info] # Warmup Iteration   5: 2022026.207 ops/s
[info] Iteration   1: 2083370.491 ops/s
[info] Iteration   2: 2035299.334 ops/s
[info] Iteration   3: 2081840.316 ops/s
[info] Iteration   4: 2082951.926 ops/s
[info] Iteration   5: 2079474.237 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   2072587.261 ±(99.9%) 80476.231 ops/s [Average]
[info]   (min, avg, max) = (2035299.334, 2072587.261, 2083370.491), stdev = 20899.422
[info]   CI (99.9%): [1992111.030, 2153063.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:CPI":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   9.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1074.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1111.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   1.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-stores":
[info]   3.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:branches":
[info]   2056.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:cycles":
[info]   1839.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1062.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1096.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:instructions":
[info]   8421.625 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:48:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2014953.155 ops/s
[info] # Warmup Iteration   2: 2205880.877 ops/s
[info] # Warmup Iteration   3: 2236403.142 ops/s
[info] # Warmup Iteration   4: 2234576.535 ops/s
[info] # Warmup Iteration   5: 2235544.417 ops/s
[info] Iteration   1: 2237112.124 ops/s
[info] Iteration   2: 2235269.393 ops/s
[info] Iteration   3: 2231585.534 ops/s
[info] Iteration   4: 2235944.783 ops/s
[info] Iteration   5: 2237179.768 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2235418.320 ±(99.9%) 8814.792 ops/s [Average]
[info]   (min, avg, max) = (2231585.534, 2235418.320, 2237179.768), stdev = 2289.173
[info]   CI (99.9%): [2226603.528, 2244233.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   999.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1014.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1942.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1690.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1003.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1018.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   8001.854 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:48:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 26240.888 ops/s
[info] # Warmup Iteration   2: 41429.596 ops/s
[info] # Warmup Iteration   3: 41994.471 ops/s
[info] # Warmup Iteration   4: 40711.028 ops/s
[info] # Warmup Iteration   5: 41815.273 ops/s
[info] Iteration   1: 42188.659 ops/s
[info] Iteration   2: 42166.483 ops/s
[info] Iteration   3: 42347.145 ops/s
[info] Iteration   4: 42284.756 ops/s
[info] Iteration   5: 41358.169 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   42069.042 ±(99.9%) 1555.843 ops/s [Average]
[info]   (min, avg, max) = (41358.169, 42069.042, 42347.145), stdev = 404.048
[info]   CI (99.9%): [40513.199, 43624.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:CPI":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1534.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-dcache-loads":
[info]   53552.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-dcache-stores":
[info]   37993.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   43.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-load-misses":
[info]   2.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-loads":
[info]   17.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-store-misses":
[info]   14.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-stores":
[info]   192.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:branch-misses":
[info]   161.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:branches":
[info]   52505.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:cycles":
[info]   90996.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-loads":
[info]   52357.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-stores":
[info]   36154.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:iTLB-loads":
[info]   0.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:instructions":
[info]   258552.450 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:47:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10807.892 ops/s
[info] # Warmup Iteration   2: 15362.691 ops/s
[info] # Warmup Iteration   3: 15376.868 ops/s
[info] # Warmup Iteration   4: 15341.601 ops/s
[info] # Warmup Iteration   5: 15166.724 ops/s
[info] Iteration   1: 14852.930 ops/s
[info] Iteration   2: 14814.211 ops/s
[info] Iteration   3: 15141.472 ops/s
[info] Iteration   4: 15426.296 ops/s
[info] Iteration   5: 15415.837 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   15130.149 ±(99.9%) 1132.698 ops/s [Average]
[info]   (min, avg, max) = (14814.211, 15130.149, 15426.296), stdev = 294.158
[info]   CI (99.9%): [13997.451, 16262.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:CPI":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-dcache-load-misses":
[info]   3893.761 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-dcache-loads":
[info]   132428.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-dcache-stores":
[info]   88075.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-icache-load-misses":
[info]   283.682 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-load-misses":
[info]   7.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-loads":
[info]   85.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-store-misses":
[info]   173.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-stores":
[info]   679.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:branch-misses":
[info]   1094.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:branches":
[info]   185957.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:cycles":
[info]   255266.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-load-misses":
[info]   5.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-loads":
[info]   137461.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-store-misses":
[info]   1.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-stores":
[info]   88849.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:iTLB-load-misses":
[info]   3.904 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:iTLB-loads":
[info]   19.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:instructions":
[info]   779907.950 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:47:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 64146.341 ops/s
[info] # Warmup Iteration   2: 96014.531 ops/s
[info] # Warmup Iteration   3: 93364.697 ops/s
[info] # Warmup Iteration   4: 94528.430 ops/s
[info] # Warmup Iteration   5: 98627.261 ops/s
[info] Iteration   1: 98318.139 ops/s
[info] Iteration   2: 92600.963 ops/s
[info] Iteration   3: 92028.128 ops/s
[info] Iteration   4: 99744.828 ops/s
[info] Iteration   5: 99468.643 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   96432.140 ±(99.9%) 14640.612 ops/s [Average]
[info]   (min, avg, max) = (92028.128, 96432.140, 99744.828), stdev = 3802.121
[info]   CI (99.9%): [81791.528, 111072.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:CPI":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   458.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   36388.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   16932.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-loads":
[info]   3.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-store-misses":
[info]   3.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-stores":
[info]   57.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:branch-misses":
[info]   13.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:branches":
[info]   37055.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:cycles":
[info]   39261.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-loads":
[info]   36121.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-stores":
[info]   16415.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:instructions":
[info]   165829.058 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:47:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 235202.542 ops/s
[info] # Warmup Iteration   2: 238507.821 ops/s
[info] # Warmup Iteration   3: 257048.578 ops/s
[info] # Warmup Iteration   4: 258075.265 ops/s
[info] # Warmup Iteration   5: 257268.104 ops/s
[info] Iteration   1: 256148.246 ops/s
[info] Iteration   2: 257217.158 ops/s
[info] Iteration   3: 257790.485 ops/s
[info] Iteration   4: 257961.418 ops/s
[info] Iteration   5: 257500.643 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   257323.590 ±(99.9%) 2755.918 ops/s [Average]
[info]   (min, avg, max) = (256148.246, 257323.590, 257961.418), stdev = 715.703
[info]   CI (99.9%): [254567.672, 260079.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   86.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   16847.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   6265.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-stores":
[info]   13.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:branch-misses":
[info]   3.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:branches":
[info]   15744.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:cycles":
[info]   14924.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-loads":
[info]   16544.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-stores":
[info]   6180.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:instructions":
[info]   69243.184 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:47:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6833.505 ops/s
[info] # Warmup Iteration   2: 12073.192 ops/s
[info] # Warmup Iteration   3: 13152.767 ops/s
[info] # Warmup Iteration   4: 13342.653 ops/s
[info] # Warmup Iteration   5: 13126.651 ops/s
[info] Iteration   1: 13037.119 ops/s
[info] Iteration   2: 13381.710 ops/s
[info] Iteration   3: 13163.274 ops/s
[info] Iteration   4: 12876.528 ops/s
[info] Iteration   5: 12926.958 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   13077.118 ±(99.9%) 781.082 ops/s [Average]
[info]   (min, avg, max) = (12876.528, 13077.118, 13381.710), stdev = 202.845
[info]   CI (99.9%): [12296.036, 13858.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:CPI":
[info]   0.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5131.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-loads":
[info]   166771.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-stores":
[info]   111256.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   616.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-load-misses":
[info]   11.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-loads":
[info]   235.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-store-misses":
[info]   335.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-stores":
[info]   892.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:branch-misses":
[info]   1244.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:branches":
[info]   181928.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:cycles":
[info]   291338.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-load-misses":
[info]   11.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-loads":
[info]   167315.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-stores":
[info]   108446.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:iTLB-load-misses":
[info]   3.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:iTLB-loads":
[info]   25.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:instructions":
[info]   825555.597 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:47:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23112.262 ops/s
[info] # Warmup Iteration   2: 33447.803 ops/s
[info] # Warmup Iteration   3: 33070.647 ops/s
[info] # Warmup Iteration   4: 32785.824 ops/s
[info] # Warmup Iteration   5: 32835.942 ops/s
[info] Iteration   1: 33363.956 ops/s
[info] Iteration   2: 33505.158 ops/s
[info] Iteration   3: 33480.526 ops/s
[info] Iteration   4: 33515.563 ops/s
[info] Iteration   5: 33123.853 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   33397.811 ±(99.9%) 633.983 ops/s [Average]
[info]   (min, avg, max) = (33123.853, 33397.811, 33515.563), stdev = 164.643
[info]   CI (99.9%): [32763.828, 34031.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:CPI":
[info]   0.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   3066.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-loads":
[info]   58238.482 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-stores":
[info]   53252.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-icache-load-misses":
[info]   16.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-load-misses":
[info]   2.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-loads":
[info]   11.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-store-misses":
[info]   377.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-stores":
[info]   766.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:branch-misses":
[info]   39.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:branches":
[info]   128962.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:cycles":
[info]   114425.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-load-misses":
[info]   3.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-loads":
[info]   58696.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-store-misses":
[info]   4.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-stores":
[info]   51764.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:iTLB-loads":
[info]   0.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:instructions":
[info]   440212.499 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:46:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 58484.348 ops/s
[info] # Warmup Iteration   2: 93819.283 ops/s
[info] # Warmup Iteration   3: 93966.503 ops/s
[info] # Warmup Iteration   4: 94136.660 ops/s
[info] # Warmup Iteration   5: 94146.611 ops/s
[info] Iteration   1: 94160.464 ops/s
[info] Iteration   2: 94231.920 ops/s
[info] Iteration   3: 94210.075 ops/s
[info] Iteration   4: 94128.450 ops/s
[info] Iteration   5: 94424.544 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   94231.091 ±(99.9%) 444.870 ops/s [Average]
[info]   (min, avg, max) = (94128.450, 94231.091, 94424.544), stdev = 115.531
[info]   CI (99.9%): [93786.220, 94675.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:CPI":
[info]   0.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   492.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   34169.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   23730.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   7.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-loads":
[info]   2.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   108.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-stores":
[info]   173.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:branch-misses":
[info]   12.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:branches":
[info]   23690.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:cycles":
[info]   41103.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-loads":
[info]   33944.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-stores":
[info]   23117.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:instructions":
[info]   120126.724 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:46:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 165538.223 ops/s
[info] # Warmup Iteration   2: 172928.553 ops/s
[info] # Warmup Iteration   3: 178779.354 ops/s
[info] # Warmup Iteration   4: 178915.673 ops/s
[info] # Warmup Iteration   5: 178609.362 ops/s
[info] Iteration   1: 178596.640 ops/s
[info] Iteration   2: 177234.204 ops/s
[info] Iteration   3: 178312.829 ops/s
[info] Iteration   4: 178263.895 ops/s
[info] Iteration   5: 178642.141 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   178209.942 ±(99.9%) 2196.801 ops/s [Average]
[info]   (min, avg, max) = (177234.204, 178209.942, 178642.141), stdev = 570.502
[info]   CI (99.9%): [176013.140, 180406.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:CPI":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   88.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   15895.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   15393.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   5.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   57.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-stores":
[info]   83.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:branch-misses":
[info]   3.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:branches":
[info]   11055.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:cycles":
[info]   21510.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   15912.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   15299.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:instructions":
[info]   72301.684 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:46:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 175419.249 ops/s
[info] # Warmup Iteration   2: 192384.527 ops/s
[info] # Warmup Iteration   3: 195016.774 ops/s
[info] # Warmup Iteration   4: 194905.216 ops/s
[info] # Warmup Iteration   5: 194716.076 ops/s
[info] Iteration   1: 193086.574 ops/s
[info] Iteration   2: 184831.770 ops/s
[info] Iteration   3: 194111.076 ops/s
[info] Iteration   4: 193980.520 ops/s
[info] Iteration   5: 194626.377 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   192127.264 ±(99.9%) 15848.585 ops/s [Average]
[info]   (min, avg, max) = (184831.770, 192127.264, 194626.377), stdev = 4115.827
[info]   CI (99.9%): [176278.678, 207975.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   3.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   15376.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   14518.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   10171.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   19576.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   15477.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   14519.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   68753.420 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:46:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 33557.822 ops/s
[info] # Warmup Iteration   2: 47479.265 ops/s
[info] # Warmup Iteration   3: 46828.226 ops/s
[info] # Warmup Iteration   4: 47356.907 ops/s
[info] # Warmup Iteration   5: 47652.311 ops/s
[info] Iteration   1: 46284.752 ops/s
[info] Iteration   2: 47703.335 ops/s
[info] Iteration   3: 47886.734 ops/s
[info] Iteration   4: 47856.532 ops/s
[info] Iteration   5: 47665.036 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   47479.278 ±(99.9%) 2597.359 ops/s [Average]
[info]   (min, avg, max) = (46284.752, 47479.278, 47886.734), stdev = 674.526
[info]   CI (99.9%): [44881.918, 50076.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:CPI":
[info]   0.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2658.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-loads":
[info]   50916.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-stores":
[info]   43277.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   12.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-load-misses":
[info]   3.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-loads":
[info]   13.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-store-misses":
[info]   175.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-stores":
[info]   422.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:branch-misses":
[info]   149.935 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:branches":
[info]   66335.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:cycles":
[info]   80916.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-load-misses":
[info]   3.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-loads":
[info]   50030.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-stores":
[info]   41687.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:iTLB-loads":
[info]   1.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:instructions":
[info]   287521.404 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:45:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13985.631 ops/s
[info] # Warmup Iteration   2: 24447.278 ops/s
[info] # Warmup Iteration   3: 25303.075 ops/s
[info] # Warmup Iteration   4: 25395.253 ops/s
[info] # Warmup Iteration   5: 25155.373 ops/s
[info] Iteration   1: 25531.922 ops/s
[info] Iteration   2: 25571.862 ops/s
[info] Iteration   3: 24547.014 ops/s
[info] Iteration   4: 24452.843 ops/s
[info] Iteration   5: 25578.943 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   25136.517 ±(99.9%) 2242.429 ops/s [Average]
[info]   (min, avg, max) = (24452.843, 25136.517, 25578.943), stdev = 582.352
[info]   CI (99.9%): [22894.088, 27378.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:CPI":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-load-misses":
[info]   1562.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-loads":
[info]   117253.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-stores":
[info]   54984.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-icache-load-misses":
[info]   135.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-load-misses":
[info]   2.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-loads":
[info]   17.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-store-misses":
[info]   50.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-stores":
[info]   247.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:branch-misses":
[info]   48.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:branches":
[info]   108175.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:cycles":
[info]   151675.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-load-misses":
[info]   2.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-loads":
[info]   118808.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-store-misses":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-stores":
[info]   54562.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:iTLB-load-misses":
[info]   0.771 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:iTLB-loads":
[info]   2.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:instructions":
[info]   471195.824 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:45:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13928.569 ops/s
[info] # Warmup Iteration   2: 28734.401 ops/s
[info] # Warmup Iteration   3: 28728.374 ops/s
[info] # Warmup Iteration   4: 29121.407 ops/s
[info] # Warmup Iteration   5: 27866.925 ops/s
[info] Iteration   1: 27638.108 ops/s
[info] Iteration   2: 27772.392 ops/s
[info] Iteration   3: 28807.758 ops/s
[info] Iteration   4: 29018.766 ops/s
[info] Iteration   5: 29107.897 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   28468.984 ±(99.9%) 2723.383 ops/s [Average]
[info]   (min, avg, max) = (27638.108, 28468.984, 29107.897), stdev = 707.254
[info]   CI (99.9%): [25745.601, 31192.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:CPI":
[info]   0.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1278.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   102517.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   46196.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1016.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-loads":
[info]   12.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-store-misses":
[info]   8.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-stores":
[info]   160.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:branch-misses":
[info]   21.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:branches":
[info]   92237.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:cycles":
[info]   133008.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-loads":
[info]   102739.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-stores":
[info]   45471.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-loads":
[info]   2.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:instructions":
[info]   398729.837 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:45:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 512880.642 ops/s
[info] # Warmup Iteration   2: 551880.132 ops/s
[info] # Warmup Iteration   3: 561058.845 ops/s
[info] # Warmup Iteration   4: 561622.782 ops/s
[info] # Warmup Iteration   5: 557713.418 ops/s
[info] Iteration   1: 560439.131 ops/s
[info] Iteration   2: 561638.060 ops/s
[info] Iteration   3: 545375.964 ops/s
[info] Iteration   4: 559376.646 ops/s
[info] Iteration   5: 563355.295 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   558037.020 ±(99.9%) 27841.954 ops/s [Average]
[info]   (min, avg, max) = (545375.964, 558037.020, 563355.295), stdev = 7230.467
[info]   CI (99.9%): [530195.065, 585878.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   66.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   4676.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2812.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-stores":
[info]   12.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:branch-misses":
[info]   7.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:branches":
[info]   6743.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:cycles":
[info]   6743.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-loads":
[info]   4659.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2701.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:instructions":
[info]   28681.285 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:45:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4484.324 ops/s
[info] # Warmup Iteration   2: 21751.576 ops/s
[info] # Warmup Iteration   3: 22263.913 ops/s
[info] # Warmup Iteration   4: 22550.182 ops/s
[info] # Warmup Iteration   5: 22612.679 ops/s
[info] Iteration   1: 22479.211 ops/s
[info] Iteration   2: 22676.454 ops/s
[info] Iteration   3: 22722.091 ops/s
[info] Iteration   4: 22659.215 ops/s
[info] Iteration   5: 22695.296 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   22646.453 ±(99.9%) 371.040 ops/s [Average]
[info]   (min, avg, max) = (22479.211, 22646.453, 22722.091), stdev = 96.358
[info]   CI (99.9%): [22275.413, 23017.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2739.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-loads":
[info]   140247.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-stores":
[info]   68171.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   513.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-load-misses":
[info]   5.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-loads":
[info]   56.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-store-misses":
[info]   40.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-stores":
[info]   368.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:branch-misses":
[info]   65.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:branches":
[info]   114741.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:cycles":
[info]   169547.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-load-misses":
[info]   7.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-loads":
[info]   134907.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-stores":
[info]   67130.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-loads":
[info]   3.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:instructions":
[info]   533472.287 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:44:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 49077.705 ops/s
[info] # Warmup Iteration   2: 70834.921 ops/s
[info] # Warmup Iteration   3: 71124.398 ops/s
[info] # Warmup Iteration   4: 71795.214 ops/s
[info] # Warmup Iteration   5: 71732.539 ops/s
[info] Iteration   1: 71803.181 ops/s
[info] Iteration   2: 71994.693 ops/s
[info] Iteration   3: 71973.670 ops/s
[info] Iteration   4: 71930.599 ops/s
[info] Iteration   5: 71923.870 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   71925.203 ±(99.9%) 286.208 ops/s [Average]
[info]   (min, avg, max) = (71803.181, 71925.203, 71994.693), stdev = 74.327
[info]   CI (99.9%): [71638.994, 72211.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1108.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-loads":
[info]   41557.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-stores":
[info]   25095.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-load-misses":
[info]   0.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-loads":
[info]   2.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-store-misses":
[info]   101.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-stores":
[info]   222.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:branch-misses":
[info]   41.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:branches":
[info]   45622.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:cycles":
[info]   52755.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-load-misses":
[info]   4.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-loads":
[info]   41263.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-stores":
[info]   24779.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:iTLB-loads":
[info]   0.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:instructions":
[info]   192819.728 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:44:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 114740.951 ops/s
[info] # Warmup Iteration   2: 183214.000 ops/s
[info] # Warmup Iteration   3: 184350.279 ops/s
[info] # Warmup Iteration   4: 184478.489 ops/s
[info] # Warmup Iteration   5: 184504.447 ops/s
[info] Iteration   1: 185112.691 ops/s
[info] Iteration   2: 176370.207 ops/s
[info] Iteration   3: 174413.287 ops/s
[info] Iteration   4: 174974.363 ops/s
[info] Iteration   5: 182058.217 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   178585.753 ±(99.9%) 18267.154 ops/s [Average]
[info]   (min, avg, max) = (174413.287, 178585.753, 185112.691), stdev = 4743.922
[info]   CI (99.9%): [160318.599, 196852.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:CPI":
[info]   0.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   248.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   15685.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   9350.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-loads":
[info]   1.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   9.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-stores":
[info]   34.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:branch-misses":
[info]   28.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:branches":
[info]   18717.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:cycles":
[info]   20960.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-loads":
[info]   15850.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-stores":
[info]   9320.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:instructions":
[info]   80897.745 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:44:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1409356.248 ops/s
[info] # Warmup Iteration   2: 1514912.151 ops/s
[info] # Warmup Iteration   3: 1543747.880 ops/s
[info] # Warmup Iteration   4: 1510804.168 ops/s
[info] # Warmup Iteration   5: 1479778.643 ops/s
[info] Iteration   1: 1344547.530 ops/s
[info] Iteration   2: 1537206.448 ops/s
[info] Iteration   3: 1529314.272 ops/s
[info] Iteration   4: 1539096.215 ops/s
[info] Iteration   5: 1544100.507 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1498852.994 ±(99.9%) 332785.135 ops/s [Average]
[info]   (min, avg, max) = (1344547.530, 1498852.994, 1544100.507), stdev = 86423.243
[info]   CI (99.9%): [1166067.859, 1831638.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:CPI":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   21.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1024.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1805.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   12.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-stores":
[info]   17.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:branch-misses":
[info]   2.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:branches":
[info]   2551.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:cycles":
[info]   2538.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   989.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1714.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:instructions":
[info]   11421.051 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:44:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1602501.105 ops/s
[info] # Warmup Iteration   2: 1767074.832 ops/s
[info] # Warmup Iteration   3: 1735963.280 ops/s
[info] # Warmup Iteration   4: 1780841.602 ops/s
[info] # Warmup Iteration   5: 1780493.581 ops/s
[info] Iteration   1: 1780778.723 ops/s
[info] Iteration   2: 1780072.549 ops/s
[info] Iteration   3: 1780898.813 ops/s
[info] Iteration   4: 1756047.303 ops/s
[info] Iteration   5: 1746217.455 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1768802.969 ±(99.9%) 63551.493 ops/s [Average]
[info]   (min, avg, max) = (1746217.455, 1768802.969, 1780898.813), stdev = 16504.121
[info]   CI (99.9%): [1705251.476, 1832354.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   971.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1591.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2345.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2153.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   962.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1578.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   10633.794 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:44:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 67689.889 ops/s
[info] # Warmup Iteration   2: 137370.198 ops/s
[info] # Warmup Iteration   3: 138130.635 ops/s
[info] # Warmup Iteration   4: 138001.139 ops/s
[info] # Warmup Iteration   5: 138486.810 ops/s
[info] Iteration   1: 138224.038 ops/s
[info] Iteration   2: 138405.799 ops/s
[info] Iteration   3: 138869.902 ops/s
[info] Iteration   4: 138513.987 ops/s
[info] Iteration   5: 136186.123 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   138039.970 ±(99.9%) 4092.358 ops/s [Average]
[info]   (min, avg, max) = (136186.123, 138039.970, 138869.902), stdev = 1062.772
[info]   CI (99.9%): [133947.612, 142132.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   494.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-loads":
[info]   22406.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-stores":
[info]   13888.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   8.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-loads":
[info]   3.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-store-misses":
[info]   15.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-stores":
[info]   61.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:branch-misses":
[info]   26.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:branches":
[info]   22987.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:cycles":
[info]   27778.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-loads":
[info]   22209.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-stores":
[info]   13823.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-loads":
[info]   0.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:instructions":
[info]   105160.289 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:43:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22543.255 ops/s
[info] # Warmup Iteration   2: 41445.249 ops/s
[info] # Warmup Iteration   3: 41419.588 ops/s
[info] # Warmup Iteration   4: 41564.885 ops/s
[info] # Warmup Iteration   5: 41678.143 ops/s
[info] Iteration   1: 41159.049 ops/s
[info] Iteration   2: 41055.107 ops/s
[info] Iteration   3: 41785.610 ops/s
[info] Iteration   4: 41807.377 ops/s
[info] Iteration   5: 41768.713 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   41515.171 ±(99.9%) 1442.433 ops/s [Average]
[info]   (min, avg, max) = (41055.107, 41515.171, 41807.377), stdev = 374.595
[info]   CI (99.9%): [40072.738, 42957.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1117.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   69101.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   32783.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   69.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.863 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-loads":
[info]   7.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-store-misses":
[info]   7.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-stores":
[info]   122.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:branch-misses":
[info]   22.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:branches":
[info]   68639.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:cycles":
[info]   91919.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.900 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-loads":
[info]   66227.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-stores":
[info]   31374.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:iTLB-loads":
[info]   1.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:instructions":
[info]   301230.810 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:43:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 707795.071 ops/s
[info] # Warmup Iteration   2: 773781.282 ops/s
[info] # Warmup Iteration   3: 779776.814 ops/s
[info] # Warmup Iteration   4: 780979.694 ops/s
[info] # Warmup Iteration   5: 783754.584 ops/s
[info] Iteration   1: 781167.183 ops/s
[info] Iteration   2: 781606.434 ops/s
[info] Iteration   3: 781728.259 ops/s
[info] Iteration   4: 782767.720 ops/s
[info] Iteration   5: 782722.185 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   781998.356 ±(99.9%) 2745.359 ops/s [Average]
[info]   (min, avg, max) = (781167.183, 781998.356, 782767.720), stdev = 712.961
[info]   CI (99.9%): [779252.998, 784743.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:CPI":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   49.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   3257.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2165.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-stores":
[info]   12.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:branch-misses":
[info]   7.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:branches":
[info]   4719.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:cycles":
[info]   4839.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-loads":
[info]   3256.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2098.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:instructions":
[info]   20978.205 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:43:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7005.622 ops/s
[info] # Warmup Iteration   2: 30180.283 ops/s
[info] # Warmup Iteration   3: 30417.107 ops/s
[info] # Warmup Iteration   4: 30550.254 ops/s
[info] # Warmup Iteration   5: 30840.146 ops/s
[info] Iteration   1: 32035.055 ops/s
[info] Iteration   2: 31988.342 ops/s
[info] Iteration   3: 31758.947 ops/s
[info] Iteration   4: 32092.199 ops/s
[info] Iteration   5: 32084.284 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   31991.765 ±(99.9%) 526.345 ops/s [Average]
[info]   (min, avg, max) = (31758.947, 31991.765, 32092.199), stdev = 136.690
[info]   CI (99.9%): [31465.420, 32518.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2433.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-dcache-loads":
[info]   93251.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-dcache-stores":
[info]   52847.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   373.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-load-misses":
[info]   5.894 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-loads":
[info]   38.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-store-misses":
[info]   48.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-stores":
[info]   410.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:branch-misses":
[info]   42.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:branches":
[info]   87746.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:cycles":
[info]   121422.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-loads":
[info]   94900.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-stores":
[info]   54684.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:iTLB-loads":
[info]   1.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:instructions":
[info]   395556.896 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:43:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 217346.645 ops/s
[info] # Warmup Iteration   2: 303920.039 ops/s
[info] # Warmup Iteration   3: 313830.749 ops/s
[info] # Warmup Iteration   4: 306039.830 ops/s
[info] # Warmup Iteration   5: 312190.391 ops/s
[info] Iteration   1: 302909.187 ops/s
[info] Iteration   2: 303941.511 ops/s
[info] Iteration   3: 305327.564 ops/s
[info] Iteration   4: 304869.591 ops/s
[info] Iteration   5: 304923.707 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   304394.312 ±(99.9%) 3747.081 ops/s [Average]
[info]   (min, avg, max) = (302909.187, 304394.312, 305327.564), stdev = 973.105
[info]   CI (99.9%): [300647.231, 308141.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   128.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   9692.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   5265.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-loads":
[info]   1.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   4.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-stores":
[info]   18.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:branch-misses":
[info]   3.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:branches":
[info]   10996.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:cycles":
[info]   12144.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-loads":
[info]   9770.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-stores":
[info]   5199.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:instructions":
[info]   50033.069 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:42:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1697659.523 ops/s
[info] # Warmup Iteration   2: 1981357.949 ops/s
[info] # Warmup Iteration   3: 1998240.045 ops/s
[info] # Warmup Iteration   4: 2003704.864 ops/s
[info] # Warmup Iteration   5: 2001516.313 ops/s
[info] Iteration   1: 2011370.170 ops/s
[info] Iteration   2: 2006283.102 ops/s
[info] Iteration   3: 2002588.168 ops/s
[info] Iteration   4: 2008332.946 ops/s
[info] Iteration   5: 2007211.639 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   2007157.205 ±(99.9%) 12294.136 ops/s [Average]
[info]   (min, avg, max) = (2002588.168, 2007157.205, 2011370.170), stdev = 3192.748
[info]   CI (99.9%): [1994863.069, 2019451.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:CPI":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   14.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   613.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1344.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   6.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-stores":
[info]   11.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:branch-misses":
[info]   2.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:branches":
[info]   1966.635 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:cycles":
[info]   1889.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   607.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1307.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:instructions":
[info]   8672.251 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:42:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2058813.338 ops/s
[info] # Warmup Iteration   2: 2208972.506 ops/s
[info] # Warmup Iteration   3: 2185382.159 ops/s
[info] # Warmup Iteration   4: 2177692.571 ops/s
[info] # Warmup Iteration   5: 2154480.516 ops/s
[info] Iteration   1: 2190192.613 ops/s
[info] Iteration   2: 2187158.194 ops/s
[info] Iteration   3: 2195019.546 ops/s
[info] Iteration   4: 2200742.460 ops/s
[info] Iteration   5: 2215171.250 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   2197656.812 ±(99.9%) 42582.584 ops/s [Average]
[info]   (min, avg, max) = (2187158.194, 2197656.812, 2215171.250), stdev = 11058.562
[info]   CI (99.9%): [2155074.228, 2240239.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   567.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1174.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1807.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1703.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   562.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1181.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   8062.656 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:42:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 140296.432 ops/s
[info] # Warmup Iteration   2: 255739.899 ops/s
[info] # Warmup Iteration   3: 257489.703 ops/s
[info] # Warmup Iteration   4: 257970.947 ops/s
[info] # Warmup Iteration   5: 257067.885 ops/s
[info] Iteration   1: 249157.302 ops/s
[info] Iteration   2: 248068.772 ops/s
[info] Iteration   3: 250658.610 ops/s
[info] Iteration   4: 254995.869 ops/s
[info] Iteration   5: 248993.521 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   250374.815 ±(99.9%) 10570.496 ops/s [Average]
[info]   (min, avg, max) = (248068.772, 250374.815, 254995.869), stdev = 2745.124
[info]   CI (99.9%): [239804.319, 260945.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:CPI":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   189.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-dcache-loads":
[info]   12297.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-dcache-stores":
[info]   7052.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   1.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-loads":
[info]   2.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-store-misses":
[info]   10.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-stores":
[info]   29.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:branch-misses":
[info]   5.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:branches":
[info]   11722.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:cycles":
[info]   14979.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-loads":
[info]   12694.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-stores":
[info]   7156.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:iTLB-loads":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:instructions":
[info]   59107.947 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:42:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 44701.509 ops/s
[info] # Warmup Iteration   2: 64320.070 ops/s
[info] # Warmup Iteration   3: 63962.417 ops/s
[info] # Warmup Iteration   4: 67424.261 ops/s
[info] # Warmup Iteration   5: 66787.598 ops/s
[info] Iteration   1: 66737.396 ops/s
[info] Iteration   2: 66381.450 ops/s
[info] Iteration   3: 65969.866 ops/s
[info] Iteration   4: 65634.951 ops/s
[info] Iteration   5: 65822.283 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   66109.189 ±(99.9%) 1717.099 ops/s [Average]
[info]   (min, avg, max) = (65634.951, 66109.189, 66737.396), stdev = 445.925
[info]   CI (99.9%): [64392.090, 67826.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:CPI":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-load-misses":
[info]   1269.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-loads":
[info]   36574.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-stores":
[info]   18433.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-icache-load-misses":
[info]   14.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-load-misses":
[info]   0.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-loads":
[info]   11.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-store-misses":
[info]   58.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-stores":
[info]   136.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:branch-misses":
[info]   109.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:branches":
[info]   50672.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:cycles":
[info]   56893.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-load-misses":
[info]   2.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-loads":
[info]   37028.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-store-misses":
[info]   0.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-stores":
[info]   18105.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:iTLB-load-misses":
[info]   0.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:iTLB-loads":
[info]   0.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:instructions":
[info]   193351.173 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:41:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 50799.512 ops/s
[info] # Warmup Iteration   2: 76862.474 ops/s
[info] # Warmup Iteration   3: 74720.568 ops/s
[info] # Warmup Iteration   4: 75233.934 ops/s
[info] # Warmup Iteration   5: 75625.826 ops/s
[info] Iteration   1: 75631.425 ops/s
[info] Iteration   2: 75764.725 ops/s
[info] Iteration   3: 77767.309 ops/s
[info] Iteration   4: 78907.576 ops/s
[info] Iteration   5: 78487.064 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   77311.620 ±(99.9%) 5887.941 ops/s [Average]
[info]   (min, avg, max) = (75631.425, 77311.620, 78907.576), stdev = 1529.079
[info]   CI (99.9%): [71423.679, 83199.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:CPI":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1052.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   33196.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   17490.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   36.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-loads":
[info]   9.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-store-misses":
[info]   4.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-stores":
[info]   41.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:branch-misses":
[info]   100.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:branches":
[info]   40173.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:cycles":
[info]   49187.968 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-loads":
[info]   31676.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-stores":
[info]   16538.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:instructions":
[info]   164859.667 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:41:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 82818.079 ops/s
[info] # Warmup Iteration   2: 88739.570 ops/s
[info] # Warmup Iteration   3: 89612.647 ops/s
[info] # Warmup Iteration   4: 90020.409 ops/s
[info] # Warmup Iteration   5: 89715.954 ops/s
[info] Iteration   1: 89599.842 ops/s
[info] Iteration   2: 87009.497 ops/s
[info] Iteration   3: 87282.099 ops/s
[info] Iteration   4: 89762.909 ops/s
[info] Iteration   5: 88699.977 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   88470.865 ±(99.9%) 4925.673 ops/s [Average]
[info]   (min, avg, max) = (87009.497, 88470.865, 89762.909), stdev = 1279.182
[info]   CI (99.9%): [83545.192, 93396.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   772.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   26174.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   13830.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   8.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-loads":
[info]   7.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   4.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-stores":
[info]   38.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:branch-misses":
[info]   100.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:branches":
[info]   37767.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:cycles":
[info]   42832.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-loads":
[info]   26299.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-stores":
[info]   13714.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:instructions":
[info]   141600.218 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:41:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 18814.474 ops/s
[info] # Warmup Iteration   2: 42839.350 ops/s
[info] # Warmup Iteration   3: 42786.959 ops/s
[info] # Warmup Iteration   4: 43669.789 ops/s
[info] # Warmup Iteration   5: 43765.064 ops/s
[info] Iteration   1: 43111.726 ops/s
[info] Iteration   2: 42272.088 ops/s
[info] Iteration   3: 43910.828 ops/s
[info] Iteration   4: 43771.907 ops/s
[info] Iteration   5: 43853.589 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   43384.028 ±(99.9%) 2694.773 ops/s [Average]
[info]   (min, avg, max) = (42272.088, 43384.028, 43910.828), stdev = 699.824
[info]   CI (99.9%): [40689.255, 46078.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:CPI":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2584.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-loads":
[info]   58038.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-stores":
[info]   37609.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   264.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-loads":
[info]   61.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-store-misses":
[info]   29.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-stores":
[info]   272.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:branch-misses":
[info]   313.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:branches":
[info]   56717.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:cycles":
[info]   88501.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-loads":
[info]   59225.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-stores":
[info]   38033.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-loads":
[info]   1.636 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:instructions":
[info]   256795.087 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:41:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 73901.928 ops/s
[info] # Warmup Iteration   2: 110784.626 ops/s
[info] # Warmup Iteration   3: 112208.481 ops/s
[info] # Warmup Iteration   4: 111828.607 ops/s
[info] # Warmup Iteration   5: 112493.136 ops/s
[info] Iteration   1: 111796.874 ops/s
[info] Iteration   2: 111952.469 ops/s
[info] Iteration   3: 112531.973 ops/s
[info] Iteration   4: 111752.932 ops/s
[info] Iteration   5: 111915.968 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   111990.043 ±(99.9%) 1208.702 ops/s [Average]
[info]   (min, avg, max) = (111752.932, 111990.043, 112531.973), stdev = 313.896
[info]   CI (99.9%): [110781.341, 113198.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:CPI":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   953.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-loads":
[info]   18094.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-stores":
[info]   11731.851 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-load-misses":
[info]   0.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-loads":
[info]   2.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-store-misses":
[info]   129.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-stores":
[info]   188.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:branch-misses":
[info]   88.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:branches":
[info]   40959.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:cycles":
[info]   34815.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-load-misses":
[info]   3.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-loads":
[info]   17798.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-stores":
[info]   11385.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:iTLB-loads":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:instructions":
[info]   126691.440 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:41:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 199643.444 ops/s
[info] # Warmup Iteration   2: 297566.914 ops/s
[info] # Warmup Iteration   3: 302903.033 ops/s
[info] # Warmup Iteration   4: 311512.696 ops/s
[info] # Warmup Iteration   5: 312686.354 ops/s
[info] Iteration   1: 308680.430 ops/s
[info] Iteration   2: 308208.410 ops/s
[info] Iteration   3: 310744.120 ops/s
[info] Iteration   4: 308715.763 ops/s
[info] Iteration   5: 308964.742 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   309062.693 ±(99.9%) 3769.442 ops/s [Average]
[info]   (min, avg, max) = (308208.410, 309062.693, 310744.120), stdev = 978.912
[info]   CI (99.9%): [305293.251, 312832.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:CPI":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   514.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   6754.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   4026.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   26.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-stores":
[info]   32.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:branch-misses":
[info]   9.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:branches":
[info]   13490.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:cycles":
[info]   12301.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-loads":
[info]   6701.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-stores":
[info]   3914.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:instructions":
[info]   44619.500 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:40:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 582833.503 ops/s
[info] # Warmup Iteration   2: 646379.201 ops/s
[info] # Warmup Iteration   3: 661644.717 ops/s
[info] # Warmup Iteration   4: 644383.195 ops/s
[info] # Warmup Iteration   5: 643165.856 ops/s
[info] Iteration   1: 646770.390 ops/s
[info] Iteration   2: 644085.135 ops/s
[info] Iteration   3: 647757.699 ops/s
[info] Iteration   4: 665375.356 ops/s
[info] Iteration   5: 669909.591 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   654779.634 ±(99.9%) 45926.608 ops/s [Average]
[info]   (min, avg, max) = (644085.135, 654779.634, 669909.591), stdev = 11926.994
[info]   CI (99.9%): [608853.026, 700706.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   227.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2663.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2712.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   2.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   24.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-stores":
[info]   29.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:branch-misses":
[info]   6.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:branches":
[info]   6272.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:cycles":
[info]   5819.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2678.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2714.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:instructions":
[info]   22653.747 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:40:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 641112.477 ops/s
[info] # Warmup Iteration   2: 682453.268 ops/s
[info] # Warmup Iteration   3: 694223.052 ops/s
[info] # Warmup Iteration   4: 694311.788 ops/s
[info] # Warmup Iteration   5: 701569.889 ops/s
[info] Iteration   1: 695107.946 ops/s
[info] Iteration   2: 678237.056 ops/s
[info] Iteration   3: 688522.150 ops/s
[info] Iteration   4: 694294.283 ops/s
[info] Iteration   5: 704067.737 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   692045.834 ±(99.9%) 36634.628 ops/s [Average]
[info]   (min, avg, max) = (678237.056, 692045.834, 704067.737), stdev = 9513.896
[info]   CI (99.9%): [655411.207, 728680.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   218.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2508.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2347.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   10.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5798.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   5489.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2513.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2349.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   20958.447 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:40:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 169935.113 ops/s
[info] # Warmup Iteration   2: 220808.241 ops/s
[info] # Warmup Iteration   3: 231657.229 ops/s
[info] # Warmup Iteration   4: 225730.538 ops/s
[info] # Warmup Iteration   5: 230299.943 ops/s
[info] Iteration   1: 229683.159 ops/s
[info] Iteration   2: 231523.573 ops/s
[info] Iteration   3: 228245.847 ops/s
[info] Iteration   4: 223434.219 ops/s
[info] Iteration   5: 229429.617 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   228463.283 ±(99.9%) 11731.205 ops/s [Average]
[info]   (min, avg, max) = (223434.219, 228463.283, 231523.573), stdev = 3046.557
[info]   CI (99.9%): [216732.078, 240194.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:CPI":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   604.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-loads":
[info]   13425.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-stores":
[info]   6150.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-loads":
[info]   1.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-store-misses":
[info]   29.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-stores":
[info]   41.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:branch-misses":
[info]   16.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:branches":
[info]   16196.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:cycles":
[info]   16723.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-loads":
[info]   13188.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-stores":
[info]   5873.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-loads":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:instructions":
[info]   61898.038 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:40:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 73300.795 ops/s
[info] # Warmup Iteration   2: 113638.035 ops/s
[info] # Warmup Iteration   3: 120565.015 ops/s
[info] # Warmup Iteration   4: 122605.704 ops/s
[info] # Warmup Iteration   5: 122352.411 ops/s
[info] Iteration   1: 122243.277 ops/s
[info] Iteration   2: 122332.726 ops/s
[info] Iteration   3: 122828.299 ops/s
[info] Iteration   4: 122764.742 ops/s
[info] Iteration   5: 119028.167 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   121839.442 ±(99.9%) 6131.991 ops/s [Average]
[info]   (min, avg, max) = (119028.167, 121839.442, 122828.299), stdev = 1592.459
[info]   CI (99.9%): [115707.451, 127971.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:CPI":
[info]   0.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-load-misses":
[info]   455.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-loads":
[info]   24531.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-stores":
[info]   12537.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-icache-load-misses":
[info]   2.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-load-misses":
[info]   0.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-loads":
[info]   3.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-store-misses":
[info]   38.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-stores":
[info]   76.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:branch-misses":
[info]   40.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:branches":
[info]   27820.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:cycles":
[info]   31233.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-load-misses":
[info]   1.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-loads":
[info]   24806.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-store-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-stores":
[info]   12477.357 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-load-misses":
[info]   0.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-loads":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:instructions":
[info]   114925.165 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:39:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 103940.575 ops/s
[info] # Warmup Iteration   2: 184616.165 ops/s
[info] # Warmup Iteration   3: 186013.895 ops/s
[info] # Warmup Iteration   4: 185330.662 ops/s
[info] # Warmup Iteration   5: 185371.825 ops/s
[info] Iteration   1: 186240.160 ops/s
[info] Iteration   2: 178131.221 ops/s
[info] Iteration   3: 185296.887 ops/s
[info] Iteration   4: 185842.409 ops/s
[info] Iteration   5: 185180.324 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   184138.200 ±(99.9%) 13034.720 ops/s [Average]
[info]   (min, avg, max) = (178131.221, 184138.200, 186240.160), stdev = 3385.075
[info]   CI (99.9%): [171103.480, 197172.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:CPI":
[info]   0.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   185.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   17220.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   9365.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-loads":
[info]   2.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-store-misses":
[info]   3.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-stores":
[info]   18.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:branch-misses":
[info]   30.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:branches":
[info]   17960.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:cycles":
[info]   20901.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-loads":
[info]   16484.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-stores":
[info]   9021.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:instructions":
[info]   80997.020 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:39:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 426630.145 ops/s
[info] # Warmup Iteration   2: 459974.973 ops/s
[info] # Warmup Iteration   3: 470431.014 ops/s
[info] # Warmup Iteration   4: 471980.624 ops/s
[info] # Warmup Iteration   5: 466538.454 ops/s
[info] Iteration   1: 470827.754 ops/s
[info] Iteration   2: 470926.491 ops/s
[info] Iteration   3: 466013.367 ops/s
[info] Iteration   4: 466676.479 ops/s
[info] Iteration   5: 471639.794 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   469216.777 ±(99.9%) 10206.808 ops/s [Average]
[info]   (min, avg, max) = (466013.367, 469216.777, 471639.794), stdev = 2650.676
[info]   CI (99.9%): [459009.969, 479423.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   52.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   6819.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2734.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-stores":
[info]   12.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branch-misses":
[info]   1.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branches":
[info]   7733.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:cycles":
[info]   8240.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-loads":
[info]   6654.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2625.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:instructions":
[info]   32141.227 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:39:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22257.291 ops/s
[info] # Warmup Iteration   2: 67046.987 ops/s
[info] # Warmup Iteration   3: 67233.181 ops/s
[info] # Warmup Iteration   4: 67864.248 ops/s
[info] # Warmup Iteration   5: 61400.292 ops/s
[info] Iteration   1: 67788.643 ops/s
[info] Iteration   2: 68059.143 ops/s
[info] Iteration   3: 67960.477 ops/s
[info] Iteration   4: 67739.415 ops/s
[info] Iteration   5: 67876.179 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   67884.771 ±(99.9%) 496.792 ops/s [Average]
[info]   (min, avg, max) = (67739.415, 67884.771, 68059.143), stdev = 129.015
[info]   CI (99.9%): [67387.979, 68381.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1804.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-loads":
[info]   48533.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-stores":
[info]   30206.582 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   148.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-load-misses":
[info]   2.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-loads":
[info]   14.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-store-misses":
[info]   44.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-stores":
[info]   248.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:branch-misses":
[info]   71.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:branches":
[info]   35313.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:cycles":
[info]   56029.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-loads":
[info]   48195.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-stores":
[info]   30333.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-loads":
[info]   0.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:instructions":
[info]   182350.744 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:39:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 126158.249 ops/s
[info] # Warmup Iteration   2: 180428.676 ops/s
[info] # Warmup Iteration   3: 180247.581 ops/s
[info] # Warmup Iteration   4: 183586.223 ops/s
[info] # Warmup Iteration   5: 184560.379 ops/s
[info] Iteration   1: 183960.106 ops/s
[info] Iteration   2: 178175.473 ops/s
[info] Iteration   3: 178042.688 ops/s
[info] Iteration   4: 181970.106 ops/s
[info] Iteration   5: 180048.666 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   180439.408 ±(99.9%) 9771.971 ops/s [Average]
[info]   (min, avg, max) = (178042.688, 180439.408, 183960.106), stdev = 2537.750
[info]   CI (99.9%): [170667.437, 190211.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:CPI":
[info]   0.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   195.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-loads":
[info]   15038.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-stores":
[info]   9497.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-load-misses":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-loads":
[info]   1.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-store-misses":
[info]   92.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-stores":
[info]   122.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:branch-misses":
[info]   15.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:branches":
[info]   22350.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:cycles":
[info]   20931.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-loads":
[info]   15171.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-stores":
[info]   9314.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-loads":
[info]   0.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:instructions":
[info]   78322.727 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:39:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 363324.543 ops/s
[info] # Warmup Iteration   2: 524980.820 ops/s
[info] # Warmup Iteration   3: 524869.765 ops/s
[info] # Warmup Iteration   4: 525268.196 ops/s
[info] # Warmup Iteration   5: 525205.228 ops/s
[info] Iteration   1: 524740.932 ops/s
[info] Iteration   2: 545664.841 ops/s
[info] Iteration   3: 542624.139 ops/s
[info] Iteration   4: 542501.937 ops/s
[info] Iteration   5: 541008.273 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   539308.024 ±(99.9%) 32026.261 ops/s [Average]
[info]   (min, avg, max) = (524740.932, 539308.024, 545664.841), stdev = 8317.118
[info]   CI (99.9%): [507281.763, 571334.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:CPI":
[info]   0.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   27.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   4669.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2959.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   8.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-stores":
[info]   14.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branch-misses":
[info]   3.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branches":
[info]   7726.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:cycles":
[info]   7122.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-loads":
[info]   4583.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2936.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:instructions":
[info]   27650.228 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:38:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1155839.965 ops/s
[info] # Warmup Iteration   2: 1252722.814 ops/s
[info] # Warmup Iteration   3: 1283551.380 ops/s
[info] # Warmup Iteration   4: 1273722.514 ops/s
[info] # Warmup Iteration   5: 1285181.402 ops/s
[info] Iteration   1: 1275724.479 ops/s
[info] Iteration   2: 1280769.378 ops/s
[info] Iteration   3: 1275854.972 ops/s
[info] Iteration   4: 1280458.551 ops/s
[info] Iteration   5: 1268847.580 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1276330.992 ±(99.9%) 18600.237 ops/s [Average]
[info]   (min, avg, max) = (1268847.580, 1276330.992, 1280769.378), stdev = 4830.422
[info]   CI (99.9%): [1257730.755, 1294931.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   19.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1902.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2166.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   10.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-stores":
[info]   16.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branches":
[info]   2519.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:cycles":
[info]   2983.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1848.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2083.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:instructions":
[info]   13387.090 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:38:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1283558.903 ops/s
[info] # Warmup Iteration   2: 1367949.936 ops/s
[info] # Warmup Iteration   3: 1381776.855 ops/s
[info] # Warmup Iteration   4: 1379766.324 ops/s
[info] # Warmup Iteration   5: 1378996.038 ops/s
[info] Iteration   1: 1379680.956 ops/s
[info] Iteration   2: 1379751.434 ops/s
[info] Iteration   3: 1353361.677 ops/s
[info] Iteration   4: 1346997.445 ops/s
[info] Iteration   5: 1351239.937 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1362206.290 ±(99.9%) 62179.049 ops/s [Average]
[info]   (min, avg, max) = (1346997.445, 1362206.290, 1379751.434), stdev = 16147.702
[info]   CI (99.9%): [1300027.240, 1424385.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1856.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1972.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2337.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2780.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1845.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1943.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   12493.547 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:38:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 196087.668 ops/s
[info] # Warmup Iteration   2: 422871.834 ops/s
[info] # Warmup Iteration   3: 425170.507 ops/s
[info] # Warmup Iteration   4: 426211.758 ops/s
[info] # Warmup Iteration   5: 425334.900 ops/s
[info] Iteration   1: 411010.540 ops/s
[info] Iteration   2: 409797.771 ops/s
[info] Iteration   3: 409845.189 ops/s
[info] Iteration   4: 409326.955 ops/s
[info] Iteration   5: 418371.274 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   411670.346 ±(99.9%) 14620.662 ops/s [Average]
[info]   (min, avg, max) = (409326.955, 411670.346, 418371.274), stdev = 3796.939
[info]   CI (99.9%): [397049.684, 426291.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:CPI":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   76.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-loads":
[info]   7047.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-stores":
[info]   4222.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   1.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-loads":
[info]   1.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-store-misses":
[info]   15.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-stores":
[info]   30.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:branch-misses":
[info]   4.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:branches":
[info]   9051.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:cycles":
[info]   9098.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-loads":
[info]   7131.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-stores":
[info]   4375.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-loads":
[info]   0.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:instructions":
[info]   35819.309 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:38:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 294.791 ops/s
[info] # Warmup Iteration   2: 530.106 ops/s
[info] # Warmup Iteration   3: 556.057 ops/s
[info] # Warmup Iteration   4: 546.698 ops/s
[info] # Warmup Iteration   5: 526.986 ops/s
[info] Iteration   1: 533.513 ops/s
[info] Iteration   2: 557.731 ops/s
[info] Iteration   3: 557.298 ops/s
[info] Iteration   4: 551.926 ops/s
[info] Iteration   5: 528.239 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   545.742 ±(99.9%) 53.475 ops/s [Average]
[info]   (min, avg, max) = (528.239, 545.742, 557.731), stdev = 13.887
[info]   CI (99.9%): [492.267, 599.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   252953.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-loads":
[info]   6536357.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-stores":
[info]   3753141.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   46343.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-load-misses":
[info]   204.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-loads":
[info]   14483.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-store-misses":
[info]   7122.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-stores":
[info]   14005.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:branch-misses":
[info]   26235.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:branches":
[info]   3943460.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:cycles":
[info]   7090649.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-load-misses":
[info]   341.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-loads":
[info]   6601048.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-store-misses":
[info]   15.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-stores":
[info]   3760797.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-load-misses":
[info]   82.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-loads":
[info]   385.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:instructions":
[info]   21324784.945 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:37:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 298.715 ops/s
[info] # Warmup Iteration   2: 568.666 ops/s
[info] # Warmup Iteration   3: 579.595 ops/s
[info] # Warmup Iteration   4: 567.966 ops/s
[info] # Warmup Iteration   5: 578.361 ops/s
[info] Iteration   1: 563.112 ops/s
[info] Iteration   2: 575.346 ops/s
[info] Iteration   3: 569.993 ops/s
[info] Iteration   4: 570.106 ops/s
[info] Iteration   5: 515.639 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   558.839 ±(99.9%) 94.485 ops/s [Average]
[info]   (min, avg, max) = (515.639, 558.839, 575.346), stdev = 24.538
[info]   CI (99.9%): [464.354, 653.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:CPI":
[info]   0.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   267381.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   6553794.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   3851029.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   61094.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   951.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-loads":
[info]   25246.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   7288.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-stores":
[info]   16110.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:branch-misses":
[info]   26695.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:branches":
[info]   4018144.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:cycles":
[info]   7818760.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   744.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   6662920.583 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   30.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   3887939.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   398.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   1548.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:instructions":
[info]   22007431.864 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:37:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 35216.130 ops/s
[info] # Warmup Iteration   2: 39552.192 ops/s
[info] # Warmup Iteration   3: 39650.202 ops/s
[info] # Warmup Iteration   4: 39884.958 ops/s
[info] # Warmup Iteration   5: 40303.520 ops/s
[info] Iteration   1: 40036.255 ops/s
[info] Iteration   2: 40052.616 ops/s
[info] Iteration   3: 40353.188 ops/s
[info] Iteration   4: 40001.859 ops/s
[info] Iteration   5: 40466.870 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   40182.158 ±(99.9%) 818.859 ops/s [Average]
[info]   (min, avg, max) = (40001.859, 40182.158, 40466.870), stdev = 212.655
[info]   CI (99.9%): [39363.298, 41001.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:CPI":
[info]   0.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   3876.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   40553.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   21450.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   4.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   1385.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   28.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   89.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branch-misses":
[info]   235.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branches":
[info]   64448.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:cycles":
[info]   94710.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   4.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   40829.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   21132.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:instructions":
[info]   244824.402 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:37:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 261.826 ops/s
[info] # Warmup Iteration   2: 531.841 ops/s
[info] # Warmup Iteration   3: 556.663 ops/s
[info] # Warmup Iteration   4: 562.952 ops/s
[info] # Warmup Iteration   5: 565.105 ops/s
[info] Iteration   1: 565.298 ops/s
[info] Iteration   2: 561.930 ops/s
[info] Iteration   3: 566.214 ops/s
[info] Iteration   4: 555.442 ops/s
[info] Iteration   5: 532.738 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   556.324 ±(99.9%) 53.316 ops/s [Average]
[info]   (min, avg, max) = (532.738, 556.324, 566.214), stdev = 13.846
[info]   CI (99.9%): [503.009, 609.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:CPI":
[info]   0.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   240733.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   6413750.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   3720182.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   62015.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   497.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-loads":
[info]   16592.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   7060.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-stores":
[info]   13262.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:branch-misses":
[info]   23747.809 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:branches":
[info]   4033407.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:cycles":
[info]   7023929.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   674.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-loads":
[info]   6448038.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   23.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-stores":
[info]   3838088.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   205.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-loads":
[info]   859.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:instructions":
[info]   21744863.979 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:37:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9391.073 ops/s
[info] # Warmup Iteration   2: 14198.346 ops/s
[info] # Warmup Iteration   3: 14181.178 ops/s
[info] # Warmup Iteration   4: 13976.493 ops/s
[info] # Warmup Iteration   5: 14157.301 ops/s
[info] Iteration   1: 14169.747 ops/s
[info] Iteration   2: 14258.076 ops/s
[info] Iteration   3: 14156.289 ops/s
[info] Iteration   4: 14083.062 ops/s
[info] Iteration   5: 14223.768 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   14178.188 ±(99.9%) 258.735 ops/s [Average]
[info]   (min, avg, max) = (14083.062, 14178.188, 14258.076), stdev = 67.193
[info]   CI (99.9%): [13919.454, 14436.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:CPI":
[info]   0.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   4180.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   174302.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   89507.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   422.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-load-misses":
[info]   8.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-loads":
[info]   307.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-store-misses":
[info]   395.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-stores":
[info]   843.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:branch-misses":
[info]   826.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:branches":
[info]   219820.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:cycles":
[info]   283045.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   88.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-loads":
[info]   177322.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   5.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-stores":
[info]   88884.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   4.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-loads":
[info]   24.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:instructions":
[info]   842607.904 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:36:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11669.144 ops/s
[info] # Warmup Iteration   2: 17488.285 ops/s
[info] # Warmup Iteration   3: 18065.939 ops/s
[info] # Warmup Iteration   4: 18305.618 ops/s
[info] # Warmup Iteration   5: 18291.448 ops/s
[info] Iteration   1: 18356.162 ops/s
[info] Iteration   2: 18377.576 ops/s
[info] Iteration   3: 18420.708 ops/s
[info] Iteration   4: 18436.329 ops/s
[info] Iteration   5: 18359.605 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   18390.076 ±(99.9%) 140.332 ops/s [Average]
[info]   (min, avg, max) = (18356.162, 18390.076, 18436.329), stdev = 36.444
[info]   CI (99.9%): [18249.744, 18530.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   2589.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   155413.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   70959.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   46.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   4.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   123.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   138.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   356.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branch-misses":
[info]   594.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branches":
[info]   143221.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:cycles":
[info]   210944.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   62.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   153994.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.672 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   69773.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   1.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   7.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:instructions":
[info]   629714.653 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:36:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 187649.582 ops/s
[info] # Warmup Iteration   2: 198464.661 ops/s
[info] # Warmup Iteration   3: 209145.083 ops/s
[info] # Warmup Iteration   4: 200874.571 ops/s
[info] # Warmup Iteration   5: 205776.948 ops/s
[info] Iteration   1: 206093.530 ops/s
[info] Iteration   2: 207254.384 ops/s
[info] Iteration   3: 208477.945 ops/s
[info] Iteration   4: 207567.479 ops/s
[info] Iteration   5: 208228.923 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   207524.452 ±(99.9%) 3616.200 ops/s [Average]
[info]   (min, avg, max) = (206093.530, 207524.452, 208477.945), stdev = 939.116
[info]   CI (99.9%): [203908.252, 211140.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   956.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   12790.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   12352.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   4.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   61.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   96.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   27.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branches":
[info]   14166.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:cycles":
[info]   18732.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   12450.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   12083.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:instructions":
[info]   69574.684 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:36:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 206202.971 ops/s
[info] # Warmup Iteration   2: 223317.650 ops/s
[info] # Warmup Iteration   3: 229533.322 ops/s
[info] # Warmup Iteration   4: 230602.350 ops/s
[info] # Warmup Iteration   5: 230054.129 ops/s
[info] Iteration   1: 230828.343 ops/s
[info] Iteration   2: 229467.698 ops/s
[info] Iteration   3: 230287.490 ops/s
[info] Iteration   4: 230561.322 ops/s
[info] Iteration   5: 230667.309 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   230362.433 ±(99.9%) 2069.829 ops/s [Average]
[info]   (min, avg, max) = (229467.698, 230362.433, 230828.343), stdev = 537.528
[info]   CI (99.9%): [228292.603, 232432.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   810.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   12371.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   11207.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   29.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   13149.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   16658.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   12324.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   11208.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   65133.207 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:36:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11746.531 ops/s
[info] # Warmup Iteration   2: 17628.844 ops/s
[info] # Warmup Iteration   3: 17664.835 ops/s
[info] # Warmup Iteration   4: 17620.532 ops/s
[info] # Warmup Iteration   5: 17665.621 ops/s
[info] Iteration   1: 17687.287 ops/s
[info] Iteration   2: 17230.073 ops/s
[info] Iteration   3: 17685.602 ops/s
[info] Iteration   4: 17648.113 ops/s
[info] Iteration   5: 17757.001 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   17601.615 ±(99.9%) 813.990 ops/s [Average]
[info]   (min, avg, max) = (17230.073, 17601.615, 17757.001), stdev = 211.391
[info]   CI (99.9%): [16787.626, 18415.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:CPI":
[info]   0.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   3355.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   161779.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   74037.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   206.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   5.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-loads":
[info]   232.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   156.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-stores":
[info]   438.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:branch-misses":
[info]   619.679 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:branches":
[info]   144519.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:cycles":
[info]   224207.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   9.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-loads":
[info]   167679.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-stores":
[info]   74446.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   3.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-loads":
[info]   18.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:instructions":
[info]   653646.321 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:36:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1302764.865 ops/s
[info] # Warmup Iteration   2: 1419758.300 ops/s
[info] # Warmup Iteration   3: 1429466.603 ops/s
[info] # Warmup Iteration   4: 1429086.767 ops/s
[info] # Warmup Iteration   5: 1424959.794 ops/s
[info] Iteration   1: 1414018.223 ops/s
[info] Iteration   2: 1428075.690 ops/s
[info] Iteration   3: 1428009.275 ops/s
[info] Iteration   4: 1429035.662 ops/s
[info] Iteration   5: 1428865.132 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1425600.796 ±(99.9%) 24994.808 ops/s [Average]
[info]   (min, avg, max) = (1414018.223, 1425600.796, 1429035.662), stdev = 6491.072
[info]   CI (99.9%): [1400605.989, 1450595.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:CPI":
[info]   0.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   880.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   568.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-loads":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-stores":
[info]   0.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:branch-misses":
[info]   3.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:branches":
[info]   3313.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:cycles":
[info]   2665.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-loads":
[info]   883.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-stores":
[info]   563.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:instructions":
[info]   11754.578 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:35:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 25978.070 ops/s
[info] # Warmup Iteration   2: 80746.241 ops/s
[info] # Warmup Iteration   3: 80312.401 ops/s
[info] # Warmup Iteration   4: 81426.427 ops/s
[info] # Warmup Iteration   5: 78357.567 ops/s
[info] Iteration   1: 80515.106 ops/s
[info] Iteration   2: 81281.658 ops/s
[info] Iteration   3: 81627.052 ops/s
[info] Iteration   4: 81646.757 ops/s
[info] Iteration   5: 81528.702 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   81319.855 ±(99.9%) 1820.353 ops/s [Average]
[info]   (min, avg, max) = (80515.106, 81319.855, 81646.757), stdev = 472.740
[info]   CI (99.9%): [79499.502, 83140.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:CPI":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1554.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-dcache-loads":
[info]   40108.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-dcache-stores":
[info]   29637.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-icache-load-misses":
[info]   101.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-load-misses":
[info]   1.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-loads":
[info]   7.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-store-misses":
[info]   34.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-stores":
[info]   211.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:branch-misses":
[info]   47.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:branches":
[info]   30392.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:cycles":
[info]   47111.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-loads":
[info]   37762.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-stores":
[info]   28217.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:iTLB-loads":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:instructions":
[info]   149853.381 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:35:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1231904.949 ops/s
[info] # Warmup Iteration   2: 1862173.207 ops/s
[info] # Warmup Iteration   3: 1862218.613 ops/s
[info] # Warmup Iteration   4: 1856781.962 ops/s
[info] # Warmup Iteration   5: 1864763.838 ops/s
[info] Iteration   1: 1863800.334 ops/s
[info] Iteration   2: 1866531.876 ops/s
[info] Iteration   3: 1869393.189 ops/s
[info] Iteration   4: 1866563.543 ops/s
[info] Iteration   5: 1870600.135 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1867377.815 ±(99.9%) 10300.401 ops/s [Average]
[info]   (min, avg, max) = (1863800.334, 1867377.815, 1870600.135), stdev = 2674.981
[info]   CI (99.9%): [1857077.414, 1877678.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:CPI":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   13.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   707.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1132.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-loads":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-store-misses":
[info]   1.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-stores":
[info]   2.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:branch-misses":
[info]   2.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:branches":
[info]   2128.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:cycles":
[info]   2082.968 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-loads":
[info]   712.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-stores":
[info]   1077.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:instructions":
[info]   9116.177 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:35:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2052236.675 ops/s
[info] # Warmup Iteration   2: 2347262.181 ops/s
[info] # Warmup Iteration   3: 2365704.305 ops/s
[info] # Warmup Iteration   4: 2365327.643 ops/s
[info] # Warmup Iteration   5: 2374396.488 ops/s
[info] Iteration   1: 2374410.110 ops/s
[info] Iteration   2: 2372902.721 ops/s
[info] Iteration   3: 2373346.903 ops/s
[info] Iteration   4: 2369611.034 ops/s
[info] Iteration   5: 2368377.229 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   2371729.599 ±(99.9%) 9986.414 ops/s [Average]
[info]   (min, avg, max) = (2368377.229, 2371729.599, 2374410.110), stdev = 2593.440
[info]   CI (99.9%): [2361743.185, 2381716.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:CPI":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   7.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   480.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   961.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:branch-misses":
[info]   1.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:branches":
[info]   1959.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:cycles":
[info]   1625.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-loads":
[info]   476.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-stores":
[info]   948.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:instructions":
[info]   7792.403 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:35:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2267363.264 ops/s
[info] # Warmup Iteration   2: 2436638.788 ops/s
[info] # Warmup Iteration   3: 2446785.303 ops/s
[info] # Warmup Iteration   4: 2441610.136 ops/s
[info] # Warmup Iteration   5: 2444802.426 ops/s
[info] Iteration   1: 2483962.817 ops/s
[info] Iteration   2: 2476270.396 ops/s
[info] Iteration   3: 2484464.269 ops/s
[info] Iteration   4: 2377700.227 ops/s
[info] Iteration   5: 2488072.435 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2462094.029 ±(99.9%) 182416.837 ops/s [Average]
[info]   (min, avg, max) = (2377700.227, 2462094.029, 2488072.435), stdev = 47373.073
[info]   CI (99.9%): [2279677.192, 2644510.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   451.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   886.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1890.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1547.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   442.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   890.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   7510.511 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:34:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 19281.832 ops/s
[info] # Warmup Iteration   2: 47470.096 ops/s
[info] # Warmup Iteration   3: 47306.902 ops/s
[info] # Warmup Iteration   4: 47756.920 ops/s
[info] # Warmup Iteration   5: 49468.344 ops/s
[info] Iteration   1: 49460.996 ops/s
[info] Iteration   2: 49552.341 ops/s
[info] Iteration   3: 49553.699 ops/s
[info] Iteration   4: 48990.499 ops/s
[info] Iteration   5: 49501.757 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   49411.858 ±(99.9%) 919.115 ops/s [Average]
[info]   (min, avg, max) = (48990.499, 49411.858, 49553.699), stdev = 238.691
[info]   CI (99.9%): [48492.744, 50330.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1357.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-dcache-loads":
[info]   47988.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-dcache-stores":
[info]   34141.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-icache-load-misses":
[info]   12.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-load-misses":
[info]   3.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-loads":
[info]   9.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-store-misses":
[info]   7.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-stores":
[info]   81.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:branch-misses":
[info]   113.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:branches":
[info]   49202.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:cycles":
[info]   77821.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-loads":
[info]   47155.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-stores":
[info]   33620.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:iTLB-loads":
[info]   1.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:instructions":
[info]   233393.910 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:34:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 257374.165 ops/s
[info] # Warmup Iteration   2: 807948.752 ops/s
[info] # Warmup Iteration   3: 818663.758 ops/s
[info] # Warmup Iteration   4: 820208.265 ops/s
[info] # Warmup Iteration   5: 845320.307 ops/s
[info] Iteration   1: 853651.773 ops/s
[info] Iteration   2: 853367.563 ops/s
[info] Iteration   3: 853294.086 ops/s
[info] Iteration   4: 852553.958 ops/s
[info] Iteration   5: 844340.320 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   851441.540 ±(99.9%) 15365.398 ops/s [Average]
[info]   (min, avg, max) = (844340.320, 851441.540, 853651.773), stdev = 3990.345
[info]   CI (99.9%): [836076.142, 866806.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-dcache-load-misses":
[info]   79.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-dcache-loads":
[info]   2878.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-dcache-stores":
[info]   2326.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-icache-load-misses":
[info]   5.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-loads":
[info]   0.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-store-misses":
[info]   4.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-stores":
[info]   18.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:branch-misses":
[info]   1.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:branches":
[info]   2940.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:cycles":
[info]   4448.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-load-misses":
[info]   0.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-loads":
[info]   2945.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-stores":
[info]   2371.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:iTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:iTLB-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:instructions":
[info]   13275.803 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:34:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.723 ops/s
[info] # Warmup Iteration   2: 4524770.598 ops/s
[info] # Warmup Iteration   3: 4883887.356 ops/s
[info] # Warmup Iteration   4: 4973754.454 ops/s
[info] # Warmup Iteration   5: 4864464.486 ops/s
[info] Iteration   1: 4950700.023 ops/s
[info] Iteration   2: 4952518.070 ops/s
[info] Iteration   3: 4698599.536 ops/s
[info] Iteration   4: 4649370.528 ops/s
[info] Iteration   5: 4840517.872 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   4818341.206 ±(99.9%) 540817.592 ops/s [Average]
[info]   (min, avg, max) = (4649370.528, 4818341.206, 4952518.070), stdev = 140448.611
[info]   CI (99.9%): [4277523.614, 5359158.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   1.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   693.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   334.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:branch-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:branches":
[info]   690.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:cycles":
[info]   779.440 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-loads":
[info]   701.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-stores":
[info]   341.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:instructions":
[info]   2842.335 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:34:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 199518.428 ops/s
[info] # Warmup Iteration   2: 988085.962 ops/s
[info] # Warmup Iteration   3: 1003708.227 ops/s
[info] # Warmup Iteration   4: 1007179.826 ops/s
[info] # Warmup Iteration   5: 1004754.463 ops/s
[info] Iteration   1: 1004544.726 ops/s
[info] Iteration   2: 1005189.074 ops/s
[info] Iteration   3: 987695.743 ops/s
[info] Iteration   4: 954838.594 ops/s
[info] Iteration   5: 953730.611 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   981199.750 ±(99.9%) 98401.427 ops/s [Average]
[info]   (min, avg, max) = (953730.611, 981199.750, 1005189.074), stdev = 25554.538
[info]   CI (99.9%): [882798.323, 1079601.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:CPI":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   31.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   2814.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   2028.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   102.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-loads":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-stores":
[info]   5.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:branch-misses":
[info]   0.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:branches":
[info]   2120.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:cycles":
[info]   3848.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-loads":
[info]   2889.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-stores":
[info]   2053.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:instructions":
[info]   11321.702 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:33:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7912690.200 ops/s
[info] # Warmup Iteration   2: 9345591.524 ops/s
[info] # Warmup Iteration   3: 8790757.320 ops/s
[info] # Warmup Iteration   4: 8822615.153 ops/s
[info] # Warmup Iteration   5: 9277283.024 ops/s
[info] Iteration   1: 9241448.914 ops/s
[info] Iteration   2: 9128197.775 ops/s
[info] Iteration   3: 9264822.633 ops/s
[info] Iteration   4: 9257984.389 ops/s
[info] Iteration   5: 9265562.144 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   9231603.171 ±(99.9%) 225701.017 ops/s [Average]
[info]   (min, avg, max) = (9128197.775, 9231603.171, 9265562.144), stdev = 58613.837
[info]   CI (99.9%): [9005902.154, 9457304.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:CPI":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   312.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   114.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:branch-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:branches":
[info]   553.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:cycles":
[info]   416.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-loads":
[info]   311.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-stores":
[info]   113.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:instructions":
[info]   1819.986 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:33:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 18552.808 ops/s
[info] # Warmup Iteration   2: 386550.762 ops/s
[info] # Warmup Iteration   3: 470562.076 ops/s
[info] # Warmup Iteration   4: 470418.805 ops/s
[info] # Warmup Iteration   5: 457867.439 ops/s
[info] Iteration   1: 467399.618 ops/s
[info] Iteration   2: 480294.366 ops/s
[info] Iteration   3: 479694.673 ops/s
[info] Iteration   4: 475283.715 ops/s
[info] Iteration   5: 473626.170 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   475259.708 ±(99.9%) 20143.941 ops/s [Average]
[info]   (min, avg, max) = (467399.618, 475259.708, 480294.366), stdev = 5231.318
[info]   CI (99.9%): [455115.767, 495403.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:CPI":
[info]   0.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   170.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-dcache-loads":
[info]   5796.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-dcache-stores":
[info]   4122.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   294.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-loads":
[info]   2.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-store-misses":
[info]   2.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-stores":
[info]   20.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:branch-misses":
[info]   4.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:branches":
[info]   3900.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:cycles":
[info]   7948.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-loads":
[info]   5662.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-stores":
[info]   4013.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:iTLB-loads":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:instructions":
[info]   21894.619 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:33:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1613.958 ops/s
[info] # Warmup Iteration   2: 4041.569 ops/s
[info] # Warmup Iteration   3: 4285.671 ops/s
[info] # Warmup Iteration   4: 4504.270 ops/s
[info] # Warmup Iteration   5: 4498.799 ops/s
[info] Iteration   1: 4507.754 ops/s
[info] Iteration   2: 4511.710 ops/s
[info] Iteration   3: 4494.487 ops/s
[info] Iteration   4: 4500.554 ops/s
[info] Iteration   5: 4509.982 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   4504.898 ±(99.9%) 27.745 ops/s [Average]
[info]   (min, avg, max) = (4494.487, 4504.898, 4511.710), stdev = 7.205
[info]   CI (99.9%): [4477.152, 4532.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:CPI":
[info]   0.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-dcache-load-misses":
[info]   16556.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-dcache-loads":
[info]   493232.398 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-dcache-stores":
[info]   319990.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-icache-load-misses":
[info]   992.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-load-misses":
[info]   45.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-loads":
[info]   679.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-store-misses":
[info]   568.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-stores":
[info]   2824.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:branch-misses":
[info]   889.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:branches":
[info]   648955.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:cycles":
[info]   853183.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-load-misses":
[info]   24.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-loads":
[info]   509071.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-store-misses":
[info]   5.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-stores":
[info]   331272.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:iTLB-load-misses":
[info]   3.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:iTLB-loads":
[info]   11.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:instructions":
[info]   2739791.379 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:33:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1653.985 ops/s
[info] # Warmup Iteration   2: 6268.331 ops/s
[info] # Warmup Iteration   3: 6731.570 ops/s
[info] # Warmup Iteration   4: 6722.327 ops/s
[info] # Warmup Iteration   5: 6439.051 ops/s
[info] Iteration   1: 6659.757 ops/s
[info] Iteration   2: 6739.965 ops/s
[info] Iteration   3: 6749.150 ops/s
[info] Iteration   4: 6531.023 ops/s
[info] Iteration   5: 6401.152 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   6616.209 ±(99.9%) 572.412 ops/s [Average]
[info]   (min, avg, max) = (6401.152, 6616.209, 6749.150), stdev = 148.653
[info]   CI (99.9%): [6043.798, 7188.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   9095.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-dcache-loads":
[info]   352024.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-dcache-stores":
[info]   288760.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   706.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-load-misses":
[info]   24.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-loads":
[info]   331.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-store-misses":
[info]   126.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-stores":
[info]   1178.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:branch-misses":
[info]   738.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:branches":
[info]   378870.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:cycles":
[info]   567789.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-load-misses":
[info]   20.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-loads":
[info]   342228.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-stores":
[info]   283031.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:iTLB-load-misses":
[info]   2.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:iTLB-loads":
[info]   8.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:instructions":
[info]   1788288.296 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:33:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 41760.926 ops/s
[info] # Warmup Iteration   2: 48083.562 ops/s
[info] # Warmup Iteration   3: 47935.343 ops/s
[info] # Warmup Iteration   4: 48211.038 ops/s
[info] # Warmup Iteration   5: 48419.365 ops/s
[info] Iteration   1: 47739.680 ops/s
[info] Iteration   2: 46387.691 ops/s
[info] Iteration   3: 46407.820 ops/s
[info] Iteration   4: 46433.472 ops/s
[info] Iteration   5: 46458.021 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   46685.337 ±(99.9%) 2271.844 ops/s [Average]
[info]   (min, avg, max) = (46387.691, 46685.337, 47739.680), stdev = 589.991
[info]   CI (99.9%): [44413.492, 48957.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:CPI":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   647.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   50280.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   21525.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   33.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-load-misses":
[info]   3.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-loads":
[info]   6.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-store-misses":
[info]   5.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-stores":
[info]   59.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:branch-misses":
[info]   154.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:branches":
[info]   74059.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:cycles":
[info]   80250.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-loads":
[info]   48974.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-stores":
[info]   21315.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:instructions":
[info]   326196.814 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:32:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2860.447 ops/s
[info] # Warmup Iteration   2: 4829.179 ops/s
[info] # Warmup Iteration   3: 4806.930 ops/s
[info] # Warmup Iteration   4: 4882.022 ops/s
[info] # Warmup Iteration   5: 4949.914 ops/s
[info] Iteration   1: 4949.592 ops/s
[info] Iteration   2: 4976.178 ops/s
[info] Iteration   3: 4940.428 ops/s
[info] Iteration   4: 4969.761 ops/s
[info] Iteration   5: 4952.803 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4957.752 ±(99.9%) 56.949 ops/s [Average]
[info]   (min, avg, max) = (4940.428, 4957.752, 4976.178), stdev = 14.790
[info]   CI (99.9%): [4900.803, 5014.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:CPI":
[info]   0.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-dcache-load-misses":
[info]   10285.809 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-dcache-loads":
[info]   286122.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-dcache-stores":
[info]   216434.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-icache-load-misses":
[info]   993.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-load-misses":
[info]   12.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-loads":
[info]   440.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-store-misses":
[info]   1206.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-stores":
[info]   2350.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:branch-misses":
[info]   725.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:branches":
[info]   302596.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:cycles":
[info]   781967.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-load-misses":
[info]   21.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-loads":
[info]   281903.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-store-misses":
[info]   14.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-stores":
[info]   206625.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:iTLB-load-misses":
[info]   3.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:iTLB-loads":
[info]   12.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:instructions":
[info]   1593846.671 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:32:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2034.977 ops/s
[info] # Warmup Iteration   2: 4653.506 ops/s
[info] # Warmup Iteration   3: 4931.279 ops/s
[info] # Warmup Iteration   4: 5013.677 ops/s
[info] # Warmup Iteration   5: 5022.258 ops/s
[info] Iteration   1: 4922.799 ops/s
[info] Iteration   2: 4921.865 ops/s
[info] Iteration   3: 5020.489 ops/s
[info] Iteration   4: 5034.957 ops/s
[info] Iteration   5: 5020.237 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   4984.069 ±(99.9%) 218.229 ops/s [Average]
[info]   (min, avg, max) = (4921.865, 4984.069, 5034.957), stdev = 56.673
[info]   CI (99.9%): [4765.840, 5202.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:CPI":
[info]   0.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   4297.558 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   277555.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   214481.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   194.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-load-misses":
[info]   6.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-loads":
[info]   255.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-store-misses":
[info]   271.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-stores":
[info]   883.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:branch-misses":
[info]   747.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:branches":
[info]   288343.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:cycles":
[info]   759545.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   10.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-loads":
[info]   276026.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   1.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-stores":
[info]   212020.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   2.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:iTLB-loads":
[info]   10.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:instructions":
[info]   1586977.004 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:32:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5925.702 ops/s
[info] # Warmup Iteration   2: 6441.039 ops/s
[info] # Warmup Iteration   3: 6550.067 ops/s
[info] # Warmup Iteration   4: 6535.947 ops/s
[info] # Warmup Iteration   5: 6538.913 ops/s
[info] Iteration   1: 6569.322 ops/s
[info] Iteration   2: 6554.892 ops/s
[info] Iteration   3: 6567.856 ops/s
[info] Iteration   4: 6540.873 ops/s
[info] Iteration   5: 6530.303 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6552.649 ±(99.9%) 65.357 ops/s [Average]
[info]   (min, avg, max) = (6530.303, 6552.649, 6569.322), stdev = 16.973
[info]   CI (99.9%): [6487.292, 6618.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:CPI":
[info]   0.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   1673.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   133909.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   94337.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   106.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   10.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-loads":
[info]   37.409 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   123.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-stores":
[info]   249.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:branch-misses":
[info]   650.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:branches":
[info]   188433.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:cycles":
[info]   583780.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   5.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-loads":
[info]   131922.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   1.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-stores":
[info]   93008.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   1.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:iTLB-loads":
[info]   9.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:instructions":
[info]   1025871.318 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:32:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5878.327 ops/s
[info] # Warmup Iteration   2: 6581.094 ops/s
[info] # Warmup Iteration   3: 6594.236 ops/s
[info] # Warmup Iteration   4: 6613.905 ops/s
[info] # Warmup Iteration   5: 6604.580 ops/s
[info] Iteration   1: 6631.970 ops/s
[info] Iteration   2: 6609.410 ops/s
[info] Iteration   3: 6631.800 ops/s
[info] Iteration   4: 6610.226 ops/s
[info] Iteration   5: 6621.946 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6621.070 ±(99.9%) 42.542 ops/s [Average]
[info]   (min, avg, max) = (6609.410, 6621.070, 6631.970), stdev = 11.048
[info]   CI (99.9%): [6578.528, 6663.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1872.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   134240.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   103945.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   262.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   10.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   58.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   1.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   75.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   620.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   192328.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   583360.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   10.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   132186.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   8.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   101760.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   2.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   6.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   1043327.225 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:31:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5296.445 ops/s
[info] # Warmup Iteration   2: 7095.729 ops/s
[info] # Warmup Iteration   3: 7830.464 ops/s
[info] # Warmup Iteration   4: 8037.126 ops/s
[info] # Warmup Iteration   5: 8011.147 ops/s
[info] Iteration   1: 8037.304 ops/s
[info] Iteration   2: 7933.698 ops/s
[info] Iteration   3: 7720.006 ops/s
[info] Iteration   4: 7875.268 ops/s
[info] Iteration   5: 7821.899 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7877.635 ±(99.9%) 458.034 ops/s [Average]
[info]   (min, avg, max) = (7720.006, 7877.635, 8037.304), stdev = 118.950
[info]   CI (99.9%): [7419.601, 8335.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:CPI":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-dcache-load-misses":
[info]   10620.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-dcache-loads":
[info]   351611.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-dcache-stores":
[info]   203396.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-icache-load-misses":
[info]   816.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-load-misses":
[info]   19.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-loads":
[info]   496.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-store-misses":
[info]   632.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-stores":
[info]   1682.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:branch-misses":
[info]   499.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:branches":
[info]   412581.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:cycles":
[info]   485882.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-load-misses":
[info]   7.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-loads":
[info]   360162.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-store-misses":
[info]   12.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-stores":
[info]   206135.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:iTLB-load-misses":
[info]   4.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:iTLB-loads":
[info]   10.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:instructions":
[info]   1732392.583 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:31:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.960 ops/s
[info] # Warmup Iteration   2: 17723.751 ops/s
[info] # Warmup Iteration   3: 19184.596 ops/s
[info] # Warmup Iteration   4: 19208.349 ops/s
[info] # Warmup Iteration   5: 19107.054 ops/s
[info] Iteration   1: 19281.328 ops/s
[info] Iteration   2: 19101.826 ops/s
[info] Iteration   3: 19176.371 ops/s
[info] Iteration   4: 19247.011 ops/s
[info] Iteration   5: 19199.975 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   19201.302 ±(99.9%) 265.474 ops/s [Average]
[info]   (min, avg, max) = (19101.826, 19201.302, 19281.328), stdev = 68.943
[info]   CI (99.9%): [18935.828, 19466.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:CPI":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   1169.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   143313.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   73873.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   53.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-load-misses":
[info]   1.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-loads":
[info]   16.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-store-misses":
[info]   3.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-stores":
[info]   68.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:branch-misses":
[info]   185.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:branches":
[info]   185858.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:cycles":
[info]   202194.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   1.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-loads":
[info]   145081.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-stores":
[info]   73979.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   1.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-loads":
[info]   6.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:instructions":
[info]   735426.623 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:31:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6075.565 ops/s
[info] # Warmup Iteration   2: 15132.486 ops/s
[info] # Warmup Iteration   3: 15201.561 ops/s
[info] # Warmup Iteration   4: 14495.951 ops/s
[info] # Warmup Iteration   5: 15167.125 ops/s
[info] Iteration   1: 15195.568 ops/s
[info] Iteration   2: 15238.935 ops/s
[info] Iteration   3: 15073.298 ops/s
[info] Iteration   4: 14979.139 ops/s
[info] Iteration   5: 15077.457 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   15112.880 ±(99.9%) 401.259 ops/s [Average]
[info]   (min, avg, max) = (14979.139, 15112.880, 15238.935), stdev = 104.206
[info]   CI (99.9%): [14711.621, 15514.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:CPI":
[info]   0.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   2025.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-loads":
[info]   178684.602 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-stores":
[info]   95712.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   65.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-load-misses":
[info]   6.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-loads":
[info]   34.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-store-misses":
[info]   4.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-stores":
[info]   116.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:branch-misses":
[info]   332.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:branches":
[info]   192695.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:cycles":
[info]   241726.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-load-misses":
[info]   8.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-loads":
[info]   176001.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-stores":
[info]   93952.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:iTLB-load-misses":
[info]   1.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:iTLB-loads":
[info]   9.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:instructions":
[info]   826184.074 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:31:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20824.972 ops/s
[info] # Warmup Iteration   2: 22908.586 ops/s
[info] # Warmup Iteration   3: 23034.438 ops/s
[info] # Warmup Iteration   4: 22993.849 ops/s
[info] # Warmup Iteration   5: 22927.092 ops/s
[info] Iteration   1: 23017.447 ops/s
[info] Iteration   2: 23102.461 ops/s
[info] Iteration   3: 23025.619 ops/s
[info] Iteration   4: 23037.645 ops/s
[info] Iteration   5: 23098.188 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   23056.272 ±(99.9%) 157.409 ops/s [Average]
[info]   (min, avg, max) = (23017.447, 23056.272, 23102.461), stdev = 40.879
[info]   CI (99.9%): [22898.863, 23213.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   947.690 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   86205.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   25240.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   50.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-load-misses":
[info]   1.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-loads":
[info]   6.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-stores":
[info]   55.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:branch-misses":
[info]   167.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:branches":
[info]   171058.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:cycles":
[info]   164547.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   2.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-loads":
[info]   84775.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   2.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-stores":
[info]   24925.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-loads":
[info]   1.582 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:instructions":
[info]   571178.158 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:31:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 445.759 ops/s
[info] # Warmup Iteration   2: 3944.549 ops/s
[info] # Warmup Iteration   3: 4111.483 ops/s
[info] # Warmup Iteration   4: 4218.235 ops/s
[info] # Warmup Iteration   5: 4199.802 ops/s
[info] Iteration   1: 4203.916 ops/s
[info] Iteration   2: 4207.402 ops/s
[info] Iteration   3: 4217.305 ops/s
[info] Iteration   4: 4208.936 ops/s
[info] Iteration   5: 4046.103 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   4176.732 ±(99.9%) 281.826 ops/s [Average]
[info]   (min, avg, max) = (4046.103, 4176.732, 4217.305), stdev = 73.189
[info]   CI (99.9%): [3894.906, 4458.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:CPI":
[info]   0.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   21524.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-loads":
[info]   714110.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-stores":
[info]   510499.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1948.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-load-misses":
[info]   213.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-loads":
[info]   1752.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-store-misses":
[info]   246.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-stores":
[info]   2927.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:branch-misses":
[info]   839.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:branches":
[info]   419741.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:cycles":
[info]   914788.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-load-misses":
[info]   73.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-loads":
[info]   706501.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-stores":
[info]   514238.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:iTLB-load-misses":
[info]   6.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:iTLB-loads":
[info]   20.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:instructions":
[info]   2439845.805 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:30:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5863.817 ops/s
[info] # Warmup Iteration   2: 9854.311 ops/s
[info] # Warmup Iteration   3: 10195.875 ops/s
[info] # Warmup Iteration   4: 9843.019 ops/s
[info] # Warmup Iteration   5: 10192.843 ops/s
[info] Iteration   1: 10287.924 ops/s
[info] Iteration   2: 10336.287 ops/s
[info] Iteration   3: 10326.455 ops/s
[info] Iteration   4: 10248.389 ops/s
[info] Iteration   5: 10363.451 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   10312.501 ±(99.9%) 172.967 ops/s [Average]
[info]   (min, avg, max) = (10248.389, 10312.501, 10363.451), stdev = 44.919
[info]   CI (99.9%): [10139.534, 10485.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:CPI":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-dcache-load-misses":
[info]   10544.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-dcache-loads":
[info]   239692.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-dcache-stores":
[info]   187000.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-icache-load-misses":
[info]   668.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-load-misses":
[info]   9.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-loads":
[info]   781.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-store-misses":
[info]   1084.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-stores":
[info]   2223.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:branch-misses":
[info]   244.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:branches":
[info]   281742.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:cycles":
[info]   365338.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-load-misses":
[info]   9.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-loads":
[info]   248007.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-store-misses":
[info]   15.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-stores":
[info]   190774.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:iTLB-load-misses":
[info]   3.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:iTLB-loads":
[info]   7.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:instructions":
[info]   1163875.067 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:30:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6.995 ops/s
[info] # Warmup Iteration   2: 43589.595 ops/s
[info] # Warmup Iteration   3: 56663.420 ops/s
[info] # Warmup Iteration   4: 56686.359 ops/s
[info] # Warmup Iteration   5: 57645.116 ops/s
[info] Iteration   1: 58611.004 ops/s
[info] Iteration   2: 56899.766 ops/s
[info] Iteration   3: 58755.602 ops/s
[info] Iteration   4: 58479.261 ops/s
[info] Iteration   5: 58528.620 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   58254.851 ±(99.9%) 2944.648 ops/s [Average]
[info]   (min, avg, max) = (56899.766, 58254.851, 58755.602), stdev = 764.716
[info]   CI (99.9%): [55310.202, 61199.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:CPI":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   1142.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   41002.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   24647.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   9.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   1.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-loads":
[info]   6.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   117.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-stores":
[info]   166.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:branch-misses":
[info]   107.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:branches":
[info]   62220.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:cycles":
[info]   66014.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   1.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-loads":
[info]   41653.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   1.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-stores":
[info]   24983.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:instructions":
[info]   239544.213 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:30:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20391.289 ops/s
[info] # Warmup Iteration   2: 44181.642 ops/s
[info] # Warmup Iteration   3: 42556.423 ops/s
[info] # Warmup Iteration   4: 42186.925 ops/s
[info] # Warmup Iteration   5: 42322.227 ops/s
[info] Iteration   1: 42570.372 ops/s
[info] Iteration   2: 42310.399 ops/s
[info] Iteration   3: 42634.976 ops/s
[info] Iteration   4: 42401.869 ops/s
[info] Iteration   5: 42392.265 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   42461.976 ±(99.9%) 520.645 ops/s [Average]
[info]   (min, avg, max) = (42310.399, 42461.976, 42634.976), stdev = 135.210
[info]   CI (99.9%): [41941.331, 42982.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:CPI":
[info]   0.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1630.616 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   72725.616 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   41409.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   25.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-load-misses":
[info]   1.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-loads":
[info]   9.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-store-misses":
[info]   240.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-stores":
[info]   351.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:branch-misses":
[info]   160.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:branches":
[info]   66719.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:cycles":
[info]   86147.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   3.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-loads":
[info]   73683.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   2.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-stores":
[info]   41580.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-loads":
[info]   1.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:instructions":
[info]   293929.460 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:30:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 74385.402 ops/s
[info] # Warmup Iteration   2: 88501.254 ops/s
[info] # Warmup Iteration   3: 89716.013 ops/s
[info] # Warmup Iteration   4: 88298.318 ops/s
[info] # Warmup Iteration   5: 85729.200 ops/s
[info] Iteration   1: 85807.144 ops/s
[info] Iteration   2: 85515.555 ops/s
[info] Iteration   3: 85260.661 ops/s
[info] Iteration   4: 85651.328 ops/s
[info] Iteration   5: 87103.110 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   85867.560 ±(99.9%) 2769.537 ops/s [Average]
[info]   (min, avg, max) = (85260.661, 85867.560, 87103.110), stdev = 719.240
[info]   CI (99.9%): [83098.022, 88637.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   898.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   29294.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   20961.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   2.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   111.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-stores":
[info]   156.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:branch-misses":
[info]   56.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:branches":
[info]   43144.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:cycles":
[info]   42339.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-loads":
[info]   28945.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   1.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-stores":
[info]   20873.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.778 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:instructions":
[info]   170883.574 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:29:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 93646.537 ops/s
[info] # Warmup Iteration   2: 102615.157 ops/s
[info] # Warmup Iteration   3: 102533.129 ops/s
[info] # Warmup Iteration   4: 102270.079 ops/s
[info] # Warmup Iteration   5: 102334.965 ops/s
[info] Iteration   1: 102473.429 ops/s
[info] Iteration   2: 102582.328 ops/s
[info] Iteration   3: 102825.861 ops/s
[info] Iteration   4: 104583.987 ops/s
[info] Iteration   5: 104645.115 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   103422.144 ±(99.9%) 4220.998 ops/s [Average]
[info]   (min, avg, max) = (102473.429, 103422.144, 104645.115), stdev = 1096.180
[info]   CI (99.9%): [99201.147, 107643.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   650.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   23481.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   23225.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   1.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   41.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   39745.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   36746.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   23573.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   23385.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   157150.232 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:29:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1894.897 ops/s
[info] # Warmup Iteration   2: 7418.766 ops/s
[info] # Warmup Iteration   3: 7854.866 ops/s
[info] # Warmup Iteration   4: 7843.816 ops/s
[info] # Warmup Iteration   5: 7773.583 ops/s
[info] Iteration   1: 7855.694 ops/s
[info] Iteration   2: 7864.845 ops/s
[info] Iteration   3: 7849.154 ops/s
[info] Iteration   4: 7620.439 ops/s
[info] Iteration   5: 7596.003 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   7757.227 ±(99.9%) 525.272 ops/s [Average]
[info]   (min, avg, max) = (7596.003, 7757.227, 7864.845), stdev = 136.411
[info]   CI (99.9%): [7231.955, 8282.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:CPI":
[info]   0.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   12127.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-loads":
[info]   302906.682 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-stores":
[info]   213241.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-icache-load-misses":
[info]   542.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-load-misses":
[info]   50.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-loads":
[info]   1480.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-store-misses":
[info]   571.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-stores":
[info]   2137.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:branch-misses":
[info]   447.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:branches":
[info]   258702.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:cycles":
[info]   488720.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-load-misses":
[info]   27.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-loads":
[info]   306726.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-store-misses":
[info]   2.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-stores":
[info]   224407.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:iTLB-load-misses":
[info]   2.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:iTLB-loads":
[info]   8.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:instructions":
[info]   1317173.825 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:29:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4136294.853 ops/s
[info] # Warmup Iteration   2: 8794950.675 ops/s
[info] # Warmup Iteration   3: 8890385.694 ops/s
[info] # Warmup Iteration   4: 8969620.990 ops/s
[info] # Warmup Iteration   5: 8955682.563 ops/s
[info] Iteration   1: 8947684.866 ops/s
[info] Iteration   2: 8949364.129 ops/s
[info] Iteration   3: 8958692.416 ops/s
[info] Iteration   4: 8940733.579 ops/s
[info] Iteration   5: 8952230.944 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   8949741.187 ±(99.9%) 25237.955 ops/s [Average]
[info]   (min, avg, max) = (8940733.579, 8949741.187, 8958692.416), stdev = 6554.217
[info]   CI (99.9%): [8924503.232, 8974979.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:CPI":
[info]   0.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-dcache-load-misses":
[info]   12.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-dcache-loads":
[info]   176.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-dcache-stores":
[info]   214.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-icache-load-misses":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-loads":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-store-misses":
[info]   2.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-stores":
[info]   4.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:branch-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:branches":
[info]   304.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:cycles":
[info]   436.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-load-misses":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-loads":
[info]   182.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-stores":
[info]   225.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:instructions":
[info]   1406.481 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:29:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.748 ops/s
[info] # Warmup Iteration   2: 36348450.067 ops/s
[info] # Warmup Iteration   3: 37450448.154 ops/s
[info] # Warmup Iteration   4: 37641221.960 ops/s
[info] # Warmup Iteration   5: 37989102.967 ops/s
[info] Iteration   1: 37993377.364 ops/s
[info] Iteration   2: 37983585.767 ops/s
[info] Iteration   3: 37947583.301 ops/s
[info] Iteration   4: 37998003.416 ops/s
[info] Iteration   5: 37986122.935 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   37981734.557 ±(99.9%) 76753.097 ops/s [Average]
[info]   (min, avg, max) = (37947583.301, 37981734.557, 37998003.416), stdev = 19932.536
[info]   CI (99.9%): [37904981.460, 38058487.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:CPI":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   54.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   20.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-stores":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:branch-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:branches":
[info]   116.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:cycles":
[info]   100.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-loads":
[info]   54.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-stores":
[info]   20.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:instructions":
[info]   435.143 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:28:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3530729.533 ops/s
[info] # Warmup Iteration   2: 10120574.186 ops/s
[info] # Warmup Iteration   3: 9517405.113 ops/s
[info] # Warmup Iteration   4: 10074651.446 ops/s
[info] # Warmup Iteration   5: 10099107.954 ops/s
[info] Iteration   1: 10141738.081 ops/s
[info] Iteration   2: 10170056.771 ops/s
[info] Iteration   3: 10169367.475 ops/s
[info] Iteration   4: 10180893.457 ops/s
[info] Iteration   5: 10170407.998 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   10166492.756 ±(99.9%) 56345.509 ops/s [Average]
[info]   (min, avg, max) = (10141738.081, 10166492.756, 10180893.457), stdev = 14632.750
[info]   CI (99.9%): [10110147.248, 10222838.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:CPI":
[info]   0.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   8.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-dcache-loads":
[info]   249.600 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-dcache-stores":
[info]   251.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-loads":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-stores":
[info]   1.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:branch-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:branches":
[info]   196.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:cycles":
[info]   359.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-loads":
[info]   256.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-stores":
[info]   251.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:instructions":
[info]   1126.199 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:28:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 41066623.673 ops/s
[info] # Warmup Iteration   2: 41295633.068 ops/s
[info] # Warmup Iteration   3: 40459059.512 ops/s
[info] # Warmup Iteration   4: 42519145.232 ops/s
[info] # Warmup Iteration   5: 42646469.191 ops/s
[info] Iteration   1: 42694562.038 ops/s
[info] Iteration   2: 46051557.300 ops/s
[info] Iteration   3: 46068075.566 ops/s
[info] Iteration   4: 46089887.662 ops/s
[info] Iteration   5: 45971290.238 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   45375074.561 ±(99.9%) 5772581.976 ops/s [Average]
[info]   (min, avg, max) = (42694562.038, 45375074.561, 46089887.662), stdev = 1499121.207
[info]   CI (99.9%): [39602492.585, 51147656.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:CPI":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   53.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   20.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-stores":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:branch-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:branches":
[info]   83.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:cycles":
[info]   79.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-loads":
[info]   53.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁵ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-stores":
[info]   20.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:instructions":
[info]   364.616 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:28:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17779457.882 ops/s
[info] # Warmup Iteration   2: 27095931.970 ops/s
[info] # Warmup Iteration   3: 30784503.856 ops/s
[info] # Warmup Iteration   4: 31652617.300 ops/s
[info] # Warmup Iteration   5: 31651925.535 ops/s
[info] Iteration   1: 31546285.941 ops/s
[info] Iteration   2: 31493895.133 ops/s
[info] Iteration   3: 31632346.849 ops/s
[info] Iteration   4: 31617973.832 ops/s
[info] Iteration   5: 31611008.670 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31580302.085 ±(99.9%) 225303.572 ops/s [Average]
[info]   (min, avg, max) = (31493895.133, 31580302.085, 31632346.849), stdev = 58510.622
[info]   CI (99.9%): [31354998.513, 31805605.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-dcache-load-misses":
[info]   0.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-dcache-loads":
[info]   59.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-dcache-stores":
[info]   27.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-icache-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-stores":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:branch-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:branches":
[info]   129.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:cycles":
[info]   121.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-loads":
[info]   60.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-stores":
[info]   27.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:iTLB-loads":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:instructions":
[info]   568.850 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:28:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3536431.735 ops/s
[info] # Warmup Iteration   2: 8741102.427 ops/s
[info] # Warmup Iteration   3: 8883366.799 ops/s
[info] # Warmup Iteration   4: 8882337.359 ops/s
[info] # Warmup Iteration   5: 8970530.911 ops/s
[info] Iteration   1: 8975376.850 ops/s
[info] Iteration   2: 8893492.956 ops/s
[info] Iteration   3: 8986681.680 ops/s
[info] Iteration   4: 8970393.934 ops/s
[info] Iteration   5: 8974360.709 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   8960061.226 ±(99.9%) 145177.338 ops/s [Average]
[info]   (min, avg, max) = (8893492.956, 8960061.226, 8986681.680), stdev = 37702.094
[info]   CI (99.9%): [8814883.887, 9105238.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   9.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-dcache-loads":
[info]   296.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-dcache-stores":
[info]   301.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-icache-load-misses":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-loads":
[info]   0.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-store-misses":
[info]   0.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-stores":
[info]   1.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:branch-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:branches":
[info]   225.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:cycles":
[info]   429.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-loads":
[info]   305.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-stores":
[info]   306.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:instructions":
[info]   1348.151 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:28:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7739816.892 ops/s
[info] # Warmup Iteration   2: 13456703.991 ops/s
[info] # Warmup Iteration   3: 13704372.576 ops/s
[info] # Warmup Iteration   4: 13687231.351 ops/s
[info] # Warmup Iteration   5: 13703492.026 ops/s
[info] Iteration   1: 13716647.239 ops/s
[info] Iteration   2: 13670801.655 ops/s
[info] Iteration   3: 13480421.007 ops/s
[info] Iteration   4: 13657458.639 ops/s
[info] Iteration   5: 13717883.817 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   13648642.471 ±(99.9%) 376725.185 ops/s [Average]
[info]   (min, avg, max) = (13480421.007, 13648642.471, 13717883.817), stdev = 97834.334
[info]   CI (99.9%): [13271917.287, 14025367.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:CPI":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-dcache-load-misses":
[info]   3.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-dcache-loads":
[info]   164.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-dcache-stores":
[info]   100.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-stores":
[info]   0.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:branch-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:branches":
[info]   183.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:cycles":
[info]   277.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-loads":
[info]   163.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-stores":
[info]   97.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:instructions":
[info]   907.119 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:27:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.782 ops/s
[info] # Warmup Iteration   2: 39343136.284 ops/s
[info] # Warmup Iteration   3: 39360176.840 ops/s
[info] # Warmup Iteration   4: 41189504.424 ops/s
[info] # Warmup Iteration   5: 41259477.644 ops/s
[info] Iteration   1: 41366935.606 ops/s
[info] Iteration   2: 40810015.384 ops/s
[info] Iteration   3: 40856672.233 ops/s
[info] Iteration   4: 41393291.917 ops/s
[info] Iteration   5: 41149954.448 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   41115373.918 ±(99.9%) 1057855.195 ops/s [Average]
[info]   (min, avg, max) = (40810015.384, 41115373.918, 41393291.917), stdev = 274721.635
[info]   CI (99.9%): [40057518.722, 42173229.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:CPI":
[info]   0.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   0.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   50.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   32.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-stores":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:branch-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:branches":
[info]   48.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:cycles":
[info]   94.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-loads":
[info]   51.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-stores":
[info]   33.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:instructions":
[info]   240.548 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:27:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5180276.348 ops/s
[info] # Warmup Iteration   2: 12664844.379 ops/s
[info] # Warmup Iteration   3: 13188198.220 ops/s
[info] # Warmup Iteration   4: 13181565.520 ops/s
[info] # Warmup Iteration   5: 13181260.508 ops/s
[info] Iteration   1: 13212337.428 ops/s
[info] Iteration   2: 13044467.775 ops/s
[info] Iteration   3: 13062603.299 ops/s
[info] Iteration   4: 13202764.153 ops/s
[info] Iteration   5: 13219578.012 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   13148350.133 ±(99.9%) 334987.953 ops/s [Average]
[info]   (min, avg, max) = (13044467.775, 13148350.133, 13219578.012), stdev = 86995.308
[info]   CI (99.9%): [12813362.181, 13483338.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   5.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   220.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   191.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-stores":
[info]   0.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:branch-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:branches":
[info]   157.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:cycles":
[info]   287.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-loads":
[info]   213.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-stores":
[info]   182.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:instructions":
[info]   874.633 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:27:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 35133304.965 ops/s
[info] # Warmup Iteration   2: 47147920.375 ops/s
[info] # Warmup Iteration   3: 47622948.389 ops/s
[info] # Warmup Iteration   4: 47863406.120 ops/s
[info] # Warmup Iteration   5: 47759833.496 ops/s
[info] Iteration   1: 47842190.470 ops/s
[info] Iteration   2: 47724377.003 ops/s
[info] Iteration   3: 47887457.980 ops/s
[info] Iteration   4: 47859597.521 ops/s
[info] Iteration   5: 47858422.380 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   47834409.071 ±(99.9%) 244999.698 ops/s [Average]
[info]   (min, avg, max) = (47724377.003, 47834409.071, 47887457.980), stdev = 63625.643
[info]   CI (99.9%): [47589409.373, 48079408.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   0.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   62.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   38.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:branch-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:branches":
[info]   71.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:cycles":
[info]   79.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-loads":
[info]   60.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-stores":
[info]   37.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:iTLB-loads":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:instructions":
[info]   334.474 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:27:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 39813609.610 ops/s
[info] # Warmup Iteration   2: 58875532.303 ops/s
[info] # Warmup Iteration   3: 58705948.641 ops/s
[info] # Warmup Iteration   4: 59760804.161 ops/s
[info] # Warmup Iteration   5: 59842082.160 ops/s
[info] Iteration   1: 59846530.798 ops/s
[info] Iteration   2: 59860847.790 ops/s
[info] Iteration   3: 59812942.969 ops/s
[info] Iteration   4: 59862225.526 ops/s
[info] Iteration   5: 59858371.271 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   59848183.671 ±(99.9%) 79522.554 ops/s [Average]
[info]   (min, avg, max) = (59812942.969, 59848183.671, 59862225.526), stdev = 20651.755
[info]   CI (99.9%): [59768661.117, 59927706.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   53.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   33.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁵ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   44.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   63.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   54.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   34.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   264.587 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:26:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17217085.232 ops/s
[info] # Warmup Iteration   2: 17744228.295 ops/s
[info] # Warmup Iteration   3: 17920275.563 ops/s
[info] # Warmup Iteration   4: 17800368.503 ops/s
[info] # Warmup Iteration   5: 17593858.558 ops/s
[info] Iteration   1: 17681408.724 ops/s
[info] Iteration   2: 17512994.966 ops/s
[info] Iteration   3: 17403424.284 ops/s
[info] Iteration   4: 17594754.928 ops/s
[info] Iteration   5: 17811734.379 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   17600863.456 ±(99.9%) 601780.928 ops/s [Average]
[info]   (min, avg, max) = (17403424.284, 17600863.456, 17811734.379), stdev = 156280.596
[info]   CI (99.9%): [16999082.529, 18202644.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:CPI":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-dcache-load-misses":
[info]   2.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-dcache-loads":
[info]   108.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-dcache-stores":
[info]   70.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-icache-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-stores":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:branch-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:branches":
[info]   145.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:cycles":
[info]   215.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-loads":
[info]   106.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-stores":
[info]   69.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:instructions":
[info]   668.628 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:26:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1391845.577 ops/s
[info] # Warmup Iteration   2: 2699324.246 ops/s
[info] # Warmup Iteration   3: 2748785.332 ops/s
[info] # Warmup Iteration   4: 2743651.531 ops/s
[info] # Warmup Iteration   5: 2744948.771 ops/s
[info] Iteration   1: 2773531.664 ops/s
[info] Iteration   2: 2781616.941 ops/s
[info] Iteration   3: 2775291.888 ops/s
[info] Iteration   4: 2771993.420 ops/s
[info] Iteration   5: 2776170.272 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2775720.837 ±(99.9%) 14126.688 ops/s [Average]
[info]   (min, avg, max) = (2771993.420, 2775720.837, 2781616.941), stdev = 3668.656
[info]   CI (99.9%): [2761594.150, 2789847.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:CPI":
[info]   0.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   18.911 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-dcache-loads":
[info]   715.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-dcache-stores":
[info]   571.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-loads":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-store-misses":
[info]   0.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-stores":
[info]   3.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:branch-misses":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:branches":
[info]   798.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:cycles":
[info]   1364.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-loads":
[info]   732.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-stores":
[info]   574.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:instructions":
[info]   3871.092 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:26:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 146427.180 ops/s
[info] # Warmup Iteration   2: 163994.683 ops/s
[info] # Warmup Iteration   3: 169311.365 ops/s
[info] # Warmup Iteration   4: 168977.778 ops/s
[info] # Warmup Iteration   5: 169511.462 ops/s
[info] Iteration   1: 169604.395 ops/s
[info] Iteration   2: 168713.407 ops/s
[info] Iteration   3: 169418.996 ops/s
[info] Iteration   4: 169341.359 ops/s
[info] Iteration   5: 168866.588 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   169188.949 ±(99.9%) 1464.767 ops/s [Average]
[info]   (min, avg, max) = (168713.407, 169188.949, 169604.395), stdev = 380.395
[info]   CI (99.9%): [167724.181, 170653.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   489.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   15481.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   17033.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   4.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   2.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   4.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   79.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   1.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:branches":
[info]   12755.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   22690.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   15151.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   16684.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   77778.054 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:26:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7405.121 ops/s
[info] # Warmup Iteration   2: 33707.594 ops/s
[info] # Warmup Iteration   3: 34162.856 ops/s
[info] # Warmup Iteration   4: 34147.486 ops/s
[info] # Warmup Iteration   5: 34277.646 ops/s
[info] Iteration   1: 34593.829 ops/s
[info] Iteration   2: 34089.458 ops/s
[info] Iteration   3: 34542.093 ops/s
[info] Iteration   4: 34382.662 ops/s
[info] Iteration   5: 34548.867 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   34431.382 ±(99.9%) 797.870 ops/s [Average]
[info]   (min, avg, max) = (34089.458, 34431.382, 34593.829), stdev = 207.204
[info]   CI (99.9%): [33633.512, 35229.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3262.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   86014.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   61983.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   640.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   3.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   97.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   59.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   331.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   141.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:branches":
[info]   53516.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:cycles":
[info]   112506.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   7.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   90596.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   67052.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   1.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:instructions":
[info]   344189.035 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:25:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 77605.403 ops/s
[info] # Warmup Iteration   2: 144091.103 ops/s
[info] # Warmup Iteration   3: 144792.545 ops/s
[info] # Warmup Iteration   4: 144811.473 ops/s
[info] # Warmup Iteration   5: 144997.572 ops/s
[info] Iteration   1: 144692.928 ops/s
[info] Iteration   2: 144392.992 ops/s
[info] Iteration   3: 144851.478 ops/s
[info] Iteration   4: 144924.174 ops/s
[info] Iteration   5: 145235.223 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   144819.359 ±(99.9%) 1191.111 ops/s [Average]
[info]   (min, avg, max) = (144392.992, 144819.359, 145235.223), stdev = 309.328
[info]   CI (99.9%): [143628.248, 146010.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   299.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   19248.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   11106.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   2.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   18.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   48.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   20.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:branches":
[info]   19837.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   26337.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   1.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   19822.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   11062.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   90170.596 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:25:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 394687.623 ops/s
[info] # Warmup Iteration   2: 437055.998 ops/s
[info] # Warmup Iteration   3: 444355.048 ops/s
[info] # Warmup Iteration   4: 444642.583 ops/s
[info] # Warmup Iteration   5: 443175.073 ops/s
[info] Iteration   1: 441426.801 ops/s
[info] Iteration   2: 421911.853 ops/s
[info] Iteration   3: 438547.070 ops/s
[info] Iteration   4: 439520.492 ops/s
[info] Iteration   5: 435598.302 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   435400.904 ±(99.9%) 30146.772 ops/s [Average]
[info]   (min, avg, max) = (421911.853, 435400.904, 441426.801), stdev = 7829.021
[info]   CI (99.9%): [405254.131, 465547.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   120.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   6093.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5682.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   21.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   34.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   6867.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   8733.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   5932.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5432.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   31303.297 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:25:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 417027.539 ops/s
[info] # Warmup Iteration   2: 456470.500 ops/s
[info] # Warmup Iteration   3: 477278.918 ops/s
[info] # Warmup Iteration   4: 483212.027 ops/s
[info] # Warmup Iteration   5: 484822.690 ops/s
[info] Iteration   1: 485315.114 ops/s
[info] Iteration   2: 477403.481 ops/s
[info] Iteration   3: 469579.758 ops/s
[info] Iteration   4: 484334.139 ops/s
[info] Iteration   5: 484377.096 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   480201.918 ±(99.9%) 25924.992 ops/s [Average]
[info]   (min, avg, max) = (469579.758, 480201.918, 485315.114), stdev = 6732.638
[info]   CI (99.9%): [454276.926, 506126.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   75.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   6034.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5389.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   4.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   6699.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   7991.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5899.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5175.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   30672.169 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:25:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23369.667 ops/s
[info] # Warmup Iteration   2: 63003.063 ops/s
[info] # Warmup Iteration   3: 61587.409 ops/s
[info] # Warmup Iteration   4: 62060.694 ops/s
[info] # Warmup Iteration   5: 61959.368 ops/s
[info] Iteration   1: 62010.416 ops/s
[info] Iteration   2: 61981.018 ops/s
[info] Iteration   3: 62058.053 ops/s
[info] Iteration   4: 62257.612 ops/s
[info] Iteration   5: 62139.804 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   62089.381 ±(99.9%) 429.669 ops/s [Average]
[info]   (min, avg, max) = (61981.018, 62089.381, 62257.612), stdev = 111.584
[info]   CI (99.9%): [61659.712, 62519.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1015.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   49806.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   27456.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   93.582 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   1.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   6.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   46.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   131.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   70.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:branches":
[info]   40351.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:cycles":
[info]   58692.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   49294.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   27298.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:instructions":
[info]   196939.263 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:25:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 212680.517 ops/s
[info] # Warmup Iteration   2: 306675.436 ops/s
[info] # Warmup Iteration   3: 314823.375 ops/s
[info] # Warmup Iteration   4: 317471.892 ops/s
[info] # Warmup Iteration   5: 318464.965 ops/s
[info] Iteration   1: 318901.711 ops/s
[info] Iteration   2: 319145.078 ops/s
[info] Iteration   3: 319635.728 ops/s
[info] Iteration   4: 318869.359 ops/s
[info] Iteration   5: 319647.936 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   319239.962 ±(99.9%) 1471.124 ops/s [Average]
[info]   (min, avg, max) = (318869.359, 319239.962, 319647.936), stdev = 382.046
[info]   CI (99.9%): [317768.838, 320711.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   184.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   10909.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   6148.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   0.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-loads":
[info]   0.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   22.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-stores":
[info]   50.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:branch-misses":
[info]   11.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:branches":
[info]   11276.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:cycles":
[info]   12004.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   0.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   11066.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   6093.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:instructions":
[info]   46732.517 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:24:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 261159.692 ops/s
[info] # Warmup Iteration   2: 473413.960 ops/s
[info] # Warmup Iteration   3: 481925.541 ops/s
[info] # Warmup Iteration   4: 482320.609 ops/s
[info] # Warmup Iteration   5: 482392.514 ops/s
[info] Iteration   1: 481681.846 ops/s
[info] Iteration   2: 481996.904 ops/s
[info] Iteration   3: 472445.709 ops/s
[info] Iteration   4: 463561.779 ops/s
[info] Iteration   5: 463911.309 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   472719.509 ±(99.9%) 34864.647 ops/s [Average]
[info]   (min, avg, max) = (463561.779, 472719.509, 481996.904), stdev = 9054.238
[info]   CI (99.9%): [437854.862, 507584.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   75.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   6349.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   4075.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   6.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   3.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:branches":
[info]   6610.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:cycles":
[info]   7995.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   6462.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   4151.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:instructions":
[info]   28853.742 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:24:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1199662.414 ops/s
[info] # Warmup Iteration   2: 1313562.173 ops/s
[info] # Warmup Iteration   3: 1350322.090 ops/s
[info] # Warmup Iteration   4: 1353854.098 ops/s
[info] # Warmup Iteration   5: 1355824.351 ops/s
[info] Iteration   1: 1355599.998 ops/s
[info] Iteration   2: 1357011.176 ops/s
[info] Iteration   3: 1343860.772 ops/s
[info] Iteration   4: 1339390.834 ops/s
[info] Iteration   5: 1335988.461 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1346370.248 ±(99.9%) 36591.696 ops/s [Average]
[info]   (min, avg, max) = (1335988.461, 1346370.248, 1357011.176), stdev = 9502.747
[info]   CI (99.9%): [1309778.552, 1382961.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   50.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2420.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1995.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   3.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   1.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:branches":
[info]   2907.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   2840.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   2434.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   1986.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   12256.738 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:24:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 54533.671 ops/s
[info] # Warmup Iteration   2: 96476.244 ops/s
[info] # Warmup Iteration   3: 99467.027 ops/s
[info] # Warmup Iteration   4: 101234.298 ops/s
[info] # Warmup Iteration   5: 99797.836 ops/s
[info] Iteration   1: 97294.492 ops/s
[info] Iteration   2: 97433.186 ops/s
[info] Iteration   3: 101801.104 ops/s
[info] Iteration   4: 101570.382 ops/s
[info] Iteration   5: 101536.010 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   99927.035 ±(99.9%) 9020.516 ops/s [Average]
[info]   (min, avg, max) = (97294.492, 99927.035, 101801.104), stdev = 2342.599
[info]   CI (99.9%): [90906.518, 108947.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   936.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   33733.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   22469.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   32.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   0.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   5.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   30.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   202.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   37.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:branches":
[info]   21462.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:cycles":
[info]   37651.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   35398.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   23134.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:instructions":
[info]   118736.502 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:24:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 208520.090 ops/s
[info] # Warmup Iteration   2: 310663.675 ops/s
[info] # Warmup Iteration   3: 314182.842 ops/s
[info] # Warmup Iteration   4: 313961.329 ops/s
[info] # Warmup Iteration   5: 313336.905 ops/s
[info] Iteration   1: 315204.850 ops/s
[info] Iteration   2: 315067.975 ops/s
[info] Iteration   3: 315617.936 ops/s
[info] Iteration   4: 299171.944 ops/s
[info] Iteration   5: 313889.758 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   311790.492 ±(99.9%) 27274.667 ops/s [Average]
[info]   (min, avg, max) = (299171.944, 311790.492, 315617.936), stdev = 7083.144
[info]   CI (99.9%): [284515.826, 339065.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:CPI":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   89.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   11776.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   7157.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   47.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   64.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:branch-misses":
[info]   14.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:branches":
[info]   10106.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:cycles":
[info]   12316.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   11657.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6840.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:instructions":
[info]   44714.184 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:23:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 449442.929 ops/s
[info] # Warmup Iteration   2: 822662.750 ops/s
[info] # Warmup Iteration   3: 822139.672 ops/s
[info] # Warmup Iteration   4: 822198.378 ops/s
[info] # Warmup Iteration   5: 825555.307 ops/s
[info] Iteration   1: 826791.906 ops/s
[info] Iteration   2: 825140.855 ops/s
[info] Iteration   3: 821771.628 ops/s
[info] Iteration   4: 821619.674 ops/s
[info] Iteration   5: 824605.840 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   823985.981 ±(99.9%) 8630.500 ops/s [Average]
[info]   (min, avg, max) = (821619.674, 823985.981, 826791.906), stdev = 2241.313
[info]   CI (99.9%): [815355.481, 832616.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   20.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   4395.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2399.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   6.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:branches":
[info]   3544.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   4671.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   4478.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   2421.935 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   17248.093 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:23:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1959222.779 ops/s
[info] # Warmup Iteration   2: 2211028.803 ops/s
[info] # Warmup Iteration   3: 2238041.060 ops/s
[info] # Warmup Iteration   4: 2111563.452 ops/s
[info] # Warmup Iteration   5: 2102395.412 ops/s
[info] Iteration   1: 2163829.454 ops/s
[info] Iteration   2: 2163753.340 ops/s
[info] Iteration   3: 2266117.312 ops/s
[info] Iteration   4: 2177157.925 ops/s
[info] Iteration   5: 2269808.807 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2208133.368 ±(99.9%) 211416.652 ops/s [Average]
[info]   (min, avg, max) = (2163753.340, 2208133.368, 2269808.807), stdev = 54904.233
[info]   CI (99.9%): [1996716.715, 2419550.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   12.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1007.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1261.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   3.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   6.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   2011.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   1693.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   998.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1215.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   7373.607 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:23:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2318898.032 ops/s
[info] # Warmup Iteration   2: 2500469.416 ops/s
[info] # Warmup Iteration   3: 2533873.807 ops/s
[info] # Warmup Iteration   4: 2533506.627 ops/s
[info] # Warmup Iteration   5: 2534664.204 ops/s
[info] Iteration   1: 2532021.411 ops/s
[info] Iteration   2: 2530252.787 ops/s
[info] Iteration   3: 2527911.878 ops/s
[info] Iteration   4: 2534910.992 ops/s
[info] Iteration   5: 2532809.326 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2531581.279 ±(99.9%) 10191.157 ops/s [Average]
[info]   (min, avg, max) = (2527911.878, 2531581.279, 2534910.992), stdev = 2646.611
[info]   CI (99.9%): [2521390.122, 2541772.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   961.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1137.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1904.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1522.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   945.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1127.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   6912.016 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:23:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 339588.862 ops/s
[info] # Warmup Iteration   2: 435642.639 ops/s
[info] # Warmup Iteration   3: 453719.261 ops/s
[info] # Warmup Iteration   4: 454238.709 ops/s
[info] # Warmup Iteration   5: 456903.448 ops/s
[info] Iteration   1: 460588.057 ops/s
[info] Iteration   2: 453614.633 ops/s
[info] Iteration   3: 454705.702 ops/s
[info] Iteration   4: 457872.481 ops/s
[info] Iteration   5: 453208.251 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   455997.825 ±(99.9%) 12133.420 ops/s [Average]
[info]   (min, avg, max) = (453208.251, 455997.825, 460588.057), stdev = 3151.011
[info]   CI (99.9%): [443864.405, 468131.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   40.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   9132.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   3208.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   0.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   3.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   14.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   4.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:branches":
[info]   6866.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:cycles":
[info]   8495.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   8649.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   3088.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:instructions":
[info]   31779.923 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:22:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 38285.422 ops/s
[info] # Warmup Iteration   2: 56936.098 ops/s
[info] # Warmup Iteration   3: 57712.137 ops/s
[info] # Warmup Iteration   4: 58311.791 ops/s
[info] # Warmup Iteration   5: 57888.024 ops/s
[info] Iteration   1: 55989.985 ops/s
[info] Iteration   2: 57260.429 ops/s
[info] Iteration   3: 58604.399 ops/s
[info] Iteration   4: 58503.528 ops/s
[info] Iteration   5: 57242.915 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   57520.251 ±(99.9%) 4142.059 ops/s [Average]
[info]   (min, avg, max) = (55989.985, 57520.251, 58604.399), stdev = 1075.680
[info]   CI (99.9%): [53378.192, 61662.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:CPI":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   1066.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   44831.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   31217.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   71.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-loads":
[info]   5.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses":
[info]   70.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-stores":
[info]   233.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:branch-misses":
[info]   153.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:branches":
[info]   48582.936 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:cycles":
[info]   64884.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   3.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-loads":
[info]   44606.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-stores":
[info]   30806.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:iTLB-loads":
[info]   1.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:instructions":
[info]   222415.112 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:22:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 40314.361 ops/s
[info] # Warmup Iteration   2: 91453.152 ops/s
[info] # Warmup Iteration   3: 91891.316 ops/s
[info] # Warmup Iteration   4: 93264.820 ops/s
[info] # Warmup Iteration   5: 93423.447 ops/s
[info] Iteration   1: 93160.081 ops/s
[info] Iteration   2: 93729.316 ops/s
[info] Iteration   3: 93410.920 ops/s
[info] Iteration   4: 93460.740 ops/s
[info] Iteration   5: 93381.124 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   93428.436 ±(99.9%) 784.748 ops/s [Average]
[info]   (min, avg, max) = (93160.081, 93428.436, 93729.316), stdev = 203.797
[info]   CI (99.9%): [92643.688, 94213.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   820.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   24748.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   18884.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   127.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   5.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   10.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   98.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses":
[info]   39.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:branches":
[info]   23462.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:cycles":
[info]   40633.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   25360.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   19265.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:instructions":
[info]   132389.367 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:22:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 127093.447 ops/s
[info] # Warmup Iteration   2: 155232.849 ops/s
[info] # Warmup Iteration   3: 167399.100 ops/s
[info] # Warmup Iteration   4: 167018.197 ops/s
[info] # Warmup Iteration   5: 159076.217 ops/s
[info] Iteration   1: 167827.207 ops/s
[info] Iteration   2: 167655.388 ops/s
[info] Iteration   3: 167544.068 ops/s
[info] Iteration   4: 167254.635 ops/s
[info] Iteration   5: 162472.576 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   166550.775 ±(99.9%) 8815.202 ops/s [Average]
[info]   (min, avg, max) = (162472.576, 166550.775, 167827.207), stdev = 2289.280
[info]   CI (99.9%): [157735.573, 175365.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   420.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   15182.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   13054.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   4.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   3.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   8.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   84.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   38.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:branches":
[info]   16287.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:cycles":
[info]   23141.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.873 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   15095.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   12782.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:instructions":
[info]   84337.389 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:22:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10634.570 ops/s
[info] # Warmup Iteration   2: 32661.751 ops/s
[info] # Warmup Iteration   3: 32924.618 ops/s
[info] # Warmup Iteration   4: 32915.960 ops/s
[info] # Warmup Iteration   5: 32465.899 ops/s
[info] Iteration   1: 33363.830 ops/s
[info] Iteration   2: 33693.784 ops/s
[info] Iteration   3: 33721.234 ops/s
[info] Iteration   4: 33670.093 ops/s
[info] Iteration   5: 33681.040 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   33625.996 ±(99.9%) 569.098 ops/s [Average]
[info]   (min, avg, max) = (33363.830, 33625.996, 33721.234), stdev = 147.793
[info]   CI (99.9%): [33056.899, 34195.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:CPI":
[info]   0.357 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3153.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   78279.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   54050.458 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   529.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   5.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads":
[info]   71.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   61.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores":
[info]   348.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:branch-misses":
[info]   537.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:branches":
[info]   52887.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:cycles":
[info]   114110.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   9.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   77935.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   54959.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   2.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:instructions":
[info]   320023.008 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:22:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 77150.773 ops/s
[info] # Warmup Iteration   2: 151883.539 ops/s
[info] # Warmup Iteration   3: 154885.208 ops/s
[info] # Warmup Iteration   4: 155424.578 ops/s
[info] # Warmup Iteration   5: 159481.334 ops/s
[info] Iteration   1: 162150.128 ops/s
[info] Iteration   2: 158658.959 ops/s
[info] Iteration   3: 157336.074 ops/s
[info] Iteration   4: 162088.054 ops/s
[info] Iteration   5: 162553.249 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   160557.293 ±(99.9%) 9202.175 ops/s [Average]
[info]   (min, avg, max) = (157336.074, 160557.293, 162553.249), stdev = 2389.776
[info]   CI (99.9%): [151355.118, 169759.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   299.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   17718.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   9505.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   1.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   17.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   37.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   5.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:branches":
[info]   19409.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:cycles":
[info]   23589.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   17606.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   9304.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:instructions":
[info]   85426.083 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:21:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 394807.385 ops/s
[info] # Warmup Iteration   2: 459618.974 ops/s
[info] # Warmup Iteration   3: 461010.596 ops/s
[info] # Warmup Iteration   4: 446825.869 ops/s
[info] # Warmup Iteration   5: 458974.491 ops/s
[info] Iteration   1: 453611.425 ops/s
[info] Iteration   2: 461169.530 ops/s
[info] Iteration   3: 460538.229 ops/s
[info] Iteration   4: 461213.944 ops/s
[info] Iteration   5: 461089.859 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   459524.597 ±(99.9%) 12771.547 ops/s [Average]
[info]   (min, avg, max) = (453611.425, 459524.597, 461213.944), stdev = 3316.730
[info]   CI (99.9%): [446753.051, 472296.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   32.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   6185.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   4617.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   19.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   23.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:branches":
[info]   6195.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles":
[info]   8286.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   6135.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   4515.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions":
[info]   29906.455 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:21:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 452667.138 ops/s
[info] # Warmup Iteration   2: 479590.674 ops/s
[info] # Warmup Iteration   3: 481688.815 ops/s
[info] # Warmup Iteration   4: 483581.865 ops/s
[info] # Warmup Iteration   5: 483340.881 ops/s
[info] Iteration   1: 483257.265 ops/s
[info] Iteration   2: 484112.040 ops/s
[info] Iteration   3: 480878.339 ops/s
[info] Iteration   4: 483935.107 ops/s
[info] Iteration   5: 482532.462 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   482943.042 ±(99.9%) 5050.461 ops/s [Average]
[info]   (min, avg, max) = (480878.339, 482943.042, 484112.040), stdev = 1311.589
[info]   CI (99.9%): [477892.581, 487993.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   34.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   6131.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   4356.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5930.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   7930.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   6104.679 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   4340.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   28948.543 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:21:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 26330.955 ops/s
[info] # Warmup Iteration   2: 65177.854 ops/s
[info] # Warmup Iteration   3: 63898.054 ops/s
[info] # Warmup Iteration   4: 65736.983 ops/s
[info] # Warmup Iteration   5: 63462.385 ops/s
[info] Iteration   1: 63032.186 ops/s
[info] Iteration   2: 63223.046 ops/s
[info] Iteration   3: 63152.184 ops/s
[info] Iteration   4: 63798.159 ops/s
[info] Iteration   5: 63120.919 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   63265.299 ±(99.9%) 1176.980 ops/s [Average]
[info]   (min, avg, max) = (63032.186, 63265.299, 63798.159), stdev = 305.658
[info]   CI (99.9%): [62088.319, 64442.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:CPI":
[info]   0.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1011.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   49565.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   26013.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   32.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads":
[info]   4.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   43.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores":
[info]   119.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:branch-misses":
[info]   65.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:branches":
[info]   36310.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:cycles":
[info]   57990.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   51061.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   26396.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   1.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:instructions":
[info]   188264.226 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:21:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 923332.544 ops/s
[info] # Warmup Iteration   2: 2843788.471 ops/s
[info] # Warmup Iteration   3: 2906833.884 ops/s
[info] # Warmup Iteration   4: 2949927.630 ops/s
[info] # Warmup Iteration   5: 2949363.119 ops/s
[info] Iteration   1: 2960899.627 ops/s
[info] Iteration   2: 2960617.148 ops/s
[info] Iteration   3: 2959830.351 ops/s
[info] Iteration   4: 2963395.879 ops/s
[info] Iteration   5: 2951717.194 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2959292.040 ±(99.9%) 17096.363 ops/s [Average]
[info]   (min, avg, max) = (2951717.194, 2959292.040, 2963395.879), stdev = 4439.871
[info]   CI (99.9%): [2942195.677, 2976388.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:CPI":
[info]   0.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-dcache-load-misses":
[info]   31.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-dcache-loads":
[info]   611.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-dcache-stores":
[info]   688.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-icache-load-misses":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-load-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-loads":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-store-misses":
[info]   8.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-stores":
[info]   12.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:branch-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:branches":
[info]   522.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:cycles":
[info]   1278.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-load-misses":
[info]   0.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-loads":
[info]   586.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-stores":
[info]   672.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:iTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:instructions":
[info]   2801.295 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:20:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.779 ops/s
[info] # Warmup Iteration   2: 793643.490 ops/s
[info] # Warmup Iteration   3: 815963.894 ops/s
[info] # Warmup Iteration   4: 819093.321 ops/s
[info] # Warmup Iteration   5: 820415.518 ops/s
[info] Iteration   1: 823085.167 ops/s
[info] Iteration   2: 789859.014 ops/s
[info] Iteration   3: 777689.888 ops/s
[info] Iteration   4: 781127.388 ops/s
[info] Iteration   5: 812279.507 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   796808.193 ±(99.9%) 76760.470 ops/s [Average]
[info]   (min, avg, max) = (777689.888, 796808.193, 823085.167), stdev = 19934.450
[info]   CI (99.9%): [720047.723, 873568.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:CPI":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   92.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   4335.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   2073.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-loads":
[info]   0.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-stores":
[info]   1.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:branch-misses":
[info]   3.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:branches":
[info]   2400.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:cycles":
[info]   4707.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-loads":
[info]   4379.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-stores":
[info]   2101.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:instructions":
[info]   12449.450 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:20:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 18564.514 ops/s
[info] # Warmup Iteration   2: 200227.774 ops/s
[info] # Warmup Iteration   3: 354826.774 ops/s
[info] # Warmup Iteration   4: 362937.776 ops/s
[info] # Warmup Iteration   5: 357194.102 ops/s
[info] Iteration   1: 351571.648 ops/s
[info] Iteration   2: 363968.597 ops/s
[info] Iteration   3: 364826.577 ops/s
[info] Iteration   4: 360270.974 ops/s
[info] Iteration   5: 362850.241 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   360697.607 ±(99.9%) 20722.649 ops/s [Average]
[info]   (min, avg, max) = (351571.648, 360697.607, 364826.577), stdev = 5381.606
[info]   CI (99.9%): [339974.958, 381420.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:CPI":
[info]   0.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   581.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-dcache-loads":
[info]   7747.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-dcache-stores":
[info]   4061.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   646.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-loads":
[info]   28.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-stores":
[info]   18.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:branch-misses":
[info]   7.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:branches":
[info]   5240.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:cycles":
[info]   11536.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-loads":
[info]   7918.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-stores":
[info]   3982.894 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:iTLB-loads":
[info]   0.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:instructions":
[info]   26389.952 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:20:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 624522.065 ops/s
[info] # Warmup Iteration   2: 681712.405 ops/s
[info] # Warmup Iteration   3: 764177.438 ops/s
[info] # Warmup Iteration   4: 760231.572 ops/s
[info] # Warmup Iteration   5: 762207.362 ops/s
[info] Iteration   1: 761567.280 ops/s
[info] Iteration   2: 761795.161 ops/s
[info] Iteration   3: 764140.524 ops/s
[info] Iteration   4: 762882.405 ops/s
[info] Iteration   5: 763239.854 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   762725.045 ±(99.9%) 4083.532 ops/s [Average]
[info]   (min, avg, max) = (761567.280, 762725.045, 764140.524), stdev = 1060.480
[info]   CI (99.9%): [758641.513, 766808.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:CPI":
[info]   0.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   115.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   4435.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2171.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   31.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-loads":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-store-misses":
[info]   7.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-stores":
[info]   15.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:branch-misses":
[info]   3.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:branches":
[info]   2520.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:cycles":
[info]   5043.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-loads":
[info]   4396.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-stores":
[info]   2156.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:instructions":
[info]   13360.205 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:20:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2080794.245 ops/s
[info] # Warmup Iteration   2: 2308981.963 ops/s
[info] # Warmup Iteration   3: 3183049.093 ops/s
[info] # Warmup Iteration   4: 3200426.105 ops/s
[info] # Warmup Iteration   5: 3189219.870 ops/s
[info] Iteration   1: 3158934.727 ops/s
[info] Iteration   2: 3080208.498 ops/s
[info] Iteration   3: 3095241.622 ops/s
[info] Iteration   4: 3089651.040 ops/s
[info] Iteration   5: 3093794.835 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   3103566.145 ±(99.9%) 121305.458 ops/s [Average]
[info]   (min, avg, max) = (3080208.498, 3103566.145, 3158934.727), stdev = 31502.642
[info]   CI (99.9%): [2982260.687, 3224871.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:CPI":
[info]   0.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-load-misses":
[info]   15.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-loads":
[info]   687.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-stores":
[info]   568.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-icache-load-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-loads":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-store-misses":
[info]   4.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-stores":
[info]   8.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:branch-misses":
[info]   2.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:branches":
[info]   699.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:cycles":
[info]   1218.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-load-misses":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-loads":
[info]   683.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-stores":
[info]   547.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:iTLB-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:instructions":
[info]   3346.139 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:19:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4419413.576 ops/s
[info] # Warmup Iteration   2: 4803041.244 ops/s
[info] # Warmup Iteration   3: 8139334.756 ops/s
[info] # Warmup Iteration   4: 8051453.254 ops/s
[info] # Warmup Iteration   5: 8088603.257 ops/s
[info] Iteration   1: 8091310.895 ops/s
[info] Iteration   2: 8160222.557 ops/s
[info] Iteration   3: 8197868.005 ops/s
[info] Iteration   4: 8093744.400 ops/s
[info] Iteration   5: 7848364.941 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   8078302.159 ±(99.9%) 524754.466 ops/s [Average]
[info]   (min, avg, max) = (7848364.941, 8078302.159, 8197868.005), stdev = 136277.068
[info]   CI (99.9%): [7553547.694, 8603056.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-load-misses":
[info]   2.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-loads":
[info]   410.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-stores":
[info]   270.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-icache-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-stores":
[info]   0.458 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branch-misses":
[info]   1.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branches":
[info]   302.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:cycles":
[info]   474.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-loads":
[info]   399.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-stores":
[info]   260.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:instructions":
[info]   1439.971 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:19:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8136.847 ops/s
[info] # Warmup Iteration   2: 90933.335 ops/s
[info] # Warmup Iteration   3: 180788.189 ops/s
[info] # Warmup Iteration   4: 224847.685 ops/s
[info] # Warmup Iteration   5: 224662.078 ops/s
[info] Iteration   1: 225113.674 ops/s
[info] Iteration   2: 232668.673 ops/s
[info] Iteration   3: 232530.186 ops/s
[info] Iteration   4: 232695.754 ops/s
[info] Iteration   5: 233068.484 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   231215.354 ±(99.9%) 13156.741 ops/s [Average]
[info]   (min, avg, max) = (225113.674, 231215.354, 233068.484), stdev = 3416.764
[info]   CI (99.9%): [218058.614, 244372.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:CPI":
[info]   0.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   795.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-dcache-loads":
[info]   9633.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-dcache-stores":
[info]   6569.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-icache-load-misses":
[info]   852.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-load-misses":
[info]   0.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-loads":
[info]   39.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-store-misses":
[info]   14.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-stores":
[info]   53.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:branch-misses":
[info]   8.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:branches":
[info]   7415.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:cycles":
[info]   16554.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-load-misses":
[info]   1.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-loads":
[info]   9112.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-stores":
[info]   6302.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:iTLB-loads":
[info]   6.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:instructions":
[info]   38716.292 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:19:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1461948.056 ops/s
[info] # Warmup Iteration   2: 1540198.003 ops/s
[info] # Warmup Iteration   3: 1589479.551 ops/s
[info] # Warmup Iteration   4: 1590031.913 ops/s
[info] # Warmup Iteration   5: 1589687.535 ops/s
[info] Iteration   1: 1584191.781 ops/s
[info] Iteration   2: 1591912.517 ops/s
[info] Iteration   3: 1592425.389 ops/s
[info] Iteration   4: 1592432.711 ops/s
[info] Iteration   5: 1592423.716 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1590677.223 ±(99.9%) 13986.767 ops/s [Average]
[info]   (min, avg, max) = (1584191.781, 1590677.223, 1592432.711), stdev = 3632.319
[info]   CI (99.9%): [1576690.456, 1604663.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:CPI":
[info]   0.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   901.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   568.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-loads":
[info]   0.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-stores":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:branch-misses":
[info]   2.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:branches":
[info]   3242.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:cycles":
[info]   2425.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-loads":
[info]   895.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-stores":
[info]   564.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:instructions":
[info]   11962.080 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:19:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22988.046 ops/s
[info] # Warmup Iteration   2: 75207.797 ops/s
[info] # Warmup Iteration   3: 75202.987 ops/s
[info] # Warmup Iteration   4: 75911.494 ops/s
[info] # Warmup Iteration   5: 76246.459 ops/s
[info] Iteration   1: 76076.611 ops/s
[info] Iteration   2: 74849.047 ops/s
[info] Iteration   3: 75661.533 ops/s
[info] Iteration   4: 76188.347 ops/s
[info] Iteration   5: 76491.994 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   75853.506 ±(99.9%) 2447.017 ops/s [Average]
[info]   (min, avg, max) = (74849.047, 75853.506, 76491.994), stdev = 635.483
[info]   CI (99.9%): [73406.489, 78300.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:CPI":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1629.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-dcache-loads":
[info]   43150.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-dcache-stores":
[info]   32348.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-icache-load-misses":
[info]   80.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-load-misses":
[info]   3.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-loads":
[info]   10.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-store-misses":
[info]   32.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-stores":
[info]   191.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:branch-misses":
[info]   47.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:branches":
[info]   32536.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:cycles":
[info]   50503.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-loads":
[info]   41299.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-stores":
[info]   31951.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:iTLB-loads":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:instructions":
[info]   165146.574 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:19:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1029928.715 ops/s
[info] # Warmup Iteration   2: 1497484.702 ops/s
[info] # Warmup Iteration   3: 1542759.750 ops/s
[info] # Warmup Iteration   4: 1504601.995 ops/s
[info] # Warmup Iteration   5: 1505151.507 ops/s
[info] Iteration   1: 1532375.338 ops/s
[info] Iteration   2: 1574693.151 ops/s
[info] Iteration   3: 1586411.982 ops/s
[info] Iteration   4: 1579966.364 ops/s
[info] Iteration   5: 1583249.586 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1571339.284 ±(99.9%) 85517.798 ops/s [Average]
[info]   (min, avg, max) = (1532375.338, 1571339.284, 1586411.982), stdev = 22208.701
[info]   CI (99.9%): [1485821.486, 1656857.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:CPI":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   13.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   1600.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1187.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-loads":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-store-misses":
[info]   1.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-stores":
[info]   2.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:branch-misses":
[info]   2.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:branches":
[info]   2425.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:cycles":
[info]   2428.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-loads":
[info]   1568.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-stores":
[info]   1148.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:instructions":
[info]   10139.952 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:18:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1706546.199 ops/s
[info] # Warmup Iteration   2: 1868038.148 ops/s
[info] # Warmup Iteration   3: 1925265.428 ops/s
[info] # Warmup Iteration   4: 1916905.940 ops/s
[info] # Warmup Iteration   5: 1898586.285 ops/s
[info] Iteration   1: 1846473.534 ops/s
[info] Iteration   2: 1850877.711 ops/s
[info] Iteration   3: 1837807.737 ops/s
[info] Iteration   4: 1921242.056 ops/s
[info] Iteration   5: 1927826.813 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1876845.570 ±(99.9%) 168846.211 ops/s [Average]
[info]   (min, avg, max) = (1837807.737, 1876845.570, 1927826.813), stdev = 43848.825
[info]   CI (99.9%): [1707999.359, 2045691.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:CPI":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   7.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   975.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1102.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:branch-misses":
[info]   2.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:branches":
[info]   2212.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:cycles":
[info]   1995.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-loads":
[info]   962.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1080.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:instructions":
[info]   9001.507 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:18:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1764350.016 ops/s
[info] # Warmup Iteration   2: 1955836.158 ops/s
[info] # Warmup Iteration   3: 1916379.645 ops/s
[info] # Warmup Iteration   4: 1970479.102 ops/s
[info] # Warmup Iteration   5: 1972075.754 ops/s
[info] Iteration   1: 1970028.234 ops/s
[info] Iteration   2: 1972800.243 ops/s
[info] Iteration   3: 1971181.992 ops/s
[info] Iteration   4: 1972481.591 ops/s
[info] Iteration   5: 1950282.505 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1967354.913 ±(99.9%) 36993.985 ops/s [Average]
[info]   (min, avg, max) = (1950282.505, 1967354.913, 1972800.243), stdev = 9607.220
[info]   CI (99.9%): [1930360.928, 2004348.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   935.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1017.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   2.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2100.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1922.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   933.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1013.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   8541.731 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:18:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23348.980 ops/s
[info] # Warmup Iteration   2: 47606.743 ops/s
[info] # Warmup Iteration   3: 47635.875 ops/s
[info] # Warmup Iteration   4: 49944.824 ops/s
[info] # Warmup Iteration   5: 50138.340 ops/s
[info] Iteration   1: 50063.469 ops/s
[info] Iteration   2: 48105.869 ops/s
[info] Iteration   3: 48005.107 ops/s
[info] Iteration   4: 48174.827 ops/s
[info] Iteration   5: 50097.856 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   48889.426 ±(99.9%) 4194.072 ops/s [Average]
[info]   (min, avg, max) = (48005.107, 48889.426, 50097.856), stdev = 1089.187
[info]   CI (99.9%): [44695.354, 53083.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:CPI":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1326.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-dcache-loads":
[info]   47096.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-dcache-stores":
[info]   33836.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-icache-load-misses":
[info]   27.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-load-misses":
[info]   1.929 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-loads":
[info]   14.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-store-misses":
[info]   9.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-stores":
[info]   87.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:branch-misses":
[info]   106.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:branches":
[info]   47919.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:cycles":
[info]   77364.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-loads":
[info]   48686.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-stores":
[info]   33593.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:iTLB-loads":
[info]   1.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:instructions":
[info]   228745.712 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:18:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 230343.132 ops/s
[info] # Warmup Iteration   2: 271907.343 ops/s
[info] # Warmup Iteration   3: 273225.365 ops/s
[info] # Warmup Iteration   4: 274560.382 ops/s
[info] # Warmup Iteration   5: 273862.169 ops/s
[info] Iteration   1: 274008.504 ops/s
[info] Iteration   2: 273443.673 ops/s
[info] Iteration   3: 273153.584 ops/s
[info] Iteration   4: 271091.063 ops/s
[info] Iteration   5: 270900.969 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   272519.559 ±(99.9%) 5490.837 ops/s [Average]
[info]   (min, avg, max) = (270900.969, 272519.559, 274008.504), stdev = 1425.953
[info]   CI (99.9%): [267028.722, 278010.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   103.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   6915.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   4273.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   50.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   69.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   8.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:branches":
[info]   14648.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   14138.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   6889.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   4198.952 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   61454.713 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:17:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9975.536 ops/s
[info] # Warmup Iteration   2: 38210.326 ops/s
[info] # Warmup Iteration   3: 39240.762 ops/s
[info] # Warmup Iteration   4: 38227.015 ops/s
[info] # Warmup Iteration   5: 39228.924 ops/s
[info] Iteration   1: 39224.016 ops/s
[info] Iteration   2: 39322.848 ops/s
[info] Iteration   3: 39386.757 ops/s
[info] Iteration   4: 39116.874 ops/s
[info] Iteration   5: 39323.363 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   39274.771 ±(99.9%) 407.155 ops/s [Average]
[info]   (min, avg, max) = (39116.874, 39274.771, 39386.757), stdev = 105.737
[info]   CI (99.9%): [38867.617, 39681.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2706.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   74171.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   46286.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   549.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   4.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   43.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   75.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   260.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   213.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:branches":
[info]   52009.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:cycles":
[info]   97780.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   9.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   73243.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   45967.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   5.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:instructions":
[info]   302840.306 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:17:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 54010.155 ops/s
[info] # Warmup Iteration   2: 113807.640 ops/s
[info] # Warmup Iteration   3: 111663.499 ops/s
[info] # Warmup Iteration   4: 114282.049 ops/s
[info] # Warmup Iteration   5: 111751.218 ops/s
[info] Iteration   1: 114727.091 ops/s
[info] Iteration   2: 114341.831 ops/s
[info] Iteration   3: 112300.380 ops/s
[info] Iteration   4: 112015.899 ops/s
[info] Iteration   5: 112702.067 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   113217.454 ±(99.9%) 4752.704 ops/s [Average]
[info]   (min, avg, max) = (112015.899, 113217.454, 114727.091), stdev = 1234.262
[info]   CI (99.9%): [108464.750, 117970.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   310.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   17393.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   10225.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   2.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   60.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   94.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   22.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:branches":
[info]   23459.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   33610.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   1.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   17506.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   10102.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   101271.294 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:17:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 242933.652 ops/s
[info] # Warmup Iteration   2: 270342.064 ops/s
[info] # Warmup Iteration   3: 265754.762 ops/s
[info] # Warmup Iteration   4: 266268.166 ops/s
[info] # Warmup Iteration   5: 266705.735 ops/s
[info] Iteration   1: 266814.220 ops/s
[info] Iteration   2: 265898.916 ops/s
[info] Iteration   3: 265876.226 ops/s
[info] Iteration   4: 265677.599 ops/s
[info] Iteration   5: 268006.052 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   266454.603 ±(99.9%) 3744.918 ops/s [Average]
[info]   (min, avg, max) = (265677.599, 266454.603, 268006.052), stdev = 972.543
[info]   CI (99.9%): [262709.685, 270199.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   126.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   9747.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   6854.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   27.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   38.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   8520.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   14028.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   9512.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   6566.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   46446.337 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:17:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 325232.670 ops/s
[info] # Warmup Iteration   2: 360239.083 ops/s
[info] # Warmup Iteration   3: 366625.864 ops/s
[info] # Warmup Iteration   4: 366499.683 ops/s
[info] # Warmup Iteration   5: 366479.072 ops/s
[info] Iteration   1: 366473.478 ops/s
[info] Iteration   2: 366291.125 ops/s
[info] Iteration   3: 366744.464 ops/s
[info] Iteration   4: 366817.683 ops/s
[info] Iteration   5: 366767.638 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   366618.878 ±(99.9%) 873.825 ops/s [Average]
[info]   (min, avg, max) = (366291.125, 366618.878, 366817.683), stdev = 226.930
[info]   CI (99.9%): [365745.052, 367492.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   4.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   6190.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   4583.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   6944.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   10368.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   6253.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   4638.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   35304.291 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:16:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21247.316 ops/s
[info] # Warmup Iteration   2: 52194.669 ops/s
[info] # Warmup Iteration   3: 52275.784 ops/s
[info] # Warmup Iteration   4: 50916.338 ops/s
[info] # Warmup Iteration   5: 51703.175 ops/s
[info] Iteration   1: 51270.241 ops/s
[info] Iteration   2: 51122.494 ops/s
[info] Iteration   3: 51106.301 ops/s
[info] Iteration   4: 51134.160 ops/s
[info] Iteration   5: 51941.008 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   51314.841 ±(99.9%) 1371.183 ops/s [Average]
[info]   (min, avg, max) = (51106.301, 51314.841, 51941.008), stdev = 356.092
[info]   CI (99.9%): [49943.658, 52686.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1033.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   49825.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   28514.409 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   33.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   5.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   87.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   194.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   106.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:branches":
[info]   43418.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:cycles":
[info]   73260.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   3.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   50679.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   28314.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   2.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:instructions":
[info]   222349.191 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:16:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 48029.128 ops/s
[info] # Warmup Iteration   2: 68911.700 ops/s
[info] # Warmup Iteration   3: 68117.981 ops/s
[info] # Warmup Iteration   4: 74034.100 ops/s
[info] # Warmup Iteration   5: 73988.594 ops/s
[info] Iteration   1: 73988.855 ops/s
[info] Iteration   2: 74087.837 ops/s
[info] Iteration   3: 73968.317 ops/s
[info] Iteration   4: 71322.466 ops/s
[info] Iteration   5: 71145.938 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   72902.683 ±(99.9%) 5872.445 ops/s [Average]
[info]   (min, avg, max) = (71145.938, 72902.683, 74087.837), stdev = 1525.055
[info]   CI (99.9%): [67030.237, 78775.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   660.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   38698.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   21721.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   17.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-loads":
[info]   7.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses":
[info]   65.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-stores":
[info]   142.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:branch-misses":
[info]   29.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:branches":
[info]   47153.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:cycles":
[info]   52286.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   2.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-loads":
[info]   39867.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-stores":
[info]   22382.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:instructions":
[info]   203256.948 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:16:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 69732.602 ops/s
[info] # Warmup Iteration   2: 126497.181 ops/s
[info] # Warmup Iteration   3: 130106.565 ops/s
[info] # Warmup Iteration   4: 129626.197 ops/s
[info] # Warmup Iteration   5: 129542.152 ops/s
[info] Iteration   1: 129820.698 ops/s
[info] Iteration   2: 130371.924 ops/s
[info] Iteration   3: 130433.859 ops/s
[info] Iteration   4: 130231.345 ops/s
[info] Iteration   5: 128250.173 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   129821.600 ±(99.9%) 3505.457 ops/s [Average]
[info]   (min, avg, max) = (128250.173, 129821.600, 130433.859), stdev = 910.356
[info]   CI (99.9%): [126316.143, 133327.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:CPI":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   358.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   20112.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   10604.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   20.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   3.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   8.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   30.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses":
[info]   8.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branches":
[info]   21879.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:cycles":
[info]   30127.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   20900.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   10835.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:instructions":
[info]   105657.618 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:16:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 219631.829 ops/s
[info] # Warmup Iteration   2: 256559.970 ops/s
[info] # Warmup Iteration   3: 262857.357 ops/s
[info] # Warmup Iteration   4: 263633.640 ops/s
[info] # Warmup Iteration   5: 263738.089 ops/s
[info] Iteration   1: 263959.819 ops/s
[info] Iteration   2: 264333.740 ops/s
[info] Iteration   3: 257608.519 ops/s
[info] Iteration   4: 264324.068 ops/s
[info] Iteration   5: 263414.796 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   262728.188 ±(99.9%) 11114.293 ops/s [Average]
[info]   (min, avg, max) = (257608.519, 262728.188, 264333.740), stdev = 2886.347
[info]   CI (99.9%): [251613.896, 273842.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   107.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   10458.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5372.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   7.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   26.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   2.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branches":
[info]   14253.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:cycles":
[info]   14424.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   10078.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   5170.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:instructions":
[info]   58672.087 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:16:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5795.674 ops/s
[info] # Warmup Iteration   2: 31155.916 ops/s
[info] # Warmup Iteration   3: 32259.069 ops/s
[info] # Warmup Iteration   4: 31691.428 ops/s
[info] # Warmup Iteration   5: 32772.839 ops/s
[info] Iteration   1: 32859.792 ops/s
[info] Iteration   2: 32803.416 ops/s
[info] Iteration   3: 33037.361 ops/s
[info] Iteration   4: 32885.745 ops/s
[info] Iteration   5: 33076.971 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   32932.657 ±(99.9%) 455.625 ops/s [Average]
[info]   (min, avg, max) = (32803.416, 32932.657, 33076.971), stdev = 118.324
[info]   CI (99.9%): [32477.033, 33388.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2837.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   92030.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   48884.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   819.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   3.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads":
[info]   72.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   50.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores":
[info]   253.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:branch-misses":
[info]   396.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:branches":
[info]   66990.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:cycles":
[info]   117581.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   9.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   94849.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   50728.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   8.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:instructions":
[info]   353031.377 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:15:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 86059.237 ops/s
[info] # Warmup Iteration   2: 176086.177 ops/s
[info] # Warmup Iteration   3: 175964.992 ops/s
[info] # Warmup Iteration   4: 171661.984 ops/s
[info] # Warmup Iteration   5: 177800.561 ops/s
[info] Iteration   1: 172295.195 ops/s
[info] Iteration   2: 170880.838 ops/s
[info] Iteration   3: 171519.732 ops/s
[info] Iteration   4: 171614.001 ops/s
[info] Iteration   5: 171654.444 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   171592.842 ±(99.9%) 1934.769 ops/s [Average]
[info]   (min, avg, max) = (170880.838, 171592.842, 172295.195), stdev = 502.453
[info]   CI (99.9%): [169658.073, 173527.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   171.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   15286.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   8300.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   2.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   17.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   34.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   5.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branches":
[info]   19100.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:cycles":
[info]   21459.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   15378.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   8306.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:instructions":
[info]   81195.037 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 384633.960 ops/s
[info] # Warmup Iteration   2: 456813.304 ops/s
[info] # Warmup Iteration   3: 476745.325 ops/s
[info] # Warmup Iteration   4: 474997.192 ops/s
[info] # Warmup Iteration   5: 459443.570 ops/s
[info] Iteration   1: 458889.289 ops/s
[info] Iteration   2: 474433.090 ops/s
[info] Iteration   3: 474449.485 ops/s
[info] Iteration   4: 473625.470 ops/s
[info] Iteration   5: 471949.835 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   470669.434 ±(99.9%) 25658.358 ops/s [Average]
[info]   (min, avg, max) = (458889.289, 470669.434, 474449.485), stdev = 6663.394
[info]   CI (99.9%): [445011.076, 496327.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   75.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   5661.894 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   4944.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   19.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   30.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   2.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branches":
[info]   7063.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles":
[info]   8073.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   5685.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   4841.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions":
[info]   31432.336 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 456303.534 ops/s
[info] # Warmup Iteration   2: 514184.502 ops/s
[info] # Warmup Iteration   3: 518137.187 ops/s
[info] # Warmup Iteration   4: 517077.442 ops/s
[info] # Warmup Iteration   5: 517005.243 ops/s
[info] Iteration   1: 517582.743 ops/s
[info] Iteration   2: 515760.362 ops/s
[info] Iteration   3: 518670.759 ops/s
[info] Iteration   4: 518339.170 ops/s
[info] Iteration   5: 519017.714 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   517874.150 ±(99.9%) 4987.879 ops/s [Average]
[info]   (min, avg, max) = (515760.362, 517874.150, 519017.714), stdev = 1295.336
[info]   CI (99.9%): [512886.271, 522862.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   48.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   5713.943 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   4787.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   3.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   6862.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   7452.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5494.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   4653.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   30525.627 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:15:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 27154.876 ops/s
[info] # Warmup Iteration   2: 67065.461 ops/s
[info] # Warmup Iteration   3: 65769.247 ops/s
[info] # Warmup Iteration   4: 67634.698 ops/s
[info] # Warmup Iteration   5: 67516.706 ops/s
[info] Iteration   1: 67326.326 ops/s
[info] Iteration   2: 66512.698 ops/s
[info] Iteration   3: 67480.766 ops/s
[info] Iteration   4: 65708.034 ops/s
[info] Iteration   5: 67556.221 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   66916.809 ±(99.9%) 3055.773 ops/s [Average]
[info]   (min, avg, max) = (65708.034, 66916.809, 67556.221), stdev = 793.575
[info]   CI (99.9%): [63861.036, 69972.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:CPI":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   991.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   49670.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   26779.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   53.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads":
[info]   2.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   48.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores":
[info]   131.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:branch-misses":
[info]   46.929 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:branches":
[info]   38348.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:cycles":
[info]   57408.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   49120.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   25717.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:instructions":
[info]   195316.377 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:14:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 68543.974 ops/s
[info] # Warmup Iteration   2: 98319.219 ops/s
[info] # Warmup Iteration   3: 99613.648 ops/s
[info] # Warmup Iteration   4: 102241.619 ops/s
[info] # Warmup Iteration   5: 101773.139 ops/s
[info] Iteration   1: 102411.610 ops/s
[info] Iteration   2: 102768.217 ops/s
[info] Iteration   3: 102707.316 ops/s
[info] Iteration   4: 103008.641 ops/s
[info] Iteration   5: 102560.473 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   102691.251 ±(99.9%) 865.797 ops/s [Average]
[info]   (min, avg, max) = (102411.610, 102691.251, 103008.641), stdev = 224.845
[info]   CI (99.9%): [101825.454, 103557.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:CPI":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   506.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-dcache-loads":
[info]   24077.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-dcache-stores":
[info]   11410.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   1.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-load-misses":
[info]   0.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-loads":
[info]   3.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-store-misses":
[info]   61.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-stores":
[info]   123.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:branch-misses":
[info]   30.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:branches":
[info]   29595.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:cycles":
[info]   37392.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-load-misses":
[info]   1.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-loads":
[info]   24348.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-stores":
[info]   11286.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:iTLB-load-misses":
[info]   0.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:iTLB-loads":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:instructions":
[info]   128201.217 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:14:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 84621.562 ops/s
[info] # Warmup Iteration   2: 164222.984 ops/s
[info] # Warmup Iteration   3: 176039.781 ops/s
[info] # Warmup Iteration   4: 176374.071 ops/s
[info] # Warmup Iteration   5: 176362.393 ops/s
[info] Iteration   1: 176358.046 ops/s
[info] Iteration   2: 176633.808 ops/s
[info] Iteration   3: 175896.068 ops/s
[info] Iteration   4: 176470.409 ops/s
[info] Iteration   5: 176275.122 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   176326.691 ±(99.9%) 1061.644 ops/s [Average]
[info]   (min, avg, max) = (175896.068, 176326.691, 176633.808), stdev = 275.705
[info]   CI (99.9%): [175265.047, 177388.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:CPI":
[info]   0.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   132.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   16793.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   8874.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   3.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-loads":
[info]   1.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   39.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-stores":
[info]   56.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:branch-misses":
[info]   5.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:branches":
[info]   16550.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:cycles":
[info]   22057.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   16605.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   8614.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:instructions":
[info]   78577.271 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:14:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 228177.815 ops/s
[info] # Warmup Iteration   2: 271359.054 ops/s
[info] # Warmup Iteration   3: 278625.707 ops/s
[info] # Warmup Iteration   4: 276983.856 ops/s
[info] # Warmup Iteration   5: 277189.949 ops/s
[info] Iteration   1: 276235.184 ops/s
[info] Iteration   2: 278477.338 ops/s
[info] Iteration   3: 276884.402 ops/s
[info] Iteration   4: 275124.622 ops/s
[info] Iteration   5: 276532.263 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   276650.762 ±(99.9%) 4679.292 ops/s [Average]
[info]   (min, avg, max) = (275124.622, 276650.762, 278477.338), stdev = 1215.197
[info]   CI (99.9%): [271971.470, 281330.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:CPI":
[info]   0.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   94.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   9539.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   3669.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   6.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   1.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   35.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   52.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:branch-misses":
[info]   9.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:branches":
[info]   11457.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:cycles":
[info]   13713.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   9522.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   3676.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:instructions":
[info]   52820.450 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:14:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 31149.089 ops/s
[info] # Warmup Iteration   2: 66406.635 ops/s
[info] # Warmup Iteration   3: 66853.406 ops/s
[info] # Warmup Iteration   4: 67201.209 ops/s
[info] # Warmup Iteration   5: 67369.241 ops/s
[info] Iteration   1: 67920.422 ops/s
[info] Iteration   2: 67783.315 ops/s
[info] Iteration   3: 67948.494 ops/s
[info] Iteration   4: 68040.772 ops/s
[info] Iteration   5: 67251.307 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   67788.862 ±(99.9%) 1210.422 ops/s [Average]
[info]   (min, avg, max) = (67251.307, 67788.862, 68040.772), stdev = 314.343
[info]   CI (99.9%): [66578.440, 68999.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1552.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   44771.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   29914.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   76.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-loads":
[info]   8.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   65.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-stores":
[info]   243.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:branch-misses":
[info]   99.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:branches":
[info]   32048.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:cycles":
[info]   56450.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   7.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-loads":
[info]   45345.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-stores":
[info]   29642.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:iTLB-loads":
[info]   0.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:instructions":
[info]   171110.513 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:14:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 136430.905 ops/s
[info] # Warmup Iteration   2: 205034.882 ops/s
[info] # Warmup Iteration   3: 207764.454 ops/s
[info] # Warmup Iteration   4: 207472.989 ops/s
[info] # Warmup Iteration   5: 207566.536 ops/s
[info] Iteration   1: 208068.977 ops/s
[info] Iteration   2: 207469.443 ops/s
[info] Iteration   3: 209203.862 ops/s
[info] Iteration   4: 207361.163 ops/s
[info] Iteration   5: 208245.870 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   208069.863 ±(99.9%) 2842.504 ops/s [Average]
[info]   (min, avg, max) = (207361.163, 208069.863, 209203.862), stdev = 738.189
[info]   CI (99.9%): [205227.359, 210912.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:CPI":
[info]   0.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   185.803 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-dcache-loads":
[info]   12441.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-dcache-stores":
[info]   7361.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-load-misses":
[info]   0.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-loads":
[info]   1.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-store-misses":
[info]   59.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-stores":
[info]   92.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:branch-misses":
[info]   10.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:branches":
[info]   14383.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:cycles":
[info]   18522.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-loads":
[info]   12851.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-stores":
[info]   7393.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:iTLB-loads":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:instructions":
[info]   66019.099 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:13:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 295269.321 ops/s
[info] # Warmup Iteration   2: 486874.147 ops/s
[info] # Warmup Iteration   3: 489495.469 ops/s
[info] # Warmup Iteration   4: 489949.433 ops/s
[info] # Warmup Iteration   5: 488799.409 ops/s
[info] Iteration   1: 490179.958 ops/s
[info] Iteration   2: 488886.173 ops/s
[info] Iteration   3: 490445.651 ops/s
[info] Iteration   4: 491816.540 ops/s
[info] Iteration   5: 491040.138 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   490473.692 ±(99.9%) 4187.911 ops/s [Average]
[info]   (min, avg, max) = (488886.173, 490473.692, 491816.540), stdev = 1087.587
[info]   CI (99.9%): [486285.780, 494661.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:CPI":
[info]   0.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   22.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   5672.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2550.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   4.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   9.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:branch-misses":
[info]   1.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:branches":
[info]   6243.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:cycles":
[info]   7556.682 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   5623.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2495.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:instructions":
[info]   26317.865 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:13:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 569475.515 ops/s
[info] # Warmup Iteration   2: 591261.256 ops/s
[info] # Warmup Iteration   3: 608174.481 ops/s
[info] # Warmup Iteration   4: 610074.351 ops/s
[info] # Warmup Iteration   5: 614365.285 ops/s
[info] Iteration   1: 612761.815 ops/s
[info] Iteration   2: 611939.843 ops/s
[info] Iteration   3: 608080.098 ops/s
[info] Iteration   4: 611115.053 ops/s
[info] Iteration   5: 613695.039 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   611518.369 ±(99.9%) 8269.042 ops/s [Average]
[info]   (min, avg, max) = (608080.098, 611518.369, 613695.039), stdev = 2147.444
[info]   CI (99.9%): [603249.327, 619787.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   15.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   4962.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2519.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   9.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:branches":
[info]   6021.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:cycles":
[info]   6182.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   4968.690 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2498.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:instructions":
[info]   25750.676 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:13:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 614650.914 ops/s
[info] # Warmup Iteration   2: 650858.556 ops/s
[info] # Warmup Iteration   3: 659353.193 ops/s
[info] # Warmup Iteration   4: 657945.122 ops/s
[info] # Warmup Iteration   5: 653848.046 ops/s
[info] Iteration   1: 659693.712 ops/s
[info] Iteration   2: 658007.869 ops/s
[info] Iteration   3: 658548.963 ops/s
[info] Iteration   4: 658728.632 ops/s
[info] Iteration   5: 658842.079 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   658764.251 ±(99.9%) 2349.907 ops/s [Average]
[info]   (min, avg, max) = (658007.869, 658764.251, 659693.712), stdev = 610.263
[info]   CI (99.9%): [656414.344, 661114.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   4942.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2418.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5900.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   5814.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   4962.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2409.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   25289.280 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:13:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 24117.383 ops/s
[info] # Warmup Iteration   2: 34694.069 ops/s
[info] # Warmup Iteration   3: 34898.023 ops/s
[info] # Warmup Iteration   4: 34770.570 ops/s
[info] # Warmup Iteration   5: 35058.779 ops/s
[info] Iteration   1: 35595.531 ops/s
[info] Iteration   2: 36028.371 ops/s
[info] Iteration   3: 36352.075 ops/s
[info] Iteration   4: 36501.816 ops/s
[info] Iteration   5: 36217.191 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   36138.997 ±(99.9%) 1348.754 ops/s [Average]
[info]   (min, avg, max) = (35595.531, 36138.997, 36501.816), stdev = 350.267
[info]   CI (99.9%): [34790.243, 37487.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:CPI":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1688.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-loads":
[info]   58081.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-stores":
[info]   40630.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   44.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-load-misses":
[info]   1.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-loads":
[info]   17.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-store-misses":
[info]   18.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-stores":
[info]   218.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:branch-misses":
[info]   175.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:branches":
[info]   63575.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:cycles":
[info]   105292.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-loads":
[info]   58608.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-stores":
[info]   40744.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:iTLB-loads":
[info]   1.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:instructions":
[info]   299011.534 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:12:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 220095.678 ops/s
[info] # Warmup Iteration   2: 814952.944 ops/s
[info] # Warmup Iteration   3: 847189.983 ops/s
[info] # Warmup Iteration   4: 819705.902 ops/s
[info] # Warmup Iteration   5: 814408.527 ops/s
[info] Iteration   1: 818577.547 ops/s
[info] Iteration   2: 851061.992 ops/s
[info] Iteration   3: 852191.091 ops/s
[info] Iteration   4: 846776.265 ops/s
[info] Iteration   5: 828607.803 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   839442.940 ±(99.9%) 57889.798 ops/s [Average]
[info]   (min, avg, max) = (818577.547, 839442.940, 852191.091), stdev = 15033.797
[info]   CI (99.9%): [781553.141, 897332.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:CPI":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-dcache-load-misses":
[info]   71.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-dcache-loads":
[info]   2842.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-dcache-stores":
[info]   2108.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-icache-load-misses":
[info]   52.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-load-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-loads":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-store-misses":
[info]   2.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-stores":
[info]   15.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:branch-misses":
[info]   1.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:branches":
[info]   2985.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:cycles":
[info]   4534.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-load-misses":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-loads":
[info]   2769.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-stores":
[info]   2029.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:iTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:iTLB-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:instructions":
[info]   13143.714 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:12:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 231606.741 ops/s
[info] # Warmup Iteration   2: 1711723.085 ops/s
[info] # Warmup Iteration   3: 1764355.066 ops/s
[info] # Warmup Iteration   4: 1874872.576 ops/s
[info] # Warmup Iteration   5: 1870809.641 ops/s
[info] Iteration   1: 1866312.104 ops/s
[info] Iteration   2: 1868342.070 ops/s
[info] Iteration   3: 1866999.334 ops/s
[info] Iteration   4: 1766594.028 ops/s
[info] Iteration   5: 1766348.289 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1826919.165 ±(99.9%) 212502.119 ops/s [Average]
[info]   (min, avg, max) = (1766348.289, 1826919.165, 1868342.070), stdev = 55186.125
[info]   CI (99.9%): [1614417.046, 2039421.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:CPI":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   23.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   1616.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   1008.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-loads":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-stores":
[info]   3.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:branch-misses":
[info]   0.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:branches":
[info]   1391.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:cycles":
[info]   2274.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-loads":
[info]   1600.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-stores":
[info]   973.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:iTLB-loads":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:instructions":
[info]   6726.336 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:12:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6769482.625 ops/s
[info] # Warmup Iteration   2: 8244479.361 ops/s
[info] # Warmup Iteration   3: 8071822.171 ops/s
[info] # Warmup Iteration   4: 8384455.653 ops/s
[info] # Warmup Iteration   5: 8440145.589 ops/s
[info] Iteration   1: 8386712.236 ops/s
[info] Iteration   2: 8381932.392 ops/s
[info] Iteration   3: 8363173.201 ops/s
[info] Iteration   4: 8384352.334 ops/s
[info] Iteration   5: 8409570.428 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   8385148.118 ±(99.9%) 63645.414 ops/s [Average]
[info]   (min, avg, max) = (8363173.201, 8385148.118, 8409570.428), stdev = 16528.512
[info]   CI (99.9%): [8321502.704, 8448793.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   0.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   377.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   185.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-stores":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:branch-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:branches":
[info]   498.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:cycles":
[info]   456.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-loads":
[info]   376.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-stores":
[info]   184.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:instructions":
[info]   1849.129 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:12:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9959.400 ops/s
[info] # Warmup Iteration   2: 138563.887 ops/s
[info] # Warmup Iteration   3: 350020.451 ops/s
[info] # Warmup Iteration   4: 356655.998 ops/s
[info] # Warmup Iteration   5: 356002.761 ops/s
[info] Iteration   1: 347321.852 ops/s
[info] Iteration   2: 344179.374 ops/s
[info] Iteration   3: 354375.822 ops/s
[info] Iteration   4: 357163.442 ops/s
[info] Iteration   5: 357102.170 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   352028.532 ±(99.9%) 22892.799 ops/s [Average]
[info]   (min, avg, max) = (344179.374, 352028.532, 357163.442), stdev = 5945.187
[info]   CI (99.9%): [329135.733, 374921.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:CPI":
[info]   0.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   349.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-dcache-loads":
[info]   7387.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-dcache-stores":
[info]   5185.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   425.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-load-misses":
[info]   0.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-loads":
[info]   3.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-store-misses":
[info]   2.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-stores":
[info]   20.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:branch-misses":
[info]   14.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:branches":
[info]   4448.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:cycles":
[info]   10883.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-loads":
[info]   7206.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-stores":
[info]   5139.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:iTLB-loads":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:instructions":
[info]   26111.684 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 266827.986 ops/s
[info] # Warmup Iteration   2: 1050633.723 ops/s
[info] # Warmup Iteration   3: 1094646.379 ops/s
[info] # Warmup Iteration   4: 1097374.540 ops/s
[info] # Warmup Iteration   5: 1101964.862 ops/s
[info] Iteration   1: 1094527.955 ops/s
[info] Iteration   2: 1075325.430 ops/s
[info] Iteration   3: 1103848.591 ops/s
[info] Iteration   4: 1105007.723 ops/s
[info] Iteration   5: 1102563.828 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1096254.705 ±(99.9%) 47750.457 ops/s [Average]
[info]   (min, avg, max) = (1075325.430, 1096254.705, 1105007.723), stdev = 12400.642
[info]   CI (99.9%): [1048504.248, 1144005.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:CPI":
[info]   0.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   41.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-dcache-loads":
[info]   2356.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-dcache-stores":
[info]   1798.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-loads":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-store-misses":
[info]   1.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-stores":
[info]   9.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:branch-misses":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:branches":
[info]   1848.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:cycles":
[info]   3460.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-load-misses":
[info]   0.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-loads":
[info]   2259.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-stores":
[info]   1701.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:iTLB-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:instructions":
[info]   9488.331 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:11:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 569032.540 ops/s
[info] # Warmup Iteration   2: 2554999.472 ops/s
[info] # Warmup Iteration   3: 2606261.566 ops/s
[info] # Warmup Iteration   4: 2736384.009 ops/s
[info] # Warmup Iteration   5: 2670196.634 ops/s
[info] Iteration   1: 2741792.407 ops/s
[info] Iteration   2: 2732621.913 ops/s
[info] Iteration   3: 2736549.777 ops/s
[info] Iteration   4: 2747035.393 ops/s
[info] Iteration   5: 2753770.119 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2742353.922 ±(99.9%) 32272.043 ops/s [Average]
[info]   (min, avg, max) = (2732621.913, 2742353.922, 2753770.119), stdev = 8380.947
[info]   CI (99.9%): [2710081.878, 2774625.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:CPI":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   12.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   1054.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   711.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-loads":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-stores":
[info]   0.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:branch-misses":
[info]   0.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:branches":
[info]   865.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:cycles":
[info]   1404.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-loads":
[info]   1067.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-stores":
[info]   705.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:instructions":
[info]   4248.205 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:11:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4076842.561 ops/s
[info] # Warmup Iteration   2: 5998342.648 ops/s
[info] # Warmup Iteration   3: 6371121.154 ops/s
[info] # Warmup Iteration   4: 6425878.912 ops/s
[info] # Warmup Iteration   5: 6170435.009 ops/s
[info] Iteration   1: 6378697.571 ops/s
[info] Iteration   2: 6408699.942 ops/s
[info] Iteration   3: 6160376.377 ops/s
[info] Iteration   4: 6173134.500 ops/s
[info] Iteration   5: 6197741.897 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   6263730.057 ±(99.9%) 461586.745 ops/s [Average]
[info]   (min, avg, max) = (6160376.377, 6263730.057, 6408699.942), stdev = 119872.612
[info]   CI (99.9%): [5802143.312, 6725316.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:CPI":
[info]   0.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   3.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   306.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   319.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:branch-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:branches":
[info]   386.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:cycles":
[info]   603.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   300.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   312.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:instructions":
[info]   1892.109 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:11:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4442878.349 ops/s
[info] # Warmup Iteration   2: 6611819.261 ops/s
[info] # Warmup Iteration   3: 6652098.155 ops/s
[info] # Warmup Iteration   4: 6630165.169 ops/s
[info] # Warmup Iteration   5: 6620974.492 ops/s
[info] Iteration   1: 6634675.999 ops/s
[info] Iteration   2: 6437146.588 ops/s
[info] Iteration   3: 6630838.875 ops/s
[info] Iteration   4: 6655541.734 ops/s
[info] Iteration   5: 6624222.507 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6596485.140 ±(99.9%) 345939.898 ops/s [Average]
[info]   (min, avg, max) = (6437146.588, 6596485.140, 6655541.734), stdev = 89839.493
[info]   CI (99.9%): [6250545.243, 6942425.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   285.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   301.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   353.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   574.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   281.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   293.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   1749.384 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 27580.350 ops/s
[info] # Warmup Iteration   2: 384531.963 ops/s
[info] # Warmup Iteration   3: 430485.684 ops/s
[info] # Warmup Iteration   4: 433985.178 ops/s
[info] # Warmup Iteration   5: 424702.495 ops/s
[info] Iteration   1: 433066.356 ops/s
[info] Iteration   2: 423578.536 ops/s
[info] Iteration   3: 434539.588 ops/s
[info] Iteration   4: 434529.641 ops/s
[info] Iteration   5: 434211.884 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   431985.201 ±(99.9%) 18244.710 ops/s [Average]
[info]   (min, avg, max) = (423578.536, 431985.201, 434539.588), stdev = 4738.093
[info]   CI (99.9%): [413740.491, 450229.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:CPI":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   192.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-dcache-loads":
[info]   5966.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-dcache-stores":
[info]   4320.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   182.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-load-misses":
[info]   0.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-loads":
[info]   2.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-store-misses":
[info]   1.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-stores":
[info]   28.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:branch-misses":
[info]   4.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:branches":
[info]   4443.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:cycles":
[info]   8874.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-loads":
[info]   6146.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-stores":
[info]   4518.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:iTLB-loads":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:instructions":
[info]   25046.966 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 54494.695 ops/s
[info] # Warmup Iteration   2: 75124.268 ops/s
[info] # Warmup Iteration   3: 77514.862 ops/s
[info] # Warmup Iteration   4: 78375.442 ops/s
[info] # Warmup Iteration   5: 80710.738 ops/s
[info] Iteration   1: 81780.299 ops/s
[info] Iteration   2: 80646.243 ops/s
[info] Iteration   3: 78769.987 ops/s
[info] Iteration   4: 79407.178 ops/s
[info] Iteration   5: 80515.449 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   80223.831 ±(99.9%) 4501.571 ops/s [Average]
[info]   (min, avg, max) = (78769.987, 80223.831, 81780.299), stdev = 1169.044
[info]   CI (99.9%): [75722.261, 84725.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   870.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-dcache-loads":
[info]   29069.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-dcache-stores":
[info]   19418.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   21.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-load-misses":
[info]   0.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-loads":
[info]   4.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-store-misses":
[info]   40.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-stores":
[info]   164.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:branch-misses":
[info]   97.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:branches":
[info]   32406.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:cycles":
[info]   47038.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-load-misses":
[info]   3.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-loads":
[info]   28975.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-stores":
[info]   18847.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:iTLB-load-misses":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:iTLB-loads":
[info]   0.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:instructions":
[info]   154203.305 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:10:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 54977.835 ops/s
[info] # Warmup Iteration   2: 108507.181 ops/s
[info] # Warmup Iteration   3: 118191.983 ops/s
[info] # Warmup Iteration   4: 119395.557 ops/s
[info] # Warmup Iteration   5: 127475.943 ops/s
[info] Iteration   1: 126953.587 ops/s
[info] Iteration   2: 127637.642 ops/s
[info] Iteration   3: 127747.702 ops/s
[info] Iteration   4: 123704.727 ops/s
[info] Iteration   5: 127842.332 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   126777.198 ±(99.9%) 6749.055 ops/s [Average]
[info]   (min, avg, max) = (123704.727, 126777.198, 127842.332), stdev = 1752.708
[info]   CI (99.9%): [120028.143, 133526.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   528.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   20868.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   17028.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   113.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-loads":
[info]   4.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   7.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-stores":
[info]   74.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:branch-misses":
[info]   32.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:branches":
[info]   18647.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:cycles":
[info]   30384.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   20673.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   16853.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:instructions":
[info]   101132.519 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:10:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 143031.078 ops/s
[info] # Warmup Iteration   2: 173348.637 ops/s
[info] # Warmup Iteration   3: 180457.685 ops/s
[info] # Warmup Iteration   4: 180596.123 ops/s
[info] # Warmup Iteration   5: 180827.671 ops/s
[info] Iteration   1: 180691.326 ops/s
[info] Iteration   2: 181202.686 ops/s
[info] Iteration   3: 180867.138 ops/s
[info] Iteration   4: 181141.111 ops/s
[info] Iteration   5: 180881.263 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   180956.705 ±(99.9%) 813.780 ops/s [Average]
[info]   (min, avg, max) = (180691.326, 180956.705, 181202.686), stdev = 211.336
[info]   CI (99.9%): [180142.924, 181770.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   395.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   13874.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   11621.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   1.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   11.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   76.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:branch-misses":
[info]   35.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:branches":
[info]   13374.943 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:cycles":
[info]   20796.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   13712.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   11450.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:instructions":
[info]   72217.342 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:10:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 29730.935 ops/s
[info] # Warmup Iteration   2: 57030.556 ops/s
[info] # Warmup Iteration   3: 56530.550 ops/s
[info] # Warmup Iteration   4: 55723.300 ops/s
[info] # Warmup Iteration   5: 55859.866 ops/s
[info] Iteration   1: 55983.433 ops/s
[info] Iteration   2: 56102.133 ops/s
[info] Iteration   3: 57629.692 ops/s
[info] Iteration   4: 57922.457 ops/s
[info] Iteration   5: 58249.636 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   57177.470 ±(99.9%) 4080.194 ops/s [Average]
[info]   (min, avg, max) = (55983.433, 57177.470, 58249.636), stdev = 1059.613
[info]   CI (99.9%): [53097.277, 61257.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:CPI":
[info]   0.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1936.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   49235.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   38222.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   230.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-loads":
[info]   19.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   35.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-stores":
[info]   261.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:branch-misses":
[info]   149.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:branches":
[info]   33961.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:cycles":
[info]   65678.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-loads":
[info]   49492.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-stores":
[info]   38271.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:iTLB-loads":
[info]   1.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:instructions":
[info]   191230.686 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 130766.817 ops/s
[info] # Warmup Iteration   2: 187698.643 ops/s
[info] # Warmup Iteration   3: 189026.831 ops/s
[info] # Warmup Iteration   4: 186923.775 ops/s
[info] # Warmup Iteration   5: 185421.679 ops/s
[info] Iteration   1: 183242.573 ops/s
[info] Iteration   2: 181739.340 ops/s
[info] Iteration   3: 181288.903 ops/s
[info] Iteration   4: 181653.687 ops/s
[info] Iteration   5: 181876.670 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   181960.235 ±(99.9%) 2884.661 ops/s [Average]
[info]   (min, avg, max) = (181288.903, 181960.235, 183242.573), stdev = 749.137
[info]   CI (99.9%): [179075.574, 184844.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:CPI":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   223.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-dcache-loads":
[info]   14917.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-dcache-stores":
[info]   8972.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-load-misses":
[info]   0.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-loads":
[info]   2.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-store-misses":
[info]   56.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-stores":
[info]   85.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:branch-misses":
[info]   10.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:branches":
[info]   14858.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:cycles":
[info]   20481.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-loads":
[info]   14833.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-stores":
[info]   8846.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:iTLB-loads":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:instructions":
[info]   70961.863 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:09:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 265580.846 ops/s
[info] # Warmup Iteration   2: 470152.441 ops/s
[info] # Warmup Iteration   3: 472354.537 ops/s
[info] # Warmup Iteration   4: 470251.628 ops/s
[info] # Warmup Iteration   5: 469188.098 ops/s
[info] Iteration   1: 471821.937 ops/s
[info] Iteration   2: 472473.394 ops/s
[info] Iteration   3: 468372.585 ops/s
[info] Iteration   4: 473614.915 ops/s
[info] Iteration   5: 470297.538 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   471316.074 ±(99.9%) 7839.985 ops/s [Average]
[info]   (min, avg, max) = (468372.585, 471316.074, 473614.915), stdev = 2036.019
[info]   CI (99.9%): [463476.089, 479156.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:CPI":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   28.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   6952.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   3703.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   5.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   1.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   9.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:branch-misses":
[info]   1.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:branches":
[info]   5773.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:cycles":
[info]   8288.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   6817.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   3680.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:instructions":
[info]   28197.552 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 583233.396 ops/s
[info] # Warmup Iteration   2: 619626.791 ops/s
[info] # Warmup Iteration   3: 615076.439 ops/s
[info] # Warmup Iteration   4: 622646.541 ops/s
[info] # Warmup Iteration   5: 628666.238 ops/s
[info] Iteration   1: 624456.757 ops/s
[info] Iteration   2: 621844.142 ops/s
[info] Iteration   3: 621981.053 ops/s
[info] Iteration   4: 621524.966 ops/s
[info] Iteration   5: 626372.523 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   623235.888 ±(99.9%) 8115.597 ops/s [Average]
[info]   (min, avg, max) = (621524.966, 623235.888, 626372.523), stdev = 2107.595
[info]   CI (99.9%): [615120.291, 631351.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   16.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   4415.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2716.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   8.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:branches":
[info]   4266.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:cycles":
[info]   6184.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   4387.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2700.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:instructions":
[info]   21242.595 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:09:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 615153.441 ops/s
[info] # Warmup Iteration   2: 667627.986 ops/s
[info] # Warmup Iteration   3: 672868.126 ops/s
[info] # Warmup Iteration   4: 673958.794 ops/s
[info] # Warmup Iteration   5: 671645.117 ops/s
[info] Iteration   1: 672556.014 ops/s
[info] Iteration   2: 675959.478 ops/s
[info] Iteration   3: 676003.894 ops/s
[info] Iteration   4: 675185.429 ops/s
[info] Iteration   5: 676385.629 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   675218.089 ±(99.9%) 5970.984 ops/s [Average]
[info]   (min, avg, max) = (672556.014, 675218.089, 676385.629), stdev = 1550.646
[info]   CI (99.9%): [669247.105, 681189.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   19.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   4182.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2423.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   4313.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   5564.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   4161.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2428.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   20277.616 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21297.878 ops/s
[info] # Warmup Iteration   2: 35866.502 ops/s
[info] # Warmup Iteration   3: 36091.212 ops/s
[info] # Warmup Iteration   4: 35703.008 ops/s
[info] # Warmup Iteration   5: 35778.240 ops/s
[info] Iteration   1: 35816.007 ops/s
[info] Iteration   2: 35937.699 ops/s
[info] Iteration   3: 35842.499 ops/s
[info] Iteration   4: 35919.241 ops/s
[info] Iteration   5: 35952.153 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   35893.520 ±(99.9%) 233.135 ops/s [Average]
[info]   (min, avg, max) = (35816.007, 35893.520, 35952.153), stdev = 60.545
[info]   CI (99.9%): [35660.384, 36126.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:CPI":
[info]   0.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1746.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-dcache-loads":
[info]   57463.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-dcache-stores":
[info]   40435.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   81.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-load-misses":
[info]   1.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-loads":
[info]   17.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-store-misses":
[info]   25.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-stores":
[info]   232.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:branch-misses":
[info]   187.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:branches":
[info]   62617.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:cycles":
[info]   106271.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-load-misses":
[info]   3.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-loads":
[info]   57644.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-stores":
[info]   40128.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.602 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:iTLB-loads":
[info]   0.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:instructions":
[info]   295504.949 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2650429.612 ops/s
[info] # Warmup Iteration   2: 3188261.133 ops/s
[info] # Warmup Iteration   3: 3477255.767 ops/s
[info] # Warmup Iteration   4: 3466565.245 ops/s
[info] # Warmup Iteration   5: 3453396.035 ops/s
[info] Iteration   1: 3467440.241 ops/s
[info] Iteration   2: 3423966.332 ops/s
[info] Iteration   3: 3383601.274 ops/s
[info] Iteration   4: 3439535.472 ops/s
[info] Iteration   5: 3462130.922 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3435334.849 ±(99.9%) 130184.185 ops/s [Average]
[info]   (min, avg, max) = (3383601.274, 3435334.849, 3467440.241), stdev = 33808.419
[info]   CI (99.9%): [3305150.664, 3565519.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:CPI":
[info]   0.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-dcache-load-misses":
[info]   20.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-dcache-loads":
[info]   518.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-dcache-stores":
[info]   406.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-icache-load-misses":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-loads":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-store-misses":
[info]   3.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-stores":
[info]   8.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:branch-misses":
[info]   2.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:branches":
[info]   1257.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:cycles":
[info]   1115.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-load-misses":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-loads":
[info]   535.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-stores":
[info]   423.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:instructions":
[info]   4460.568 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:08:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.985 ops/s
[info] # Warmup Iteration   2: 5817110.932 ops/s
[info] # Warmup Iteration   3: 5954713.571 ops/s
[info] # Warmup Iteration   4: 6003200.820 ops/s
[info] # Warmup Iteration   5: 6026066.966 ops/s
[info] Iteration   1: 5990699.324 ops/s
[info] Iteration   2: 5993341.896 ops/s
[info] Iteration   3: 5989018.833 ops/s
[info] Iteration   4: 5800346.481 ops/s
[info] Iteration   5: 5939886.720 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   5942658.650 ±(99.9%) 318036.157 ops/s [Average]
[info]   (min, avg, max) = (5800346.481, 5942658.650, 5993341.896), stdev = 82592.980
[info]   CI (99.9%): [5624622.493, 6260694.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   5.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   334.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   202.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:branch-misses":
[info]   1.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:branches":
[info]   748.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:cycles":
[info]   647.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-loads":
[info]   341.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-stores":
[info]   212.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:instructions":
[info]   2933.570 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:08:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2373097.864 ops/s
[info] # Warmup Iteration   2: 4028289.842 ops/s
[info] # Warmup Iteration   3: 4018767.768 ops/s
[info] # Warmup Iteration   4: 4004669.804 ops/s
[info] # Warmup Iteration   5: 4047582.802 ops/s
[info] Iteration   1: 4063551.714 ops/s
[info] Iteration   2: 4067184.904 ops/s
[info] Iteration   3: 4015988.020 ops/s
[info] Iteration   4: 3909891.202 ops/s
[info] Iteration   5: 4063160.162 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   4023955.201 ±(99.9%) 258651.738 ops/s [Average]
[info]   (min, avg, max) = (3909891.202, 4023955.201, 4067184.904), stdev = 67171.035
[info]   CI (99.9%): [3765303.462, 4282606.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:CPI":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   13.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   670.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   420.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-loads":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-stores":
[info]   3.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:branch-misses":
[info]   1.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:branches":
[info]   739.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:cycles":
[info]   947.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-loads":
[info]   697.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-stores":
[info]   422.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:instructions":
[info]   3342.859 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:08:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6227882.233 ops/s
[info] # Warmup Iteration   2: 6763183.210 ops/s
[info] # Warmup Iteration   3: 6935649.737 ops/s
[info] # Warmup Iteration   4: 6930760.558 ops/s
[info] # Warmup Iteration   5: 6917292.142 ops/s
[info] Iteration   1: 6932932.792 ops/s
[info] Iteration   2: 6923831.686 ops/s
[info] Iteration   3: 6928216.897 ops/s
[info] Iteration   4: 6964237.135 ops/s
[info] Iteration   5: 6937954.761 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6937434.654 ±(99.9%) 61154.906 ops/s [Average]
[info]   (min, avg, max) = (6923831.686, 6937434.654, 6964237.135), stdev = 15881.735
[info]   CI (99.9%): [6876279.748, 6998589.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:CPI":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   4.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   324.911 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   214.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:branch-misses":
[info]   1.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:branches":
[info]   856.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:cycles":
[info]   547.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-loads":
[info]   315.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-stores":
[info]   212.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:instructions":
[info]   2601.765 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2988521.330 ops/s
[info] # Warmup Iteration   2: 4060776.232 ops/s
[info] # Warmup Iteration   3: 4081698.561 ops/s
[info] # Warmup Iteration   4: 4181458.152 ops/s
[info] # Warmup Iteration   5: 4097640.171 ops/s
[info] Iteration   1: 4130350.810 ops/s
[info] Iteration   2: 4076470.991 ops/s
[info] Iteration   3: 4082472.308 ops/s
[info] Iteration   4: 4169410.743 ops/s
[info] Iteration   5: 4223895.265 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   4136520.023 ±(99.9%) 238003.854 ops/s [Average]
[info]   (min, avg, max) = (4076470.991, 4136520.023, 4223895.265), stdev = 61808.845
[info]   CI (99.9%): [3898516.170, 4374523.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:CPI":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   14.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-loads":
[info]   676.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-stores":
[info]   438.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-loads":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-store-misses":
[info]   0.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-stores":
[info]   2.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:branch-misses":
[info]   1.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:branches":
[info]   728.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:cycles":
[info]   912.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-loads":
[info]   682.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-stores":
[info]   436.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:instructions":
[info]   3254.699 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1618775.529 ops/s
[info] # Warmup Iteration   2: 2132046.908 ops/s
[info] # Warmup Iteration   3: 2159892.184 ops/s
[info] # Warmup Iteration   4: 2158918.044 ops/s
[info] # Warmup Iteration   5: 2161149.626 ops/s
[info] Iteration   1: 2167929.819 ops/s
[info] Iteration   2: 2200721.244 ops/s
[info] Iteration   3: 2205897.905 ops/s
[info] Iteration   4: 2190993.324 ops/s
[info] Iteration   5: 2213479.798 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2195804.418 ±(99.9%) 67759.643 ops/s [Average]
[info]   (min, avg, max) = (2167929.819, 2195804.418, 2213479.798), stdev = 17596.964
[info]   CI (99.9%): [2128044.775, 2263564.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:CPI":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   15.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-loads":
[info]   569.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-stores":
[info]   471.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-load-misses":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-loads":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-store-misses":
[info]   1.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-stores":
[info]   3.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:branch-misses":
[info]   3.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:branches":
[info]   2822.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:cycles":
[info]   1756.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-load-misses":
[info]   0.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-loads":
[info]   562.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-stores":
[info]   455.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:instructions":
[info]   7546.602 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:07:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.892 ops/s
[info] # Warmup Iteration   2: 5675419.874 ops/s
[info] # Warmup Iteration   3: 5712569.323 ops/s
[info] # Warmup Iteration   4: 5884139.187 ops/s
[info] # Warmup Iteration   5: 5879870.296 ops/s
[info] Iteration   1: 5872323.345 ops/s
[info] Iteration   2: 5882159.694 ops/s
[info] Iteration   3: 5884550.778 ops/s
[info] Iteration   4: 5883022.331 ops/s
[info] Iteration   5: 5899775.148 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   5884366.259 ±(99.9%) 37981.814 ops/s [Average]
[info]   (min, avg, max) = (5872323.345, 5884366.259, 5899775.148), stdev = 9863.757
[info]   CI (99.9%): [5846384.445, 5922348.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   2.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   191.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   175.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-stores":
[info]   0.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:branch-misses":
[info]   1.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:branches":
[info]   1113.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:cycles":
[info]   651.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   191.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   177.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:instructions":
[info]   2913.604 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:07:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3292060.668 ops/s
[info] # Warmup Iteration   2: 4484145.741 ops/s
[info] # Warmup Iteration   3: 4726957.092 ops/s
[info] # Warmup Iteration   4: 4614467.839 ops/s
[info] # Warmup Iteration   5: 4576143.209 ops/s
[info] Iteration   1: 4671277.709 ops/s
[info] Iteration   2: 4592094.044 ops/s
[info] Iteration   3: 4738195.716 ops/s
[info] Iteration   4: 4745963.155 ops/s
[info] Iteration   5: 4739288.192 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   4697363.763 ±(99.9%) 255052.503 ops/s [Average]
[info]   (min, avg, max) = (4592094.044, 4697363.763, 4745963.155), stdev = 66236.325
[info]   CI (99.9%): [4442311.260, 4952416.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   6.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   477.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   324.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-stores":
[info]   0.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:branch-misses":
[info]   1.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:branches":
[info]   1078.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:cycles":
[info]   817.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-loads":
[info]   458.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-stores":
[info]   319.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:instructions":
[info]   3489.167 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5586724.555 ops/s
[info] # Warmup Iteration   2: 5975262.775 ops/s
[info] # Warmup Iteration   3: 6049761.908 ops/s
[info] # Warmup Iteration   4: 6058389.274 ops/s
[info] # Warmup Iteration   5: 6041902.338 ops/s
[info] Iteration   1: 6052245.233 ops/s
[info] Iteration   2: 6050464.694 ops/s
[info] Iteration   3: 6038525.043 ops/s
[info] Iteration   4: 6032715.284 ops/s
[info] Iteration   5: 6049626.395 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   6044715.330 ±(99.9%) 33135.341 ops/s [Average]
[info]   (min, avg, max) = (6032715.284, 6044715.330, 6052245.233), stdev = 8605.143
[info]   CI (99.9%): [6011579.989, 6077850.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:CPI":
[info]   0.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   2.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   323.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   185.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:branches":
[info]   1091.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:cycles":
[info]   631.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   319.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   180.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:instructions":
[info]   3252.563 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6038780.463 ops/s
[info] # Warmup Iteration   2: 6380445.472 ops/s
[info] # Warmup Iteration   3: 6445960.503 ops/s
[info] # Warmup Iteration   4: 6408841.250 ops/s
[info] # Warmup Iteration   5: 6411424.890 ops/s
[info] Iteration   1: 6408529.227 ops/s
[info] Iteration   2: 6409031.489 ops/s
[info] Iteration   3: 6408908.269 ops/s
[info] Iteration   4: 6356942.281 ops/s
[info] Iteration   5: 6386611.068 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   6394004.467 ±(99.9%) 87959.432 ops/s [Average]
[info]   (min, avg, max) = (6356942.281, 6394004.467, 6409031.489), stdev = 22842.785
[info]   CI (99.9%): [6306045.034, 6481963.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   306.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   155.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1041.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   595.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   305.809 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   154.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   3090.640 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:06:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3635405.611 ops/s
[info] # Warmup Iteration   2: 4621795.527 ops/s
[info] # Warmup Iteration   3: 4665345.583 ops/s
[info] # Warmup Iteration   4: 4638174.417 ops/s
[info] # Warmup Iteration   5: 4664362.506 ops/s
[info] Iteration   1: 4650026.620 ops/s
[info] Iteration   2: 4623316.609 ops/s
[info] Iteration   3: 4675650.645 ops/s
[info] Iteration   4: 4653192.622 ops/s
[info] Iteration   5: 4656627.157 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   4651762.731 ±(99.9%) 72258.224 ops/s [Average]
[info]   (min, avg, max) = (4623316.609, 4651762.731, 4675650.645), stdev = 18765.231
[info]   CI (99.9%): [4579504.506, 4724020.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   7.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-loads":
[info]   498.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-stores":
[info]   338.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-loads":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-store-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-stores":
[info]   0.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:branch-misses":
[info]   1.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:branches":
[info]   1080.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:cycles":
[info]   827.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-loads":
[info]   486.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-stores":
[info]   321.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:instructions":
[info]   3520.152 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 813067.283 ops/s
[info] # Warmup Iteration   2: 1428140.347 ops/s
[info] # Warmup Iteration   3: 1477931.487 ops/s
[info] # Warmup Iteration   4: 1476960.181 ops/s
[info] # Warmup Iteration   5: 1477334.568 ops/s
[info] Iteration   1: 1457195.760 ops/s
[info] Iteration   2: 1446334.155 ops/s
[info] Iteration   3: 1435746.462 ops/s
[info] Iteration   4: 1443546.456 ops/s
[info] Iteration   5: 1470683.173 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1450701.201 ±(99.9%) 52210.109 ops/s [Average]
[info]   (min, avg, max) = (1435746.462, 1450701.201, 1470683.173), stdev = 13558.799
[info]   CI (99.9%): [1398491.092, 1502911.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-load-misses":
[info]   35.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-loads":
[info]   990.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-stores":
[info]   580.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-icache-load-misses":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-load-misses":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-loads":
[info]   0.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-store-misses":
[info]   8.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-stores":
[info]   16.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:branch-misses":
[info]   3.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:branches":
[info]   2860.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:cycles":
[info]   2613.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-load-misses":
[info]   0.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-loads":
[info]   999.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-stores":
[info]   564.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:instructions":
[info]   10601.434 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.762 ops/s
[info] # Warmup Iteration   2: 2756260.799 ops/s
[info] # Warmup Iteration   3: 2791476.949 ops/s
[info] # Warmup Iteration   4: 2858143.294 ops/s
[info] # Warmup Iteration   5: 2806299.730 ops/s
[info] Iteration   1: 2743273.876 ops/s
[info] Iteration   2: 2755395.236 ops/s
[info] Iteration   3: 2857496.295 ops/s
[info] Iteration   4: 2866003.223 ops/s
[info] Iteration   5: 2861146.685 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2816663.063 ±(99.9%) 237528.214 ops/s [Average]
[info]   (min, avg, max) = (2743273.876, 2816663.063, 2866003.223), stdev = 61685.323
[info]   CI (99.9%): [2579134.849, 3054191.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   5.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   604.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   594.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:branch-misses":
[info]   1.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:branches":
[info]   1396.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:cycles":
[info]   1346.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-loads":
[info]   603.674 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-stores":
[info]   599.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:instructions":
[info]   6289.760 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 528346.899 ops/s
[info] # Warmup Iteration   2: 1740952.148 ops/s
[info] # Warmup Iteration   3: 1749432.241 ops/s
[info] # Warmup Iteration   4: 1758161.398 ops/s
[info] # Warmup Iteration   5: 1751099.358 ops/s
[info] Iteration   1: 1757908.929 ops/s
[info] Iteration   2: 1754443.058 ops/s
[info] Iteration   3: 1757000.783 ops/s
[info] Iteration   4: 1744440.591 ops/s
[info] Iteration   5: 1758436.322 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1754445.937 ±(99.9%) 22332.879 ops/s [Average]
[info]   (min, avg, max) = (1744440.591, 1754445.937, 1758436.322), stdev = 5799.778
[info]   CI (99.9%): [1732113.057, 1776778.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:CPI":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   15.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   978.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   1099.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-loads":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-stores":
[info]   2.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:branch-misses":
[info]   1.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:branches":
[info]   2080.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:cycles":
[info]   2214.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-loads":
[info]   956.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-stores":
[info]   1096.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:instructions":
[info]   10079.965 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2037096.791 ops/s
[info] # Warmup Iteration   2: 2375549.584 ops/s
[info] # Warmup Iteration   3: 2340414.486 ops/s
[info] # Warmup Iteration   4: 2337974.215 ops/s
[info] # Warmup Iteration   5: 2340831.523 ops/s
[info] Iteration   1: 2388070.298 ops/s
[info] Iteration   2: 2424743.490 ops/s
[info] Iteration   3: 2426694.376 ops/s
[info] Iteration   4: 2384891.425 ops/s
[info] Iteration   5: 2342560.938 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2393392.105 ±(99.9%) 133061.080 ops/s [Average]
[info]   (min, avg, max) = (2342560.938, 2393392.105, 2426694.376), stdev = 34555.540
[info]   CI (99.9%): [2260331.025, 2526453.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:CPI":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   5.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   601.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   224.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:branch-misses":
[info]   1.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:branches":
[info]   1929.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:cycles":
[info]   1584.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-loads":
[info]   595.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-stores":
[info]   218.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:instructions":
[info]   7614.766 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:05:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 908962.424 ops/s
[info] # Warmup Iteration   2: 1668692.570 ops/s
[info] # Warmup Iteration   3: 1608168.811 ops/s
[info] # Warmup Iteration   4: 1663348.075 ops/s
[info] # Warmup Iteration   5: 1663514.614 ops/s
[info] Iteration   1: 1656981.321 ops/s
[info] Iteration   2: 1660634.041 ops/s
[info] Iteration   3: 1659604.527 ops/s
[info] Iteration   4: 1732459.841 ops/s
[info] Iteration   5: 1731947.386 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1688325.423 ±(99.9%) 154324.828 ops/s [Average]
[info]   (min, avg, max) = (1656981.321, 1688325.423, 1732459.841), stdev = 40077.668
[info]   CI (99.9%): [1534000.595, 1842650.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:CPI":
[info]   0.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   14.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-loads":
[info]   1076.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-stores":
[info]   1110.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-loads":
[info]   0.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-store-misses":
[info]   1.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-stores":
[info]   3.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:branch-misses":
[info]   2.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:branches":
[info]   2085.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:cycles":
[info]   2249.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-loads":
[info]   1063.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-stores":
[info]   1070.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:instructions":
[info]   10055.324 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:05:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 666460.021 ops/s
[info] # Warmup Iteration   2: 1213147.904 ops/s
[info] # Warmup Iteration   3: 1217644.715 ops/s
[info] # Warmup Iteration   4: 1221280.477 ops/s
[info] # Warmup Iteration   5: 1216050.693 ops/s
[info] Iteration   1: 1216998.770 ops/s
[info] Iteration   2: 1220677.454 ops/s
[info] Iteration   3: 1219694.567 ops/s
[info] Iteration   4: 1182229.410 ops/s
[info] Iteration   5: 1183593.673 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1204638.775 ±(99.9%) 76572.684 ops/s [Average]
[info]   (min, avg, max) = (1182229.410, 1204638.775, 1220677.454), stdev = 19885.683
[info]   CI (99.9%): [1128066.090, 1281211.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:CPI":
[info]   0.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   19.647 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-loads":
[info]   2138.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-stores":
[info]   1554.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-load-misses":
[info]   0.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-loads":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-store-misses":
[info]   2.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-stores":
[info]   5.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:branch-misses":
[info]   3.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:branches":
[info]   2717.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:cycles":
[info]   3168.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-load-misses":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-loads":
[info]   2112.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-stores":
[info]   1538.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:instructions":
[info]   12380.395 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.780 ops/s
[info] # Warmup Iteration   2: 2708573.530 ops/s
[info] # Warmup Iteration   3: 2792948.268 ops/s
[info] # Warmup Iteration   4: 2793321.127 ops/s
[info] # Warmup Iteration   5: 2802592.755 ops/s
[info] Iteration   1: 2799991.358 ops/s
[info] Iteration   2: 2802912.347 ops/s
[info] Iteration   3: 2800544.838 ops/s
[info] Iteration   4: 2802752.342 ops/s
[info] Iteration   5: 2801624.132 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   2801565.003 ±(99.9%) 5000.541 ops/s [Average]
[info]   (min, avg, max) = (2799991.358, 2801565.003, 2802912.347), stdev = 1298.625
[info]   CI (99.9%): [2796564.463, 2806565.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:CPI":
[info]   0.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   6.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   210.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   476.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-stores":
[info]   2.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branch-misses":
[info]   1.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branches":
[info]   1457.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:cycles":
[info]   1383.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   214.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   484.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:instructions":
[info]   5659.192 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1169281.681 ops/s
[info] # Warmup Iteration   2: 2881370.243 ops/s
[info] # Warmup Iteration   3: 2944428.862 ops/s
[info] # Warmup Iteration   4: 2988629.317 ops/s
[info] # Warmup Iteration   5: 3001260.142 ops/s
[info] Iteration   1: 2989481.553 ops/s
[info] Iteration   2: 2996902.726 ops/s
[info] Iteration   3: 2994040.495 ops/s
[info] Iteration   4: 2993315.079 ops/s
[info] Iteration   5: 3013646.995 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2997477.370 ±(99.9%) 36268.531 ops/s [Average]
[info]   (min, avg, max) = (2989481.553, 2997477.370, 3013646.995), stdev = 9418.822
[info]   CI (99.9%): [2961208.838, 3033745.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:CPI":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   11.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   366.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   635.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   1.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-stores":
[info]   2.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:branch-misses":
[info]   1.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:branches":
[info]   1292.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:cycles":
[info]   1294.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-loads":
[info]   366.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-stores":
[info]   622.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:instructions":
[info]   5604.023 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2061137.746 ops/s
[info] # Warmup Iteration   2: 3329899.722 ops/s
[info] # Warmup Iteration   3: 3356967.478 ops/s
[info] # Warmup Iteration   4: 3330103.283 ops/s
[info] # Warmup Iteration   5: 3339905.788 ops/s
[info] Iteration   1: 3336313.046 ops/s
[info] Iteration   2: 3309850.388 ops/s
[info] Iteration   3: 3330208.802 ops/s
[info] Iteration   4: 3340677.446 ops/s
[info] Iteration   5: 3340323.898 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3331474.716 ±(99.9%) 49298.086 ops/s [Average]
[info]   (min, avg, max) = (3309850.388, 3331474.716, 3340677.446), stdev = 12802.556
[info]   CI (99.9%): [3282176.630, 3380772.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   6.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   214.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   488.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branches":
[info]   1285.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:cycles":
[info]   1137.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   213.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   473.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:instructions":
[info]   5140.170 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:04:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2434081.503 ops/s
[info] # Warmup Iteration   2: 3595501.123 ops/s
[info] # Warmup Iteration   3: 3638105.653 ops/s
[info] # Warmup Iteration   4: 3637720.556 ops/s
[info] # Warmup Iteration   5: 3639358.538 ops/s
[info] Iteration   1: 3637352.419 ops/s
[info] Iteration   2: 3639271.705 ops/s
[info] Iteration   3: 3639299.532 ops/s
[info] Iteration   4: 3634369.018 ops/s
[info] Iteration   5: 3629200.383 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3635898.612 ±(99.9%) 16366.765 ops/s [Average]
[info]   (min, avg, max) = (3629200.383, 3635898.612, 3639299.532), stdev = 4250.397
[info]   CI (99.9%): [3619531.846, 3652265.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   186.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   415.647 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1188.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1037.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   181.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   416.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   4794.014 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2075668.463 ops/s
[info] # Warmup Iteration   2: 2845761.963 ops/s
[info] # Warmup Iteration   3: 2805679.054 ops/s
[info] # Warmup Iteration   4: 2858377.492 ops/s
[info] # Warmup Iteration   5: 2860900.069 ops/s
[info] Iteration   1: 2818629.391 ops/s
[info] Iteration   2: 2806129.772 ops/s
[info] Iteration   3: 2785261.644 ops/s
[info] Iteration   4: 2776791.864 ops/s
[info] Iteration   5: 2778030.501 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2792968.634 ±(99.9%) 71416.818 ops/s [Average]
[info]   (min, avg, max) = (2776791.864, 2792968.634, 2818629.391), stdev = 18546.721
[info]   CI (99.9%): [2721551.816, 2864385.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:CPI":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   12.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-loads":
[info]   406.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-stores":
[info]   677.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-loads":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-store-misses":
[info]   1.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-stores":
[info]   2.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:branch-misses":
[info]   1.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:branches":
[info]   1286.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:cycles":
[info]   1350.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-loads":
[info]   401.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-stores":
[info]   660.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:instructions":
[info]   5684.031 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5314.710 ops/s
[info] # Warmup Iteration   2: 10736.467 ops/s
[info] # Warmup Iteration   3: 11765.589 ops/s
[info] # Warmup Iteration   4: 12067.917 ops/s
[info] # Warmup Iteration   5: 12084.364 ops/s
[info] Iteration   1: 12058.915 ops/s
[info] Iteration   2: 12113.553 ops/s
[info] Iteration   3: 12092.195 ops/s
[info] Iteration   4: 11757.048 ops/s
[info] Iteration   5: 11689.115 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   11942.165 ±(99.9%) 779.258 ops/s [Average]
[info]   (min, avg, max) = (11689.115, 11942.165, 12113.553), stdev = 202.371
[info]   CI (99.9%): [11162.907, 12721.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:CPI":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-dcache-load-misses":
[info]   7986.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-dcache-loads":
[info]   186615.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-dcache-stores":
[info]   101001.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-icache-load-misses":
[info]   3077.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-load-misses":
[info]   4.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-loads":
[info]   383.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-store-misses":
[info]   726.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-stores":
[info]   1382.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:branch-misses":
[info]   971.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:branches":
[info]   258974.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:cycles":
[info]   323409.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-load-misses":
[info]   14.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-loads":
[info]   188911.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-store-misses":
[info]   12.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-stores":
[info]   97692.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:iTLB-load-misses":
[info]   3.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:iTLB-loads":
[info]   45.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:instructions":
[info]   1023240.862 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2339.053 ops/s
[info] # Warmup Iteration   2: 20533.191 ops/s
[info] # Warmup Iteration   3: 22743.457 ops/s
[info] # Warmup Iteration   4: 22896.811 ops/s
[info] # Warmup Iteration   5: 22908.918 ops/s
[info] Iteration   1: 22796.668 ops/s
[info] Iteration   2: 22917.690 ops/s
[info] Iteration   3: 22888.341 ops/s
[info] Iteration   4: 23023.758 ops/s
[info] Iteration   5: 23003.159 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   22925.923 ±(99.9%) 353.567 ops/s [Average]
[info]   (min, avg, max) = (22796.668, 22925.923, 23023.758), stdev = 91.820
[info]   CI (99.9%): [22572.356, 23279.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:CPI":
[info]   0.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4976.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-dcache-loads":
[info]   113960.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-dcache-stores":
[info]   55560.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1428.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-load-misses":
[info]   3.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-loads":
[info]   180.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-store-misses":
[info]   6.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-stores":
[info]   76.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:branch-misses":
[info]   219.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:branches":
[info]   121493.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:cycles":
[info]   169939.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-load-misses":
[info]   3.558 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-loads":
[info]   113748.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-stores":
[info]   55045.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:iTLB-load-misses":
[info]   5.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:iTLB-loads":
[info]   10.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:instructions":
[info]   543468.159 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 19741.453 ops/s
[info] # Warmup Iteration   2: 23584.271 ops/s
[info] # Warmup Iteration   3: 22763.702 ops/s
[info] # Warmup Iteration   4: 22812.525 ops/s
[info] # Warmup Iteration   5: 22656.085 ops/s
[info] Iteration   1: 22762.218 ops/s
[info] Iteration   2: 22740.938 ops/s
[info] Iteration   3: 22868.694 ops/s
[info] Iteration   4: 22853.856 ops/s
[info] Iteration   5: 22908.617 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   22826.865 ±(99.9%) 277.168 ops/s [Average]
[info]   (min, avg, max) = (22740.938, 22826.865, 22908.617), stdev = 71.980
[info]   CI (99.9%): [22549.696, 23104.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:CPI":
[info]   0.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   613.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   94225.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   50006.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   4486.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-loads":
[info]   13.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-store-misses":
[info]   6.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-stores":
[info]   51.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:branch-misses":
[info]   259.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:branches":
[info]   123427.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:cycles":
[info]   163805.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   2.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-loads":
[info]   93428.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   3.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-stores":
[info]   49528.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:iTLB-loads":
[info]   3.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:instructions":
[info]   446388.832 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 316.528 ops/s
[info] # Warmup Iteration   2: 3357.372 ops/s
[info] # Warmup Iteration   3: 5670.202 ops/s
[info] # Warmup Iteration   4: 6243.999 ops/s
[info] # Warmup Iteration   5: 6227.953 ops/s
[info] Iteration   1: 6233.582 ops/s
[info] Iteration   2: 6250.667 ops/s
[info] Iteration   3: 6257.306 ops/s
[info] Iteration   4: 6178.632 ops/s
[info] Iteration   5: 6263.785 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   6236.794 ±(99.9%) 132.481 ops/s [Average]
[info]   (min, avg, max) = (6178.632, 6236.794, 6263.785), stdev = 34.405
[info]   CI (99.9%): [6104.313, 6369.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:CPI":
[info]   0.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   14312.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-dcache-loads":
[info]   396373.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-dcache-stores":
[info]   260719.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-icache-load-misses":
[info]   11296.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-load-misses":
[info]   68.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-loads":
[info]   1081.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-store-misses":
[info]   134.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-stores":
[info]   1369.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:branch-misses":
[info]   1773.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:branches":
[info]   292553.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:cycles":
[info]   617758.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-load-misses":
[info]   17.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-loads":
[info]   391645.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-stores":
[info]   263556.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:iTLB-load-misses":
[info]   5.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:iTLB-loads":
[info]   120.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:instructions":
[info]   1654549.590 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16585.909 ops/s
[info] # Warmup Iteration   2: 62918.064 ops/s
[info] # Warmup Iteration   3: 63686.238 ops/s
[info] # Warmup Iteration   4: 63512.998 ops/s
[info] # Warmup Iteration   5: 63624.662 ops/s
[info] Iteration   1: 63996.440 ops/s
[info] Iteration   2: 63560.700 ops/s
[info] Iteration   3: 63393.601 ops/s
[info] Iteration   4: 63420.407 ops/s
[info] Iteration   5: 63757.485 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   63625.727 ±(99.9%) 972.347 ops/s [Average]
[info]   (min, avg, max) = (63393.601, 63625.727, 63996.440), stdev = 252.515
[info]   CI (99.9%): [62653.379, 64598.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:CPI":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   2970.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   38333.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   23497.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   25.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-loads":
[info]   12.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-store-misses":
[info]   203.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-stores":
[info]   305.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:branch-misses":
[info]   145.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:branches":
[info]   53921.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:cycles":
[info]   60935.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   3.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-loads":
[info]   38133.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   1.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-stores":
[info]   23866.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:instructions":
[info]   204149.170 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 44722.016 ops/s
[info] # Warmup Iteration   2: 68441.791 ops/s
[info] # Warmup Iteration   3: 69732.138 ops/s
[info] # Warmup Iteration   4: 69997.899 ops/s
[info] # Warmup Iteration   5: 70000.925 ops/s
[info] Iteration   1: 70303.851 ops/s
[info] Iteration   2: 70264.127 ops/s
[info] Iteration   3: 70426.246 ops/s
[info] Iteration   4: 70791.521 ops/s
[info] Iteration   5: 71635.766 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   70684.302 ±(99.9%) 2199.138 ops/s [Average]
[info]   (min, avg, max) = (70264.127, 70684.302, 71635.766), stdev = 571.109
[info]   CI (99.9%): [68485.164, 72883.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:CPI":
[info]   0.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   577.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   20731.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   17132.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   4118.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-loads":
[info]   10.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   108.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-stores":
[info]   176.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:branch-misses":
[info]   24.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:branches":
[info]   47179.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:cycles":
[info]   53411.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-loads":
[info]   20569.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   1.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-stores":
[info]   17040.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:instructions":
[info]   162664.867 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 52884.884 ops/s
[info] # Warmup Iteration   2: 75797.215 ops/s
[info] # Warmup Iteration   3: 75830.925 ops/s
[info] # Warmup Iteration   4: 76108.839 ops/s
[info] # Warmup Iteration   5: 76196.579 ops/s
[info] Iteration   1: 76210.346 ops/s
[info] Iteration   2: 76219.892 ops/s
[info] Iteration   3: 76166.887 ops/s
[info] Iteration   4: 75544.376 ops/s
[info] Iteration   5: 76032.438 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   76034.788 ±(99.9%) 1094.294 ops/s [Average]
[info]   (min, avg, max) = (75544.376, 76034.788, 76219.892), stdev = 284.185
[info]   CI (99.9%): [74940.494, 77129.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   309.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   18113.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   16838.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   3963.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   1.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   4.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.398 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   9.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   23.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   45018.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   50435.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   17987.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   16833.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   152877.877 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:02:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 208401.546 ops/s
[info] # Warmup Iteration   2: 297734.659 ops/s
[info] # Warmup Iteration   3: 313716.601 ops/s
[info] # Warmup Iteration   4: 312898.007 ops/s
[info] # Warmup Iteration   5: 307454.365 ops/s
[info] Iteration   1: 313729.010 ops/s
[info] Iteration   2: 314122.931 ops/s
[info] Iteration   3: 314107.821 ops/s
[info] Iteration   4: 314191.442 ops/s
[info] Iteration   5: 314513.219 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   314132.884 ±(99.9%) 1075.297 ops/s [Average]
[info]   (min, avg, max) = (313729.010, 314132.884, 314513.219), stdev = 279.251
[info]   CI (99.9%): [313057.587, 315208.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:CPI":
[info]   0.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   149.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   11785.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   5398.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   0.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-loads":
[info]   0.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   19.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-stores":
[info]   49.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:branch-misses":
[info]   14.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:branches":
[info]   11828.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:cycles":
[info]   12173.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   0.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   11816.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   5298.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:instructions":
[info]   46960.211 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 244436.730 ops/s
[info] # Warmup Iteration   2: 481161.698 ops/s
[info] # Warmup Iteration   3: 500387.726 ops/s
[info] # Warmup Iteration   4: 489193.249 ops/s
[info] # Warmup Iteration   5: 478480.664 ops/s
[info] Iteration   1: 489541.645 ops/s
[info] Iteration   2: 499756.561 ops/s
[info] Iteration   3: 498601.513 ops/s
[info] Iteration   4: 499284.621 ops/s
[info] Iteration   5: 501246.883 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   497686.244 ±(99.9%) 17926.328 ops/s [Average]
[info]   (min, avg, max) = (489541.645, 497686.244, 501246.883), stdev = 4655.410
[info]   CI (99.9%): [479759.917, 515612.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   35.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   6386.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   3234.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.599 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   2.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   8.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   5.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:branches":
[info]   6692.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:cycles":
[info]   7744.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   6213.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   3194.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:instructions":
[info]   28037.147 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1109928.728 ops/s
[info] # Warmup Iteration   2: 1226533.852 ops/s
[info] # Warmup Iteration   3: 1265948.362 ops/s
[info] # Warmup Iteration   4: 1259082.493 ops/s
[info] # Warmup Iteration   5: 1237325.794 ops/s
[info] Iteration   1: 1242346.772 ops/s
[info] Iteration   2: 1270417.537 ops/s
[info] Iteration   3: 1269551.530 ops/s
[info] Iteration   4: 1270462.096 ops/s
[info] Iteration   5: 1254934.275 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1261542.442 ±(99.9%) 48501.862 ops/s [Average]
[info]   (min, avg, max) = (1242346.772, 1261542.442, 1270462.096), stdev = 12595.779
[info]   CI (99.9%): [1213040.580, 1310044.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   13.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   3170.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1104.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   3.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   5.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:branches":
[info]   3194.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   2984.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   3074.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   1078.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   12797.190 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 58513.748 ops/s
[info] # Warmup Iteration   2: 98875.158 ops/s
[info] # Warmup Iteration   3: 94308.541 ops/s
[info] # Warmup Iteration   4: 97589.936 ops/s
[info] # Warmup Iteration   5: 98190.721 ops/s
[info] Iteration   1: 98257.576 ops/s
[info] Iteration   2: 101232.894 ops/s
[info] Iteration   3: 101115.436 ops/s
[info] Iteration   4: 101909.569 ops/s
[info] Iteration   5: 102017.024 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   100906.500 ±(99.9%) 5904.933 ops/s [Average]
[info]   (min, avg, max) = (98257.576, 100906.500, 102017.024), stdev = 1533.492
[info]   CI (99.9%): [95001.566, 106811.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   925.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   34815.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   21982.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   28.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   1.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   8.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   30.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   191.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   38.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:branches":
[info]   21669.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:cycles":
[info]   37441.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   35767.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   22088.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:instructions":
[info]   116877.881 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 199381.688 ops/s
[info] # Warmup Iteration   2: 308654.694 ops/s
[info] # Warmup Iteration   3: 312137.382 ops/s
[info] # Warmup Iteration   4: 312351.818 ops/s
[info] # Warmup Iteration   5: 313380.457 ops/s
[info] Iteration   1: 312392.097 ops/s
[info] Iteration   2: 311878.639 ops/s
[info] Iteration   3: 313719.966 ops/s
[info] Iteration   4: 311272.645 ops/s
[info] Iteration   5: 312744.564 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   312401.582 ±(99.9%) 3552.117 ops/s [Average]
[info]   (min, avg, max) = (311272.645, 312401.582, 313719.966), stdev = 922.474
[info]   CI (99.9%): [308849.465, 315953.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:CPI":
[info]   0.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   89.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   11618.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   7087.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   45.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   62.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:branch-misses":
[info]   15.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:branches":
[info]   8942.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:cycles":
[info]   12253.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   11581.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6985.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:instructions":
[info]   41580.659 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 412553.446 ops/s
[info] # Warmup Iteration   2: 696027.112 ops/s
[info] # Warmup Iteration   3: 724739.377 ops/s
[info] # Warmup Iteration   4: 720789.154 ops/s
[info] # Warmup Iteration   5: 724758.574 ops/s
[info] Iteration   1: 725141.383 ops/s
[info] Iteration   2: 721089.134 ops/s
[info] Iteration   3: 722405.435 ops/s
[info] Iteration   4: 721290.545 ops/s
[info] Iteration   5: 724526.555 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   722890.610 ±(99.9%) 7147.902 ops/s [Average]
[info]   (min, avg, max) = (721089.134, 722890.610, 725141.383), stdev = 1856.287
[info]   CI (99.9%): [715742.708, 730038.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   20.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   5326.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2096.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   8.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   6.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:branches":
[info]   4214.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   5363.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   5144.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   2046.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   18840.361 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1495620.258 ops/s
[info] # Warmup Iteration   2: 1647362.758 ops/s
[info] # Warmup Iteration   3: 1674366.693 ops/s
[info] # Warmup Iteration   4: 1670177.103 ops/s
[info] # Warmup Iteration   5: 1676405.981 ops/s
[info] Iteration   1: 1675998.477 ops/s
[info] Iteration   2: 1674055.210 ops/s
[info] Iteration   3: 1675741.138 ops/s
[info] Iteration   4: 1676312.077 ops/s
[info] Iteration   5: 1675406.363 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1675502.653 ±(99.9%) 3369.174 ops/s [Average]
[info]   (min, avg, max) = (1674055.210, 1675502.653, 1676312.077), stdev = 874.964
[info]   CI (99.9%): [1672133.479, 1678871.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   11.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2062.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1459.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   3.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   6.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   2.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   2467.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   2284.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2007.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1409.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   10536.353 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1630676.236 ops/s
[info] # Warmup Iteration   2: 1783837.327 ops/s
[info] # Warmup Iteration   3: 1797450.964 ops/s
[info] # Warmup Iteration   4: 1743923.425 ops/s
[info] # Warmup Iteration   5: 1742333.911 ops/s
[info] Iteration   1: 1748974.406 ops/s
[info] Iteration   2: 1749272.695 ops/s
[info] Iteration   3: 1751766.636 ops/s
[info] Iteration   4: 1750671.432 ops/s
[info] Iteration   5: 1752951.992 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1750727.432 ±(99.9%) 6449.429 ops/s [Average]
[info]   (min, avg, max) = (1748974.406, 1750727.432, 1752951.992), stdev = 1674.896
[info]   CI (99.9%): [1744278.004, 1757176.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2031.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1344.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   2.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2355.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2138.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2023.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1331.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   10077.021 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 308123.237 ops/s
[info] # Warmup Iteration   2: 416473.592 ops/s
[info] # Warmup Iteration   3: 434775.861 ops/s
[info] # Warmup Iteration   4: 437908.640 ops/s
[info] # Warmup Iteration   5: 442697.343 ops/s
[info] Iteration   1: 441633.805 ops/s
[info] Iteration   2: 442027.468 ops/s
[info] Iteration   3: 438244.458 ops/s
[info] Iteration   4: 418972.163 ops/s
[info] Iteration   5: 441743.323 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   436524.243 ±(99.9%) 38248.863 ops/s [Average]
[info]   (min, avg, max) = (418972.163, 436524.243, 442027.468), stdev = 9933.108
[info]   CI (99.9%): [398275.380, 474773.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   39.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   9270.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   3338.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   1.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   0.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   4.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   14.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   4.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:branches":
[info]   6399.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:cycles":
[info]   8606.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   9089.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   3230.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:instructions":
[info]   30790.817 #/op
[info] # Run complete. Total time: 01:37:32
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                                                                             (size)   Mode  Cnt         Score         Error  Units
[info] AdtBenchmark.readCirce                                                                   N/A  thrpt    5    749651.774 ±   19912.409  ops/s
[info] AdtBenchmark.readCirce:CPI                                                               N/A  thrpt              0.335                 #/op
[info] AdtBenchmark.readCirce:L1-dcache-load-misses                                             N/A  thrpt             76.937                 #/op
[info] AdtBenchmark.readCirce:L1-dcache-loads                                                   N/A  thrpt           3604.900                 #/op
[info] AdtBenchmark.readCirce:L1-dcache-stores                                                  N/A  thrpt           2287.374                 #/op
[info] AdtBenchmark.readCirce:L1-icache-load-misses                                             N/A  thrpt             38.878                 #/op
[info] AdtBenchmark.readCirce:LLC-load-misses                                                   N/A  thrpt              0.051                 #/op
[info] AdtBenchmark.readCirce:LLC-loads                                                         N/A  thrpt              0.574                 #/op
[info] AdtBenchmark.readCirce:LLC-store-misses                                                  N/A  thrpt              2.359                 #/op
[info] AdtBenchmark.readCirce:LLC-stores                                                        N/A  thrpt             13.151                 #/op
[info] AdtBenchmark.readCirce:branch-misses                                                     N/A  thrpt              5.078                 #/op
[info] AdtBenchmark.readCirce:branches                                                          N/A  thrpt           3452.891                 #/op
[info] AdtBenchmark.readCirce:cycles                                                            N/A  thrpt           5120.096                 #/op
[info] AdtBenchmark.readCirce:dTLB-load-misses                                                  N/A  thrpt              0.331                 #/op
[info] AdtBenchmark.readCirce:dTLB-loads                                                        N/A  thrpt           3598.724                 #/op
[info] AdtBenchmark.readCirce:dTLB-store-misses                                                 N/A  thrpt              0.006                 #/op
[info] AdtBenchmark.readCirce:dTLB-stores                                                       N/A  thrpt           2211.225                 #/op
[info] AdtBenchmark.readCirce:iTLB-load-misses                                                  N/A  thrpt              0.045                 #/op
[info] AdtBenchmark.readCirce:iTLB-loads                                                        N/A  thrpt              0.090                 #/op
[info] AdtBenchmark.readCirce:instructions                                                      N/A  thrpt          15299.833                 #/op
[info] AdtBenchmark.readJacksonScala                                                            N/A  thrpt    5   1942632.378 ±  180357.900  ops/s
[info] AdtBenchmark.readJacksonScala:CPI                                                        N/A  thrpt              0.321                 #/op
[info] AdtBenchmark.readJacksonScala:L1-dcache-load-misses                                      N/A  thrpt             27.380                 #/op
[info] AdtBenchmark.readJacksonScala:L1-dcache-loads                                            N/A  thrpt           1518.908                 #/op
[info] AdtBenchmark.readJacksonScala:L1-dcache-stores                                           N/A  thrpt            942.574                 #/op
[info] AdtBenchmark.readJacksonScala:L1-icache-load-misses                                      N/A  thrpt              0.203                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-load-misses                                            N/A  thrpt              0.005                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-loads                                                  N/A  thrpt              0.125                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-store-misses                                           N/A  thrpt              0.253                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-stores                                                 N/A  thrpt              4.086                 #/op
[info] AdtBenchmark.readJacksonScala:branch-misses                                              N/A  thrpt              0.241                 #/op
[info] AdtBenchmark.readJacksonScala:branches                                                   N/A  thrpt           1216.110                 #/op
[info] AdtBenchmark.readJacksonScala:cycles                                                     N/A  thrpt           1933.240                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-load-misses                                           N/A  thrpt              0.055                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-loads                                                 N/A  thrpt           1540.540                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-store-misses                                          N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-stores                                                N/A  thrpt            906.721                 #/op
[info] AdtBenchmark.readJacksonScala:iTLB-load-misses                                           N/A  thrpt              0.009                 #/op
[info] AdtBenchmark.readJacksonScala:iTLB-loads                                                 N/A  thrpt              0.027                 #/op
[info] AdtBenchmark.readJacksonScala:instructions                                               N/A  thrpt           6020.907                 #/op
[info] AdtBenchmark.readJsoniterScala                                                           N/A  thrpt    5   5799915.023 ±  834182.306  ops/s
[info] AdtBenchmark.readJsoniterScala:CPI                                                       N/A  thrpt              0.269                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-dcache-load-misses                                     N/A  thrpt              1.846                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-dcache-loads                                           N/A  thrpt            389.559                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-dcache-stores                                          N/A  thrpt            198.664                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-icache-load-misses                                     N/A  thrpt              0.028                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-load-misses                                           N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-loads                                                 N/A  thrpt              0.022                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-store-misses                                          N/A  thrpt              0.035                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-stores                                                N/A  thrpt              0.193                 #/op
[info] AdtBenchmark.readJsoniterScala:branch-misses                                             N/A  thrpt              0.021                 #/op
[info] AdtBenchmark.readJsoniterScala:branches                                                  N/A  thrpt            675.752                 #/op
[info] AdtBenchmark.readJsoniterScala:cycles                                                    N/A  thrpt            627.611                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-load-misses                                          N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-loads                                                N/A  thrpt            385.225                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-store-misses                                         N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-stores                                               N/A  thrpt            195.919                 #/op
[info] AdtBenchmark.readJsoniterScala:iTLB-load-misses                                          N/A  thrpt              0.002                 #/op
[info] AdtBenchmark.readJsoniterScala:iTLB-loads                                                N/A  thrpt              0.010                 #/op
[info] AdtBenchmark.readJsoniterScala:instructions                                              N/A  thrpt           2335.567                 #/op
[info] AdtBenchmark.readPlayJson                                                                N/A  thrpt    5    310702.986 ±     755.987  ops/s
[info] AdtBenchmark.readPlayJson:CPI                                                            N/A  thrpt              0.390                 #/op
[info] AdtBenchmark.readPlayJson:L1-dcache-load-misses                                          N/A  thrpt            423.579                 #/op
[info] AdtBenchmark.readPlayJson:L1-dcache-loads                                                N/A  thrpt           9452.204                 #/op
[info] AdtBenchmark.readPlayJson:L1-dcache-stores                                               N/A  thrpt           6606.475                 #/op
[info] AdtBenchmark.readPlayJson:L1-icache-load-misses                                          N/A  thrpt            309.190                 #/op
[info] AdtBenchmark.readPlayJson:LLC-load-misses                                                N/A  thrpt              0.492                 #/op
[info] AdtBenchmark.readPlayJson:LLC-loads                                                      N/A  thrpt              8.425                 #/op
[info] AdtBenchmark.readPlayJson:LLC-store-misses                                               N/A  thrpt              3.369                 #/op
[info] AdtBenchmark.readPlayJson:LLC-stores                                                     N/A  thrpt             49.374                 #/op
[info] AdtBenchmark.readPlayJson:branch-misses                                                  N/A  thrpt              6.214                 #/op
[info] AdtBenchmark.readPlayJson:branches                                                       N/A  thrpt           4856.769                 #/op
[info] AdtBenchmark.readPlayJson:cycles                                                         N/A  thrpt          12250.863                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-load-misses                                               N/A  thrpt              0.541                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-loads                                                     N/A  thrpt           9700.777                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-store-misses                                              N/A  thrpt              0.011                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-stores                                                    N/A  thrpt           6841.438                 #/op
[info] AdtBenchmark.readPlayJson:iTLB-load-misses                                               N/A  thrpt              0.040                 #/op
[info] AdtBenchmark.readPlayJson:iTLB-loads                                                     N/A  thrpt              0.090                 #/op
[info] AdtBenchmark.readPlayJson:instructions                                                   N/A  thrpt          31445.690                 #/op
[info] AdtBenchmark.writeCirce                                                                  N/A  thrpt    5    903774.403 ±   82797.433  ops/s
[info] AdtBenchmark.writeCirce:CPI                                                              N/A  thrpt              0.362                 #/op
[info] AdtBenchmark.writeCirce:L1-dcache-load-misses                                            N/A  thrpt             67.936                 #/op
[info] AdtBenchmark.writeCirce:L1-dcache-loads                                                  N/A  thrpt           2776.492                 #/op
[info] AdtBenchmark.writeCirce:L1-dcache-stores                                                 N/A  thrpt           2017.706                 #/op
[info] AdtBenchmark.writeCirce:L1-icache-load-misses                                            N/A  thrpt             33.645                 #/op
[info] AdtBenchmark.writeCirce:LLC-load-misses                                                  N/A  thrpt              0.110                 #/op
[info] AdtBenchmark.writeCirce:LLC-loads                                                        N/A  thrpt              0.604                 #/op
[info] AdtBenchmark.writeCirce:LLC-store-misses                                                 N/A  thrpt              3.991                 #/op
[info] AdtBenchmark.writeCirce:LLC-stores                                                       N/A  thrpt             16.091                 #/op
[info] AdtBenchmark.writeCirce:branch-misses                                                    N/A  thrpt              1.087                 #/op
[info] AdtBenchmark.writeCirce:branches                                                         N/A  thrpt           2473.550                 #/op
[info] AdtBenchmark.writeCirce:cycles                                                           N/A  thrpt           4203.859                 #/op
[info] AdtBenchmark.writeCirce:dTLB-load-misses                                                 N/A  thrpt              0.104                 #/op
[info] AdtBenchmark.writeCirce:dTLB-loads                                                       N/A  thrpt           2802.117                 #/op
[info] AdtBenchmark.writeCirce:dTLB-store-misses                                                N/A  thrpt              0.005                 #/op
[info] AdtBenchmark.writeCirce:dTLB-stores                                                      N/A  thrpt           2014.186                 #/op
[info] AdtBenchmark.writeCirce:iTLB-load-misses                                                 N/A  thrpt              0.027                 #/op
[info] AdtBenchmark.writeCirce:iTLB-loads                                                       N/A  thrpt              0.039                 #/op
[info] AdtBenchmark.writeCirce:instructions                                                     N/A  thrpt          11613.205                 #/op
[info] AdtBenchmark.writeJacksonScala                                                           N/A  thrpt    5   3101862.865 ±  106546.886  ops/s
[info] AdtBenchmark.writeJacksonScala:CPI                                                       N/A  thrpt              0.307                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-dcache-load-misses                                     N/A  thrpt              8.732                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-dcache-loads                                           N/A  thrpt            999.604                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-dcache-stores                                          N/A  thrpt            620.554                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-icache-load-misses                                     N/A  thrpt              0.075                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-load-misses                                           N/A  thrpt              0.018                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-loads                                                 N/A  thrpt              0.081                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-store-misses                                          N/A  thrpt              0.028                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-stores                                                N/A  thrpt              1.686                 #/op
[info] AdtBenchmark.writeJacksonScala:branch-misses                                             N/A  thrpt              0.115                 #/op
[info] AdtBenchmark.writeJacksonScala:branches                                                  N/A  thrpt            890.704                 #/op
[info] AdtBenchmark.writeJacksonScala:cycles                                                    N/A  thrpt           1249.120                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-load-misses                                          N/A  thrpt              0.019                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-loads                                                N/A  thrpt            987.028                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-store-misses                                         N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-stores                                               N/A  thrpt            592.458                 #/op
[info] AdtBenchmark.writeJacksonScala:iTLB-load-misses                                          N/A  thrpt              0.005                 #/op
[info] AdtBenchmark.writeJacksonScala:iTLB-loads                                                N/A  thrpt              0.014                 #/op
[info] AdtBenchmark.writeJacksonScala:instructions                                              N/A  thrpt           4066.059                 #/op
[info] AdtBenchmark.writeJsoniterScala                                                          N/A  thrpt    5  14597173.218 ± 1307992.592  ops/s
[info] AdtBenchmark.writeJsoniterScala:CPI                                                      N/A  thrpt              0.283                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-dcache-load-misses                                    N/A  thrpt              1.307                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-dcache-loads                                          N/A  thrpt            173.168                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-dcache-stores                                         N/A  thrpt            197.199                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-icache-load-misses                                    N/A  thrpt              0.007                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-load-misses                                          N/A  thrpt              0.002                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-loads                                                N/A  thrpt              0.009                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-store-misses                                         N/A  thrpt              0.002                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-stores                                               N/A  thrpt              0.141                 #/op
[info] AdtBenchmark.writeJsoniterScala:branch-misses                                            N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.writeJsoniterScala:branches                                                 N/A  thrpt            196.003                 #/op
[info] AdtBenchmark.writeJsoniterScala:cycles                                                   N/A  thrpt            255.007                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-load-misses                                         N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-loads                                               N/A  thrpt            172.598                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-store-misses                                        N/A  thrpt             ≈ 10⁻³                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-stores                                              N/A  thrpt            189.906                 #/op
[info] AdtBenchmark.writeJsoniterScala:iTLB-load-misses                                         N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScala:iTLB-loads                                               N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.writeJsoniterScala:instructions                                             N/A  thrpt            902.405                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                  N/A  thrpt    5  16905544.674 ±   23218.352  ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:CPI                                              N/A  thrpt              0.287                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                            N/A  thrpt              0.082                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                                  N/A  thrpt            155.683                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                                 N/A  thrpt            180.848                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                            N/A  thrpt              0.034                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                                  N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                        N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                                 N/A  thrpt             ≈ 10⁻³                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                       N/A  thrpt             ≈ 10⁻³                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:branch-misses                                    N/A  thrpt              0.007                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:branches                                         N/A  thrpt            169.997                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:cycles                                           N/A  thrpt            227.488                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                                 N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                       N/A  thrpt            156.082                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                                N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                      N/A  thrpt            181.746                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                       N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:instructions                                     N/A  thrpt            791.947                 #/op
[info] AdtBenchmark.writePlayJson                                                               N/A  thrpt    5    664442.407 ±   58155.455  ops/s
[info] AdtBenchmark.writePlayJson:CPI                                                           N/A  thrpt              0.359                 #/op
[info] AdtBenchmark.writePlayJson:L1-dcache-load-misses                                         N/A  thrpt            123.308                 #/op
[info] AdtBenchmark.writePlayJson:L1-dcache-loads                                               N/A  thrpt           3769.718                 #/op
[info] AdtBenchmark.writePlayJson:L1-dcache-stores                                              N/A  thrpt           2351.495                 #/op
[info] AdtBenchmark.writePlayJson:L1-icache-load-misses                                         N/A  thrpt             75.318                 #/op
[info] AdtBenchmark.writePlayJson:LLC-load-misses                                               N/A  thrpt              0.389                 #/op
[info] AdtBenchmark.writePlayJson:LLC-loads                                                     N/A  thrpt              1.620                 #/op
[info] AdtBenchmark.writePlayJson:LLC-store-misses                                              N/A  thrpt              0.921                 #/op
[info] AdtBenchmark.writePlayJson:LLC-stores                                                    N/A  thrpt             15.594                 #/op
[info] AdtBenchmark.writePlayJson:branch-misses                                                 N/A  thrpt              2.157                 #/op
[info] AdtBenchmark.writePlayJson:branches                                                      N/A  thrpt           2914.162                 #/op
[info] AdtBenchmark.writePlayJson:cycles                                                        N/A  thrpt           5678.569                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-load-misses                                              N/A  thrpt              0.388                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-loads                                                    N/A  thrpt           3746.145                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-store-misses                                             N/A  thrpt              0.030                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-stores                                                   N/A  thrpt           2348.783                 #/op
[info] AdtBenchmark.writePlayJson:iTLB-load-misses                                              N/A  thrpt              0.025                 #/op
[info] AdtBenchmark.writePlayJson:iTLB-loads                                                    N/A  thrpt              0.108                 #/op
[info] AdtBenchmark.writePlayJson:instructions                                                  N/A  thrpt          15818.211                 #/op
[info] AnyRefsBenchmark.readCirce                                                               N/A  thrpt    5   2001418.152 ±   20218.721  ops/s
[info] AnyRefsBenchmark.readCirce:CPI                                                           N/A  thrpt              0.368                 #/op
[info] AnyRefsBenchmark.readCirce:L1-dcache-load-misses                                         N/A  thrpt             35.168                 #/op
[info] AnyRefsBenchmark.readCirce:L1-dcache-loads                                               N/A  thrpt           1160.370                 #/op
[info] AnyRefsBenchmark.readCirce:L1-dcache-stores                                              N/A  thrpt            953.163                 #/op
[info] AnyRefsBenchmark.readCirce:L1-icache-load-misses                                         N/A  thrpt              0.282                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-load-misses                                               N/A  thrpt              0.046                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-loads                                                     N/A  thrpt              0.181                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-store-misses                                              N/A  thrpt              2.628                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-stores                                                    N/A  thrpt             10.479                 #/op
[info] AnyRefsBenchmark.readCirce:branch-misses                                                 N/A  thrpt              0.086                 #/op
[info] AnyRefsBenchmark.readCirce:branches                                                      N/A  thrpt           1168.001                 #/op
[info] AnyRefsBenchmark.readCirce:cycles                                                        N/A  thrpt           1937.801                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-load-misses                                              N/A  thrpt              0.152                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-loads                                                    N/A  thrpt           1145.699                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-store-misses                                             N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-stores                                                   N/A  thrpt            907.634                 #/op
[info] AnyRefsBenchmark.readCirce:iTLB-load-misses                                              N/A  thrpt              0.014                 #/op
[info] AnyRefsBenchmark.readCirce:iTLB-loads                                                    N/A  thrpt              0.029                 #/op
[info] AnyRefsBenchmark.readCirce:instructions                                                  N/A  thrpt           5264.524                 #/op
[info] AnyRefsBenchmark.readDslJsonJava                                                         N/A  thrpt    5  10602569.325 ±  161018.114  ops/s
[info] AnyRefsBenchmark.readDslJsonJava:CPI                                                     N/A  thrpt              0.249                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-dcache-load-misses                                   N/A  thrpt              3.216                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-dcache-loads                                         N/A  thrpt            369.325                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-dcache-stores                                        N/A  thrpt            189.769                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-icache-load-misses                                   N/A  thrpt              0.021                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-load-misses                                         N/A  thrpt              0.026                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-loads                                               N/A  thrpt              0.048                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-store-misses                                        N/A  thrpt              0.023                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-stores                                              N/A  thrpt              0.428                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:branch-misses                                           N/A  thrpt              0.029                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:branches                                                N/A  thrpt            322.163                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:cycles                                                  N/A  thrpt            368.922                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-load-misses                                        N/A  thrpt              0.011                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-loads                                              N/A  thrpt            353.241                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-store-misses                                       N/A  thrpt             ≈ 10⁻³                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-stores                                             N/A  thrpt            188.103                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:iTLB-load-misses                                        N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:iTLB-loads                                              N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:instructions                                            N/A  thrpt           1482.328                 #/op
[info] AnyRefsBenchmark.readJacksonScala                                                        N/A  thrpt    5   3190717.348 ±  186792.822  ops/s
[info] AnyRefsBenchmark.readJacksonScala:CPI                                                    N/A  thrpt              0.334                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-dcache-load-misses                                  N/A  thrpt             16.059                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-dcache-loads                                        N/A  thrpt            884.087                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-dcache-stores                                       N/A  thrpt            613.158                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-icache-load-misses                                  N/A  thrpt              0.112                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-load-misses                                        N/A  thrpt              0.024                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-loads                                              N/A  thrpt              0.094                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-store-misses                                       N/A  thrpt              0.333                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-stores                                             N/A  thrpt              2.612                 #/op
[info] AnyRefsBenchmark.readJacksonScala:branch-misses                                          N/A  thrpt              0.087                 #/op
[info] AnyRefsBenchmark.readJacksonScala:branches                                               N/A  thrpt            704.791                 #/op
[info] AnyRefsBenchmark.readJacksonScala:cycles                                                 N/A  thrpt           1186.113                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-load-misses                                       N/A  thrpt              0.021                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-loads                                             N/A  thrpt            885.890                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-store-misses                                      N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-stores                                            N/A  thrpt            599.098                 #/op
[info] AnyRefsBenchmark.readJacksonScala:iTLB-load-misses                                       N/A  thrpt              0.011                 #/op
[info] AnyRefsBenchmark.readJacksonScala:iTLB-loads                                             N/A  thrpt              0.016                 #/op
[info] AnyRefsBenchmark.readJacksonScala:instructions                                           N/A  thrpt           3546.951                 #/op
[info] AnyRefsBenchmark.readJsoniterScala                                                       N/A  thrpt    5  13180425.739 ±  529861.119  ops/s
[info] AnyRefsBenchmark.readJsoniterScala:CPI                                                   N/A  thrpt              0.250                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-dcache-load-misses                                 N/A  thrpt              3.284                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-dcache-loads                                       N/A  thrpt            230.359                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-dcache-stores                                      N/A  thrpt            154.898                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-icache-load-misses                                 N/A  thrpt              0.012                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-load-misses                                       N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-loads                                             N/A  thrpt              0.012                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-store-misses                                      N/A  thrpt              0.027                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-stores                                            N/A  thrpt              0.552                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:branch-misses                                         N/A  thrpt              0.023                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:branches                                              N/A  thrpt            294.303                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:cycles                                                N/A  thrpt            291.074                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-load-misses                                      N/A  thrpt              0.004                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-loads                                            N/A  thrpt            231.960                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-store-misses                                     N/A  thrpt             ≈ 10⁻³                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-stores                                           N/A  thrpt            153.575                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:iTLB-load-misses                                      N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:iTLB-loads                                            N/A  thrpt              0.005                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:instructions                                          N/A  thrpt           1162.335                 #/op
[info] AnyRefsBenchmark.readPlayJson                                                            N/A  thrpt    5   1331257.776 ±   26304.357  ops/s
[info] AnyRefsBenchmark.readPlayJson:CPI                                                        N/A  thrpt              0.359                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-dcache-load-misses                                      N/A  thrpt             59.117                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-dcache-loads                                            N/A  thrpt           2237.887                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-dcache-stores                                           N/A  thrpt           1583.707                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-icache-load-misses                                      N/A  thrpt             41.229                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-load-misses                                            N/A  thrpt              0.169                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-loads                                                  N/A  thrpt              0.704                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-store-misses                                           N/A  thrpt              1.061                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-stores                                                 N/A  thrpt             11.348                 #/op
[info] AnyRefsBenchmark.readPlayJson:branch-misses                                              N/A  thrpt              0.246                 #/op
[info] AnyRefsBenchmark.readPlayJson:branches                                                   N/A  thrpt           1341.947                 #/op
[info] AnyRefsBenchmark.readPlayJson:cycles                                                     N/A  thrpt           2867.670                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-load-misses                                           N/A  thrpt              0.163                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-loads                                                 N/A  thrpt           2260.837                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-store-misses                                          N/A  thrpt              0.036                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-stores                                                N/A  thrpt           1632.072                 #/op
[info] AnyRefsBenchmark.readPlayJson:iTLB-load-misses                                           N/A  thrpt              0.013                 #/op
[info] AnyRefsBenchmark.readPlayJson:iTLB-loads                                                 N/A  thrpt              0.036                 #/op
[info] AnyRefsBenchmark.readPlayJson:instructions                                               N/A  thrpt           7998.471                 #/op
[info] AnyRefsBenchmark.writeCirce                                                              N/A  thrpt    5   2345127.149 ±   87671.613  ops/s
[info] AnyRefsBenchmark.writeCirce:CPI                                                          N/A  thrpt              0.393                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-dcache-load-misses                                        N/A  thrpt             22.023                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-dcache-loads                                              N/A  thrpt           1056.793                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-dcache-stores                                             N/A  thrpt            829.498                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-icache-load-misses                                        N/A  thrpt              0.443                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-load-misses                                              N/A  thrpt              0.020                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-loads                                                    N/A  thrpt              0.132                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-store-misses                                             N/A  thrpt              0.729                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-stores                                                   N/A  thrpt              5.154                 #/op
[info] AnyRefsBenchmark.writeCirce:branch-misses                                                N/A  thrpt              0.072                 #/op
[info] AnyRefsBenchmark.writeCirce:branches                                                     N/A  thrpt            820.471                 #/op
[info] AnyRefsBenchmark.writeCirce:cycles                                                       N/A  thrpt           1608.418                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-load-misses                                             N/A  thrpt              0.025                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-loads                                                   N/A  thrpt           1046.405                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-store-misses                                            N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-stores                                                  N/A  thrpt            824.935                 #/op
[info] AnyRefsBenchmark.writeCirce:iTLB-load-misses                                             N/A  thrpt              0.010                 #/op
[info] AnyRefsBenchmark.writeCirce:iTLB-loads                                                   N/A  thrpt              0.015                 #/op
[info] AnyRefsBenchmark.writeCirce:instructions                                                 N/A  thrpt           4087.535                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava                                                        N/A  thrpt    5  19476290.451 ± 1909492.404  ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:CPI                                                    N/A  thrpt              0.241                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-dcache-load-misses                                  N/A  thrpt              0.840                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-dcache-loads                                        N/A  thrpt            176.219                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-dcache-stores                                       N/A  thrpt             81.924                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-icache-load-misses                                  N/A  thrpt              0.051                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-load-misses                                        N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-loads                                              N/A  thrpt              0.014                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-store-misses                                       N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-stores                                             N/A  thrpt              0.049                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:branch-misses                                          N/A  thrpt              0.023                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:branches                                               N/A  thrpt            194.451                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:cycles                                                 N/A  thrpt            191.668                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-load-misses                                       N/A  thrpt              0.012                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-loads                                             N/A  thrpt            179.518                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-store-misses                                      N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-stores                                            N/A  thrpt             83.227                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:iTLB-load-misses                                       N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:iTLB-loads                                             N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:instructions                                           N/A  thrpt            793.830                 #/op
[info] AnyRefsBenchmark.writeJacksonScala                                                       N/A  thrpt    5   6544406.892 ±  353380.165  ops/s
[info] AnyRefsBenchmark.writeJacksonScala:CPI                                                   N/A  thrpt              0.314                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-dcache-load-misses                                 N/A  thrpt              7.155                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-dcache-loads                                       N/A  thrpt            514.812                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-dcache-stores                                      N/A  thrpt            366.662                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-icache-load-misses                                 N/A  thrpt              0.071                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-load-misses                                       N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-loads                                             N/A  thrpt              0.031                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-store-misses                                      N/A  thrpt              0.063                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-stores                                            N/A  thrpt              0.693                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:branch-misses                                         N/A  thrpt              0.051                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:branches                                              N/A  thrpt            366.696                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:cycles                                                N/A  thrpt            579.087                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-load-misses                                      N/A  thrpt              0.008                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-loads                                            N/A  thrpt            520.107                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-store-misses                                     N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-stores                                           N/A  thrpt            360.134                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:iTLB-load-misses                                      N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:iTLB-loads                                            N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:instructions                                          N/A  thrpt           1846.840                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala                                                      N/A  thrpt    5  28484363.600 ± 1465098.096  ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:CPI                                                  N/A  thrpt              0.262                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-dcache-load-misses                                N/A  thrpt              0.861                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-dcache-loads                                      N/A  thrpt            101.579                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-dcache-stores                                     N/A  thrpt             93.079                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-icache-load-misses                                N/A  thrpt              0.138                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-load-misses                                      N/A  thrpt              0.004                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-loads                                            N/A  thrpt              0.027                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-store-misses                                     N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-stores                                           N/A  thrpt              0.054                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:branch-misses                                        N/A  thrpt              0.022                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:branches                                             N/A  thrpt            120.816                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:cycles                                               N/A  thrpt            137.240                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-load-misses                                     N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-loads                                           N/A  thrpt             98.830                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-store-misses                                    N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-stores                                          N/A  thrpt             90.921                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:iTLB-load-misses                                     N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:iTLB-loads                                           N/A  thrpt              0.016                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:instructions                                         N/A  thrpt            523.446                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5  34646788.038 ±   43158.410  ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:CPI                                          N/A  thrpt              0.256                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                        N/A  thrpt              0.029                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                              N/A  thrpt             84.440                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                             N/A  thrpt             81.226                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                        N/A  thrpt              0.018                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                              N/A  thrpt             ≈ 10⁻³                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                    N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                   N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:branch-misses                                N/A  thrpt              0.005                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:branches                                     N/A  thrpt             96.100                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:cycles                                       N/A  thrpt            109.749                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                   N/A  thrpt             84.739                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                  N/A  thrpt             81.149                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                             N/A  thrpt             ≈ 10⁻³                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                   N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:instructions                                 N/A  thrpt            428.341                 #/op
[info] AnyRefsBenchmark.writePlayJson                                                           N/A  thrpt    5   1862743.346 ±   67141.838  ops/s
[info] AnyRefsBenchmark.writePlayJson:CPI                                                       N/A  thrpt              0.360                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-dcache-load-misses                                     N/A  thrpt             38.758                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-dcache-loads                                           N/A  thrpt           1484.062                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-dcache-stores                                          N/A  thrpt           1133.679                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-icache-load-misses                                     N/A  thrpt              0.601                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-load-misses                                           N/A  thrpt              0.077                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-loads                                                 N/A  thrpt              0.370                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-store-misses                                          N/A  thrpt              0.801                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-stores                                                N/A  thrpt              8.338                 #/op
[info] AnyRefsBenchmark.writePlayJson:branch-misses                                             N/A  thrpt              0.183                 #/op
[info] AnyRefsBenchmark.writePlayJson:branches                                                  N/A  thrpt           1003.239                 #/op
[info] AnyRefsBenchmark.writePlayJson:cycles                                                    N/A  thrpt           2064.470                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-load-misses                                          N/A  thrpt              0.095                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-loads                                                N/A  thrpt           1525.091                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-store-misses                                         N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-stores                                               N/A  thrpt           1185.770                 #/op
[info] AnyRefsBenchmark.writePlayJson:iTLB-load-misses                                          N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.writePlayJson:iTLB-loads                                                N/A  thrpt              0.008                 #/op
[info] AnyRefsBenchmark.writePlayJson:instructions                                              N/A  thrpt           5730.883                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                 128  thrpt    5    305137.983 ±   34199.471  ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:CPI                                             128  thrpt              0.259                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt            151.974                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-loads                                 128  thrpt          10674.633                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-stores                                128  thrpt           5454.548                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-icache-load-misses                           128  thrpt              3.181                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-load-misses                                 128  thrpt              0.300                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-loads                                       128  thrpt              1.296                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-store-misses                                128  thrpt             20.951                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-stores                                      128  thrpt             51.373                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:branch-misses                                   128  thrpt             10.993                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:branches                                        128  thrpt          11779.675                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:cycles                                          128  thrpt          12065.090                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-load-misses                                128  thrpt              0.685                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-loads                                      128  thrpt          10828.332                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-store-misses                               128  thrpt              0.020                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-stores                                     128  thrpt           5467.495                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:iTLB-load-misses                                128  thrpt              0.063                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:iTLB-loads                                      128  thrpt              0.074                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:instructions                                    128  thrpt          46636.887                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                          128  thrpt    5    496544.026 ±    1221.864  ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:CPI                                      128  thrpt              0.279                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt             38.127                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt           6103.803                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt           3274.840                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt              0.328                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt              0.057                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-loads                                128  thrpt              0.357                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt              3.978                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-stores                               128  thrpt             10.186                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:branch-misses                            128  thrpt              8.766                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:branches                                 128  thrpt           6568.608                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:cycles                                   128  thrpt           7721.475                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt              0.227                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-loads                               128  thrpt           5928.693                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt              0.007                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-stores                              128  thrpt           3163.621                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt              0.033                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-loads                               128  thrpt              0.071                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:instructions                             128  thrpt          27629.243                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                         128  thrpt    5   1349643.145 ±    5462.922  ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.225                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt             17.784                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt           2106.610                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt           1281.412                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              0.898                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.054                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-loads                               128  thrpt              0.236                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt              0.836                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-stores                              128  thrpt              3.802                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:branch-misses                           128  thrpt              4.615                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:branches                                128  thrpt           3256.258                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:cycles                                  128  thrpt           2873.355                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              0.161                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt           2064.137                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.003                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt           1241.740                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.013                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.009                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:instructions                            128  thrpt          12778.910                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                              128  thrpt    5    113596.296 ±    9658.861  ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:CPI                                          128  thrpt              0.321                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt            899.795                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt          27523.091                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt          21712.165                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt             32.615                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-load-misses                              128  thrpt              0.555                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-loads                                    128  thrpt              6.628                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-store-misses                             128  thrpt             40.170                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-stores                                   128  thrpt            203.017                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:branch-misses                                128  thrpt             33.431                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:branches                                     128  thrpt          18539.450                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:cycles                                       128  thrpt          33229.595                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt              3.220                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-loads                                   128  thrpt          29203.153                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt              0.097                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-stores                                  128  thrpt          22263.126                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt              0.216                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-loads                                   128  thrpt              0.581                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:instructions                                 128  thrpt         103555.105                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                128  thrpt    5    332674.944 ±   11736.176  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:CPI                                            128  thrpt              0.266                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt             88.197                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-loads                                128  thrpt          10590.100                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-stores                               128  thrpt           6275.007                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt              0.422                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-load-misses                                128  thrpt              0.589                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-loads                                      128  thrpt              0.833                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-store-misses                               128  thrpt             46.030                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-stores                                     128  thrpt             59.837                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:branch-misses                                  128  thrpt             12.030                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:branches                                       128  thrpt          10175.673                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:cycles                                         128  thrpt          11502.475                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-load-misses                               128  thrpt              1.232                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-loads                                     128  thrpt          10335.174                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              0.009                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-stores                                    128  thrpt           6157.250                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              0.032                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-loads                                     128  thrpt              0.104                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:instructions                                   128  thrpt          43221.902                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                         128  thrpt    5    860840.909 ±  132772.049  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.257                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt             19.994                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt           4136.831                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt           2168.084                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt              0.217                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt              0.050                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-loads                               128  thrpt              0.190                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt              2.977                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-stores                              128  thrpt              6.775                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:branch-misses                           128  thrpt              1.283                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:branches                                128  thrpt           3705.730                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:cycles                                  128  thrpt           4305.617                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt              0.174                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt           4091.070                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.005                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt           2120.708                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              0.005                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt              0.024                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:instructions                            128  thrpt          16732.178                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                        128  thrpt    5   2573587.210 ±  233537.822  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.228                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt             11.898                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt            600.633                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt           1263.608                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              0.063                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.013                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              0.046                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt              3.088                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt              6.874                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              1.201                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branches                               128  thrpt           1716.820                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:cycles                                 128  thrpt           1473.561                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              0.171                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt            607.430                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.002                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt           1250.902                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.003                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.007                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:instructions                           128  thrpt           6455.377                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5   2924918.771 ±   78053.062  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.214                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt              0.304                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt            563.346                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt           1121.669                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.021                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.005                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.016                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.001                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.005                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              1.044                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt           1624.908                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt           1293.553                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.001                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt            563.039                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt              0.001                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt           1109.684                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.003                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.008                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt           6053.190                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                             128  thrpt    5    463541.254 ±     571.099  ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:CPI                                         128  thrpt              0.280                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt             38.798                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt           9084.013                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt           3185.008                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt              0.997                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-load-misses                             128  thrpt              0.261                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-loads                                   128  thrpt              0.750                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-store-misses                            128  thrpt              4.151                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-stores                                  128  thrpt             14.302                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:branch-misses                               128  thrpt              4.543                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:branches                                    128  thrpt           6211.321                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:cycles                                      128  thrpt           8307.919                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt              0.269                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-loads                                  128  thrpt           9055.556                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.009                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-stores                                 128  thrpt           3162.808                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              0.014                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-loads                                  128  thrpt              0.029                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:instructions                                128  thrpt          29701.400                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                    128  thrpt    5     16896.875 ±    1128.305  ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:CPI                                                128  thrpt              0.400                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt           2764.043                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-loads                                    128  thrpt          88778.746                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-stores                                   128  thrpt          53391.121                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-icache-load-misses                              128  thrpt            326.034                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-load-misses                                    128  thrpt              5.034                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-loads                                          128  thrpt             59.200                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-store-misses                                   128  thrpt            137.274                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-stores                                         128  thrpt            420.311                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:branch-misses                                      128  thrpt           2174.267                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:branches                                           128  thrpt         149949.174                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:cycles                                             128  thrpt         234381.845                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-load-misses                                   128  thrpt             22.093                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-loads                                         128  thrpt          88338.725                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              0.862                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-stores                                        128  thrpt          51092.487                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:iTLB-load-misses                                   128  thrpt              6.148                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:iTLB-loads                                         128  thrpt             32.972                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:instructions                                       128  thrpt         586151.645                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                             128  thrpt    5     36595.801 ±     285.600  ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:CPI                                         128  thrpt              0.272                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt            919.725                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt          53940.176                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt          43010.895                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt             16.886                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              0.751                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-loads                                   128  thrpt              6.306                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt             12.630                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-stores                                  128  thrpt            106.020                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:branch-misses                               128  thrpt            146.453                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:branches                                    128  thrpt          82052.941                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:cycles                                      128  thrpt         104238.369                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              2.773                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt          53751.393                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.180                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt          42245.024                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              0.655                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt              1.191                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:instructions                                128  thrpt         383169.305                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                            128  thrpt    5     41550.552 ±    3138.946  ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.262                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt            390.664                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt          45838.149                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt          30163.308                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              8.979                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.329                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              2.894                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              4.896                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt             57.225                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:branch-misses                              128  thrpt            223.864                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:branches                                   128  thrpt          76674.594                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:cycles                                     128  thrpt          90080.082                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              1.406                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt          45712.543                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.066                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt          29625.479                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.348                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.911                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:instructions                               128  thrpt         344163.287                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                 128  thrpt    5     29126.412 ±    2768.253  ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:CPI                                             128  thrpt              0.284                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt           1995.536                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt          79400.611                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt          59449.589                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt            305.705                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt              2.169                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-loads                                       128  thrpt             15.931                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-store-misses                                128  thrpt             34.000                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-stores                                      128  thrpt            278.223                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:branch-misses                                   128  thrpt            160.948                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:branches                                        128  thrpt          93549.344                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:cycles                                          128  thrpt         130699.401                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              6.203                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-loads                                      128  thrpt          75789.137                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.160                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-stores                                     128  thrpt          57281.793                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              0.654                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-loads                                      128  thrpt              1.548                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:instructions                                    128  thrpt         460852.311                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                   128  thrpt    5     24745.680 ±     170.518  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:CPI                                               128  thrpt              0.411                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt           2897.772                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt          70875.157                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt          54240.232                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt            212.177                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              3.296                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-loads                                         128  thrpt             53.718                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-store-misses                                  128  thrpt            220.127                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-stores                                        128  thrpt            493.058                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:branch-misses                                     128  thrpt            191.564                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:branches                                          128  thrpt          73669.085                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:cycles                                            128  thrpt         153946.834                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt             11.451                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-loads                                        128  thrpt          72579.090                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              1.618                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-stores                                       128  thrpt          54816.102                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.908                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-loads                                        128  thrpt              1.559                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:instructions                                      128  thrpt         374550.322                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                            128  thrpt    5     24860.556 ±    1472.893  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.418                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt           2633.213                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt          70487.673                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt          54471.399                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt            159.219                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              1.068                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt             20.988                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt            106.560                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt            330.573                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:branch-misses                              128  thrpt            261.192                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:branches                                   128  thrpt          68467.897                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:cycles                                     128  thrpt         153545.049                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              4.846                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt          71255.781                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.170                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt          54116.855                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              1.769                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              4.472                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:instructions                               128  thrpt         366959.693                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                           128  thrpt    5     27077.489 ±    1123.340  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.429                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt           2441.212                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt          62316.895                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt          47630.597                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt            104.429                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              1.321                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt             24.040                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt             57.406                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt            257.299                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branch-misses                             128  thrpt            200.296                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branches                                  128  thrpt          63242.366                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:cycles                                    128  thrpt         141600.114                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              5.980                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt          62420.278                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.154                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt          46965.702                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.897                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              1.515                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:instructions                              128  thrpt         330156.680                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5     27280.711 ±     258.044  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.423                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt           2358.229                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt          61602.833                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt          47695.219                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt             43.531                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              1.884                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt             25.170                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt             12.589                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt            183.151                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt            210.817                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt          61752.265                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt         140686.648                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              5.271                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt          62748.993                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt              0.255                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt          47661.572                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.588                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              1.133                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt         332935.065                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                128  thrpt    5      7775.154 ±      81.768  ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:CPI                                            128  thrpt              0.469                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt           5250.652                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt         180533.106                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt         136895.049                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt           3126.835                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              6.824                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-loads                                      128  thrpt            268.365                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-store-misses                               128  thrpt            157.055                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-stores                                     128  thrpt            671.536                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:branch-misses                                  128  thrpt           3448.204                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:branches                                       128  thrpt         204647.050                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:cycles                                         128  thrpt         495621.971                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt             29.551                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-loads                                     128  thrpt         179165.628                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.704                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-stores                                    128  thrpt         133220.662                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              3.495                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-loads                                     128  thrpt             12.509                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:instructions                                   128  thrpt        1057769.404                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce                                                        128  thrpt    5     17967.076 ±     709.367  ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:CPI                                                    128  thrpt              0.376                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           2854.097                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-dcache-loads                                        128  thrpt          96671.725                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-dcache-stores                                       128  thrpt          63476.838                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt            456.899                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-load-misses                                        128  thrpt              5.737                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-loads                                              128  thrpt             50.179                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-store-misses                                       128  thrpt             87.744                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-stores                                             128  thrpt            389.813                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:branch-misses                                          128  thrpt            393.954                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:branches                                               128  thrpt         135046.496                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:cycles                                                 128  thrpt         219164.615                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-load-misses                                       128  thrpt             12.764                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-loads                                             128  thrpt          97313.662                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.632                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-stores                                            128  thrpt          61934.724                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              4.217                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:iTLB-loads                                             128  thrpt             29.707                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:instructions                                           128  thrpt         583367.595                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                 128  thrpt    5     42186.400 ±    2318.203  ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:CPI                                             128  thrpt              0.288                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt            941.358                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt          47625.564                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          28580.324                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt             27.198                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              0.864                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-loads                                       128  thrpt              8.159                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              5.802                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-stores                                      128  thrpt             73.945                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:branch-misses                                   128  thrpt            215.120                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:branches                                        128  thrpt          81496.731                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:cycles                                          128  thrpt          91302.370                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              1.457                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt          47312.112                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.188                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          27872.417                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.461                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              1.041                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:instructions                                    128  thrpt         317057.366                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                128  thrpt    5     62700.809 ±     353.255  ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.242                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt            351.329                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          27866.856                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt          16117.083                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              7.667                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.220                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              2.227                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              2.363                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             46.753                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:branch-misses                                  128  thrpt            140.802                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:branches                                       128  thrpt          59203.584                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:cycles                                         128  thrpt          60414.017                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.488                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          28060.339                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.103                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt          15829.012                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.247                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.566                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:instructions                                   128  thrpt         249763.330                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                     128  thrpt    5     33248.556 ±     908.470  ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:CPI                                                 128  thrpt              0.298                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           2422.990                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          70371.214                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          48590.972                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt            324.139                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              6.799                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-loads                                           128  thrpt             35.095                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             52.838                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-stores                                          128  thrpt            340.362                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:branch-misses                                       128  thrpt            190.468                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:branches                                            128  thrpt          88467.419                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:cycles                                              128  thrpt         114197.363                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              4.547                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          71022.757                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.181                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          50713.650                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.233                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              0.622                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:instructions                                        128  thrpt         383846.232                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                128  thrpt    5     27801.526 ±    1250.316  ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.413                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt           1896.953                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt          59347.515                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt          48635.713                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt             43.991                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.752                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              9.207                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             86.410                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt            307.007                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:branch-misses                                  128  thrpt            145.121                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:branches                                       128  thrpt          60256.610                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:cycles                                         128  thrpt         135706.265                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              5.564                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt          60644.594                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.238                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt          48439.573                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              1.151                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              2.472                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:instructions                                   128  thrpt         328589.162                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                               128  thrpt    5     33192.680 ±     313.576  ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.442                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt           1356.106                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt          40725.141                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt          34798.549                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt             20.903                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.967                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              6.852                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             49.513                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt            181.823                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt            144.139                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:branches                                      128  thrpt          47095.402                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:cycles                                        128  thrpt         111637.632                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              3.821                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt          41625.673                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.122                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt          34462.712                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.788                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              2.564                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:instructions                                  128  thrpt         252707.325                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5     34586.767 ±    2025.374  ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.426                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt           1307.826                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt          39883.598                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt          33994.295                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              9.922                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              1.115                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              6.874                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt             12.177                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt            158.318                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt            122.715                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt          48025.181                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt         109510.810                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              4.268                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt          39299.988                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.188                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt          32453.428                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.256                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.939                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt         257101.886                 #/op
[info] ArrayOfBooleansBenchmark.readCirce                                                       128  thrpt    5    338147.054 ±   34361.774  ops/s
[info] ArrayOfBooleansBenchmark.readCirce:CPI                                                   128  thrpt              0.248                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-dcache-load-misses                                 128  thrpt            142.764                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-dcache-loads                                       128  thrpt          10873.768                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-dcache-stores                                      128  thrpt           4920.359                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-icache-load-misses                                 128  thrpt              1.888                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-load-misses                                       128  thrpt              0.147                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-loads                                             128  thrpt              1.073                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-store-misses                                      128  thrpt             19.340                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-stores                                            128  thrpt             45.094                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:branch-misses                                         128  thrpt              8.656                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:branches                                              128  thrpt          11722.987                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:cycles                                                128  thrpt          11165.598                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-load-misses                                      128  thrpt              0.648                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-loads                                            128  thrpt          10950.446                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-store-misses                                     128  thrpt              0.017                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-stores                                           128  thrpt           4875.761                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:iTLB-load-misses                                      128  thrpt              0.053                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:iTLB-loads                                            128  thrpt              0.112                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:instructions                                          128  thrpt          44996.667                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                 128  thrpt    5   1521080.677 ±    9780.141  ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:CPI                                             128  thrpt              0.219                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-load-misses                           128  thrpt              8.923                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-loads                                 128  thrpt           2397.452                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-stores                                128  thrpt           1072.216                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-icache-load-misses                           128  thrpt              0.155                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-load-misses                                 128  thrpt              0.021                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-loads                                       128  thrpt              0.111                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-store-misses                                128  thrpt              0.015                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-stores                                      128  thrpt              1.160                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:branch-misses                                   128  thrpt              1.241                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:branches                                        128  thrpt           2753.729                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:cycles                                          128  thrpt           2527.584                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-load-misses                                128  thrpt              0.015                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-loads                                      128  thrpt           2409.518                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-stores                                     128  thrpt           1067.771                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-load-misses                                128  thrpt              0.005                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-loads                                      128  thrpt              0.017                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:instructions                                    128  thrpt          11559.296                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                128  thrpt    5    722760.337 ±    8654.669  ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:CPI                                            128  thrpt              0.253                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                          128  thrpt             20.978                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                                128  thrpt           4279.363                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                               128  thrpt           2816.615                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                          128  thrpt              0.231                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-load-misses                                128  thrpt              0.048                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-loads                                      128  thrpt              0.213                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-store-misses                               128  thrpt              1.031                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-stores                                     128  thrpt              4.837                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:branch-misses                                  128  thrpt              4.636                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:branches                                       128  thrpt           5318.277                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:cycles                                         128  thrpt           5337.038                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                               128  thrpt              0.110                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-loads                                     128  thrpt           4196.026                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                              128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-stores                                    128  thrpt           2731.085                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                               128  thrpt              0.035                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:iTLB-loads                                     128  thrpt              0.066                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:instructions                                   128  thrpt          21103.005                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                               128  thrpt    5   1893941.104 ±   12395.154  ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:CPI                                           128  thrpt              0.214                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                         128  thrpt              5.127                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                               128  thrpt           1706.161                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                              128  thrpt            618.651                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                         128  thrpt              0.321                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                               128  thrpt              0.035                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-loads                                     128  thrpt              0.125                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                              128  thrpt              0.087                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-stores                                    128  thrpt              0.812                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:branch-misses                                 128  thrpt              1.061                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:branches                                      128  thrpt           2844.699                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:cycles                                        128  thrpt           2013.050                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                              128  thrpt              0.009                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                    128  thrpt           1705.594                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                             128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                   128  thrpt            623.919                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                              128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                    128  thrpt              0.007                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:instructions                                  128  thrpt           9403.097                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson                                                    128  thrpt    5    101885.495 ±     308.960  ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:CPI                                                128  thrpt              0.320                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                              128  thrpt            984.790                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                    128  thrpt          33289.746                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                   128  thrpt          23560.357                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                              128  thrpt              7.072                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-load-misses                                    128  thrpt              0.623                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-loads                                          128  thrpt              5.183                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-store-misses                                   128  thrpt             31.675                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-stores                                         128  thrpt            206.770                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:branch-misses                                      128  thrpt             41.265                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:branches                                           128  thrpt          22992.385                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:cycles                                             128  thrpt          37909.352                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                   128  thrpt              3.167                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-loads                                         128  thrpt          34381.595                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                  128  thrpt              0.127                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-stores                                        128  thrpt          23799.654                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                   128  thrpt              0.254                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:iTLB-loads                                         128  thrpt              0.188                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:instructions                                       128  thrpt         118508.100                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce                                                      128  thrpt    5    322038.128 ±   27550.833  ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:CPI                                                  128  thrpt              0.273                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                                128  thrpt             88.271                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-dcache-loads                                      128  thrpt          10880.200                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-dcache-stores                                     128  thrpt           7070.159                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-icache-load-misses                                128  thrpt              2.883                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-load-misses                                      128  thrpt              0.270                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-loads                                            128  thrpt              0.836                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-store-misses                                     128  thrpt             44.607                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-stores                                           128  thrpt             62.147                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:branch-misses                                        128  thrpt             13.820                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:branches                                             128  thrpt           9562.711                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:cycles                                               128  thrpt          11840.813                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-load-misses                                     128  thrpt              1.245                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-loads                                           128  thrpt          10462.363                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-store-misses                                    128  thrpt              0.018                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-stores                                          128  thrpt           6764.198                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:iTLB-load-misses                                     128  thrpt              0.049                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:iTLB-loads                                           128  thrpt              0.083                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:instructions                                         128  thrpt          43387.197                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                128  thrpt    5   1574865.729 ±   49591.468  ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:CPI                                            128  thrpt              0.227                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-load-misses                          128  thrpt             12.883                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-loads                                128  thrpt           1560.373                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-stores                               128  thrpt           1098.810                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-icache-load-misses                          128  thrpt              0.244                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-load-misses                                128  thrpt              0.032                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-loads                                      128  thrpt              0.216                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-store-misses                               128  thrpt              3.068                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-stores                                     128  thrpt              6.978                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:branch-misses                                  128  thrpt              2.641                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:branches                                       128  thrpt           2985.646                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:cycles                                         128  thrpt           2465.138                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-load-misses                               128  thrpt              0.172                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-loads                                     128  thrpt           1590.496                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-store-misses                              128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-stores                                    128  thrpt           1134.342                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-load-misses                               128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-loads                                     128  thrpt              0.013                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:instructions                                   128  thrpt          10843.877                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    932266.313 ±  130603.842  ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:CPI                                           128  thrpt              0.262                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                         128  thrpt             19.079                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                               128  thrpt           2981.850                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                              128  thrpt           2147.599                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                         128  thrpt              0.183                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                               128  thrpt              0.127                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-loads                                     128  thrpt              0.203                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                              128  thrpt              3.132                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-stores                                    128  thrpt              7.618                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:branch-misses                                 128  thrpt              1.218                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:branches                                      128  thrpt           3088.706                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:cycles                                        128  thrpt           3912.298                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                              128  thrpt              0.167                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                    128  thrpt           2933.134                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                             128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                   128  thrpt           2134.259                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                              128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                    128  thrpt              0.023                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:instructions                                  128  thrpt          14905.039                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5   2781558.870 ±  135782.396  ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:CPI                                          128  thrpt              0.226                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                        128  thrpt             11.991                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                              128  thrpt            216.910                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                             128  thrpt           1271.564                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                        128  thrpt              0.314                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                              128  thrpt              0.015                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                    128  thrpt              0.064                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                             128  thrpt              4.220                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                   128  thrpt              7.986                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:branch-misses                                128  thrpt              1.096                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:branches                                     128  thrpt           1654.345                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:cycles                                       128  thrpt           1387.799                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                             128  thrpt              0.193                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                   128  thrpt            221.822                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                            128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                  128  thrpt           1224.877                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                             128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                   128  thrpt              0.015                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:instructions                                 128  thrpt           6151.752                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   3233696.266 ±    6982.558  ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                  128  thrpt              0.212                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                128  thrpt              0.396                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                      128  thrpt            182.078                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                     128  thrpt           1123.186                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                128  thrpt              0.244                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                      128  thrpt              0.006                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                            128  thrpt              0.030                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                     128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                           128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                        128  thrpt              1.032                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                             128  thrpt           1506.487                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                               128  thrpt           1185.901                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                     128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                           128  thrpt            176.192                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                    128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                          128  thrpt           1130.725                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                     128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                           128  thrpt              0.007                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                         128  thrpt           5585.215                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson                                                   128  thrpt    5    582582.125 ±   53995.250  ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:CPI                                               128  thrpt              0.268                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                             128  thrpt             29.567                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                   128  thrpt           5982.873                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                  128  thrpt           2776.110                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                             128  thrpt              0.319                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-load-misses                                   128  thrpt              0.104                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-loads                                         128  thrpt              0.472                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-store-misses                                  128  thrpt              6.641                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-stores                                        128  thrpt             11.434                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:branch-misses                                     128  thrpt              2.182                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:branches                                          128  thrpt           5223.274                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:cycles                                            128  thrpt           6563.018                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                  128  thrpt              0.343                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-loads                                        128  thrpt           5725.890                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                 128  thrpt              0.005                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-stores                                       128  thrpt           2703.715                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                  128  thrpt              0.009                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:iTLB-loads                                        128  thrpt              0.024                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:instructions                                      128  thrpt          24477.649                 #/op
[info] ArrayOfBytesBenchmark.readCirce                                                          128  thrpt    5    155992.469 ±    3233.535  ops/s
[info] ArrayOfBytesBenchmark.readCirce:CPI                                                      128  thrpt              0.301                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            355.179                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          17470.476                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-dcache-stores                                         128  thrpt           9160.705                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt              1.228                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-load-misses                                          128  thrpt              0.185                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-loads                                                128  thrpt              1.782                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-store-misses                                         128  thrpt             10.043                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-stores                                               128  thrpt             55.821                 #/op
[info] ArrayOfBytesBenchmark.readCirce:branch-misses                                            128  thrpt             14.519                 #/op
[info] ArrayOfBytesBenchmark.readCirce:branches                                                 128  thrpt          19128.409                 #/op
[info] ArrayOfBytesBenchmark.readCirce:cycles                                                   128  thrpt          24515.817                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              0.781                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-loads                                               128  thrpt          17552.434                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.051                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-stores                                              128  thrpt           8954.799                 #/op
[info] ArrayOfBytesBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.113                 #/op
[info] ArrayOfBytesBenchmark.readCirce:iTLB-loads                                               128  thrpt              0.249                 #/op
[info] ArrayOfBytesBenchmark.readCirce:instructions                                             128  thrpt          81535.247                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala                                                   128  thrpt    5    453460.019 ±    5306.995  ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:CPI                                               128  thrpt              0.247                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt             22.565                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt           7621.991                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           5363.696                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              0.354                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.056                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              0.322                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              0.533                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-stores                                        128  thrpt              4.907                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:branch-misses                                     128  thrpt              8.650                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:branches                                          128  thrpt           8211.875                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:cycles                                            128  thrpt           8466.684                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.109                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt           7462.686                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.122                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           5229.681                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.052                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.283                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:instructions                                      128  thrpt          34234.068                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                  128  thrpt    5   1236691.085 ±   18929.759  ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.215                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt              5.446                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           2138.418                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt            923.311                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.076                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.011                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.081                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              0.042                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt              0.737                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              3.131                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:branches                                         128  thrpt           3988.852                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:cycles                                           128  thrpt           3112.131                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.027                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           2106.648                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.048                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt            913.620                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.011                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.024                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:instructions                                     128  thrpt          14453.316                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson                                                       128  thrpt    5     83766.172 ±    4562.693  ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:CPI                                                   128  thrpt              0.318                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1541.236                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          40406.371                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          28769.332                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt             47.639                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              0.807                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-loads                                             128  thrpt              8.175                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             46.943                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-stores                                            128  thrpt            208.688                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:branch-misses                                         128  thrpt             46.693                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:branches                                              128  thrpt          26284.745                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:cycles                                                128  thrpt          44885.612                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              4.869                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          40595.293                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.070                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          28509.564                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.433                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.636                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:instructions                                          128  thrpt         141295.089                 #/op
[info] ArrayOfBytesBenchmark.writeCirce                                                         128  thrpt    5    313367.800 ±   11234.131  ops/s
[info] ArrayOfBytesBenchmark.writeCirce:CPI                                                     128  thrpt              0.260                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            142.747                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt          10452.559                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           6382.504                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              1.724                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.268                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-loads                                               128  thrpt              1.039                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-store-misses                                        128  thrpt             23.013                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-stores                                              128  thrpt             54.414                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:branch-misses                                           128  thrpt             11.090                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:branches                                                128  thrpt          10367.530                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:cycles                                                  128  thrpt          12348.649                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              0.961                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-loads                                              128  thrpt          10358.763                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.021                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-stores                                             128  thrpt           6191.680                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.061                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.118                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:instructions                                            128  thrpt          47455.191                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                  128  thrpt    5   1922041.300 ±  136033.090  ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.230                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             13.675                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt            930.797                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           1373.607                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.072                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.027                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.103                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              1.530                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt              3.423                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              2.140                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:branches                                         128  thrpt           1839.899                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:cycles                                           128  thrpt           1996.421                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.100                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt            918.982                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           1336.976                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.006                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.009                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:instructions                                     128  thrpt           8661.705                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                 128  thrpt    5   2759807.805 ±    8117.494  ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.208                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt              7.014                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt            714.850                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt            789.400                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.133                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.010                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.039                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              0.703                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt              2.219                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              1.069                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:branches                                        128  thrpt           1827.239                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:cycles                                          128  thrpt           1398.095                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.097                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt            713.635                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt            768.822                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.008                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.014                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:instructions                                    128  thrpt           6719.642                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   2930829.485 ±  148057.085  ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.202                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.144                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt            661.240                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt            695.429                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.101                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.004                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.017                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.002                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              0.084                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           1703.300                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           1271.944                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt            662.698                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt            692.949                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.009                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt           6295.234                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson                                                      128  thrpt    5     46580.585 ±    4204.788  ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:CPI                                                  128  thrpt              0.339                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt           1363.115                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          50611.790                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt          36106.490                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt             16.470                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.946                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-loads                                            128  thrpt             15.576                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt              8.736                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-stores                                           128  thrpt             92.802                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:branch-misses                                        128  thrpt            108.124                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:branches                                             128  thrpt          48482.419                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:cycles                                               128  thrpt          79315.834                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              1.602                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          50452.574                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.107                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-stores                                          128  thrpt          35081.514                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.515                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              1.378                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:instructions                                         128  thrpt         233821.679                 #/op
[info] ArrayOfCharsBenchmark.readCirce                                                          128  thrpt    5    242078.703 ±    7889.124  ops/s
[info] ArrayOfCharsBenchmark.readCirce:CPI                                                      128  thrpt              0.262                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            278.619                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          13499.025                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt           7801.128                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt              2.677                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              0.211                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-loads                                                128  thrpt              2.228                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-store-misses                                         128  thrpt             13.326                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-stores                                               128  thrpt             51.232                 #/op
[info] ArrayOfCharsBenchmark.readCirce:branch-misses                                            128  thrpt              9.725                 #/op
[info] ArrayOfCharsBenchmark.readCirce:branches                                                 128  thrpt          14711.899                 #/op
[info] ArrayOfCharsBenchmark.readCirce:cycles                                                   128  thrpt          15827.830                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              0.517                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-loads                                               128  thrpt          14167.350                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.014                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-stores                                              128  thrpt           7978.618                 #/op
[info] ArrayOfCharsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.059                 #/op
[info] ArrayOfCharsBenchmark.readCirce:iTLB-loads                                               128  thrpt              0.089                 #/op
[info] ArrayOfCharsBenchmark.readCirce:instructions                                             128  thrpt          60428.846                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala                                                   128  thrpt    5    372864.526 ±   25446.034  ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.251                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt            132.487                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt           8976.896                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           6606.421                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              0.494                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.034                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              0.638                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              2.634                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             15.444                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:branch-misses                                     128  thrpt              3.808                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:branches                                          128  thrpt           8931.000                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:cycles                                            128  thrpt          10217.143                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.556                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt           8992.793                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.018                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           6424.727                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.090                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.184                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:instructions                                      128  thrpt          40726.590                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                  128  thrpt    5   2321179.802 ±    9350.925  ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.210                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt              9.133                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           1540.263                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt            537.153                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.050                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.016                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.061                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              0.027                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt              1.575                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              0.077                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:branches                                         128  thrpt           2233.072                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:cycles                                           128  thrpt           1657.531                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.026                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           1506.952                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt            519.232                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.004                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.016                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:instructions                                     128  thrpt           7882.994                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson                                                       128  thrpt    5     84973.103 ±    3867.816  ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.305                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1564.120                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          40463.819                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          28077.836                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt             91.853                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              1.680                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-loads                                             128  thrpt              7.669                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             42.162                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            243.031                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:branch-misses                                         128  thrpt             45.095                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:branches                                              128  thrpt          27810.451                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:cycles                                                128  thrpt          45278.266                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              3.801                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          39057.492                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.084                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          27902.109                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.157                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.548                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:instructions                                          128  thrpt         148433.467                 #/op
[info] ArrayOfCharsBenchmark.writeCirce                                                         128  thrpt    5    255632.769 ±    7404.385  ops/s
[info] ArrayOfCharsBenchmark.writeCirce:CPI                                                     128  thrpt              0.307                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            206.363                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt          13275.945                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           9250.868                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              1.561                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.169                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-loads                                               128  thrpt              1.474                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt             36.910                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-stores                                              128  thrpt             75.205                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:branch-misses                                           128  thrpt             12.338                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:branches                                                128  thrpt           9968.172                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:cycles                                                  128  thrpt          14895.659                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              1.131                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-loads                                              128  thrpt          13533.324                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.014                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-stores                                             128  thrpt           9259.220                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.088                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.186                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:instructions                                            128  thrpt          48580.876                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                  128  thrpt    5   1481794.755 ±  125645.424  ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.235                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             15.140                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           1822.617                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           1617.374                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.218                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.026                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.113                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              2.311                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt              5.170                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              1.161                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:branches                                         128  thrpt           2416.450                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:cycles                                           128  thrpt           2546.531                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.139                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           1813.016                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           1582.835                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.005                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.007                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:instructions                                     128  thrpt          10833.780                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                 128  thrpt    5   2795231.463 ±  179243.495  ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.224                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt              8.935                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt            345.260                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           1161.683                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.058                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.016                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.063                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              1.394                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt              3.607                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              1.079                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:branches                                        128  thrpt           1551.400                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           1348.275                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.137                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt            343.214                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.002                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           1116.140                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.010                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:instructions                                    128  thrpt           6026.288                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3174020.267 ±    7064.263  ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.216                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.367                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt            313.818                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           1063.644                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.144                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.014                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.075                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.004                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.054                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           1447.007                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           1212.463                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.009                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt            311.382                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           1062.454                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.005                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.036                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt           5607.417                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson                                                      128  thrpt    5    447922.866 ±    1943.579  ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.324                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt            168.312                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt           6836.013                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt           5303.021                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              2.234                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.376                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              1.340                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             22.559                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-stores                                           128  thrpt             48.867                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:branch-misses                                        128  thrpt              3.638                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:branches                                             128  thrpt           4849.195                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:cycles                                               128  thrpt           8658.461                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              0.426                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt           6678.533                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.013                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt           5370.743                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.019                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.059                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:instructions                                         128  thrpt          26722.796                 #/op
[info] ArrayOfDoublesBenchmark.readCirce                                                        128  thrpt    5     25774.308 ±    1072.400  ops/s
[info] ArrayOfDoublesBenchmark.readCirce:CPI                                                    128  thrpt              0.330                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           2089.537                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-dcache-loads                                        128  thrpt          74787.592                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-dcache-stores                                       128  thrpt          47799.693                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt            247.478                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-load-misses                                        128  thrpt              1.666                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-loads                                              128  thrpt             19.171                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-store-misses                                       128  thrpt             73.754                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-stores                                             128  thrpt            268.525                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:branch-misses                                          128  thrpt            248.381                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:branches                                               128  thrpt         112015.969                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:cycles                                                 128  thrpt         150202.930                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-load-misses                                       128  thrpt              7.210                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-loads                                             128  thrpt          72326.351                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.216                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-stores                                            128  thrpt          45401.455                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              0.465                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:iTLB-loads                                             128  thrpt              1.633                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:instructions                                           128  thrpt         454682.858                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                  128  thrpt    5     98990.088 ±    7147.040  ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:CPI                                              128  thrpt              0.276                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-load-misses                            128  thrpt            261.907                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-loads                                  128  thrpt          18832.463                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-stores                                 128  thrpt          12014.872                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-icache-load-misses                            128  thrpt              4.844                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-load-misses                                  128  thrpt              1.104                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-loads                                        128  thrpt              6.203                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-store-misses                                 128  thrpt              9.833                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-stores                                       128  thrpt             43.971                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:branch-misses                                    128  thrpt             58.951                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:branches                                         128  thrpt          34663.137                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:cycles                                           128  thrpt          38724.941                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-load-misses                                 128  thrpt              0.752                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-loads                                       128  thrpt          18837.179                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-store-misses                                128  thrpt              0.033                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-stores                                      128  thrpt          12468.192                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-load-misses                                 128  thrpt              0.089                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-loads                                       128  thrpt              0.238                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:instructions                                     128  thrpt         140300.821                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                 128  thrpt    5     66459.166 ±    5838.436  ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:CPI                                             128  thrpt              0.285                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt            536.795                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt          29690.056                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          23221.775                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt             30.032                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              1.202                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-loads                                       128  thrpt              5.305                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              9.195                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-stores                                      128  thrpt             64.457                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:branch-misses                                   128  thrpt             55.728                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:branches                                        128  thrpt          47470.858                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:cycles                                          128  thrpt          57196.937                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              1.657                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt          28468.904                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.098                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          21962.232                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.236                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              0.764                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:instructions                                    128  thrpt         200654.920                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                128  thrpt    5    129314.903 ±    1099.199  ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.284                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt            190.867                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          13738.602                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt           8207.403                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              9.941                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.453                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              1.366                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              5.124                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             25.708                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:branch-misses                                  128  thrpt             40.295                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:branches                                       128  thrpt          23820.122                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:cycles                                         128  thrpt          29220.539                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.833                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          13652.394                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.070                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt           8016.673                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.410                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              2.485                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:instructions                                   128  thrpt         102719.457                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson                                                     128  thrpt    5     37070.662 ±     860.035  ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:CPI                                                 128  thrpt              0.324                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           2039.902                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          59452.434                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          48208.658                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt            408.665                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              0.784                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-loads                                           128  thrpt             12.222                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             37.243                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-stores                                          128  thrpt            277.637                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:branch-misses                                       128  thrpt            156.734                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:branches                                            128  thrpt          66972.394                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:cycles                                              128  thrpt         103537.622                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              4.643                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          59203.690                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.204                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          47091.538                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.646                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              0.960                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:instructions                                        128  thrpt         319294.800                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce                                                       128  thrpt    5     31724.606 ±     308.444  ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:CPI                                                   128  thrpt              0.510                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt            511.241                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          44752.385                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt          25516.489                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt             46.903                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              1.625                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-loads                                             128  thrpt              6.159                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-store-misses                                      128  thrpt            138.523                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-stores                                            128  thrpt            213.598                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:branch-misses                                         128  thrpt             76.026                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:branches                                              128  thrpt          48638.744                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:cycles                                                128  thrpt         121212.062                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              3.622                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-loads                                            128  thrpt          44593.655                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              0.417                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-stores                                           128  thrpt          24994.367                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.441                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:iTLB-loads                                            128  thrpt              1.425                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:instructions                                          128  thrpt         237694.514                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                128  thrpt    5     31692.497 ±    1541.370  ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.503                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt            358.954                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt          42836.206                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt          25122.768                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt             15.776                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.974                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              4.100                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             19.824                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt             55.401                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:branch-misses                                  128  thrpt             86.492                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:branches                                       128  thrpt          46039.951                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:cycles                                         128  thrpt         119240.741                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              1.454                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt          42529.827                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.130                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt          24697.263                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.482                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              2.425                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:instructions                                   128  thrpt         236897.068                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                               128  thrpt    5     34114.148 ±     530.126  ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.533                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt            350.664                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt          38084.272                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt          21316.940                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt             25.141                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              1.665                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              6.480                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             18.261                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt             51.209                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt             76.701                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:branches                                      128  thrpt          41856.559                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:cycles                                        128  thrpt         112942.991                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              2.334                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt          37785.142                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.051                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt          21035.376                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.218                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.582                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:instructions                                  128  thrpt         211758.594                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5     34248.926 ±     249.330  ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.530                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt            302.518                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt          37879.203                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt          20983.495                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              6.123                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              2.856                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              3.574                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              2.900                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt             31.349                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt             73.455                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt          41553.254                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt         111683.617                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              2.662                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt          37483.875                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              1.247                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt          20536.648                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.115                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.845                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt         210566.479                 #/op
[info] ArrayOfDurationsBenchmark.readCirce                                                      128  thrpt    5     14495.452 ±    1661.604  ops/s
[info] ArrayOfDurationsBenchmark.readCirce:CPI                                                  128  thrpt              0.334                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt           2679.958                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-dcache-loads                                      128  thrpt         205913.400                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-dcache-stores                                     128  thrpt         106924.499                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-icache-load-misses                                128  thrpt            538.932                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-load-misses                                      128  thrpt              9.715                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-loads                                            128  thrpt             94.709                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-store-misses                                     128  thrpt             65.188                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-stores                                           128  thrpt            376.040                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:branch-misses                                        128  thrpt            500.421                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:branches                                             128  thrpt         189179.115                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:cycles                                               128  thrpt         273488.274                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-load-misses                                     128  thrpt             14.396                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-loads                                           128  thrpt         206859.179                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.754                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-stores                                          128  thrpt         106041.732                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              9.757                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:iTLB-loads                                           128  thrpt             47.781                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:instructions                                         128  thrpt         819471.268                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala                                               128  thrpt    5     14559.993 ±    2110.437  ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:CPI                                           128  thrpt              0.340                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt           2341.838                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt         197036.145                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt         102131.046                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt            376.488                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt             10.984                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-loads                                     128  thrpt             83.994                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt             13.527                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-stores                                    128  thrpt            248.945                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:branch-misses                                 128  thrpt            527.095                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:branches                                      128  thrpt         170447.397                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:cycles                                        128  thrpt         264268.587                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              8.052                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt         202558.459                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.304                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt         106031.126                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              4.134                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt             39.407                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:instructions                                  128  thrpt         776966.934                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                              128  thrpt    5    104258.376 ±    8049.561  ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.262                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt             78.874                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt          19637.517                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt          10491.212                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              7.597                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.701                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              2.787                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              2.337                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             12.554                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:branch-misses                                128  thrpt             49.854                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:branches                                     128  thrpt          24924.462                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:cycles                                       128  thrpt          36187.775                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.523                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt          19542.754                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.009                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt          10449.101                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.013                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.182                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:instructions                                 128  thrpt         138032.882                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson                                                   128  thrpt    5     13324.096 ±     310.590  ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:CPI                                               128  thrpt              0.344                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           3621.884                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt         225052.144                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt         123410.965                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt            586.845                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              4.522                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-loads                                         128  thrpt            134.160                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             26.267                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-stores                                        128  thrpt            469.728                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:branch-misses                                     128  thrpt            523.628                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:branches                                          128  thrpt         185983.293                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:cycles                                            128  thrpt         290789.634                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt             12.680                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-loads                                        128  thrpt         225933.755                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.825                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-stores                                       128  thrpt         122918.008                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              2.597                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:iTLB-loads                                        128  thrpt             13.847                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:instructions                                      128  thrpt         844666.709                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce                                                     128  thrpt    5     44221.159 ±     579.461  ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:CPI                                                 128  thrpt              0.338                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt           1017.092                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt          33581.847                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt          24427.750                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt             12.978                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              1.193                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-loads                                           128  thrpt              6.098                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-store-misses                                    128  thrpt            161.465                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-stores                                          128  thrpt            284.761                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:branch-misses                                       128  thrpt            157.477                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:branches                                            128  thrpt          70497.534                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:cycles                                              128  thrpt          87539.401                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              5.472                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-loads                                          128  thrpt          33952.433                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.936                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-stores                                         128  thrpt          24446.099                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.290                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.863                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:instructions                                        128  thrpt         258639.021                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                              128  thrpt    5     60626.475 ±    2500.198  ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.357                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt            558.132                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt          27451.332                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt          17663.155                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              4.307                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.793                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              2.753                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt             59.991                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt            127.184                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:branch-misses                                128  thrpt             58.367                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:branches                                     128  thrpt          39739.417                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:cycles                                       128  thrpt          63491.726                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              2.864                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt          26843.302                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.067                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt          17393.368                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.302                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.545                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:instructions                                 128  thrpt         177789.939                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                             128  thrpt    5    171672.792 ±    2012.769  ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.351                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             45.980                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           7440.274                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           5453.307                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              1.979                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.214                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              1.010                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt             29.672                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt             36.016                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:branch-misses                               128  thrpt             16.043                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:branches                                    128  thrpt          12232.774                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:cycles                                      128  thrpt          22474.700                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.723                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           7360.645                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.331                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           5380.884                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.036                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.102                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:instructions                                128  thrpt          63969.994                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    184548.145 ±     287.515  ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.342                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              4.578                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           5134.417                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           5545.703                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.413                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.079                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.256                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.006                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.091                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt             13.997                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt          11731.087                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt          20645.821                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.088                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           5117.712                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.010                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           5516.408                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.028                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.103                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          60292.652                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson                                                  128  thrpt    5     55314.971 ±     699.843  ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:CPI                                              128  thrpt              0.366                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt            885.436                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt          32153.757                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt          20277.511                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt              9.211                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              0.556                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-loads                                        128  thrpt              4.677                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             69.725                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-stores                                       128  thrpt            145.334                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:branch-misses                                    128  thrpt            105.629                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:branches                                         128  thrpt          41399.009                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:cycles                                           128  thrpt          69171.733                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              5.704                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-loads                                       128  thrpt          31589.367                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.132                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-stores                                      128  thrpt          19625.861                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.391                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              0.767                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:instructions                                     128  thrpt         189125.848                 #/op
[info] ArrayOfEnumsBenchmark.readCirce                                                          128  thrpt    5     97210.838 ±     960.020  ops/s
[info] ArrayOfEnumsBenchmark.readCirce:CPI                                                      128  thrpt              0.288                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            644.574                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          31343.222                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt          17663.053                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt              6.084                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              0.536                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-loads                                                128  thrpt              4.044                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-store-misses                                         128  thrpt             42.768                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-stores                                               128  thrpt            102.461                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:branch-misses                                            128  thrpt             19.362                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:branches                                                 128  thrpt          32322.656                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:cycles                                                   128  thrpt          39628.696                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              1.148                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-loads                                               128  thrpt          32755.976                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.035                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-stores                                              128  thrpt          17848.740                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.156                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:iTLB-loads                                               128  thrpt              0.115                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:instructions                                             128  thrpt         137709.053                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                   128  thrpt    5    126151.791 ±    7855.154  ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.283                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt            387.885                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          24879.705                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt          15419.518                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              5.274                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.422                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              3.700                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              4.660                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             76.883                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             11.384                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:branches                                          128  thrpt          23844.308                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:cycles                                            128  thrpt          29658.422                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.814                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          25126.415                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.039                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt          15170.502                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.206                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.221                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:instructions                                      128  thrpt         104968.897                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                  128  thrpt    5    161303.716 ±   11082.422  ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.278                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt            242.799                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt          19776.984                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           9558.835                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              1.256                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.199                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.985                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              2.639                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             26.941                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt             10.901                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:branches                                         128  thrpt          21361.271                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:cycles                                           128  thrpt          23208.791                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.483                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt          19499.704                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.029                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           9269.115                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.134                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.129                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:instructions                                     128  thrpt          83529.735                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson                                                       128  thrpt    5     54258.675 ±     148.321  ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.303                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           2039.104                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          63495.507                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          40318.228                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt            190.888                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              3.497                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-loads                                             128  thrpt             17.367                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             41.891                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            285.345                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:branch-misses                                         128  thrpt             44.296                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:branches                                              128  thrpt          45488.814                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:cycles                                                128  thrpt          70667.553                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              3.500                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          61553.497                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.084                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          40563.508                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.336                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.716                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:instructions                                          128  thrpt         233364.340                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce                                                         128  thrpt    5    180308.253 ±    1681.877  ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:CPI                                                     128  thrpt              0.257                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            174.355                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt          15399.477                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           9672.744                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              0.921                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.616                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-loads                                               128  thrpt              1.588                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt             89.934                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-stores                                              128  thrpt            121.559                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:branch-misses                                           128  thrpt             13.719                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:branches                                                128  thrpt          24005.802                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:cycles                                                  128  thrpt          21485.517                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              2.145                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-loads                                              128  thrpt          15001.769                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.035                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-stores                                             128  thrpt           9320.262                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.109                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.220                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:instructions                                            128  thrpt          83646.420                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                  128  thrpt    5    528079.943 ±   45755.589  ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.256                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             27.517                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           4846.979                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           2986.065                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.637                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.068                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.354                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt             10.696                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt             18.242                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              2.634                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:branches                                         128  thrpt           8071.463                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:cycles                                           128  thrpt           7193.579                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.312                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           4816.964                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.011                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           2928.635                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.018                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.068                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:instructions                                     128  thrpt          28137.100                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                 128  thrpt    5    707989.495 ±   48635.961  ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.219                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             20.369                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt           2776.095                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           1948.406                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.719                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.045                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.240                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt             10.878                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             17.024                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              2.349                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:branches                                        128  thrpt           7509.400                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           5264.579                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.306                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt           2767.378                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.003                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           1927.502                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.017                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.038                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:instructions                                    128  thrpt          23989.286                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    786912.030 ±    9562.060  ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.208                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.654                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt           2701.954                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           1741.170                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.552                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.027                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.148                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.018                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.085                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           7298.533                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           4812.290                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.011                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt           2679.521                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           1731.433                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.012                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.036                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt          23168.012                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson                                                      128  thrpt    5    294723.269 ±     972.272  ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.259                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt             73.351                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          12582.662                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt           6069.538                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              0.992                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.298                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              1.276                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             12.573                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-stores                                           128  thrpt             26.926                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:branch-misses                                        128  thrpt              4.818                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:branches                                             128  thrpt          11575.494                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:cycles                                               128  thrpt          12944.714                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              1.058                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          12576.728                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.007                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt           6033.415                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.040                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.109                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:instructions                                         128  thrpt          49981.902                 #/op
[info] ArrayOfFloatsBenchmark.readCirce                                                         128  thrpt    5     37761.652 ±     399.322  ops/s
[info] ArrayOfFloatsBenchmark.readCirce:CPI                                                     128  thrpt              0.325                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-dcache-load-misses                                   128  thrpt           1527.517                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-dcache-loads                                         128  thrpt          57409.846                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-dcache-stores                                        128  thrpt          36928.138                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-icache-load-misses                                   128  thrpt             19.432                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-load-misses                                         128  thrpt              1.176                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-loads                                               128  thrpt              6.338                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-store-misses                                        128  thrpt             56.671                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-stores                                              128  thrpt            179.132                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:branch-misses                                           128  thrpt            177.695                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:branches                                                128  thrpt          77395.121                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:cycles                                                  128  thrpt         102244.953                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-load-misses                                        128  thrpt              3.847                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-loads                                              128  thrpt          57611.818                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-store-misses                                       128  thrpt              0.164                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-stores                                             128  thrpt          36255.699                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:iTLB-load-misses                                        128  thrpt              1.224                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:iTLB-loads                                              128  thrpt              1.762                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:instructions                                            128  thrpt         314813.873                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                   128  thrpt    5    285010.881 ±   13045.519  ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:CPI                                               128  thrpt              0.235                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-load-misses                             128  thrpt             32.775                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-loads                                   128  thrpt           7228.840                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-stores                                  128  thrpt           3361.299                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-icache-load-misses                             128  thrpt              0.848                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-load-misses                                   128  thrpt              0.117                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-loads                                         128  thrpt              0.595                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-store-misses                                  128  thrpt              1.743                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-stores                                        128  thrpt              8.776                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:branch-misses                                     128  thrpt             24.103                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:branches                                          128  thrpt          15323.097                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:cycles                                            128  thrpt          12836.661                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-load-misses                                  128  thrpt              0.241                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-loads                                        128  thrpt           7266.893                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-store-misses                                 128  thrpt              0.007                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-stores                                       128  thrpt           3414.678                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-load-misses                                  128  thrpt              0.041                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-loads                                        128  thrpt              0.190                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:instructions                                      128  thrpt          54691.727                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                  128  thrpt    5    116231.389 ±    1053.035  ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:CPI                                              128  thrpt              0.264                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-load-misses                            128  thrpt            330.346                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-loads                                  128  thrpt          20004.379                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-stores                                 128  thrpt          16688.655                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-icache-load-misses                            128  thrpt              7.564                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-load-misses                                  128  thrpt              0.608                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-loads                                        128  thrpt              4.965                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-store-misses                                 128  thrpt              3.846                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-stores                                       128  thrpt             30.914                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:branch-misses                                    128  thrpt             34.152                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:branches                                         128  thrpt          30029.540                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:cycles                                           128  thrpt          33151.050                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-load-misses                                 128  thrpt              0.612                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-loads                                       128  thrpt          20251.093                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-store-misses                                128  thrpt              0.049                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-stores                                      128  thrpt          16715.271                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:iTLB-load-misses                                 128  thrpt              0.187                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:iTLB-loads                                       128  thrpt              0.160                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:instructions                                     128  thrpt         125397.847                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                 128  thrpt    5    461413.271 ±   53393.108  ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:CPI                                             128  thrpt              0.235                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-load-misses                           128  thrpt             18.414                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-loads                                 128  thrpt           4848.350                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-stores                                128  thrpt           2050.280                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-icache-load-misses                           128  thrpt              0.380                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-load-misses                                 128  thrpt              0.109                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-loads                                       128  thrpt              0.257                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-store-misses                                128  thrpt              0.828                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-stores                                      128  thrpt              3.159                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:branch-misses                                   128  thrpt             10.258                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:branches                                        128  thrpt           8356.164                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:cycles                                          128  thrpt           7974.569                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-load-misses                                128  thrpt              0.151                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-loads                                      128  thrpt           4811.446                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-store-misses                               128  thrpt              0.105                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-stores                                     128  thrpt           2045.756                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-load-misses                                128  thrpt              0.024                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-loads                                      128  thrpt              0.104                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:instructions                                    128  thrpt          33862.968                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson                                                      128  thrpt    5     42626.732 ±    2308.654  ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:CPI                                                  128  thrpt              0.325                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-load-misses                                128  thrpt           1941.395                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-loads                                      128  thrpt          53287.033                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-stores                                     128  thrpt          44034.907                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-icache-load-misses                                128  thrpt            353.102                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-load-misses                                      128  thrpt              0.549                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-loads                                            128  thrpt             17.556                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-store-misses                                     128  thrpt             22.423                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-stores                                           128  thrpt            223.483                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:branch-misses                                        128  thrpt            179.650                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:branches                                             128  thrpt          56123.333                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:cycles                                               128  thrpt          88242.638                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-load-misses                                     128  thrpt              5.854                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-loads                                           128  thrpt          53596.578                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-store-misses                                    128  thrpt              0.147                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-stores                                          128  thrpt          42010.571                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:iTLB-load-misses                                     128  thrpt              0.501                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:iTLB-loads                                           128  thrpt              1.511                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:instructions                                         128  thrpt         271546.318                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce                                                        128  thrpt    5     75065.741 ±     940.139  ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:CPI                                                    128  thrpt              0.453                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-dcache-load-misses                                  128  thrpt            220.912                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-dcache-loads                                        128  thrpt          18669.711                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-dcache-stores                                       128  thrpt          13137.109                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-icache-load-misses                                  128  thrpt             10.377                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-load-misses                                        128  thrpt              0.382                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-loads                                              128  thrpt              3.369                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-store-misses                                       128  thrpt             97.162                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-stores                                             128  thrpt            133.148                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:branch-misses                                          128  thrpt             40.355                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:branches                                               128  thrpt          23896.732                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:cycles                                                 128  thrpt          50835.984                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-load-misses                                       128  thrpt              2.082                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-loads                                             128  thrpt          18858.505                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-store-misses                                      128  thrpt              0.020                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-stores                                            128  thrpt          13190.011                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:iTLB-load-misses                                       128  thrpt              0.079                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:iTLB-loads                                             128  thrpt              0.118                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:instructions                                           128  thrpt         112107.909                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                  128  thrpt    5     88240.438 ±     525.404  ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:CPI                                              128  thrpt              0.478                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-load-misses                            128  thrpt            159.055                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-loads                                  128  thrpt          12293.883                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-stores                                 128  thrpt           9929.249                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-icache-load-misses                            128  thrpt              2.732                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-load-misses                                  128  thrpt              1.693                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-loads                                        128  thrpt              4.555                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-store-misses                                 128  thrpt              7.142                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-stores                                       128  thrpt             23.122                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:branch-misses                                    128  thrpt             31.963                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:branches                                         128  thrpt          18720.996                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:cycles                                           128  thrpt          43933.839                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-load-misses                                 128  thrpt              0.568                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-loads                                       128  thrpt          12202.170                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-store-misses                                128  thrpt              0.039                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-stores                                      128  thrpt           9879.666                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-load-misses                                 128  thrpt              0.251                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-loads                                       128  thrpt              0.552                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:instructions                                     128  thrpt          91832.689                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                 128  thrpt    5     76273.939 ±     290.796  ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:CPI                                             128  thrpt              0.447                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-load-misses                           128  thrpt            167.981                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-loads                                 128  thrpt          16746.846                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-stores                                128  thrpt          12896.495                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-icache-load-misses                           128  thrpt              8.995                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-load-misses                                 128  thrpt              0.813                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-loads                                       128  thrpt              2.958                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-store-misses                                128  thrpt              9.149                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-stores                                      128  thrpt             28.428                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:branch-misses                                   128  thrpt             47.548                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:branches                                        128  thrpt          21949.360                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:cycles                                          128  thrpt          50009.891                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-load-misses                                128  thrpt              1.205                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-loads                                      128  thrpt          16617.289                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-store-misses                               128  thrpt              0.023                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-stores                                     128  thrpt          12755.294                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-load-misses                                128  thrpt              0.049                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-loads                                      128  thrpt              0.110                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:instructions                                    128  thrpt         111980.676                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                128  thrpt    5     87745.882 ±     581.005  ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:CPI                                            128  thrpt              0.479                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-load-misses                          128  thrpt            152.963                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-loads                                128  thrpt          12323.195                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-stores                               128  thrpt           9708.439                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-icache-load-misses                          128  thrpt              6.156                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-load-misses                                128  thrpt              0.848                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-loads                                      128  thrpt              2.159                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-store-misses                               128  thrpt              7.963                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-stores                                     128  thrpt             23.981                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:branch-misses                                  128  thrpt             35.546                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:branches                                       128  thrpt          18197.055                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:cycles                                         128  thrpt          43606.071                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-load-misses                               128  thrpt              0.962                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-loads                                     128  thrpt          12109.590                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-store-misses                              128  thrpt              0.024                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-stores                                    128  thrpt           9502.620                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-load-misses                               128  thrpt              0.070                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-loads                                     128  thrpt              0.500                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:instructions                                   128  thrpt          91114.876                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5     88559.259 ±     688.647  ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:CPI                                    128  thrpt              0.480                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  128  thrpt            130.585                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        128  thrpt          12264.016                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       128  thrpt           9498.053                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  128  thrpt              1.649                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        128  thrpt              0.261                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              128  thrpt              1.165                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       128  thrpt              0.221                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             128  thrpt              8.755                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branch-misses                          128  thrpt             36.029                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branches                               128  thrpt          17897.265                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:cycles                                 128  thrpt          43145.174                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       128  thrpt              0.451                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             128  thrpt          12221.792                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      128  thrpt              0.027                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            128  thrpt           9403.515                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       128  thrpt              0.277                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             128  thrpt              0.765                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:instructions                           128  thrpt          89809.118                 #/op
[info] ArrayOfInstantsBenchmark.readCirce                                                       128  thrpt    5     10010.599 ±     452.995  ops/s
[info] ArrayOfInstantsBenchmark.readCirce:CPI                                                   128  thrpt              0.356                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-dcache-load-misses                                 128  thrpt           5065.803                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-dcache-loads                                       128  thrpt         280053.945                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-dcache-stores                                      128  thrpt         148943.927                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-icache-load-misses                                 128  thrpt           6966.045                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-load-misses                                       128  thrpt             10.282                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-loads                                             128  thrpt            213.909                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-store-misses                                      128  thrpt            204.737                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-stores                                            128  thrpt            980.964                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:branch-misses                                         128  thrpt            247.295                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:branches                                              128  thrpt         232370.484                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:cycles                                                128  thrpt         390207.238                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-load-misses                                      128  thrpt              9.016                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-loads                                            128  thrpt         279367.154                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-store-misses                                     128  thrpt              1.219                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-stores                                           128  thrpt         142568.939                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:iTLB-load-misses                                      128  thrpt              3.542                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:iTLB-loads                                            128  thrpt             12.439                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:instructions                                          128  thrpt        1097505.578                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                128  thrpt    5     11088.304 ±     785.022  ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:CPI                                            128  thrpt              0.366                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-load-misses                          128  thrpt           4513.558                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-loads                                128  thrpt         248683.476                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-stores                               128  thrpt         132978.106                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-icache-load-misses                          128  thrpt           4598.223                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-load-misses                                128  thrpt              9.501                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-loads                                      128  thrpt            165.822                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-store-misses                               128  thrpt            190.660                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-stores                                     128  thrpt            892.174                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:branch-misses                                  128  thrpt            249.120                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:branches                                       128  thrpt         198573.145                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:cycles                                         128  thrpt         348183.748                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-load-misses                               128  thrpt             11.237                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-loads                                     128  thrpt         240990.415                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-store-misses                              128  thrpt              0.577                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-stores                                    128  thrpt         126724.392                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:iTLB-load-misses                               128  thrpt              3.358                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:iTLB-loads                                     128  thrpt             29.615                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:instructions                                   128  thrpt         952377.939                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                               128  thrpt    5    155601.396 ±    6935.057  ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:CPI                                           128  thrpt              0.333                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-load-misses                         128  thrpt             73.218                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-loads                               128  thrpt          10628.547                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-stores                              128  thrpt           5500.430                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-icache-load-misses                         128  thrpt              4.247                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-load-misses                               128  thrpt              0.597                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-loads                                     128  thrpt              1.781                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-store-misses                              128  thrpt              1.931                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-stores                                    128  thrpt             11.354                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:branch-misses                                 128  thrpt              9.363                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:branches                                      128  thrpt          17258.214                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:cycles                                        128  thrpt          24499.189                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-load-misses                              128  thrpt              0.708                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-loads                                    128  thrpt          10456.949                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-store-misses                             128  thrpt              0.521                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-stores                                   128  thrpt           5382.906                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-load-misses                              128  thrpt              0.110                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-loads                                    128  thrpt              1.262                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:instructions                                  128  thrpt          73591.347                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson                                                    128  thrpt    5      5790.132 ±     347.623  ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:CPI                                                128  thrpt              0.341                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-load-misses                              128  thrpt           8268.257                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-loads                                    128  thrpt         533757.842                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-stores                                   128  thrpt         302495.728                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-icache-load-misses                              128  thrpt          13734.054                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-load-misses                                    128  thrpt             10.217                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-loads                                          128  thrpt            339.551                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-store-misses                                   128  thrpt            111.042                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-stores                                         128  thrpt           1110.511                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:branch-misses                                      128  thrpt            534.675                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:branches                                           128  thrpt         369896.974                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:cycles                                             128  thrpt         662240.778                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-load-misses                                   128  thrpt            135.494                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-loads                                         128  thrpt         514397.745                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-store-misses                                  128  thrpt              0.692                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-stores                                        128  thrpt         290966.991                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:iTLB-load-misses                                   128  thrpt              4.221                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:iTLB-loads                                         128  thrpt             12.007                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:instructions                                       128  thrpt        1944792.188                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce                                                      128  thrpt    5     19883.637 ±     784.246  ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:CPI                                                  128  thrpt              0.381                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-dcache-load-misses                                128  thrpt           2774.176                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-dcache-loads                                      128  thrpt          77867.409                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-dcache-stores                                     128  thrpt          65190.892                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-icache-load-misses                                128  thrpt             49.880                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-load-misses                                      128  thrpt              2.838                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-loads                                            128  thrpt             19.020                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-store-misses                                     128  thrpt            233.620                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-stores                                           128  thrpt            447.524                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:branch-misses                                        128  thrpt            167.817                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:branches                                             128  thrpt         120494.614                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:cycles                                               128  thrpt         190612.896                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-load-misses                                     128  thrpt              6.912                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-loads                                           128  thrpt          78795.255                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-store-misses                                    128  thrpt              2.238                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-stores                                          128  thrpt          64902.643                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:iTLB-load-misses                                     128  thrpt              1.422                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:iTLB-loads                                           128  thrpt              5.658                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:instructions                                         128  thrpt         499879.844                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                               128  thrpt    5     23399.627 ±    1578.090  ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:CPI                                           128  thrpt              0.425                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-load-misses                         128  thrpt           1918.279                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-loads                               128  thrpt          69167.650                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-stores                              128  thrpt          54338.185                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-icache-load-misses                         128  thrpt             13.105                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-load-misses                               128  thrpt              2.484                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-loads                                     128  thrpt             14.000                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-store-misses                              128  thrpt            105.423                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-stores                                    128  thrpt            196.995                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:branch-misses                                 128  thrpt            148.600                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:branches                                      128  thrpt          77722.400                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:cycles                                        128  thrpt         163269.824                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-load-misses                              128  thrpt              7.019                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-loads                                    128  thrpt          70079.750                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-store-misses                             128  thrpt              0.228                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-stores                                   128  thrpt          54176.762                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-load-misses                              128  thrpt              1.198                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-loads                                    128  thrpt              1.956                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:instructions                                  128  thrpt         384506.953                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                              128  thrpt    5    133153.933 ±    1665.184  ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:CPI                                          128  thrpt              0.577                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-load-misses                        128  thrpt             58.074                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-loads                              128  thrpt           7847.165                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-stores                             128  thrpt           8852.563                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-icache-load-misses                        128  thrpt              0.858                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-load-misses                              128  thrpt              0.077                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-loads                                    128  thrpt              0.572                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-store-misses                             128  thrpt             34.332                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-stores                                   128  thrpt             48.443                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:branch-misses                                128  thrpt              3.383                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:branches                                     128  thrpt           7007.696                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:cycles                                       128  thrpt          28445.930                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-load-misses                             128  thrpt              1.043                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-loads                                   128  thrpt           7820.033                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-store-misses                            128  thrpt              0.372                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-stores                                  128  thrpt           8736.781                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-load-misses                             128  thrpt              0.052                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-loads                                   128  thrpt              0.140                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:instructions                                 128  thrpt          49312.837                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    140224.050 ±     113.489  ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:CPI                                  128  thrpt              0.573                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                128  thrpt              6.693                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                      128  thrpt           7815.790                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                     128  thrpt           8356.958                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                128  thrpt              1.201                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                      128  thrpt              0.240                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                            128  thrpt              0.860                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                     128  thrpt              0.004                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                           128  thrpt              0.195                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branch-misses                        128  thrpt              1.517                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branches                             128  thrpt           6563.898                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:cycles                               128  thrpt          27306.077                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                     128  thrpt              0.073                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                           128  thrpt           7825.490                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                    128  thrpt              0.017                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                          128  thrpt           8325.594                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                     128  thrpt              0.053                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                           128  thrpt              0.198                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:instructions                         128  thrpt          47641.202                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson                                                   128  thrpt    5     23320.489 ±     265.745  ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:CPI                                               128  thrpt              0.406                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-load-misses                             128  thrpt           2519.479                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-loads                                   128  thrpt          74149.716                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-stores                                  128  thrpt          56517.926                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-icache-load-misses                             128  thrpt             58.580                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-load-misses                                   128  thrpt              1.645                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-loads                                         128  thrpt             15.598                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-store-misses                                  128  thrpt            100.144                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-stores                                        128  thrpt            192.914                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:branch-misses                                     128  thrpt            142.119                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:branches                                          128  thrpt          81382.389                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:cycles                                            128  thrpt         164777.072                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-load-misses                                  128  thrpt              8.934                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-loads                                        128  thrpt          71580.446                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-store-misses                                 128  thrpt              0.327                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-stores                                       128  thrpt          53699.213                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:iTLB-load-misses                                  128  thrpt              0.460                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:iTLB-loads                                        128  thrpt              2.843                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:instructions                                      128  thrpt         406044.789                 #/op
[info] ArrayOfIntsBenchmark.readCirce                                                           128  thrpt    5    121344.199 ±    4253.495  ops/s
[info] ArrayOfIntsBenchmark.readCirce:CPI                                                       128  thrpt              0.297                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-dcache-load-misses                                     128  thrpt            406.796                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-dcache-loads                                           128  thrpt          18888.978                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-dcache-stores                                          128  thrpt           9926.531                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-icache-load-misses                                     128  thrpt              5.617                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-load-misses                                           128  thrpt              0.339                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-loads                                                 128  thrpt              2.429                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-store-misses                                          128  thrpt             29.877                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-stores                                                128  thrpt             86.591                 #/op
[info] ArrayOfIntsBenchmark.readCirce:branch-misses                                             128  thrpt             65.615                 #/op
[info] ArrayOfIntsBenchmark.readCirce:branches                                                  128  thrpt          25364.015                 #/op
[info] ArrayOfIntsBenchmark.readCirce:cycles                                                    128  thrpt          31503.996                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-load-misses                                          128  thrpt              1.101                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-loads                                                128  thrpt          19531.015                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-store-misses                                         128  thrpt              0.020                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-stores                                               128  thrpt          10042.787                 #/op
[info] ArrayOfIntsBenchmark.readCirce:iTLB-load-misses                                          128  thrpt              0.230                 #/op
[info] ArrayOfIntsBenchmark.readCirce:iTLB-loads                                                128  thrpt              0.443                 #/op
[info] ArrayOfIntsBenchmark.readCirce:instructions                                              128  thrpt         106207.467                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                     128  thrpt    5    563274.363 ±   20427.112  ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:CPI                                                 128  thrpt              0.214                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-load-misses                               128  thrpt             28.973                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-loads                                     128  thrpt           4079.658                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-stores                                    128  thrpt           2225.825                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-icache-load-misses                               128  thrpt              0.220                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-load-misses                                     128  thrpt              0.075                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-loads                                           128  thrpt              0.310                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-store-misses                                    128  thrpt              1.700                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-stores                                          128  thrpt              8.315                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:branch-misses                                       128  thrpt              7.785                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:branches                                            128  thrpt           8093.724                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:cycles                                              128  thrpt           6837.924                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-load-misses                                    128  thrpt              0.246                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-loads                                          128  thrpt           4116.991                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-store-misses                                   128  thrpt              0.003                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-stores                                         128  thrpt           2231.731                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:iTLB-load-misses                                    128  thrpt              0.020                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:iTLB-loads                                          128  thrpt              0.045                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:instructions                                        128  thrpt          31964.074                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala                                                    128  thrpt    5    322878.068 ±    1625.184  ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:CPI                                                128  thrpt              0.244                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses                              128  thrpt             38.821                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-loads                                    128  thrpt           9260.367                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-stores                                   128  thrpt           7112.846                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-icache-load-misses                              128  thrpt              0.520                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-load-misses                                    128  thrpt              0.044                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-loads                                          128  thrpt              0.342                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-store-misses                                   128  thrpt              2.351                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-stores                                         128  thrpt              9.577                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:branch-misses                                      128  thrpt              4.410                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:branches                                           128  thrpt          10394.235                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:cycles                                             128  thrpt          11751.068                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-load-misses                                   128  thrpt              0.290                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-loads                                         128  thrpt           9215.935                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-store-misses                                  128  thrpt              0.122                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-stores                                        128  thrpt           7022.029                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:iTLB-load-misses                                   128  thrpt              0.048                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:iTLB-loads                                         128  thrpt              0.113                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:instructions                                       128  thrpt          48099.946                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                   128  thrpt    5    765996.379 ±   15657.194  ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:CPI                                               128  thrpt              0.216                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                             128  thrpt             20.166                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-loads                                   128  thrpt           2461.025                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-stores                                  128  thrpt           1595.911                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses                             128  thrpt              3.245                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-load-misses                                   128  thrpt              0.113                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-loads                                         128  thrpt              0.716                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-store-misses                                  128  thrpt              0.999                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-stores                                        128  thrpt              3.059                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:branch-misses                                     128  thrpt              4.090                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:branches                                          128  thrpt           6283.241                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:cycles                                            128  thrpt           5123.136                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-load-misses                                  128  thrpt              0.219                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-loads                                        128  thrpt           2479.103                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-store-misses                                 128  thrpt              0.005                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-stores                                       128  thrpt           1588.290                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:iTLB-load-misses                                  128  thrpt              0.064                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:iTLB-loads                                        128  thrpt              0.352                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:instructions                                      128  thrpt          23673.426                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson                                                        128  thrpt    5     71609.584 ±    4523.765  ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:CPI                                                    128  thrpt              0.333                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-dcache-load-misses                                  128  thrpt           1619.063                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-dcache-loads                                        128  thrpt          42234.825                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-dcache-stores                                       128  thrpt          31689.868                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-icache-load-misses                                  128  thrpt            148.109                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-load-misses                                        128  thrpt              1.205                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-loads                                              128  thrpt             10.109                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-store-misses                                       128  thrpt             31.835                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-stores                                             128  thrpt            214.513                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:branch-misses                                          128  thrpt             94.775                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:branches                                               128  thrpt          29217.940                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:cycles                                                 128  thrpt          52648.228                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-load-misses                                       128  thrpt              3.919                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-loads                                             128  thrpt          43540.587                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-store-misses                                      128  thrpt              0.059                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-stores                                            128  thrpt          32008.825                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:iTLB-load-misses                                       128  thrpt              0.280                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:iTLB-loads                                             128  thrpt              0.527                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:instructions                                           128  thrpt         158143.677                 #/op
[info] ArrayOfIntsBenchmark.writeCirce                                                          128  thrpt    5    193234.721 ±   13383.744  ops/s
[info] ArrayOfIntsBenchmark.writeCirce:CPI                                                      128  thrpt              0.303                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-dcache-load-misses                                    128  thrpt            189.779                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-dcache-loads                                          128  thrpt          12406.578                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-dcache-stores                                         128  thrpt           7974.018                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-icache-load-misses                                    128  thrpt              1.164                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-load-misses                                          128  thrpt              0.525                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-loads                                                128  thrpt              1.980                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-store-misses                                         128  thrpt             66.093                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-stores                                               128  thrpt             99.510                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:branch-misses                                            128  thrpt             28.766                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:branches                                                 128  thrpt          13897.187                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:cycles                                                   128  thrpt          19602.236                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-load-misses                                         128  thrpt              1.528                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-loads                                               128  thrpt          12729.745                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-store-misses                                        128  thrpt              0.020                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-stores                                              128  thrpt           7957.304                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:iTLB-load-misses                                         128  thrpt              0.111                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:iTLB-loads                                               128  thrpt              0.470                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:instructions                                             128  thrpt          64767.701                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                    128  thrpt    5    655048.478 ±   19303.307  ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:CPI                                                128  thrpt              0.406                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-load-misses                              128  thrpt             15.485                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-loads                                    128  thrpt           2017.023                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-stores                                   128  thrpt           1941.069                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-icache-load-misses                              128  thrpt              0.125                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-load-misses                                    128  thrpt              0.043                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-loads                                          128  thrpt              0.180                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-store-misses                                   128  thrpt              4.328                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-stores                                         128  thrpt              8.910                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:branch-misses                                      128  thrpt              1.650                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:branches                                           128  thrpt           2581.259                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:cycles                                             128  thrpt           5846.819                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-load-misses                                   128  thrpt              0.202                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-loads                                         128  thrpt           2023.945                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-store-misses                                  128  thrpt              0.004                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-stores                                        128  thrpt           1920.923                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-load-misses                                   128  thrpt              0.020                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-loads                                         128  thrpt              0.042                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:instructions                                       128  thrpt          14387.314                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                   128  thrpt    5    649104.268 ±   52672.212  ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:CPI                                               128  thrpt              0.303                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                             128  thrpt             20.288                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-loads                                   128  thrpt           3476.665                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-stores                                  128  thrpt           2298.839                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses                             128  thrpt              0.653                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-load-misses                                   128  thrpt              0.073                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-loads                                         128  thrpt              0.278                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-store-misses                                  128  thrpt              5.292                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-stores                                        128  thrpt             11.016                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:branch-misses                                     128  thrpt              5.843                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:branches                                          128  thrpt           3748.508                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:cycles                                            128  thrpt           5721.514                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-load-misses                                  128  thrpt              0.196                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-loads                                        128  thrpt           3446.895                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-store-misses                                 128  thrpt              0.005                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-stores                                       128  thrpt           2275.307                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:iTLB-load-misses                                  128  thrpt              0.011                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:iTLB-loads                                        128  thrpt              0.025                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:instructions                                      128  thrpt          18908.109                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                  128  thrpt    5   1145587.164 ±  101761.307  ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:CPI                                              128  thrpt              0.227                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                            128  thrpt             14.132                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads                                  128  thrpt           1458.210                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores                                 128  thrpt           1509.791                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                            128  thrpt              0.110                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-load-misses                                  128  thrpt              0.051                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-loads                                        128  thrpt              0.093                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-store-misses                                 128  thrpt              4.487                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-stores                                       128  thrpt              9.075                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:branch-misses                                    128  thrpt              5.696                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:branches                                         128  thrpt           3390.040                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:cycles                                           128  thrpt           3305.110                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses                                 128  thrpt              0.218                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-loads                                       128  thrpt           1431.506                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-stores                                      128  thrpt           1480.518                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses                                 128  thrpt              0.003                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-loads                                       128  thrpt              0.009                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:instructions                                     128  thrpt          14579.228                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   1208235.198 ±    1296.889  ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                      128  thrpt              0.226                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                    128  thrpt              1.289                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                          128  thrpt           1428.577                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                         128  thrpt           1368.420                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                    128  thrpt              0.433                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                          128  thrpt              0.029                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                128  thrpt              0.145                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                         128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                               128  thrpt              0.007                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                            128  thrpt              4.804                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branches                                 128  thrpt           3246.693                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles                                   128  thrpt           3180.615                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                         128  thrpt              0.016                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                               128  thrpt           1415.660                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                              128  thrpt           1367.625                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                         128  thrpt              0.002                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                               128  thrpt              0.005                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions                             128  thrpt          14045.445                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson                                                       128  thrpt    5     34206.693 ±    2562.019  ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:CPI                                                   128  thrpt              0.354                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-dcache-load-misses                                 128  thrpt           1787.565                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-dcache-loads                                       128  thrpt          61032.071                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-dcache-stores                                      128  thrpt          43981.475                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-icache-load-misses                                 128  thrpt             46.461                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-load-misses                                       128  thrpt              0.802                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-loads                                             128  thrpt             14.617                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-store-misses                                      128  thrpt             16.410                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-stores                                            128  thrpt            225.882                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:branch-misses                                         128  thrpt            132.927                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:branches                                              128  thrpt          64575.601                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:cycles                                                128  thrpt         110502.268                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-load-misses                                      128  thrpt              2.020                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-loads                                            128  thrpt          61975.997                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-store-misses                                     128  thrpt              0.120                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-stores                                           128  thrpt          43471.948                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:iTLB-load-misses                                      128  thrpt              0.441                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:iTLB-loads                                            128  thrpt              1.306                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:instructions                                          128  thrpt         312231.750                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                      128  thrpt    5    133512.041 ±    1683.440  ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:CPI                                                  128  thrpt              0.264                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt            368.706                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-loads                                      128  thrpt          23024.799                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-stores                                     128  thrpt          10939.343                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-icache-load-misses                                128  thrpt              6.604                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-load-misses                                      128  thrpt              0.268                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-loads                                            128  thrpt              3.207                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-store-misses                                     128  thrpt             42.205                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-stores                                           128  thrpt             80.197                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:branch-misses                                        128  thrpt             15.376                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:branches                                             128  thrpt          28196.816                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:cycles                                               128  thrpt          29008.829                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-load-misses                                     128  thrpt              1.101                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-loads                                           128  thrpt          23384.026                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.049                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-stores                                          128  thrpt          11088.079                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              0.193                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:iTLB-loads                                           128  thrpt              0.285                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:instructions                                         128  thrpt         109720.941                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                               128  thrpt    5    201645.120 ±    1672.217  ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:CPI                                           128  thrpt              0.256                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt            162.084                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt          15978.498                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt           9475.798                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt              2.464                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt              0.117                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-loads                                     128  thrpt              1.402                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt              2.099                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-stores                                    128  thrpt             17.637                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:branch-misses                                 128  thrpt             11.693                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:branches                                      128  thrpt          16648.619                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:cycles                                        128  thrpt          19016.871                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              0.204                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt          16178.872                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.021                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt           9338.862                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              0.108                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt              0.106                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:instructions                                  128  thrpt          74233.418                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                              128  thrpt    5    258950.367 ±   24151.723  ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.242                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt            135.032                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt          11080.563                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt           5263.290                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              1.817                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.251                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              0.984                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              0.985                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             13.018                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:branch-misses                                128  thrpt             10.148                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:branches                                     128  thrpt          15279.604                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:cycles                                       128  thrpt          14698.097                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.296                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt          10860.252                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.020                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt           5112.920                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.075                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.161                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:instructions                                 128  thrpt          60652.980                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                   128  thrpt    5     69667.987 ±    3827.207  ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:CPI                                               128  thrpt              0.302                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           1639.446                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          46169.289                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          30489.663                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt             76.930                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              2.733                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-loads                                         128  thrpt              9.404                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             41.369                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-stores                                        128  thrpt            245.768                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:branch-misses                                     128  thrpt             47.649                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:branches                                          128  thrpt          37343.276                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:cycles                                            128  thrpt          54540.792                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              2.877                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          46062.572                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.142                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          30638.337                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.402                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              0.551                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:instructions                                      128  thrpt         180648.150                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                     128  thrpt    5    181258.797 ±    2252.960  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:CPI                                                 128  thrpt              0.255                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt            172.856                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt          15380.333                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt           9646.999                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt              0.939                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.576                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-loads                                           128  thrpt              1.716                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-store-misses                                    128  thrpt             86.403                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-stores                                          128  thrpt            118.872                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:branch-misses                                       128  thrpt             13.320                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:branches                                            128  thrpt          24197.555                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:cycles                                              128  thrpt          21406.187                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              2.276                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-loads                                          128  thrpt          14829.487                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.033                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-stores                                         128  thrpt           9295.367                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.092                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.315                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:instructions                                        128  thrpt          83953.639                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                              128  thrpt    5    720323.190 ±   11929.421  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.268                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt             26.770                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt           4741.701                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           2889.685                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.436                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.082                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              0.169                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt              9.486                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt             16.017                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:branch-misses                                128  thrpt              2.373                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:branches                                     128  thrpt           4265.891                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:cycles                                       128  thrpt           5328.651                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.321                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt           4555.095                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.004                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           2833.727                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.027                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.056                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:instructions                                 128  thrpt          19879.130                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                             128  thrpt    5    677914.149 ±   40881.519  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.231                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             19.916                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           2768.197                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           1941.561                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.189                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.038                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.131                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt             10.480                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt             14.124                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              2.140                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branches                                    128  thrpt           7557.806                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:cycles                                      128  thrpt           5546.334                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.326                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           2739.336                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.005                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           1927.692                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.010                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.039                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:instructions                                128  thrpt          24059.239                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    791828.089 ±   11351.663  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.204                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              0.822                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           2699.723                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           1736.228                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.396                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.042                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.158                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.001                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.051                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              1.091                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           7362.630                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           4796.195                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.010                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           2703.303                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.001                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           1742.726                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.001                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.007                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          23473.869                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                  128  thrpt    5    419868.902 ±    6582.915  ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:CPI                                              128  thrpt              0.256                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt             69.338                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt           6948.884                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt           4275.069                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt              0.532                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              0.064                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-loads                                        128  thrpt              0.428                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             15.970                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-stores                                       128  thrpt             31.947                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:branch-misses                                    128  thrpt              4.009                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:branches                                         128  thrpt           9036.751                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:cycles                                           128  thrpt           9072.800                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              0.536                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-loads                                       128  thrpt           7093.767                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.007                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-stores                                      128  thrpt           4370.306                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.045                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              0.056                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:instructions                                     128  thrpt          35488.122                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                 128  thrpt    5     10718.409 ±     282.684  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:CPI                                             128  thrpt              0.329                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt           4166.285                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-loads                                 128  thrpt         308873.767                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-stores                                128  thrpt         161048.090                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-icache-load-misses                           128  thrpt           6178.545                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-load-misses                                 128  thrpt             14.760                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-loads                                       128  thrpt            179.993                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-store-misses                                128  thrpt            108.522                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-stores                                      128  thrpt            709.279                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:branch-misses                                   128  thrpt            394.384                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:branches                                        128  thrpt         230713.205                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:cycles                                          128  thrpt         373633.890                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-load-misses                                128  thrpt             11.886                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-loads                                      128  thrpt         302991.264                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-store-misses                               128  thrpt              1.162                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-stores                                     128  thrpt         154446.617                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-load-misses                                128  thrpt              9.210                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-loads                                      128  thrpt             39.872                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:instructions                                    128  thrpt        1134668.833                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                          128  thrpt    5     10584.454 ±     658.211  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:CPI                                      128  thrpt              0.337                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt           3628.496                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt         300648.148                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt         154833.827                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt            715.388                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt              6.515                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-loads                                128  thrpt            114.533                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt             97.208                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-stores                               128  thrpt            563.769                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:branch-misses                            128  thrpt            367.784                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:branches                                 128  thrpt         208154.455                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:cycles                                   128  thrpt         355250.269                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt              7.355                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-loads                               128  thrpt         299809.374                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt              0.897                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-stores                              128  thrpt         152000.128                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt              7.363                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-loads                               128  thrpt             44.076                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:instructions                             128  thrpt        1053714.880                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                         128  thrpt    5    273298.911 ±    1586.581  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.253                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt            169.034                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt           8315.547                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt           6264.792                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              1.487                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.124                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-loads                               128  thrpt              0.747                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt              3.794                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-stores                              128  thrpt             22.465                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branch-misses                           128  thrpt              9.939                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branches                                128  thrpt          14004.759                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:cycles                                  128  thrpt          14110.221                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              0.484                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt           8306.571                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.019                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt           6132.317                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.096                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.055                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:instructions                            128  thrpt          55748.843                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                              128  thrpt    5      8571.792 ±     190.177  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:CPI                                          128  thrpt              0.335                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt           5810.359                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt         374081.022                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt         214554.002                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt           4694.209                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-load-misses                              128  thrpt              3.100                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-loads                                    128  thrpt            241.938                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-store-misses                             128  thrpt            127.195                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-stores                                   128  thrpt            810.766                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:branch-misses                                128  thrpt            457.845                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:branches                                     128  thrpt         249621.468                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:cycles                                       128  thrpt         446020.780                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt            128.049                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-loads                                   128  thrpt         386614.078                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt              0.433                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-stores                                  128  thrpt         214107.348                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt              2.709                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-loads                                   128  thrpt              6.361                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:instructions                                 128  thrpt        1332018.577                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                128  thrpt    5     24028.654 ±    1031.326  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:CPI                                            128  thrpt              0.302                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt           2269.786                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-loads                                128  thrpt         122352.830                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-stores                               128  thrpt          60637.185                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt             10.673                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-load-misses                                128  thrpt              1.381                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-loads                                      128  thrpt             15.953                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-store-misses                               128  thrpt            194.737                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-stores                                     128  thrpt            420.393                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:branch-misses                                  128  thrpt            325.742                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:branches                                       128  thrpt         130862.030                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:cycles                                         128  thrpt         160415.063                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-load-misses                               128  thrpt             48.993                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-loads                                     128  thrpt         123334.777                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              1.438                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-stores                                    128  thrpt          60036.237                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              1.568                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-loads                                     128  thrpt              3.925                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:instructions                                   128  thrpt         531754.356                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                         128  thrpt    5     29265.425 ±    2972.063  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.312                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt           1363.378                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt         103581.144                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt          48813.052                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt              6.012                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt              0.789                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-loads                               128  thrpt              8.860                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt             78.988                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-stores                              128  thrpt            197.480                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branch-misses                           128  thrpt            306.789                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branches                                128  thrpt          90171.665                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:cycles                                  128  thrpt         128948.999                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt             68.198                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt         104993.048                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.120                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt          48405.202                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              0.880                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt              1.206                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:instructions                            128  thrpt         413311.086                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                        128  thrpt    5    392339.458 ±    8304.026  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.277                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt             49.336                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt           8073.612                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt           7594.353                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              1.352                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.046                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              0.467                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt             35.322                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt             46.499                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              2.513                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branches                               128  thrpt           5721.755                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:cycles                                 128  thrpt           9556.748                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              0.744                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt           7941.162                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.014                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt           7350.839                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.062                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.193                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:instructions                           128  thrpt          34540.350                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    440854.822 ±    2175.667  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.267                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt              4.628                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt           7816.390                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt           6998.200                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.587                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.028                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.128                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.012                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.027                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              1.283                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt           5207.940                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt           8702.132                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.037                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt           7823.781                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt              0.005                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt           6999.178                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.016                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.066                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt          32594.071                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                             128  thrpt    5     27727.989 ±    2252.934  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:CPI                                         128  thrpt              0.306                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt           2021.422                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt         116134.433                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt          52097.554                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt             17.028                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-load-misses                             128  thrpt              1.052                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-loads                                   128  thrpt             10.467                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-store-misses                            128  thrpt             82.140                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-stores                                  128  thrpt            270.563                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:branch-misses                               128  thrpt            300.555                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:branches                                    128  thrpt          97397.644                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:cycles                                      128  thrpt         137887.731                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt             83.053                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-loads                                  128  thrpt         114614.300                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.284                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-stores                                 128  thrpt          49946.888                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              0.766                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-loads                                  128  thrpt              2.557                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:instructions                                128  thrpt         450833.956                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce                                                     128  thrpt    5     31850.373 ±    2124.764  ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:CPI                                                 128  thrpt              0.307                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-load-misses                               128  thrpt           1672.175                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-loads                                     128  thrpt          99811.220                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-stores                                    128  thrpt          52380.129                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-icache-load-misses                               128  thrpt             76.337                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-load-misses                                     128  thrpt              0.892                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-loads                                           128  thrpt             12.202                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-store-misses                                    128  thrpt             59.431                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-stores                                          128  thrpt            246.087                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:branch-misses                                       128  thrpt             57.038                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:branches                                            128  thrpt          86475.425                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:cycles                                              128  thrpt         119184.405                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-load-misses                                    128  thrpt              2.276                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-loads                                          128  thrpt         100528.028                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-store-misses                                   128  thrpt              0.132                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-stores                                         128  thrpt          51642.256                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:iTLB-load-misses                                    128  thrpt              0.814                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:iTLB-loads                                          128  thrpt              0.764                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:instructions                                        128  thrpt         387728.495                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                              128  thrpt    5     33523.532 ±    4074.806  ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:CPI                                          128  thrpt              0.318                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-load-misses                        128  thrpt           1416.722                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-loads                              128  thrpt          92921.623                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-stores                             128  thrpt          51171.150                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-icache-load-misses                        128  thrpt            120.166                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-load-misses                              128  thrpt              1.538                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-loads                                    128  thrpt             12.709                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-store-misses                             128  thrpt             12.620                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-stores                                   128  thrpt            173.342                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:branch-misses                                128  thrpt             48.331                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:branches                                     128  thrpt          75828.914                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:cycles                                       128  thrpt         113016.497                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-load-misses                             128  thrpt              1.287                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-loads                                   128  thrpt          94797.192                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-store-misses                            128  thrpt              0.163                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-stores                                  128  thrpt          50456.737                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-load-misses                             128  thrpt              0.519                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-loads                                   128  thrpt              1.758                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:instructions                                 128  thrpt         355789.409                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                             128  thrpt    5    464336.078 ±   34418.690  ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:CPI                                         128  thrpt              0.233                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-load-misses                       128  thrpt             68.456                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-loads                             128  thrpt           5730.869                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-stores                            128  thrpt           3196.543                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-icache-load-misses                       128  thrpt              0.603                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-load-misses                             128  thrpt              0.088                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-loads                                   128  thrpt              0.430                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-store-misses                            128  thrpt              2.577                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-stores                                  128  thrpt             11.878                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:branch-misses                               128  thrpt             10.311                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:branches                                    128  thrpt           8879.732                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:cycles                                      128  thrpt           8247.905                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-load-misses                            128  thrpt              0.352                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-loads                                  128  thrpt           5730.860                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-store-misses                           128  thrpt              0.010                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-stores                                 128  thrpt           3122.274                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-load-misses                            128  thrpt              0.026                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-loads                                  128  thrpt              0.027                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:instructions                                128  thrpt          35404.983                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                  128  thrpt    5     18010.812 ±    1578.133  ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:CPI                                              128  thrpt              0.341                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-load-misses                            128  thrpt           3427.023                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-loads                                  128  thrpt         172339.031                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-stores                                 128  thrpt          97690.500                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-icache-load-misses                            128  thrpt            546.666                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-load-misses                                  128  thrpt              3.823                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-loads                                        128  thrpt             93.288                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-store-misses                                 128  thrpt             33.483                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-stores                                       128  thrpt            276.496                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:branch-misses                                    128  thrpt            115.787                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:branches                                         128  thrpt         126408.472                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:cycles                                           128  thrpt         210644.898                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-load-misses                                 128  thrpt              3.659                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-loads                                       128  thrpt         171731.316                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-store-misses                                128  thrpt              0.356                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-stores                                      128  thrpt          96209.109                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-load-misses                                 128  thrpt              2.631                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-loads                                       128  thrpt             13.934                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:instructions                                     128  thrpt         618324.580                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                    128  thrpt    5     52567.367 ±    2768.449  ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:CPI                                                128  thrpt              0.280                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-load-misses                              128  thrpt           1345.705                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-loads                                    128  thrpt          54996.829                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-stores                                   128  thrpt          31409.689                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-icache-load-misses                              128  thrpt             11.826                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-load-misses                                    128  thrpt              1.034                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-loads                                          128  thrpt              6.256                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-store-misses                                   128  thrpt            130.179                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-stores                                         128  thrpt            224.455                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:branch-misses                                      128  thrpt             37.614                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:branches                                           128  thrpt          62947.577                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:cycles                                             128  thrpt          72135.957                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-load-misses                                   128  thrpt              5.662                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-loads                                         128  thrpt          56692.470                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-store-misses                                  128  thrpt              0.231                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-stores                                        128  thrpt          31380.271                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:iTLB-load-misses                                   128  thrpt              0.293                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:iTLB-loads                                         128  thrpt              0.373                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:instructions                                       128  thrpt         257645.227                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                             128  thrpt    5    131534.993 ±    1159.430  ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:CPI                                         128  thrpt              0.261                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-load-misses                       128  thrpt            278.753                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-loads                             128  thrpt          22187.180                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-stores                            128  thrpt          13400.529                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-icache-load-misses                       128  thrpt              1.234                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-load-misses                             128  thrpt              0.157                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-loads                                   128  thrpt              1.674                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-store-misses                            128  thrpt             16.856                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-stores                                  128  thrpt             41.289                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:branch-misses                               128  thrpt             16.123                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:branches                                    128  thrpt          23836.327                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:cycles                                      128  thrpt          28816.992                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-load-misses                            128  thrpt              0.520                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-loads                                  128  thrpt          22710.945                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-store-misses                           128  thrpt              0.028                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-stores                                 128  thrpt          13396.537                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-load-misses                            128  thrpt              0.165                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-loads                                  128  thrpt              0.175                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:instructions                                128  thrpt         110234.399                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                            128  thrpt    5   1172636.021 ±   36837.935  ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:CPI                                        128  thrpt              0.228                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-load-misses                      128  thrpt             27.786                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-loads                            128  thrpt           1433.881                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-stores                           128  thrpt           2269.471                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-icache-load-misses                      128  thrpt              0.215                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-load-misses                            128  thrpt              0.072                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-loads                                  128  thrpt              0.199                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-store-misses                           128  thrpt             19.957                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-stores                                 128  thrpt             22.519                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:branch-misses                              128  thrpt              2.178                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:branches                                   128  thrpt           3128.970                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:cycles                                     128  thrpt           3286.196                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-load-misses                           128  thrpt              0.437                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-loads                                 128  thrpt           1391.211                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-store-misses                          128  thrpt              0.004                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-stores                                128  thrpt           2199.696                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-load-misses                           128  thrpt              0.012                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-loads                                 128  thrpt              0.025                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:instructions                               128  thrpt          14429.884                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5   1377131.958 ±    9173.008  ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:CPI                                128  thrpt              0.207                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses              128  thrpt              0.719                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                    128  thrpt           1364.164                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                   128  thrpt           1985.976                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses              128  thrpt              0.078                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                    128  thrpt              0.011                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                          128  thrpt              0.036                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                   128  thrpt              0.001                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                         128  thrpt              0.008                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branch-misses                      128  thrpt              1.113                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branches                           128  thrpt           2867.362                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:cycles                             128  thrpt           2769.171                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                   128  thrpt              0.014                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                         128  thrpt           1363.647                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                  128  thrpt              0.002                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                        128  thrpt           1975.872                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                   128  thrpt              0.002                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                         128  thrpt              0.011                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:instructions                       128  thrpt          13373.076                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                 128  thrpt    5     67856.498 ±    4865.060  ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:CPI                                             128  thrpt              0.268                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-load-misses                           128  thrpt           1230.720                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-loads                                 128  thrpt          51943.392                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-stores                                128  thrpt          27568.116                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-icache-load-misses                           128  thrpt              3.958                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-load-misses                                 128  thrpt              1.012                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-loads                                       128  thrpt              4.710                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-store-misses                                128  thrpt             28.273                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-stores                                      128  thrpt             93.971                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:branch-misses                                   128  thrpt             19.190                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:branches                                        128  thrpt          43874.313                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:cycles                                          128  thrpt          55795.577                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-load-misses                                128  thrpt              2.481                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-loads                                      128  thrpt          52867.455                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-store-misses                               128  thrpt              0.072                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-stores                                     128  thrpt          27160.628                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-load-misses                                128  thrpt              0.228                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-loads                                      128  thrpt              0.670                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:instructions                                    128  thrpt         208240.213                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce                                                     128  thrpt    5     16669.198 ±     640.692  ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:CPI                                                 128  thrpt              0.338                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-load-misses                               128  thrpt           2701.847                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-loads                                     128  thrpt         186129.774                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-stores                                    128  thrpt         100185.469                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-icache-load-misses                               128  thrpt           1998.050                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-load-misses                                     128  thrpt              4.755                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-loads                                           128  thrpt             53.196                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-store-misses                                    128  thrpt             62.933                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-stores                                          128  thrpt            359.645                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:branch-misses                                       128  thrpt             76.004                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:branches                                            128  thrpt         141775.503                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:cycles                                              128  thrpt         233276.388                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-load-misses                                    128  thrpt              3.949                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-loads                                          128  thrpt         189784.716                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-store-misses                                   128  thrpt              0.303                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-stores                                         128  thrpt          99302.946                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:iTLB-load-misses                                    128  thrpt              2.066                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:iTLB-loads                                          128  thrpt             10.664                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:instructions                                        128  thrpt         689901.948                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                              128  thrpt    5     17808.845 ±    1988.278  ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:CPI                                          128  thrpt              0.340                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-load-misses                        128  thrpt           2559.048                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-loads                              128  thrpt         181436.823                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-stores                             128  thrpt          99641.652                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-icache-load-misses                        128  thrpt            294.113                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-load-misses                              128  thrpt              5.233                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-loads                                    128  thrpt             55.766                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-store-misses                             128  thrpt             25.666                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-stores                                   128  thrpt            253.108                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:branch-misses                                128  thrpt             57.078                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:branches                                     128  thrpt         128268.479                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:cycles                                       128  thrpt         216006.714                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-load-misses                             128  thrpt              4.990                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-loads                                   128  thrpt         178718.813                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-store-misses                            128  thrpt              0.491                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-stores                                  128  thrpt          97098.550                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-load-misses                             128  thrpt              3.845                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-loads                                   128  thrpt             16.514                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:instructions                                 128  thrpt         635829.747                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                             128  thrpt    5    607748.818 ±   28805.105  ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:CPI                                         128  thrpt              0.232                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                       128  thrpt             66.863                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-loads                             128  thrpt           4725.175                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-stores                            128  thrpt           2569.677                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-icache-load-misses                       128  thrpt              0.585                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-load-misses                             128  thrpt              0.105                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-loads                                   128  thrpt              0.373                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-store-misses                            128  thrpt              2.309                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-stores                                  128  thrpt             10.276                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:branch-misses                               128  thrpt              3.628                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:branches                                    128  thrpt           6755.390                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:cycles                                      128  thrpt           6283.821                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-load-misses                            128  thrpt              0.335                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-loads                                  128  thrpt           4584.168                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-store-misses                           128  thrpt              0.008                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-stores                                 128  thrpt           2468.849                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-load-misses                            128  thrpt              0.022                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-loads                                  128  thrpt              0.079                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:instructions                                128  thrpt          27131.415                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                  128  thrpt    5     12472.193 ±     136.096  ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:CPI                                              128  thrpt              0.347                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-load-misses                            128  thrpt           4529.463                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-loads                                  128  thrpt         252510.678                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-stores                                 128  thrpt         147139.683                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-icache-load-misses                            128  thrpt           2230.070                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-load-misses                                  128  thrpt             10.112                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-loads                                        128  thrpt            194.764                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-store-misses                                 128  thrpt            139.293                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-stores                                       128  thrpt            646.866                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:branch-misses                                    128  thrpt            167.730                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:branches                                         128  thrpt         172510.694                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:cycles                                           128  thrpt         314815.886                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-load-misses                                 128  thrpt              5.833                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-loads                                       128  thrpt         261874.167                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-store-misses                                128  thrpt              0.633                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-stores                                      128  thrpt         145951.317                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-load-misses                                 128  thrpt              4.490                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-loads                                       128  thrpt             30.720                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:instructions                                     128  thrpt         907189.111                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                    128  thrpt    5     42396.554 ±    2012.378  ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:CPI                                                128  thrpt              0.295                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-load-misses                              128  thrpt           1595.630                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-loads                                    128  thrpt          68967.971                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-stores                                   128  thrpt          37648.794                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-icache-load-misses                              128  thrpt             10.952                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-load-misses                                    128  thrpt              0.846                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-loads                                          128  thrpt              5.574                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-store-misses                                   128  thrpt            116.979                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-stores                                         128  thrpt            253.938                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:branch-misses                                      128  thrpt            127.737                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:branches                                           128  thrpt          69643.649                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:cycles                                             128  thrpt          87111.526                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-load-misses                                   128  thrpt              5.375                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-loads                                         128  thrpt          68668.618                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-store-misses                                  128  thrpt              0.112                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-stores                                        128  thrpt          36795.082                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:iTLB-load-misses                                   128  thrpt              0.642                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:iTLB-loads                                         128  thrpt              1.449                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:instructions                                       128  thrpt         294884.039                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                             128  thrpt    5     55673.747 ±    1253.801  ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:CPI                                         128  thrpt              0.315                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                       128  thrpt            879.215                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-loads                             128  thrpt          51501.810                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-stores                            128  thrpt          27839.742                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-icache-load-misses                       128  thrpt             11.442                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-load-misses                             128  thrpt              0.869                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-loads                                   128  thrpt              5.783                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-store-misses                            128  thrpt             22.733                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-stores                                  128  thrpt            101.967                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:branch-misses                               128  thrpt            111.181                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:branches                                    128  thrpt          46899.860                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:cycles                                      128  thrpt          68755.160                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-load-misses                            128  thrpt              2.571                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-loads                                  128  thrpt          52712.805                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-store-misses                           128  thrpt              0.064                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-stores                                 128  thrpt          27907.243                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-load-misses                            128  thrpt              0.130                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-loads                                  128  thrpt              0.190                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:instructions                                128  thrpt         218015.321                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                            128  thrpt    5   1327713.641 ±  105595.438  ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:CPI                                        128  thrpt              0.232                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                      128  thrpt             23.768                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-loads                            128  thrpt           1423.166                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-stores                           128  thrpt           1967.879                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                      128  thrpt              0.082                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-load-misses                            128  thrpt              0.036                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-loads                                  128  thrpt              0.166                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-store-misses                           128  thrpt             16.749                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-stores                                 128  thrpt             18.743                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:branch-misses                              128  thrpt              2.201                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:branches                                   128  thrpt           2836.294                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:cycles                                     128  thrpt           2850.388                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-load-misses                           128  thrpt              0.361                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-loads                                 128  thrpt           1414.718                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-store-misses                          128  thrpt              0.002                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-stores                                128  thrpt           1930.099                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-load-misses                           128  thrpt              0.010                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-loads                                 128  thrpt              0.009                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:instructions                               128  thrpt          12288.443                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5   1564797.309 ±   27336.492  ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:CPI                                128  thrpt              0.212                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses              128  thrpt              0.897                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                    128  thrpt           1365.503                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                   128  thrpt           1717.104                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses              128  thrpt              0.455                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                    128  thrpt              0.028                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                          128  thrpt              0.144                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                   128  thrpt              0.001                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                         128  thrpt              0.008                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                      128  thrpt              1.057                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branches                           128  thrpt           2609.109                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:cycles                             128  thrpt           2432.176                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                   128  thrpt              0.012                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                         128  thrpt           1357.998                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                  128  thrpt              0.001                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                        128  thrpt           1725.063                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                   128  thrpt              0.003                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                         128  thrpt              0.016                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:instructions                       128  thrpt          11445.763                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                 128  thrpt    5      3692.210 ±     325.295  ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:CPI                                             128  thrpt              0.412                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-load-misses                           128  thrpt          51964.233                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-loads                                 128  thrpt         866444.061                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-stores                                128  thrpt         372877.552                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-icache-load-misses                           128  thrpt           2007.437                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-load-misses                                 128  thrpt             30.271                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-loads                                       128  thrpt            496.826                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-store-misses                                128  thrpt            213.868                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-stores                                      128  thrpt            621.492                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:branch-misses                                   128  thrpt           1180.821                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:branches                                        128  thrpt         452342.245                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:cycles                                          128  thrpt        1016788.906                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-load-misses                                128  thrpt            130.763                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-loads                                      128  thrpt         837689.866                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-store-misses                               128  thrpt              4.311                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-stores                                     128  thrpt         363299.026                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-load-misses                                128  thrpt             31.857                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-loads                                      128  thrpt             88.851                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:instructions                                    128  thrpt        2465509.212                 #/op
[info] ArrayOfLongsBenchmark.readCirce                                                          128  thrpt    5    124707.773 ±    1809.600  ops/s
[info] ArrayOfLongsBenchmark.readCirce:CPI                                                      128  thrpt              0.248                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            466.040                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          20751.960                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt          10235.953                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt              1.782                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              0.693                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-loads                                                128  thrpt              3.507                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-store-misses                                         128  thrpt             50.255                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-stores                                               128  thrpt            110.648                 #/op
[info] ArrayOfLongsBenchmark.readCirce:branch-misses                                            128  thrpt             19.513                 #/op
[info] ArrayOfLongsBenchmark.readCirce:branches                                                 128  thrpt          30085.426                 #/op
[info] ArrayOfLongsBenchmark.readCirce:cycles                                                   128  thrpt          30746.349                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              1.333                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-loads                                               128  thrpt          20844.693                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.036                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-stores                                              128  thrpt          10147.993                 #/op
[info] ArrayOfLongsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.282                 #/op
[info] ArrayOfLongsBenchmark.readCirce:iTLB-loads                                               128  thrpt              0.309                 #/op
[info] ArrayOfLongsBenchmark.readCirce:instructions                                             128  thrpt         124032.890                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                    128  thrpt    5    381429.328 ±    8495.280  ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:CPI                                                128  thrpt              0.213                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-load-misses                              128  thrpt             54.186                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-loads                                    128  thrpt           5325.108                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-stores                                   128  thrpt           3095.618                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-icache-load-misses                              128  thrpt              0.391                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-load-misses                                    128  thrpt              0.106                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-loads                                          128  thrpt              0.377                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-store-misses                                   128  thrpt             14.304                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-stores                                         128  thrpt             27.295                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:branch-misses                                      128  thrpt              7.165                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:branches                                           128  thrpt          11778.319                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:cycles                                             128  thrpt          10082.849                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-load-misses                                   128  thrpt              0.616                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-loads                                         128  thrpt           5410.326                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-store-misses                                  128  thrpt              0.005                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-stores                                        128  thrpt           3094.150                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:iTLB-load-misses                                   128  thrpt              0.041                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:iTLB-loads                                         128  thrpt              0.110                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:instructions                                       128  thrpt          47444.188                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala                                                   128  thrpt    5    243954.208 ±    1968.963  ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.239                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt             58.840                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          11104.906                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           8240.477                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              0.830                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.112                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              0.551                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt             11.481                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             23.227                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             10.527                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:branches                                          128  thrpt          13688.293                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:cycles                                            128  thrpt          15053.852                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.723                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          10948.388                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.019                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           8011.101                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.009                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.167                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:instructions                                      128  thrpt          63110.100                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                  128  thrpt    5    508955.335 ±   32443.641  ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.219                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             32.903                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           3408.087                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           1967.300                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.240                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.035                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.182                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              7.885                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             16.984                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              6.829                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:branches                                         128  thrpt           8150.552                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:cycles                                           128  thrpt           7389.684                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.424                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           3373.302                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.008                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           1934.198                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.023                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.037                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:instructions                                     128  thrpt          33748.604                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson                                                       128  thrpt    5     73557.851 ±    5167.246  ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.303                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1681.463                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          41059.405                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          32081.406                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt             77.861                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              0.936                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-loads                                             128  thrpt              6.925                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             49.523                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            220.011                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:branch-misses                                         128  thrpt             51.884                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:branches                                              128  thrpt          32749.487                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:cycles                                                128  thrpt          50664.860                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              3.023                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          41503.419                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.089                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          31366.999                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.321                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.997                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:instructions                                          128  thrpt         167036.821                 #/op
[info] ArrayOfLongsBenchmark.writeCirce                                                         128  thrpt    5    133322.590 ±    2910.936  ops/s
[info] ArrayOfLongsBenchmark.writeCirce:CPI                                                     128  thrpt              0.354                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            232.292                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt          13454.297                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           8617.045                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              4.699                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.753                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-loads                                               128  thrpt              2.646                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt             95.341                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-stores                                              128  thrpt            139.332                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:branch-misses                                           128  thrpt             18.573                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:branches                                                128  thrpt          17074.030                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:cycles                                                  128  thrpt          28899.541                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              2.355                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-loads                                              128  thrpt          12986.890                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.026                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-stores                                             128  thrpt           8391.264                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.034                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.070                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:instructions                                            128  thrpt          81567.232                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                   128  thrpt    5    206568.443 ±    1534.928  ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:CPI                                               128  thrpt              0.852                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-load-misses                             128  thrpt             24.825                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-loads                                   128  thrpt           3557.222                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-stores                                  128  thrpt           3670.577                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-icache-load-misses                             128  thrpt              0.820                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-load-misses                                   128  thrpt              0.304                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-loads                                         128  thrpt              1.004                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-store-misses                                  128  thrpt             11.391                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-stores                                        128  thrpt             15.209                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:branch-misses                                     128  thrpt              3.340                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:branches                                          128  thrpt           3306.475                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:cycles                                            128  thrpt          18702.123                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-load-misses                                  128  thrpt              0.432                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-loads                                        128  thrpt           3509.740                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-store-misses                                 128  thrpt              0.010                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-stores                                       128  thrpt           3685.033                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-load-misses                                  128  thrpt              0.027                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-loads                                        128  thrpt              0.075                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:instructions                                      128  thrpt          21947.963                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                  128  thrpt    5    418460.113 ±   13789.110  ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.399                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             27.263                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           3614.091                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           2799.834                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.362                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.110                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.321                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              9.732                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt             16.648                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              5.557                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:branches                                         128  thrpt           4435.501                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:cycles                                           128  thrpt           8997.063                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.311                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           3558.800                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.004                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           2749.146                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.006                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.040                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:instructions                                     128  thrpt          22533.480                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                 128  thrpt    5    458919.552 ±    4118.184  ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.348                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             21.107                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt           3592.547                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           2805.411                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.462                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.097                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.328                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt             11.500                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             14.637                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              6.695                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:branches                                        128  thrpt           4557.037                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           8274.127                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.322                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt           3615.298                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.142                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           2826.142                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.031                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.080                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:instructions                                    128  thrpt          23773.586                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    495260.897 ±    2398.021  ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.335                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              1.474                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt           3559.903                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           2620.686                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.718                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.056                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.225                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.001                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.014                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              5.783                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           4320.783                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           7617.342                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt           3551.504                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.002                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           2605.365                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.044                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.061                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt          22745.868                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson                                                      128  thrpt    5     28974.683 ±     817.237  ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.366                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt           1801.110                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          62736.956                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt          44866.732                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt             21.200                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              1.330                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-loads                                            128  thrpt             18.410                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             22.496                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-stores                                           128  thrpt            187.431                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:branch-misses                                        128  thrpt            126.857                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:branches                                             128  thrpt          77635.640                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:cycles                                               128  thrpt         131492.329                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              2.850                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          63322.349                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.142                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt          44558.007                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.982                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              1.370                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:instructions                                         128  thrpt         359145.046                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                128  thrpt    5      8426.911 ±     412.568  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:CPI                                            128  thrpt              0.333                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-load-misses                          128  thrpt           5043.659                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-loads                                128  thrpt         367633.833                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-stores                               128  thrpt         181091.232                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-icache-load-misses                          128  thrpt           8441.276                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-load-misses                                128  thrpt             10.719                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-loads                                      128  thrpt            226.356                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-store-misses                               128  thrpt            224.325                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-stores                                     128  thrpt            865.405                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:branch-misses                                  128  thrpt            237.439                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:branches                                       128  thrpt         288836.586                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:cycles                                         128  thrpt         464052.170                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-load-misses                               128  thrpt              8.637                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-loads                                     128  thrpt         378499.333                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-store-misses                              128  thrpt              1.141                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-stores                                    128  thrpt         183919.726                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-load-misses                               128  thrpt              4.822                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-loads                                     128  thrpt             25.543                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:instructions                                   128  thrpt        1392309.795                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                         128  thrpt    5      8421.645 ±     111.652  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:CPI                                     128  thrpt              0.345                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses                   128  thrpt           4732.071                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-loads                         128  thrpt         355131.675                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-stores                        128  thrpt         173994.087                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-icache-load-misses                   128  thrpt           9866.024                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-load-misses                         128  thrpt             12.479                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-loads                               128  thrpt            171.132                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-store-misses                        128  thrpt             89.801                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-stores                              128  thrpt            531.106                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branch-misses                           128  thrpt            441.021                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branches                                128  thrpt         271179.033                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:cycles                                  128  thrpt         464791.387                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-load-misses                        128  thrpt              6.470                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-loads                              128  thrpt         365512.879                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-store-misses                       128  thrpt              0.817                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-stores                             128  thrpt         178336.666                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-load-misses                        128  thrpt              8.065                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-loads                              128  thrpt            118.098                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:instructions                            128  thrpt        1348418.166                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                        128  thrpt    5    185124.835 ±    5186.589  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:CPI                                    128  thrpt              0.255                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                  128  thrpt            258.527                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-loads                        128  thrpt          12877.633                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-stores                       128  thrpt           9490.440                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses                  128  thrpt              1.747                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-load-misses                        128  thrpt              0.221                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-loads                              128  thrpt              1.394                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-store-misses                       128  thrpt              3.696                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-stores                             128  thrpt             31.990                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branch-misses                          128  thrpt             11.772                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branches                               128  thrpt          19471.306                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:cycles                                 128  thrpt          20809.035                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-load-misses                       128  thrpt              0.674                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-loads                             128  thrpt          12378.895                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-store-misses                      128  thrpt              0.025                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-stores                            128  thrpt           9304.753                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-load-misses                       128  thrpt              0.041                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-loads                             128  thrpt              0.096                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:instructions                           128  thrpt          81760.101                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                             128  thrpt    5      7394.416 ±     513.472  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:CPI                                         128  thrpt              0.351                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-load-misses                       128  thrpt           6291.871                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-loads                             128  thrpt         395012.988                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-stores                            128  thrpt         195420.039                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-icache-load-misses                       128  thrpt          15200.127                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-load-misses                             128  thrpt             12.037                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-loads                                   128  thrpt            320.753                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-store-misses                            128  thrpt            175.168                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-stores                                  128  thrpt            774.459                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:branch-misses                               128  thrpt            443.667                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:branches                                    128  thrpt         288589.448                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:cycles                                      128  thrpt         500976.678                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-load-misses                            128  thrpt              5.159                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-loads                                  128  thrpt         399992.119                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-store-misses                           128  thrpt              0.795                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-stores                                 128  thrpt         198437.368                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-load-misses                            128  thrpt              5.126                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-loads                                  128  thrpt             39.232                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:instructions                                128  thrpt        1426414.760                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                               128  thrpt    5     19758.455 ±    1099.163  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:CPI                                           128  thrpt              0.313                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-load-misses                         128  thrpt           2579.959                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-loads                               128  thrpt         134093.055                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-stores                              128  thrpt          64826.720                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-icache-load-misses                         128  thrpt             66.937                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-load-misses                               128  thrpt              1.464                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-loads                                     128  thrpt             17.461                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-store-misses                              128  thrpt            231.326                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-stores                                    128  thrpt            484.614                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:branch-misses                                 128  thrpt            366.918                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:branches                                      128  thrpt         154826.808                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:cycles                                        128  thrpt         193771.747                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-load-misses                              128  thrpt             72.842                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-loads                                    128  thrpt         137886.418                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-store-misses                             128  thrpt              2.368                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-stores                                   128  thrpt          64848.174                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-load-misses                              128  thrpt              2.099                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-loads                                    128  thrpt              7.630                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:instructions                                  128  thrpt         618166.374                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                        128  thrpt    5     24241.458 ±    1146.884  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:CPI                                    128  thrpt              0.312                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                  128  thrpt           1543.621                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-loads                        128  thrpt         123007.833                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-stores                       128  thrpt          54265.958                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses                  128  thrpt             11.060                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-load-misses                        128  thrpt              0.965                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-loads                              128  thrpt             13.707                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-store-misses                       128  thrpt            106.855                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-stores                             128  thrpt            222.498                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branch-misses                          128  thrpt            293.752                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branches                               128  thrpt         110925.119                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:cycles                                 128  thrpt         157154.753                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-load-misses                       128  thrpt             45.768                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-loads                             128  thrpt         123940.516                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-store-misses                      128  thrpt              0.355                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-stores                            128  thrpt          52717.336                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-load-misses                       128  thrpt              0.407                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-loads                             128  thrpt              1.864                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:instructions                           128  thrpt         503938.257                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                       128  thrpt    5    318539.001 ±   95898.558  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:CPI                                   128  thrpt              0.272                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                 128  thrpt             79.412                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads                       128  thrpt           9267.668                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores                      128  thrpt           9374.850                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                 128  thrpt              1.188                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-load-misses                       128  thrpt              0.179                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-loads                             128  thrpt              0.681                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-store-misses                      128  thrpt             40.927                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-stores                            128  thrpt             59.047                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branch-misses                         128  thrpt              2.751                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branches                              128  thrpt           7100.290                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:cycles                                128  thrpt          11993.706                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses                      128  thrpt              0.967                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-loads                            128  thrpt           9056.296                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses                     128  thrpt              0.006                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-stores                           128  thrpt           9187.881                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses                      128  thrpt              0.031                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-loads                            128  thrpt              0.085                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:instructions                          128  thrpt          44094.680                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                               128  thrpt    5    361163.365 ±   10709.675  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI                           128  thrpt              0.250                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses         128  thrpt             49.331                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads               128  thrpt           9123.530                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores              128  thrpt           8784.928                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses         128  thrpt              0.317                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses               128  thrpt              0.094                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                     128  thrpt              0.338                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses              128  thrpt              0.027                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                    128  thrpt              0.030                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                 128  thrpt              1.271                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branches                      128  thrpt           6583.858                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles                        128  thrpt          10502.355                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses              128  thrpt              0.056                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                    128  thrpt           9074.610                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses             128  thrpt              0.005                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                   128  thrpt           8784.737                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses              128  thrpt              0.005                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                    128  thrpt              0.037                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions                  128  thrpt          41976.206                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                            128  thrpt    5     23263.604 ±    1531.445  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:CPI                                        128  thrpt              0.313                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-load-misses                      128  thrpt           2276.740                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-loads                            128  thrpt         130336.292                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-stores                           128  thrpt          58875.232                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-icache-load-misses                      128  thrpt             40.460                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-load-misses                            128  thrpt              2.667                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-loads                                  128  thrpt             19.616                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-store-misses                           128  thrpt             94.050                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-stores                                 128  thrpt            286.178                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:branch-misses                              128  thrpt            331.575                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:branches                                   128  thrpt         112839.938                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:cycles                                     128  thrpt         164489.654                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-load-misses                           128  thrpt             66.909                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-loads                                 128  thrpt         127696.210                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-store-misses                          128  thrpt              0.216                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-stores                                128  thrpt          57442.373                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-load-misses                           128  thrpt              0.805                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-loads                                 128  thrpt              1.964                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:instructions                               128  thrpt         524954.000                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                    128  thrpt    5     13412.455 ±     593.667  ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:CPI                                                128  thrpt              0.333                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt           3703.664                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-loads                                    128  thrpt         228164.909                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-stores                                   128  thrpt         114645.134                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-icache-load-misses                              128  thrpt            768.944                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-load-misses                                    128  thrpt             10.551                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-loads                                          128  thrpt            122.059                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-store-misses                                   128  thrpt             81.845                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-stores                                         128  thrpt            407.364                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:branch-misses                                      128  thrpt             84.099                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:branches                                           128  thrpt         182004.663                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:cycles                                             128  thrpt         285871.514                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-load-misses                                   128  thrpt              8.228                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-loads                                         128  thrpt         224405.629                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              0.547                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-stores                                        128  thrpt         112444.585                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:iTLB-load-misses                                   128  thrpt              2.709                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:iTLB-loads                                         128  thrpt             15.529                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:instructions                                       128  thrpt         859256.537                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                             128  thrpt    5     13250.946 ±    1131.861  ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:CPI                                         128  thrpt              0.351                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt           3313.232                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt         227096.803                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt         114089.908                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt           7962.501                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              9.606                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-loads                                   128  thrpt            145.575                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt             39.827                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-stores                                  128  thrpt            421.791                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:branch-misses                               128  thrpt            130.232                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:branches                                    128  thrpt         170754.849                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:cycles                                      128  thrpt         293503.689                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              7.967                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt         227133.157                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.825                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt         111833.397                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              6.565                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt             29.594                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:instructions                                128  thrpt         836272.211                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                            128  thrpt    5    268109.032 ±   12875.218  ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.264                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt            151.631                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt           9392.969                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt           5797.696                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              0.852                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.161                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              0.889                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              2.949                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt             19.263                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:branch-misses                              128  thrpt              6.721                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:branches                                   128  thrpt          12741.774                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:cycles                                     128  thrpt          14011.162                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              0.483                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt           9383.076                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.025                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt           5593.502                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.073                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.171                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:instructions                               128  thrpt          53069.922                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                 128  thrpt    5     12432.971 ±    1033.774  ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:CPI                                             128  thrpt              0.337                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt           4529.405                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt         243132.907                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt         130232.264                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt           1123.838                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt             17.837                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-loads                                       128  thrpt            204.509                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-store-misses                                128  thrpt             82.069                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-stores                                      128  thrpt            473.827                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:branch-misses                                   128  thrpt            118.143                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:branches                                        128  thrpt         182018.092                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:cycles                                          128  thrpt         303754.637                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              7.322                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-loads                                      128  thrpt         242220.117                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.391                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-stores                                     128  thrpt         130306.810                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              3.783                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-loads                                      128  thrpt             27.432                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:instructions                                    128  thrpt         900886.271                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                   128  thrpt    5     32849.246 ±    1837.571  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:CPI                                               128  thrpt              0.302                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt           1902.570                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt          84634.066                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt          45130.072                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt              7.729                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              1.364                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-loads                                         128  thrpt              7.988                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-store-misses                                  128  thrpt            166.929                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-stores                                        128  thrpt            307.448                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:branch-misses                                     128  thrpt            152.219                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:branches                                          128  thrpt          93917.657                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:cycles                                            128  thrpt         117328.498                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt              7.412                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-loads                                        128  thrpt          84100.521                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              0.680                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-stores                                       128  thrpt          43627.244                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.488                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-loads                                        128  thrpt              0.991                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:instructions                                      128  thrpt         388144.819                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                            128  thrpt    5     82458.727 ±    3594.384  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.288                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt            780.061                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt          32899.542                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt          22068.251                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt              2.432                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              1.167                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt              4.732                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt             60.859                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt            117.078                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:branch-misses                              128  thrpt            115.076                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:branches                                   128  thrpt          36961.255                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:cycles                                     128  thrpt          46239.390                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              3.065                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt          32831.905                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.080                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt          21925.573                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              0.273                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              0.213                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:instructions                               128  thrpt         160605.415                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    532838.535 ±   11548.760  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.252                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt             36.457                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt           5671.302                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt           5470.724                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt              1.181                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              0.246                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt              0.485                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt             26.676                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt             30.465                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branch-misses                             128  thrpt              2.138                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branches                                  128  thrpt           4796.676                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:cycles                                    128  thrpt           7120.728                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              0.557                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt           5576.263                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.004                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt           5445.318                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.028                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.058                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:instructions                              128  thrpt          28243.424                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    591432.952 ±    1537.073  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.239                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt              2.663                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt           5531.515                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt           5097.471                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt              0.547                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              0.014                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt              0.063                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt              0.010                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt              0.006                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt              1.162                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt           4419.265                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt           6366.166                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              0.017                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt           5534.535                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt              0.001                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt           5077.193                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.020                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              0.041                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt          26587.621                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                128  thrpt    5     74659.604 ±    4378.330  ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:CPI                                            128  thrpt              0.284                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt           1372.142                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt          37832.898                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt          26142.392                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt              6.372                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              2.517                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-loads                                      128  thrpt              5.484                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-store-misses                               128  thrpt             68.365                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-stores                                     128  thrpt            141.430                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:branch-misses                                  128  thrpt            118.734                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:branches                                       128  thrpt          39442.565                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:cycles                                         128  thrpt          51412.668                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt              2.521                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-loads                                     128  thrpt          37446.403                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.056                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-stores                                    128  thrpt          26271.909                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              0.195                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              0.726                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:instructions                                   128  thrpt         180780.441                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce                                                        128  thrpt    5     14762.148 ±     735.779  ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:CPI                                                    128  thrpt              0.315                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           2123.918                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-dcache-loads                                        128  thrpt         221372.920                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-dcache-stores                                       128  thrpt         105522.863                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt            354.702                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-load-misses                                        128  thrpt             11.875                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-loads                                              128  thrpt             67.991                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-store-misses                                       128  thrpt             68.144                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-stores                                             128  thrpt            284.085                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:branch-misses                                          128  thrpt            496.799                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:branches                                               128  thrpt         198356.868                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:cycles                                                 128  thrpt         270573.551                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-load-misses                                       128  thrpt             11.248                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-loads                                             128  thrpt         217621.532                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.692                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-stores                                            128  thrpt         103167.599                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              3.888                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:iTLB-loads                                             128  thrpt             35.556                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:instructions                                           128  thrpt         857795.957                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                 128  thrpt    5     15862.708 ±    1508.744  ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:CPI                                             128  thrpt              0.317                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt           1873.722                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt         211720.792                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          98275.581                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt            375.605                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              6.286                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-loads                                       128  thrpt             64.366                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              9.165                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-stores                                      128  thrpt            175.478                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:branch-misses                                   128  thrpt            334.190                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:branches                                        128  thrpt         176073.072                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:cycles                                          128  thrpt         248545.120                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              5.447                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt         210628.938                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.273                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          97977.840                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              3.005                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt             22.157                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:instructions                                    128  thrpt         783313.374                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                128  thrpt    5    122547.260 ±     768.571  ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.237                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt             69.838                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          11464.922                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt           2955.622                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              1.053                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.274                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              0.660                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              2.459                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             12.492                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:branch-misses                                  128  thrpt             54.081                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:branches                                       128  thrpt          29995.220                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:cycles                                         128  thrpt          30850.360                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.563                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          11342.749                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.425                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt           2934.866                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.066                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.266                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:instructions                                   128  thrpt         130411.786                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                     128  thrpt    5     13478.336 ±     258.651  ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:CPI                                                 128  thrpt              0.324                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           2973.578                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt         231204.596                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt         116880.513                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt            403.064                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              1.914                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-loads                                           128  thrpt             56.842                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             18.166                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-stores                                          128  thrpt            390.393                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:branch-misses                                       128  thrpt            425.991                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:branches                                            128  thrpt         189903.849                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:cycles                                              128  thrpt         275335.975                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              5.915                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-loads                                          128  thrpt         235073.376                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.634                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-stores                                         128  thrpt         113970.376                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              3.203                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:iTLB-loads                                          128  thrpt             18.099                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:instructions                                        128  thrpt         850456.657                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce                                                       128  thrpt    5     46818.128 ±     299.367  ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:CPI                                                   128  thrpt              0.282                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt           1304.341                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          39947.293                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt          27921.409                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt              9.327                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              1.814                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-loads                                             128  thrpt              7.760                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-store-misses                                      128  thrpt            202.154                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-stores                                            128  thrpt            354.543                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:branch-misses                                         128  thrpt            157.365                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:branches                                              128  thrpt          83482.660                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:cycles                                                128  thrpt          82346.559                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              4.446                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-loads                                            128  thrpt          39852.240                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              1.554                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-stores                                           128  thrpt          27390.199                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.416                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:iTLB-loads                                            128  thrpt              0.941                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:instructions                                          128  thrpt         292467.032                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                128  thrpt    5     76532.263 ±    1797.567  ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.278                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt            687.123                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt          28291.834                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt          18759.243                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt              2.289                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.572                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              3.761                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             75.375                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt            141.885                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:branch-misses                                  128  thrpt             59.604                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:branches                                       128  thrpt          43236.907                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:cycles                                         128  thrpt          50080.302                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              2.839                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt          27753.207                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.087                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt          17909.460                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.358                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              0.665                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:instructions                                   128  thrpt         180049.413                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                               128  thrpt    5    295411.684 ±    1086.309  ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.243                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt             52.141                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt           8514.421                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt           6028.630                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt              1.356                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.043                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              0.301                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             30.880                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt             42.164                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt              9.193                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:branches                                      128  thrpt          11137.500                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:cycles                                        128  thrpt          13030.371                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              0.830                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt           8407.165                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.011                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt           5913.668                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.035                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.097                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:instructions                                  128  thrpt          53658.135                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    361679.564 ±    1023.353  ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.225                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt              2.629                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt           5149.522                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt           5304.619                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              0.262                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              0.053                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              0.172                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              0.009                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt              0.041                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt             10.064                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt          10432.218                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt          10413.329                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.019                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt           5141.063                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.001                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt           5269.636                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.029                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.070                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt          46362.251                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                    128  thrpt    5     65111.750 ±    4500.115  ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:CPI                                                128  thrpt              0.292                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-load-misses                              128  thrpt           1132.959                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-loads                                    128  thrpt          34278.499                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-stores                                   128  thrpt          21876.812                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-icache-load-misses                              128  thrpt              4.439                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-load-misses                                    128  thrpt              0.664                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-loads                                          128  thrpt              3.541                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-store-misses                                   128  thrpt             81.186                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-stores                                         128  thrpt            156.038                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:branch-misses                                      128  thrpt            111.634                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:branches                                           128  thrpt          45697.800                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:cycles                                             128  thrpt          57578.706                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-load-misses                                   128  thrpt              2.960                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-loads                                         128  thrpt          33763.468                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-store-misses                                  128  thrpt              0.090                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-stores                                        128  thrpt          21139.534                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:iTLB-load-misses                                   128  thrpt              2.087                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:iTLB-loads                                         128  thrpt              0.476                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:instructions                                       128  thrpt         197481.708                 #/op
[info] ArrayOfShortsBenchmark.readCirce                                                         128  thrpt    5    145081.829 ±    7856.250  ops/s
[info] ArrayOfShortsBenchmark.readCirce:CPI                                                     128  thrpt              0.300                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-dcache-load-misses                                   128  thrpt            366.923                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-dcache-loads                                         128  thrpt          17636.632                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-dcache-stores                                        128  thrpt           9253.188                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-icache-load-misses                                   128  thrpt             10.730                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-load-misses                                         128  thrpt              0.669                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-loads                                               128  thrpt              4.065                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-store-misses                                        128  thrpt             14.060                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-stores                                              128  thrpt             67.642                 #/op
[info] ArrayOfShortsBenchmark.readCirce:branch-misses                                           128  thrpt             34.419                 #/op
[info] ArrayOfShortsBenchmark.readCirce:branches                                                128  thrpt          20937.962                 #/op
[info] ArrayOfShortsBenchmark.readCirce:cycles                                                  128  thrpt          25799.474                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-load-misses                                        128  thrpt              0.800                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-loads                                              128  thrpt          17466.516                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-store-misses                                       128  thrpt              0.029                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-stores                                             128  thrpt           9036.487                 #/op
[info] ArrayOfShortsBenchmark.readCirce:iTLB-load-misses                                        128  thrpt              0.107                 #/op
[info] ArrayOfShortsBenchmark.readCirce:iTLB-loads                                              128  thrpt              0.144                 #/op
[info] ArrayOfShortsBenchmark.readCirce:instructions                                            128  thrpt          86100.796                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                   128  thrpt    5    847969.553 ±   52437.561  ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:CPI                                               128  thrpt              0.214                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-load-misses                             128  thrpt             15.644                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-loads                                   128  thrpt           3093.046                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-stores                                  128  thrpt           1728.192                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-icache-load-misses                             128  thrpt              0.543                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-load-misses                                   128  thrpt              0.014                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-loads                                         128  thrpt              0.275                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-store-misses                                  128  thrpt              0.113                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-stores                                        128  thrpt              2.942                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:branch-misses                                     128  thrpt              4.811                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:branches                                          128  thrpt           5315.216                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:cycles                                            128  thrpt           4480.626                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-load-misses                                  128  thrpt              0.039                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-loads                                        128  thrpt           3127.748                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-store-misses                                 128  thrpt              0.003                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-stores                                       128  thrpt           1764.660                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:iTLB-load-misses                                  128  thrpt              0.019                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:iTLB-loads                                        128  thrpt              0.044                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:instructions                                      128  thrpt          20928.983                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala                                                  128  thrpt    5    385157.335 ±    3391.113  ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:CPI                                              128  thrpt              0.247                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-load-misses                            128  thrpt             28.118                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-loads                                  128  thrpt           9009.246                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-stores                                 128  thrpt           6582.989                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-icache-load-misses                            128  thrpt              1.684                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-load-misses                                  128  thrpt              0.297                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-loads                                        128  thrpt              0.788                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-store-misses                                 128  thrpt              1.720                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-stores                                       128  thrpt              6.202                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:branch-misses                                    128  thrpt              2.004                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:branches                                         128  thrpt           9157.639                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:cycles                                           128  thrpt           9978.011                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-load-misses                                 128  thrpt              0.142                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-loads                                       128  thrpt           8946.011                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-store-misses                                128  thrpt              0.011                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-stores                                      128  thrpt           6537.518                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:iTLB-load-misses                                 128  thrpt              0.036                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:iTLB-loads                                       128  thrpt              0.126                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:instructions                                     128  thrpt          40460.346                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                 128  thrpt    5   1135799.819 ±    6701.106  ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:CPI                                             128  thrpt              0.217                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-load-misses                           128  thrpt              9.072                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-loads                                 128  thrpt           1789.146                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-stores                                128  thrpt           1149.122                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-icache-load-misses                           128  thrpt              0.078                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-load-misses                                 128  thrpt              0.026                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-loads                                       128  thrpt              0.089                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-store-misses                                128  thrpt              0.050                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-stores                                      128  thrpt              1.485                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:branch-misses                                   128  thrpt              3.241                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:branches                                        128  thrpt           4332.300                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:cycles                                          128  thrpt           3353.456                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-load-misses                                128  thrpt              0.042                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-loads                                      128  thrpt           1772.259                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-store-misses                               128  thrpt              0.050                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-stores                                     128  thrpt           1118.233                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:iTLB-load-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:iTLB-loads                                      128  thrpt              0.026                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:instructions                                    128  thrpt          15464.035                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson                                                      128  thrpt    5     79813.537 ±    2681.433  ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:CPI                                                  128  thrpt              0.330                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-dcache-load-misses                                128  thrpt           1556.847                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-dcache-loads                                      128  thrpt          38372.870                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-dcache-stores                                     128  thrpt          30521.981                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-icache-load-misses                                128  thrpt            158.454                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-load-misses                                      128  thrpt              1.116                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-loads                                            128  thrpt             11.819                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-store-misses                                     128  thrpt             38.236                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-stores                                           128  thrpt            202.371                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:branch-misses                                        128  thrpt             84.095                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:branches                                             128  thrpt          27538.847                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:cycles                                               128  thrpt          48042.912                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-load-misses                                     128  thrpt              4.659                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-loads                                           128  thrpt          39410.375                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-store-misses                                    128  thrpt              0.097                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-stores                                          128  thrpt          30757.887                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:iTLB-load-misses                                     128  thrpt              0.253                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:iTLB-loads                                           128  thrpt              0.657                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:instructions                                         128  thrpt         145473.124                 #/op
[info] ArrayOfShortsBenchmark.writeCirce                                                        128  thrpt    5    271690.569 ±   18346.076  ops/s
[info] ArrayOfShortsBenchmark.writeCirce:CPI                                                    128  thrpt              0.279                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-dcache-load-misses                                  128  thrpt            154.349                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-dcache-loads                                        128  thrpt          10834.224                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-dcache-stores                                       128  thrpt           6806.523                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-icache-load-misses                                  128  thrpt              2.245                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-load-misses                                        128  thrpt              0.319                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-loads                                              128  thrpt              1.528                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-store-misses                                       128  thrpt             33.753                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-stores                                             128  thrpt             70.275                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:branch-misses                                          128  thrpt             26.034                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:branches                                               128  thrpt          10349.250                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:cycles                                                 128  thrpt          13838.283                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-load-misses                                       128  thrpt              1.279                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-loads                                             128  thrpt          10545.542                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-store-misses                                      128  thrpt              0.023                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-stores                                            128  thrpt           6455.720                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:iTLB-load-misses                                       128  thrpt              0.044                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:iTLB-loads                                             128  thrpt              0.255                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:instructions                                           128  thrpt          49512.762                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                  128  thrpt    5   1246192.704 ±   10409.433  ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:CPI                                              128  thrpt              0.312                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-load-misses                            128  thrpt             10.110                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-loads                                  128  thrpt           1031.372                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-stores                                 128  thrpt           1382.441                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-icache-load-misses                            128  thrpt              0.434                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-load-misses                                  128  thrpt              0.047                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-loads                                        128  thrpt              0.186                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-store-misses                                 128  thrpt              1.470                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-stores                                       128  thrpt              3.665                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:branch-misses                                    128  thrpt              0.502                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:branches                                         128  thrpt           1835.523                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:cycles                                           128  thrpt           3113.341                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-load-misses                                 128  thrpt              0.136                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-loads                                       128  thrpt           1044.740                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-store-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-stores                                      128  thrpt           1370.749                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-load-misses                                 128  thrpt              0.007                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-loads                                       128  thrpt              0.036                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:instructions                                     128  thrpt           9979.670                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                 128  thrpt    5    932472.131 ±    8823.420  ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:CPI                                             128  thrpt              0.266                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-load-misses                           128  thrpt             15.883                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-loads                                 128  thrpt           3133.174                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-stores                                128  thrpt           1767.940                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-icache-load-misses                           128  thrpt              0.392                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-load-misses                                 128  thrpt              0.129                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-loads                                       128  thrpt              0.304                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-store-misses                                128  thrpt              2.175                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-stores                                      128  thrpt              4.135                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:branch-misses                                   128  thrpt              4.026                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:branches                                        128  thrpt           3213.366                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:cycles                                          128  thrpt           4126.995                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-load-misses                                128  thrpt              0.096                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-loads                                      128  thrpt           3151.188                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-store-misses                               128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-stores                                     128  thrpt           1770.812                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:iTLB-load-misses                                128  thrpt              0.026                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:iTLB-loads                                      128  thrpt              0.064                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:instructions                                    128  thrpt          15522.684                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                128  thrpt    5   2072587.261 ±   80476.231  ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:CPI                                            128  thrpt              0.218                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-load-misses                          128  thrpt              9.015                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-loads                                128  thrpt           1074.291                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-stores                               128  thrpt           1111.076                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-icache-load-misses                          128  thrpt              0.239                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-load-misses                                128  thrpt              0.009                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-loads                                      128  thrpt              0.074                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-store-misses                               128  thrpt              1.260                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-stores                                     128  thrpt              3.540                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:branch-misses                                  128  thrpt              0.045                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:branches                                       128  thrpt           2056.642                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:cycles                                         128  thrpt           1839.244                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-load-misses                               128  thrpt              0.129                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-loads                                     128  thrpt           1062.366                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-store-misses                              128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-stores                                    128  thrpt           1096.115                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-load-misses                               128  thrpt              0.008                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-loads                                     128  thrpt              0.019                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:instructions                                   128  thrpt           8421.625                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   2235418.320 ±    8814.792  ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:CPI                                    128  thrpt              0.211                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  128  thrpt              0.326                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        128  thrpt            999.483                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       128  thrpt           1014.227                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  128  thrpt              0.303                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        128  thrpt              0.014                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              128  thrpt              0.063                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       128  thrpt              0.003                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             128  thrpt              0.005                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branch-misses                          128  thrpt              1.124                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branches                               128  thrpt           1942.827                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:cycles                                 128  thrpt           1690.374                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             128  thrpt           1003.012                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            128  thrpt           1018.712                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             128  thrpt              0.011                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:instructions                           128  thrpt           8001.854                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson                                                     128  thrpt    5     42069.042 ±    1555.843  ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:CPI                                                 128  thrpt              0.352                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-dcache-load-misses                               128  thrpt           1534.408                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-dcache-loads                                     128  thrpt          53552.395                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-dcache-stores                                    128  thrpt          37993.842                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-icache-load-misses                               128  thrpt             43.153                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-load-misses                                     128  thrpt              2.215                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-loads                                           128  thrpt             17.401                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-store-misses                                    128  thrpt             14.586                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-stores                                          128  thrpt            192.944                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:branch-misses                                       128  thrpt            161.544                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:branches                                            128  thrpt          52505.872                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:cycles                                              128  thrpt          90996.204                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-load-misses                                    128  thrpt              2.571                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-loads                                          128  thrpt          52357.708                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-store-misses                                   128  thrpt              0.102                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-stores                                         128  thrpt          36154.509                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:iTLB-load-misses                                    128  thrpt              0.419                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:iTLB-loads                                          128  thrpt              0.513                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:instructions                                        128  thrpt         258552.450                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce                                                          128  thrpt    5     15130.149 ±    1132.698  ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:CPI                                                      128  thrpt              0.327                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt           3893.761                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt         132428.526                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt          88075.791                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt            283.682                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              7.171                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-loads                                                128  thrpt             85.195                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-store-misses                                         128  thrpt            173.749                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-stores                                               128  thrpt            679.300                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:branch-misses                                            128  thrpt           1094.804                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:branches                                                 128  thrpt         185957.451                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:cycles                                                   128  thrpt         255266.500                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              5.154                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-loads                                               128  thrpt         137461.945                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              1.858                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-stores                                              128  thrpt          88849.932                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              3.904                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:iTLB-loads                                               128  thrpt             19.040                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:instructions                                             128  thrpt         779907.950                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                   128  thrpt    5     96432.140 ±   14640.612  ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.237                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt            458.829                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          36388.941                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt          16932.763                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              2.960                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.459                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              3.382                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              3.247                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             57.029                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             13.552                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:branches                                          128  thrpt          37055.068                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:cycles                                            128  thrpt          39261.045                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.954                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          36121.304                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.078                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt          16415.978                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.154                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.621                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:instructions                                      128  thrpt         165829.058                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                  128  thrpt    5    257323.590 ±    2755.918  ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.216                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             86.696                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt          16847.073                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           6265.137                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              1.758                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.193                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.787                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              2.182                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             13.170                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              3.764                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:branches                                         128  thrpt          15744.993                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:cycles                                           128  thrpt          14924.204                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.407                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt          16544.293                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.024                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           6180.385                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.048                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.044                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:instructions                                     128  thrpt          69243.184                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                       128  thrpt    5     13077.118 ±     781.082  ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.353                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           5131.810                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt         166771.118                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt         111256.921                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt            616.644                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt             11.196                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-loads                                             128  thrpt            235.385                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt            335.998                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            892.571                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:branch-misses                                         128  thrpt           1244.775                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:branches                                              128  thrpt         181928.620                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:cycles                                                128  thrpt         291338.421                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt             11.721                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt         167315.781                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.541                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt         108446.513                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              3.436                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt             25.117                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:instructions                                          128  thrpt         825555.597                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce                                                         128  thrpt    5     33397.811 ±     633.983  ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:CPI                                                     128  thrpt              0.260                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt           3066.015                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt          58238.482                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt          53252.511                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt             16.102                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              2.429                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-loads                                               128  thrpt             11.584                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt            377.150                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-stores                                              128  thrpt            766.094                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:branch-misses                                           128  thrpt             39.339                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:branches                                                128  thrpt         128962.554                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:cycles                                                  128  thrpt         114425.660                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              3.987                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-loads                                              128  thrpt          58696.117                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              4.115                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-stores                                             128  thrpt          51764.354                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.903                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.502                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:instructions                                            128  thrpt         440212.499                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                  128  thrpt    5     94231.091 ±     444.870  ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.342                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt            492.599                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt          34169.485                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt          23730.160                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              7.007                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.237                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              2.696                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt            108.731                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt            173.304                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt             12.885                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:branches                                         128  thrpt          23690.167                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:cycles                                           128  thrpt          41103.110                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              2.556                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt          33944.776                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.204                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt          23117.617                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.240                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.159                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:instructions                                     128  thrpt         120126.724                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                 128  thrpt    5    178209.942 ±    2196.801  ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.298                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             88.706                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt          15895.067                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt          15393.095                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              5.710                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.238                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              1.383                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt             57.100                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             83.472                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              3.009                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:branches                                        128  thrpt          11055.076                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:cycles                                          128  thrpt          21510.708                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              1.087                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt          15912.326                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.182                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt          15299.094                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.104                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.187                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:instructions                                    128  thrpt          72301.684                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    192127.264 ±   15848.585  ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.285                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              3.979                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt          15376.792                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt          14518.214                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.560                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.067                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.285                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.091                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.039                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.665                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt          10171.297                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt          19576.353                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.048                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt          15477.162                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.005                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt          14519.640                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.009                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.019                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt          68753.420                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                      128  thrpt    5     47479.278 ±    2597.359  ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.281                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt           2658.789                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          50916.550                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt          43277.804                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt             12.788                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              3.267                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-loads                                            128  thrpt             13.994                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt            175.570                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-stores                                           128  thrpt            422.538                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:branch-misses                                        128  thrpt            149.935                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:branches                                             128  thrpt          66335.260                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:cycles                                               128  thrpt          80916.648                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              3.580                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          50030.629                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.284                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt          41687.007                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.596                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              1.024                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:instructions                                         128  thrpt         287521.404                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce                                                     128  thrpt    5     25136.517 ±    2242.429  ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:CPI                                                 128  thrpt              0.322                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-load-misses                               128  thrpt           1562.844                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-loads                                     128  thrpt         117253.512                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-stores                                    128  thrpt          54984.039                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-icache-load-misses                               128  thrpt            135.763                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-load-misses                                     128  thrpt              2.584                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-loads                                           128  thrpt             17.990                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-store-misses                                    128  thrpt             50.817                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-stores                                          128  thrpt            247.290                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:branch-misses                                       128  thrpt             48.742                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:branches                                            128  thrpt         108175.627                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:cycles                                              128  thrpt         151675.618                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-load-misses                                    128  thrpt              2.179                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-loads                                          128  thrpt         118808.087                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-store-misses                                   128  thrpt              0.303                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-stores                                         128  thrpt          54562.934                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:iTLB-load-misses                                    128  thrpt              0.771                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:iTLB-loads                                          128  thrpt              2.109                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:instructions                                        128  thrpt         471195.824                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                              128  thrpt    5     28468.984 ±    2723.383  ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:CPI                                          128  thrpt              0.334                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-load-misses                        128  thrpt           1278.806                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-loads                              128  thrpt         102517.222                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-stores                             128  thrpt          46196.081                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-icache-load-misses                        128  thrpt           1016.915                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-load-misses                              128  thrpt              1.074                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-loads                                    128  thrpt             12.086                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-store-misses                             128  thrpt              8.359                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-stores                                   128  thrpt            160.494                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:branch-misses                                128  thrpt             21.278                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:branches                                     128  thrpt          92237.185                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:cycles                                       128  thrpt         133008.263                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-load-misses                             128  thrpt              1.808                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-loads                                   128  thrpt         102739.984                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-store-misses                            128  thrpt              0.225                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-stores                                  128  thrpt          45471.675                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-load-misses                             128  thrpt              0.999                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-loads                                   128  thrpt              2.874                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:instructions                                 128  thrpt         398729.837                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                             128  thrpt    5    558037.020 ±   27841.954  ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:CPI                                         128  thrpt              0.235                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-load-misses                       128  thrpt             66.197                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-loads                             128  thrpt           4676.393                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-stores                            128  thrpt           2812.005                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-icache-load-misses                       128  thrpt              0.204                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-load-misses                             128  thrpt              0.050                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-loads                                   128  thrpt              0.218                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-store-misses                            128  thrpt              2.975                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-stores                                  128  thrpt             12.825                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:branch-misses                               128  thrpt              7.265                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:branches                                    128  thrpt           6743.704                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:cycles                                      128  thrpt           6743.709                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-load-misses                            128  thrpt              0.396                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-loads                                  128  thrpt           4659.274                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-store-misses                           128  thrpt              0.016                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-stores                                 128  thrpt           2701.477                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-load-misses                            128  thrpt              0.042                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-loads                                  128  thrpt              0.077                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:instructions                                128  thrpt          28681.285                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                  128  thrpt    5     22646.453 ±     371.040  ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:CPI                                              128  thrpt              0.318                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-load-misses                            128  thrpt           2739.395                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-loads                                  128  thrpt         140247.874                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-stores                                 128  thrpt          68171.893                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-icache-load-misses                            128  thrpt            513.335                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-load-misses                                  128  thrpt              5.588                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-loads                                        128  thrpt             56.231                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-store-misses                                 128  thrpt             40.587                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-stores                                       128  thrpt            368.076                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:branch-misses                                    128  thrpt             65.687                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:branches                                         128  thrpt         114741.100                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:cycles                                           128  thrpt         169547.196                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-load-misses                                 128  thrpt              7.937                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-loads                                       128  thrpt         134907.320                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-store-misses                                128  thrpt              0.275                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-stores                                      128  thrpt          67130.740                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-load-misses                                 128  thrpt              0.832                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-loads                                       128  thrpt              3.569                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:instructions                                     128  thrpt         533472.287                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                    128  thrpt    5     71925.203 ±     286.208  ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:CPI                                                128  thrpt              0.274                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-load-misses                              128  thrpt           1108.263                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-loads                                    128  thrpt          41557.011                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-stores                                   128  thrpt          25095.301                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-icache-load-misses                              128  thrpt              2.397                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-load-misses                                    128  thrpt              0.499                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-loads                                          128  thrpt              2.973                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-store-misses                                   128  thrpt            101.279                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-stores                                         128  thrpt            222.128                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:branch-misses                                      128  thrpt             41.565                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:branches                                           128  thrpt          45622.770                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:cycles                                             128  thrpt          52755.668                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-load-misses                                   128  thrpt              4.138                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-loads                                         128  thrpt          41263.762                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-store-misses                                  128  thrpt              0.063                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-stores                                        128  thrpt          24779.270                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:iTLB-load-misses                                   128  thrpt              0.309                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:iTLB-loads                                         128  thrpt              0.411                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:instructions                                       128  thrpt         192819.728                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                             128  thrpt    5    178585.753 ±   18267.154  ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:CPI                                         128  thrpt              0.259                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-load-misses                       128  thrpt            248.574                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-loads                             128  thrpt          15685.200                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-stores                            128  thrpt           9350.338                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-icache-load-misses                       128  thrpt              0.983                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-load-misses                             128  thrpt              0.377                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-loads                                   128  thrpt              1.689                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-store-misses                            128  thrpt              9.928                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-stores                                  128  thrpt             34.292                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:branch-misses                               128  thrpt             28.729                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:branches                                    128  thrpt          18717.451                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:cycles                                      128  thrpt          20960.973                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-load-misses                            128  thrpt              0.441                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-loads                                  128  thrpt          15850.754                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-store-misses                           128  thrpt              0.015                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-stores                                 128  thrpt           9320.137                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-load-misses                            128  thrpt              0.116                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-loads                                  128  thrpt              0.130                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:instructions                                128  thrpt          80897.745                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                            128  thrpt    5   1498852.994 ±  332785.135  ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:CPI                                        128  thrpt              0.222                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-load-misses                      128  thrpt             21.279                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-loads                            128  thrpt           1024.183                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-stores                           128  thrpt           1805.788                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-icache-load-misses                      128  thrpt              0.301                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-load-misses                            128  thrpt              0.070                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-loads                                  128  thrpt              0.136                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-store-misses                           128  thrpt             12.356                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-stores                                 128  thrpt             17.543                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:branch-misses                              128  thrpt              2.055                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:branches                                   128  thrpt           2551.622                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:cycles                                     128  thrpt           2538.707                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-load-misses                           128  thrpt              0.331                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-loads                                 128  thrpt            989.896                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-store-misses                          128  thrpt              0.005                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-stores                                128  thrpt           1714.909                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-load-misses                           128  thrpt              0.011                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-loads                                 128  thrpt              0.020                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:instructions                               128  thrpt          11421.051                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5   1768802.969 ±   63551.493  ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:CPI                                128  thrpt              0.203                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses              128  thrpt              0.564                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                    128  thrpt            971.000                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                   128  thrpt           1591.498                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses              128  thrpt              0.138                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                    128  thrpt              0.020                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                          128  thrpt              0.063                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                   128  thrpt              0.004                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                         128  thrpt              0.006                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branch-misses                      128  thrpt              1.047                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branches                           128  thrpt           2345.015                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:cycles                             128  thrpt           2153.773                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                   128  thrpt              0.014                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                         128  thrpt            962.354                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                  128  thrpt              0.002                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                        128  thrpt           1578.022                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                   128  thrpt              0.002                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                         128  thrpt              0.022                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:instructions                       128  thrpt          10633.794                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                 128  thrpt    5    138039.970 ±    4092.358  ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:CPI                                             128  thrpt              0.264                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-load-misses                           128  thrpt            494.564                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-loads                                 128  thrpt          22406.347                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-stores                                128  thrpt          13888.703                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-icache-load-misses                           128  thrpt              8.617                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-load-misses                                 128  thrpt              0.909                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-loads                                       128  thrpt              3.833                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-store-misses                                128  thrpt             15.536                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-stores                                      128  thrpt             61.883                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:branch-misses                                   128  thrpt             26.746                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:branches                                        128  thrpt          22987.328                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:cycles                                          128  thrpt          27778.831                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-load-misses                                128  thrpt              0.663                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-loads                                      128  thrpt          22209.493                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-store-misses                               128  thrpt              0.022                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-stores                                     128  thrpt          13823.015                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-load-misses                                128  thrpt              0.108                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-loads                                      128  thrpt              0.085                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:instructions                                    128  thrpt         105160.289                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala                                                   128  thrpt    5     41515.171 ±    1442.433  ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.305                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt           1117.211                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          69101.708                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt          32783.091                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt             69.052                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              1.863                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              7.176                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              7.982                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt            122.012                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             22.766                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:branches                                          128  thrpt          68639.236                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:cycles                                            128  thrpt          91919.879                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              1.900                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          66227.139                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.147                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt          31374.598                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.353                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              1.154                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:instructions                                      128  thrpt         301230.810                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                  128  thrpt    5    781998.356 ±    2745.359  ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.231                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             49.519                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           3257.025                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           2165.033                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.151                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.048                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.181                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              3.239                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             12.667                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              7.090                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:branches                                         128  thrpt           4719.594                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:cycles                                           128  thrpt           4839.977                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.320                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           3256.062                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.010                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           2098.775                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.026                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.048                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:instructions                                     128  thrpt          20978.205                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson                                                       128  thrpt    5     31991.765 ±     526.345  ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.307                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           2433.046                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          93251.156                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          52847.376                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt            373.986                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              5.894                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-loads                                             128  thrpt             38.380                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             48.199                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            410.036                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:branch-misses                                         128  thrpt             42.850                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:branches                                              128  thrpt          87746.432                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:cycles                                                128  thrpt         121422.461                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              4.000                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          94900.890                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.198                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          54684.274                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.641                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              1.765                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:instructions                                          128  thrpt         395556.896                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                  128  thrpt    5    304394.312 ±    3747.081  ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.243                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt            128.177                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           9692.454                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           5265.866                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              1.402                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.182                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              1.101                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              4.048                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt             18.169                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              3.352                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:branches                                         128  thrpt          10996.797                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:cycles                                           128  thrpt          12144.400                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.471                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           9770.300                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.019                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           5199.002                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.037                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.123                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:instructions                                     128  thrpt          50033.069                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                 128  thrpt    5   2007157.205 ±   12294.136  ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.218                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             14.877                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt            613.510                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           1344.420                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.059                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.013                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.066                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              6.171                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             11.378                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              2.070                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:branches                                        128  thrpt           1966.635                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           1889.005                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.234                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt            607.801                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.003                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           1307.229                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.010                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.025                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:instructions                                    128  thrpt           8672.251                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   2197656.812 ±   42582.584  ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.211                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.681                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt            567.675                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           1174.199                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.253                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.005                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.039                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.001                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.007                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.019                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           1807.431                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           1703.460                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt            562.236                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           1181.317                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.011                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt           8062.656                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson                                                      128  thrpt    5    250374.815 ±   10570.496  ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.253                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt            189.084                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          12297.494                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt           7052.787                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              1.633                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.371                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              2.057                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             10.111                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-stores                                           128  thrpt             29.074                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:branch-misses                                        128  thrpt              5.093                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:branches                                             128  thrpt          11722.836                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:cycles                                               128  thrpt          14979.206                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              0.428                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          12694.587                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.015                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt           7156.343                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.049                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.171                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:instructions                                         128  thrpt          59107.947                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce                                                        128  thrpt    5     66109.189 ±    1717.099  ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:CPI                                                    128  thrpt              0.294                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           1269.555                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-loads                                        128  thrpt          36574.890                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-stores                                       128  thrpt          18433.005                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt             14.661                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-load-misses                                        128  thrpt              0.452                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-loads                                              128  thrpt             11.261                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-store-misses                                       128  thrpt             58.126                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-stores                                             128  thrpt            136.349                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:branch-misses                                          128  thrpt            109.907                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:branches                                               128  thrpt          50672.650                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:cycles                                                 128  thrpt          56893.595                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-load-misses                                       128  thrpt              2.794                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-loads                                             128  thrpt          37028.184                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.088                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-stores                                            128  thrpt          18105.457                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              0.205                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:iTLB-loads                                             128  thrpt              0.666                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:instructions                                           128  thrpt         193351.173                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                 128  thrpt    5     77311.620 ±    5887.941  ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:CPI                                             128  thrpt              0.298                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt           1052.897                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt          33196.735                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          17490.530                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt             36.880                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              0.685                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-loads                                       128  thrpt              9.501                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              4.166                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-stores                                      128  thrpt             41.491                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:branch-misses                                   128  thrpt            100.239                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:branches                                        128  thrpt          40173.284                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:cycles                                          128  thrpt          49187.968                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              1.493                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt          31676.349                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.110                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          16538.242                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.154                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              0.927                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:instructions                                    128  thrpt         164859.667                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                128  thrpt    5     88470.865 ±    4925.673  ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.302                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt            772.195                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          26174.759                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt          13830.779                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              8.066                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.762                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              7.112                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              4.091                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             38.015                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:branch-misses                                  128  thrpt            100.294                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:branches                                       128  thrpt          37767.905                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:cycles                                         128  thrpt          42832.934                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.839                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          26299.484                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.040                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt          13714.741                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.114                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.209                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:instructions                                   128  thrpt         141600.218                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                     128  thrpt    5     43384.028 ±    2694.773  ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:CPI                                                 128  thrpt              0.345                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           2584.098                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          58038.041                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          37609.681                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt            264.204                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              1.448                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-loads                                           128  thrpt             61.990                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             29.908                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-stores                                          128  thrpt            272.450                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:branch-misses                                       128  thrpt            313.027                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:branches                                            128  thrpt          56717.385                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:cycles                                              128  thrpt          88501.378                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              3.800                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          59225.368                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.107                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          38033.429                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.576                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              1.636                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:instructions                                        128  thrpt         256795.087                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                       128  thrpt    5    111990.043 ±    1208.702  ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:CPI                                                   128  thrpt              0.275                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt            953.087                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          18094.094                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt          11731.851                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt              2.174                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              0.656                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-loads                                             128  thrpt              2.725                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-store-misses                                      128  thrpt            129.118                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-stores                                            128  thrpt            188.402                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:branch-misses                                         128  thrpt             88.147                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:branches                                              128  thrpt          40959.491                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:cycles                                                128  thrpt          34815.684                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              3.165                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-loads                                            128  thrpt          17798.588                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              0.399                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-stores                                           128  thrpt          11385.796                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.050                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:iTLB-loads                                            128  thrpt              0.136                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:instructions                                          128  thrpt         126691.440                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                128  thrpt    5    309062.693 ±    3769.442  ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.276                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt            514.381                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt           6754.853                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt           4026.645                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt              0.470                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.057                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              0.685                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             26.444                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt             32.218                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:branch-misses                                  128  thrpt              9.249                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:branches                                       128  thrpt          13490.758                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:cycles                                         128  thrpt          12301.176                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              0.541                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt           6701.385                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.019                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt           3914.770                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.042                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              0.066                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:instructions                                   128  thrpt          44619.500                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                               128  thrpt    5    654779.634 ±   45926.608  ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.257                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt            227.842                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt           2663.324                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt           2712.196                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt              2.106                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.102                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              0.961                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             24.763                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt             29.276                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt              6.459                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:branches                                      128  thrpt           6272.721                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:cycles                                        128  thrpt           5819.678                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              0.490                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt           2678.234                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.007                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt           2714.621                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.024                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.073                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:instructions                                  128  thrpt          22653.747                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    692045.834 ±   36634.628  ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.262                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt            218.924                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt           2508.148                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt           2347.052                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              0.190                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              0.022                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              0.099                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              0.001                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt              0.015                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt             10.457                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt           5798.999                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt           5489.254                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.020                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt           2513.740                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.003                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt           2349.194                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.023                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.099                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt          20958.447                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                    128  thrpt    5    228463.283 ±   11731.205  ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:CPI                                                128  thrpt              0.270                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-load-misses                              128  thrpt            604.190                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-loads                                    128  thrpt          13425.620                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-stores                                   128  thrpt           6150.538                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-icache-load-misses                              128  thrpt              0.971                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-load-misses                                    128  thrpt              0.212                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-loads                                          128  thrpt              1.962                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-store-misses                                   128  thrpt             29.258                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-stores                                         128  thrpt             41.384                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:branch-misses                                      128  thrpt             16.167                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:branches                                           128  thrpt          16196.595                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:cycles                                             128  thrpt          16723.367                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-load-misses                                   128  thrpt              1.570                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-loads                                         128  thrpt          13188.648                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-store-misses                                  128  thrpt              0.024                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-stores                                        128  thrpt           5873.471                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-load-misses                                   128  thrpt              0.432                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-loads                                         128  thrpt              0.165                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:instructions                                       128  thrpt          61898.038                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                    128  thrpt    5    121839.442 ±    6131.991  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:CPI                                                128  thrpt              0.272                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt            455.963                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-loads                                    128  thrpt          24531.841                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-stores                                   128  thrpt          12537.254                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-icache-load-misses                              128  thrpt              2.285                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-load-misses                                    128  thrpt              0.798                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-loads                                          128  thrpt              3.780                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-store-misses                                   128  thrpt             38.788                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-stores                                         128  thrpt             76.748                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:branch-misses                                      128  thrpt             40.399                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:branches                                           128  thrpt          27820.716                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:cycles                                             128  thrpt          31233.667                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-load-misses                                   128  thrpt              1.110                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-loads                                         128  thrpt          24806.380                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              0.025                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-stores                                        128  thrpt          12477.357                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-load-misses                                   128  thrpt              0.153                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-loads                                         128  thrpt              0.169                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:instructions                                       128  thrpt         114925.165                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                             128  thrpt    5    184138.200 ±   13034.720  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:CPI                                         128  thrpt              0.258                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt            185.783                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt          17220.169                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt           9365.517                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt              1.134                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              0.546                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-loads                                   128  thrpt              2.354                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt              3.235                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-stores                                  128  thrpt             18.763                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:branch-misses                               128  thrpt             30.309                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:branches                                    128  thrpt          17960.811                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:cycles                                      128  thrpt          20901.145                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              0.704                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt          16484.287                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.028                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt           9021.994                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              0.089                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt              0.233                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:instructions                                128  thrpt          80997.020                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                            128  thrpt    5    469216.777 ±   10206.808  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.256                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt             52.252                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt           6819.937                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt           2734.258                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              0.571                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.102                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              0.455                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              2.601                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt             12.619                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branch-misses                              128  thrpt              1.934                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branches                                   128  thrpt           7733.254                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:cycles                                     128  thrpt           8240.100                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              0.345                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt           6654.881                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.016                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt           2625.485                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.043                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.096                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:instructions                               128  thrpt          32141.227                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                 128  thrpt    5     67884.771 ±     496.792  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:CPI                                             128  thrpt              0.307                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt           1804.321                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt          48533.109                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt          30206.582                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt            148.442                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt              2.340                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-loads                                       128  thrpt             14.286                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-store-misses                                128  thrpt             44.814                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-stores                                      128  thrpt            248.329                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:branch-misses                                   128  thrpt             71.961                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:branches                                        128  thrpt          35313.146                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:cycles                                          128  thrpt          56029.282                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              3.915                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-loads                                      128  thrpt          48195.164                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.045                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-stores                                     128  thrpt          30333.344                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              0.297                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-loads                                      128  thrpt              0.404                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:instructions                                    128  thrpt         182350.744                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                   128  thrpt    5    180439.408 ±    9771.971  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:CPI                                               128  thrpt              0.267                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt            195.995                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt          15038.113                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt           9497.944                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt              0.840                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              0.340                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-loads                                         128  thrpt              1.844                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-store-misses                                  128  thrpt             92.673                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-stores                                        128  thrpt            122.681                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:branch-misses                                     128  thrpt             15.667                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:branches                                          128  thrpt          22350.516                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:cycles                                            128  thrpt          20931.268                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt              1.950                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-loads                                        128  thrpt          15171.697                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              0.033                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-stores                                       128  thrpt           9314.024                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.143                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-loads                                        128  thrpt              0.466                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:instructions                                      128  thrpt          78322.727                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                            128  thrpt    5    539308.024 ±   32026.261  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.258                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt             27.615                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt           4669.660                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt           2959.790                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt              0.279                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              0.204                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt              0.452                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt              8.157                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt             14.068                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branch-misses                              128  thrpt              3.407                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branches                                   128  thrpt           7726.537                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:cycles                                     128  thrpt           7122.735                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              0.310                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt           4583.956                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.006                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt           2936.553                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              0.008                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              0.054                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:instructions                               128  thrpt          27650.228                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                           128  thrpt    5   1276330.992 ±   18600.237  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.223                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt             19.304                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt           1902.587                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt           2166.180                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt              0.075                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              0.033                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt              0.083                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt             10.578                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt             16.271                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branch-misses                             128  thrpt              1.059                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branches                                  128  thrpt           2519.712                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:cycles                                    128  thrpt           2983.131                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              0.316                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt           1848.525                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.005                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt           2083.651                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.009                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.026                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:instructions                              128  thrpt          13387.090                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   1362206.290 ±   62179.049  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.223                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt              0.781                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt           1856.998                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt           1972.241                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt              0.095                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              0.022                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt              0.070                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt              0.012                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt              0.019                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt              0.168                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt           2337.153                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt           2780.622                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              0.020                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt           1845.066                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt              0.002                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt           1943.343                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.009                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              0.040                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt          12493.547                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                128  thrpt    5    411670.346 ±   14620.662  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:CPI                                            128  thrpt              0.254                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt             76.363                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt           7047.267                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt           4222.352                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt              1.262                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              0.203                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-loads                                      128  thrpt              1.326                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-store-misses                               128  thrpt             15.430                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-stores                                     128  thrpt             30.888                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:branch-misses                                  128  thrpt              4.610                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:branches                                       128  thrpt           9051.316                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:cycles                                         128  thrpt           9098.931                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt              0.474                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-loads                                     128  thrpt           7131.254                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.008                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-stores                                    128  thrpt           4375.548                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              0.027                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              0.121                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:instructions                                   128  thrpt          35819.309                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                 128  thrpt    5       545.742 ±      53.475  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:CPI                                             128  thrpt              0.333                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt         252953.786                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-loads                                 128  thrpt        6536357.098                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-stores                                128  thrpt        3753141.361                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-icache-load-misses                           128  thrpt          46343.983                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-load-misses                                 128  thrpt            204.056                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-loads                                       128  thrpt          14483.045                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-store-misses                                128  thrpt           7122.484                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-stores                                      128  thrpt          14005.241                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:branch-misses                                   128  thrpt          26235.470                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:branches                                        128  thrpt        3943460.454                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:cycles                                          128  thrpt        7090649.528                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-load-misses                                128  thrpt            341.019                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-loads                                      128  thrpt        6601048.772                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-store-misses                               128  thrpt             15.715                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-stores                                     128  thrpt        3760797.174                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-load-misses                                128  thrpt             82.020                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-loads                                      128  thrpt            385.016                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:instructions                                    128  thrpt       21324784.945                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                          128  thrpt    5       558.839 ±      94.485  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:CPI                                      128  thrpt              0.355                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt         267381.349                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt        6553794.875                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt        3851029.511                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt          61094.191                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt            951.271                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-loads                                128  thrpt          25246.720                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt           7288.323                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-stores                               128  thrpt          16110.068                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:branch-misses                            128  thrpt          26695.070                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:branches                                 128  thrpt        4018144.298                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:cycles                                   128  thrpt        7818760.122                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt            744.723                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-loads                               128  thrpt        6662920.583                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt             30.539                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-stores                              128  thrpt        3887939.700                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt            398.585                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-loads                               128  thrpt           1548.388                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:instructions                             128  thrpt       22007431.864                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                         128  thrpt    5     40182.158 ±     818.859  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.387                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt           3876.265                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt          40553.065                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt          21450.972                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              4.572                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.955                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-loads                               128  thrpt           1385.362                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt             28.857                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-stores                              128  thrpt             89.325                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branch-misses                           128  thrpt            235.127                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branches                                128  thrpt          64448.413                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:cycles                                  128  thrpt          94710.324                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              4.229                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt          40829.183                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.113                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt          21132.093                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.380                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.380                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:instructions                            128  thrpt         244824.402                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                              128  thrpt    5       556.324 ±      53.316  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:CPI                                          128  thrpt              0.323                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt         240733.866                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt        6413750.410                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt        3720182.568                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt          62015.469                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-load-misses                              128  thrpt            497.829                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-loads                                    128  thrpt          16592.308                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-store-misses                             128  thrpt           7060.042                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-stores                                   128  thrpt          13262.299                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:branch-misses                                128  thrpt          23747.809                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:branches                                     128  thrpt        4033407.949                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:cycles                                       128  thrpt        7023929.623                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt            674.061                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-loads                                   128  thrpt        6448038.062                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt             23.806                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-stores                                  128  thrpt        3838088.864                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt            205.557                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-loads                                   128  thrpt            859.862                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:instructions                                 128  thrpt       21744863.979                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                128  thrpt    5     14178.188 ±     258.735  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:CPI                                            128  thrpt              0.336                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt           4180.149                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-loads                                128  thrpt         174302.384                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-stores                               128  thrpt          89507.306                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt            422.185                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-load-misses                                128  thrpt              8.990                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-loads                                      128  thrpt            307.352                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-store-misses                               128  thrpt            395.120                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-stores                                     128  thrpt            843.624                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:branch-misses                                  128  thrpt            826.718                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:branches                                       128  thrpt         219820.209                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:cycles                                         128  thrpt         283045.411                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-load-misses                               128  thrpt             88.903                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-loads                                     128  thrpt         177322.940                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              5.648                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-stores                                    128  thrpt          88884.153                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              4.500                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-loads                                     128  thrpt             24.677                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:instructions                                   128  thrpt         842607.904                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                         128  thrpt    5     18390.076 ±     140.332  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.335                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt           2589.414                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt         155413.925                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt          70959.017                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt             46.217                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt              4.568                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-loads                               128  thrpt            123.840                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt            138.840                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-stores                              128  thrpt            356.150                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branch-misses                           128  thrpt            594.039                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branches                                128  thrpt         143221.684                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:cycles                                  128  thrpt         210944.637                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt             62.203                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt         153994.999                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.672                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt          69773.492                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              1.807                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt              7.025                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:instructions                            128  thrpt         629714.653                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                        128  thrpt    5    207524.452 ±    3616.200  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.269                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt            956.500                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt          12790.814                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt          12352.723                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              0.740                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.315                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              4.861                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt             61.839                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt             96.340                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branch-misses                          128  thrpt             27.604                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branches                               128  thrpt          14166.447                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:cycles                                 128  thrpt          18732.641                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              1.257                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt          12450.046                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.346                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt          12083.562                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.095                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.281                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:instructions                           128  thrpt          69574.684                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    230362.433 ±    2069.829  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.256                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt            810.734                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt          12371.889                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt          11207.880                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.534                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.171                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.629                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.021                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.054                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt             29.931                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt          13149.762                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt          16658.096                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.084                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt          12324.448                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt              0.009                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt          11208.534                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.047                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.176                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt          65133.207                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                             128  thrpt    5     17601.615 ±     813.990  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:CPI                                         128  thrpt              0.343                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt           3355.487                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt         161779.414                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt          74037.036                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt            206.328                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-load-misses                             128  thrpt              5.711                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-loads                                   128  thrpt            232.221                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-store-misses                            128  thrpt            156.698                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-stores                                  128  thrpt            438.472                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:branch-misses                               128  thrpt            619.679                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:branches                                    128  thrpt         144519.418                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:cycles                                      128  thrpt         224207.092                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt              9.170                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-loads                                  128  thrpt         167679.271                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.925                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-stores                                 128  thrpt          74446.028                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              3.387                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-loads                                  128  thrpt             18.696                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:instructions                                128  thrpt         653646.321                 #/op
[info] BitSetBenchmark.readJsoniterScala                                                        128  thrpt    5   1425600.796 ±   24994.808  ops/s
[info] BitSetBenchmark.readJsoniterScala:CPI                                                    128  thrpt              0.227                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-dcache-load-misses                                  128  thrpt              1.832                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-dcache-loads                                        128  thrpt            880.993                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-dcache-stores                                       128  thrpt            568.189                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-icache-load-misses                                  128  thrpt              0.066                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-load-misses                                        128  thrpt              0.010                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-loads                                              128  thrpt              0.053                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-store-misses                                       128  thrpt              0.007                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-stores                                             128  thrpt              0.088                 #/op
[info] BitSetBenchmark.readJsoniterScala:branch-misses                                          128  thrpt              3.043                 #/op
[info] BitSetBenchmark.readJsoniterScala:branches                                               128  thrpt           3313.217                 #/op
[info] BitSetBenchmark.readJsoniterScala:cycles                                                 128  thrpt           2665.190                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-load-misses                                       128  thrpt              0.006                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-loads                                             128  thrpt            883.890                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-store-misses                                      128  thrpt              0.002                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-stores                                            128  thrpt            563.256                 #/op
[info] BitSetBenchmark.readJsoniterScala:iTLB-load-misses                                       128  thrpt              0.013                 #/op
[info] BitSetBenchmark.readJsoniterScala:iTLB-loads                                             128  thrpt              0.069                 #/op
[info] BitSetBenchmark.readJsoniterScala:instructions                                           128  thrpt          11754.578                 #/op
[info] BitSetBenchmark.readPlayJson                                                             128  thrpt    5     81319.855 ±    1820.353  ops/s
[info] BitSetBenchmark.readPlayJson:CPI                                                         128  thrpt              0.314                 #/op
[info] BitSetBenchmark.readPlayJson:L1-dcache-load-misses                                       128  thrpt           1554.087                 #/op
[info] BitSetBenchmark.readPlayJson:L1-dcache-loads                                             128  thrpt          40108.253                 #/op
[info] BitSetBenchmark.readPlayJson:L1-dcache-stores                                            128  thrpt          29637.858                 #/op
[info] BitSetBenchmark.readPlayJson:L1-icache-load-misses                                       128  thrpt            101.727                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-load-misses                                             128  thrpt              1.228                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-loads                                                   128  thrpt              7.142                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-store-misses                                            128  thrpt             34.467                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-stores                                                  128  thrpt            211.085                 #/op
[info] BitSetBenchmark.readPlayJson:branch-misses                                               128  thrpt             47.208                 #/op
[info] BitSetBenchmark.readPlayJson:branches                                                    128  thrpt          30392.345                 #/op
[info] BitSetBenchmark.readPlayJson:cycles                                                      128  thrpt          47111.938                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-load-misses                                            128  thrpt              4.974                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-loads                                                  128  thrpt          37762.712                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-store-misses                                           128  thrpt              0.074                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-stores                                                 128  thrpt          28217.009                 #/op
[info] BitSetBenchmark.readPlayJson:iTLB-load-misses                                            128  thrpt              0.255                 #/op
[info] BitSetBenchmark.readPlayJson:iTLB-loads                                                  128  thrpt              0.422                 #/op
[info] BitSetBenchmark.readPlayJson:instructions                                                128  thrpt         149853.381                 #/op
[info] BitSetBenchmark.writeJacksonScala                                                        128  thrpt    5   1867377.815 ±   10300.401  ops/s
[info] BitSetBenchmark.writeJacksonScala:CPI                                                    128  thrpt              0.228                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-dcache-load-misses                                  128  thrpt             13.806                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-dcache-loads                                        128  thrpt            707.705                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-dcache-stores                                       128  thrpt           1132.914                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-icache-load-misses                                  128  thrpt              0.073                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-load-misses                                        128  thrpt              0.045                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-loads                                              128  thrpt              0.106                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-store-misses                                       128  thrpt              1.249                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-stores                                             128  thrpt              2.551                 #/op
[info] BitSetBenchmark.writeJacksonScala:branch-misses                                          128  thrpt              2.159                 #/op
[info] BitSetBenchmark.writeJacksonScala:branches                                               128  thrpt           2128.527                 #/op
[info] BitSetBenchmark.writeJacksonScala:cycles                                                 128  thrpt           2082.968                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-load-misses                                       128  thrpt              0.093                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-loads                                             128  thrpt            712.430                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-store-misses                                      128  thrpt              0.004                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-stores                                            128  thrpt           1077.977                 #/op
[info] BitSetBenchmark.writeJacksonScala:iTLB-load-misses                                       128  thrpt              0.009                 #/op
[info] BitSetBenchmark.writeJacksonScala:iTLB-loads                                             128  thrpt              0.026                 #/op
[info] BitSetBenchmark.writeJacksonScala:instructions                                           128  thrpt           9116.177                 #/op
[info] BitSetBenchmark.writeJsoniterScala                                                       128  thrpt    5   2371729.599 ±    9986.414  ops/s
[info] BitSetBenchmark.writeJsoniterScala:CPI                                                   128  thrpt              0.209                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses                                 128  thrpt              7.309                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-dcache-loads                                       128  thrpt            480.243                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-dcache-stores                                      128  thrpt            961.366                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-icache-load-misses                                 128  thrpt              0.252                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-load-misses                                       128  thrpt              0.024                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-loads                                             128  thrpt              0.094                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-store-misses                                      128  thrpt              0.866                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-stores                                            128  thrpt              2.368                 #/op
[info] BitSetBenchmark.writeJsoniterScala:branch-misses                                         128  thrpt              1.120                 #/op
[info] BitSetBenchmark.writeJsoniterScala:branches                                              128  thrpt           1959.384                 #/op
[info] BitSetBenchmark.writeJsoniterScala:cycles                                                128  thrpt           1625.691                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-load-misses                                      128  thrpt              0.105                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-loads                                            128  thrpt            476.769                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-store-misses                                     128  thrpt             ≈ 10⁻³                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-stores                                           128  thrpt            948.129                 #/op
[info] BitSetBenchmark.writeJsoniterScala:iTLB-load-misses                                      128  thrpt              0.007                 #/op
[info] BitSetBenchmark.writeJsoniterScala:iTLB-loads                                            128  thrpt              0.002                 #/op
[info] BitSetBenchmark.writeJsoniterScala:instructions                                          128  thrpt           7792.403                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   2462094.029 ±  182416.837  ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:CPI                                           128  thrpt              0.206                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                         128  thrpt              0.513                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                               128  thrpt            451.643                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                              128  thrpt            886.214                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                         128  thrpt              0.050                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                               128  thrpt              0.030                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                     128  thrpt              0.068                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                              128  thrpt              0.015                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                    128  thrpt              0.067                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses                                 128  thrpt              1.038                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:branches                                      128  thrpt           1890.397                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:cycles                                        128  thrpt           1547.886                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                              128  thrpt              0.006                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                    128  thrpt            442.713                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                             128  thrpt             ≈ 10⁻⁴                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                   128  thrpt            890.385                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                              128  thrpt              0.001                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                    128  thrpt              0.003                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:instructions                                  128  thrpt           7510.511                 #/op
[info] BitSetBenchmark.writePlayJson                                                            128  thrpt    5     49411.858 ±     919.115  ops/s
[info] BitSetBenchmark.writePlayJson:CPI                                                        128  thrpt              0.333                 #/op
[info] BitSetBenchmark.writePlayJson:L1-dcache-load-misses                                      128  thrpt           1357.893                 #/op
[info] BitSetBenchmark.writePlayJson:L1-dcache-loads                                            128  thrpt          47988.759                 #/op
[info] BitSetBenchmark.writePlayJson:L1-dcache-stores                                           128  thrpt          34141.070                 #/op
[info] BitSetBenchmark.writePlayJson:L1-icache-load-misses                                      128  thrpt             12.959                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-load-misses                                            128  thrpt              3.563                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-loads                                                  128  thrpt              9.974                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-store-misses                                           128  thrpt              7.695                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-stores                                                 128  thrpt             81.547                 #/op
[info] BitSetBenchmark.writePlayJson:branch-misses                                              128  thrpt            113.709                 #/op
[info] BitSetBenchmark.writePlayJson:branches                                                   128  thrpt          49202.341                 #/op
[info] BitSetBenchmark.writePlayJson:cycles                                                     128  thrpt          77821.027                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-load-misses                                           128  thrpt              2.067                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-loads                                                 128  thrpt          47155.500                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-store-misses                                          128  thrpt              0.111                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-stores                                                128  thrpt          33620.644                 #/op
[info] BitSetBenchmark.writePlayJson:iTLB-load-misses                                           128  thrpt              0.399                 #/op
[info] BitSetBenchmark.writePlayJson:iTLB-loads                                                 128  thrpt              1.474                 #/op
[info] BitSetBenchmark.writePlayJson:instructions                                               128  thrpt         233393.910                 #/op
[info] ExtractFieldsBenchmark.readCirce                                                         N/A  thrpt    5    851441.540 ±   15365.398  ops/s
[info] ExtractFieldsBenchmark.readCirce:CPI                                                     N/A  thrpt              0.335                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-dcache-load-misses                                   N/A  thrpt             79.400                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-dcache-loads                                         N/A  thrpt           2878.312                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-dcache-stores                                        N/A  thrpt           2326.631                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-icache-load-misses                                   N/A  thrpt              5.910                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-load-misses                                         N/A  thrpt              0.059                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-loads                                               N/A  thrpt              0.624                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-store-misses                                        N/A  thrpt              4.082                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-stores                                              N/A  thrpt             18.384                 #/op
[info] ExtractFieldsBenchmark.readCirce:branch-misses                                           N/A  thrpt              1.552                 #/op
[info] ExtractFieldsBenchmark.readCirce:branches                                                N/A  thrpt           2940.022                 #/op
[info] ExtractFieldsBenchmark.readCirce:cycles                                                  N/A  thrpt           4448.585                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-load-misses                                        N/A  thrpt              0.184                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-loads                                              N/A  thrpt           2945.534                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-store-misses                                       N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-stores                                             N/A  thrpt           2371.770                 #/op
[info] ExtractFieldsBenchmark.readCirce:iTLB-load-misses                                        N/A  thrpt              0.041                 #/op
[info] ExtractFieldsBenchmark.readCirce:iTLB-loads                                              N/A  thrpt              0.066                 #/op
[info] ExtractFieldsBenchmark.readCirce:instructions                                            N/A  thrpt          13275.803                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava                                                   N/A  thrpt    5   4818341.206 ±  540817.592  ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:CPI                                               N/A  thrpt              0.274                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-load-misses                             N/A  thrpt              1.924                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-loads                                   N/A  thrpt            693.372                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-stores                                  N/A  thrpt            334.127                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-icache-load-misses                             N/A  thrpt              0.056                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-load-misses                                   N/A  thrpt              0.015                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-loads                                         N/A  thrpt              0.057                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-store-misses                                  N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-stores                                        N/A  thrpt              0.149                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:branch-misses                                     N/A  thrpt              0.048                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:branches                                          N/A  thrpt            690.090                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:cycles                                            N/A  thrpt            779.440                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-load-misses                                  N/A  thrpt              0.001                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-loads                                        N/A  thrpt            701.041                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-store-misses                                 N/A  thrpt             ≈ 10⁻³                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-stores                                       N/A  thrpt            341.800                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:iTLB-load-misses                                  N/A  thrpt              0.003                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:iTLB-loads                                        N/A  thrpt              0.013                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:instructions                                      N/A  thrpt           2842.335                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala                                                  N/A  thrpt    5    981199.750 ±   98401.427  ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:CPI                                              N/A  thrpt              0.340                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-dcache-load-misses                            N/A  thrpt             31.538                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-dcache-loads                                  N/A  thrpt           2814.865                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-dcache-stores                                 N/A  thrpt           2028.957                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-icache-load-misses                            N/A  thrpt            102.213                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-load-misses                                  N/A  thrpt              0.034                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-loads                                        N/A  thrpt              0.277                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-store-misses                                 N/A  thrpt              0.469                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-stores                                       N/A  thrpt              5.923                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:branch-misses                                    N/A  thrpt              0.437                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:branches                                         N/A  thrpt           2120.590                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:cycles                                           N/A  thrpt           3848.022                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-load-misses                                 N/A  thrpt              0.077                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-loads                                       N/A  thrpt           2889.536                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-store-misses                                N/A  thrpt              0.004                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-stores                                      N/A  thrpt           2053.175                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:iTLB-load-misses                                 N/A  thrpt              0.014                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:iTLB-loads                                       N/A  thrpt              0.071                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:instructions                                     N/A  thrpt          11321.702                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala                                                 N/A  thrpt    5   9231603.171 ±  225701.017  ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:CPI                                             N/A  thrpt              0.229                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-load-misses                           N/A  thrpt              1.300                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-loads                                 N/A  thrpt            312.941                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-stores                                N/A  thrpt            114.746                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-icache-load-misses                           N/A  thrpt              0.033                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-load-misses                                 N/A  thrpt              0.003                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-loads                                       N/A  thrpt              0.014                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-store-misses                                N/A  thrpt              0.004                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-stores                                      N/A  thrpt              0.103                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:branch-misses                                   N/A  thrpt              0.045                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:branches                                        N/A  thrpt            553.207                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:cycles                                          N/A  thrpt            416.342                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-load-misses                                N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-loads                                      N/A  thrpt            311.090                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-store-misses                               N/A  thrpt              0.007                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-stores                                     N/A  thrpt            113.104                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:iTLB-load-misses                                N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:iTLB-loads                                      N/A  thrpt              0.029                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:instructions                                    N/A  thrpt           1819.986                 #/op
[info] ExtractFieldsBenchmark.readPlayJson                                                      N/A  thrpt    5    475259.708 ±   20143.941  ops/s
[info] ExtractFieldsBenchmark.readPlayJson:CPI                                                  N/A  thrpt              0.363                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-dcache-load-misses                                N/A  thrpt            170.865                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-dcache-loads                                      N/A  thrpt           5796.773                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-dcache-stores                                     N/A  thrpt           4122.401                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-icache-load-misses                                N/A  thrpt            294.203                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-load-misses                                      N/A  thrpt              0.266                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-loads                                            N/A  thrpt              2.586                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-store-misses                                     N/A  thrpt              2.117                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-stores                                           N/A  thrpt             20.812                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:branch-misses                                        N/A  thrpt              4.408                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:branches                                             N/A  thrpt           3900.907                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:cycles                                               N/A  thrpt           7948.781                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-load-misses                                     N/A  thrpt              0.325                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-loads                                           N/A  thrpt           5662.231                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-store-misses                                    N/A  thrpt              0.037                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-stores                                          N/A  thrpt           4013.650                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:iTLB-load-misses                                     N/A  thrpt              0.037                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:iTLB-loads                                           N/A  thrpt              0.097                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:instructions                                         N/A  thrpt          21894.619                 #/op
[info] GeoJSONBenchmark.readCirce                                                               N/A  thrpt    5      4504.898 ±      27.745  ops/s
[info] GeoJSONBenchmark.readCirce:CPI                                                           N/A  thrpt              0.311                 #/op
[info] GeoJSONBenchmark.readCirce:L1-dcache-load-misses                                         N/A  thrpt          16556.789                 #/op
[info] GeoJSONBenchmark.readCirce:L1-dcache-loads                                               N/A  thrpt         493232.398                 #/op
[info] GeoJSONBenchmark.readCirce:L1-dcache-stores                                              N/A  thrpt         319990.656                 #/op
[info] GeoJSONBenchmark.readCirce:L1-icache-load-misses                                         N/A  thrpt            992.516                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-load-misses                                               N/A  thrpt             45.275                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-loads                                                     N/A  thrpt            679.335                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-store-misses                                              N/A  thrpt            568.202                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-stores                                                    N/A  thrpt           2824.309                 #/op
[info] GeoJSONBenchmark.readCirce:branch-misses                                                 N/A  thrpt            889.141                 #/op
[info] GeoJSONBenchmark.readCirce:branches                                                      N/A  thrpt         648955.956                 #/op
[info] GeoJSONBenchmark.readCirce:cycles                                                        N/A  thrpt         853183.368                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-load-misses                                              N/A  thrpt             24.335                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-loads                                                    N/A  thrpt         509071.099                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-store-misses                                             N/A  thrpt              5.330                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-stores                                                   N/A  thrpt         331272.303                 #/op
[info] GeoJSONBenchmark.readCirce:iTLB-load-misses                                              N/A  thrpt              3.309                 #/op
[info] GeoJSONBenchmark.readCirce:iTLB-loads                                                    N/A  thrpt             11.654                 #/op
[info] GeoJSONBenchmark.readCirce:instructions                                                  N/A  thrpt        2739791.379                 #/op
[info] GeoJSONBenchmark.readJacksonScala                                                        N/A  thrpt    5      6616.209 ±     572.412  ops/s
[info] GeoJSONBenchmark.readJacksonScala:CPI                                                    N/A  thrpt              0.318                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-dcache-load-misses                                  N/A  thrpt           9095.794                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-dcache-loads                                        N/A  thrpt         352024.483                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-dcache-stores                                       N/A  thrpt         288760.115                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-icache-load-misses                                  N/A  thrpt            706.470                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-load-misses                                        N/A  thrpt             24.191                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-loads                                              N/A  thrpt            331.260                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-store-misses                                       N/A  thrpt            126.015                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-stores                                             N/A  thrpt           1178.899                 #/op
[info] GeoJSONBenchmark.readJacksonScala:branch-misses                                          N/A  thrpt            738.104                 #/op
[info] GeoJSONBenchmark.readJacksonScala:branches                                               N/A  thrpt         378870.829                 #/op
[info] GeoJSONBenchmark.readJacksonScala:cycles                                                 N/A  thrpt         567789.633                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-load-misses                                       N/A  thrpt             20.699                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-loads                                             N/A  thrpt         342228.704                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-store-misses                                      N/A  thrpt              0.731                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-stores                                            N/A  thrpt         283031.276                 #/op
[info] GeoJSONBenchmark.readJacksonScala:iTLB-load-misses                                       N/A  thrpt              2.043                 #/op
[info] GeoJSONBenchmark.readJacksonScala:iTLB-loads                                             N/A  thrpt              8.705                 #/op
[info] GeoJSONBenchmark.readJacksonScala:instructions                                           N/A  thrpt        1788288.296                 #/op
[info] GeoJSONBenchmark.readJsoniterScala                                                       N/A  thrpt    5     46685.337 ±    2271.844  ops/s
[info] GeoJSONBenchmark.readJsoniterScala:CPI                                                   N/A  thrpt              0.246                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-dcache-load-misses                                 N/A  thrpt            647.885                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-dcache-loads                                       N/A  thrpt          50280.799                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-dcache-stores                                      N/A  thrpt          21525.737                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-icache-load-misses                                 N/A  thrpt             33.570                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-load-misses                                       N/A  thrpt              3.322                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-loads                                             N/A  thrpt              6.182                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-store-misses                                      N/A  thrpt              5.160                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-stores                                            N/A  thrpt             59.975                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:branch-misses                                         N/A  thrpt            154.306                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:branches                                              N/A  thrpt          74059.243                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:cycles                                                N/A  thrpt          80250.784                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-load-misses                                      N/A  thrpt              1.960                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-loads                                            N/A  thrpt          48974.662                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-store-misses                                     N/A  thrpt              0.051                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-stores                                           N/A  thrpt          21315.787                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:iTLB-load-misses                                      N/A  thrpt              0.113                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:iTLB-loads                                            N/A  thrpt              0.846                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:instructions                                          N/A  thrpt         326196.814                 #/op
[info] GeoJSONBenchmark.writeCirce                                                              N/A  thrpt    5      4957.752 ±      56.949  ops/s
[info] GeoJSONBenchmark.writeCirce:CPI                                                          N/A  thrpt              0.491                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-dcache-load-misses                                        N/A  thrpt          10285.809                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-dcache-loads                                              N/A  thrpt         286122.828                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-dcache-stores                                             N/A  thrpt         216434.685                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-icache-load-misses                                        N/A  thrpt            993.103                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-load-misses                                              N/A  thrpt             12.142                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-loads                                                    N/A  thrpt            440.297                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-store-misses                                             N/A  thrpt           1206.678                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-stores                                                   N/A  thrpt           2350.197                 #/op
[info] GeoJSONBenchmark.writeCirce:branch-misses                                                N/A  thrpt            725.539                 #/op
[info] GeoJSONBenchmark.writeCirce:branches                                                     N/A  thrpt         302596.392                 #/op
[info] GeoJSONBenchmark.writeCirce:cycles                                                       N/A  thrpt         781967.727                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-load-misses                                             N/A  thrpt             21.820                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-loads                                                   N/A  thrpt         281903.292                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-store-misses                                            N/A  thrpt             14.447                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-stores                                                  N/A  thrpt         206625.115                 #/op
[info] GeoJSONBenchmark.writeCirce:iTLB-load-misses                                             N/A  thrpt              3.176                 #/op
[info] GeoJSONBenchmark.writeCirce:iTLB-loads                                                   N/A  thrpt             12.667                 #/op
[info] GeoJSONBenchmark.writeCirce:instructions                                                 N/A  thrpt        1593846.671                 #/op
[info] GeoJSONBenchmark.writeJacksonScala                                                       N/A  thrpt    5      4984.069 ±     218.229  ops/s
[info] GeoJSONBenchmark.writeJacksonScala:CPI                                                   N/A  thrpt              0.479                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-dcache-load-misses                                 N/A  thrpt           4297.558                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-dcache-loads                                       N/A  thrpt         277555.010                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-dcache-stores                                      N/A  thrpt         214481.896                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-icache-load-misses                                 N/A  thrpt            194.243                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-load-misses                                       N/A  thrpt              6.877                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-loads                                             N/A  thrpt            255.821                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-store-misses                                      N/A  thrpt            271.697                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-stores                                            N/A  thrpt            883.619                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:branch-misses                                         N/A  thrpt            747.328                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:branches                                              N/A  thrpt         288343.296                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:cycles                                                N/A  thrpt         759545.365                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-load-misses                                      N/A  thrpt             10.422                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-loads                                            N/A  thrpt         276026.334                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-store-misses                                     N/A  thrpt              1.997                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-stores                                           N/A  thrpt         212020.402                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:iTLB-load-misses                                      N/A  thrpt              2.856                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:iTLB-loads                                            N/A  thrpt             10.848                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:instructions                                          N/A  thrpt        1586977.004                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala                                                      N/A  thrpt    5      6552.649 ±      65.357  ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:CPI                                                  N/A  thrpt              0.569                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-dcache-load-misses                                N/A  thrpt           1673.973                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-dcache-loads                                      N/A  thrpt         133909.437                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-dcache-stores                                     N/A  thrpt          94337.623                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-icache-load-misses                                N/A  thrpt            106.020                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-load-misses                                      N/A  thrpt             10.108                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-loads                                            N/A  thrpt             37.409                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-store-misses                                     N/A  thrpt            123.756                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-stores                                           N/A  thrpt            249.976                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:branch-misses                                        N/A  thrpt            650.569                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:branches                                             N/A  thrpt         188433.995                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:cycles                                               N/A  thrpt         583780.453                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-load-misses                                     N/A  thrpt              5.350                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-loads                                           N/A  thrpt         131922.989                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-store-misses                                    N/A  thrpt              1.879                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-stores                                          N/A  thrpt          93008.953                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:iTLB-load-misses                                     N/A  thrpt              1.581                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:iTLB-loads                                           N/A  thrpt              9.763                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:instructions                                         N/A  thrpt        1025871.318                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5      6621.070 ±      42.542  ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:CPI                                          N/A  thrpt              0.559                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                        N/A  thrpt           1872.747                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                              N/A  thrpt         134240.152                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                             N/A  thrpt         103945.537                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                        N/A  thrpt            262.264                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                              N/A  thrpt             10.045                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                    N/A  thrpt             58.317                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                             N/A  thrpt              1.613                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                   N/A  thrpt             75.520                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:branch-misses                                N/A  thrpt            620.471                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:branches                                     N/A  thrpt         192328.686                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:cycles                                       N/A  thrpt         583360.410                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                             N/A  thrpt             10.393                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                   N/A  thrpt         132186.700                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                            N/A  thrpt              8.890                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                  N/A  thrpt         101760.449                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                             N/A  thrpt              2.591                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                   N/A  thrpt              6.232                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:instructions                                 N/A  thrpt        1043327.225                 #/op
[info] GoogleMapsAPIBenchmark.readCirce                                                         N/A  thrpt    5      7877.635 ±     458.034  ops/s
[info] GoogleMapsAPIBenchmark.readCirce:CPI                                                     N/A  thrpt              0.280                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-dcache-load-misses                                   N/A  thrpt          10620.838                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-dcache-loads                                         N/A  thrpt         351611.701                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-dcache-stores                                        N/A  thrpt         203396.876                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-icache-load-misses                                   N/A  thrpt            816.280                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-load-misses                                         N/A  thrpt             19.156                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-loads                                               N/A  thrpt            496.197                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-store-misses                                        N/A  thrpt            632.500                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-stores                                              N/A  thrpt           1682.706                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:branch-misses                                           N/A  thrpt            499.523                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:branches                                                N/A  thrpt         412581.499                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:cycles                                                  N/A  thrpt         485882.981                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-load-misses                                        N/A  thrpt              7.036                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-loads                                              N/A  thrpt         360162.418                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-store-misses                                       N/A  thrpt             12.174                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-stores                                             N/A  thrpt         206135.273                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:iTLB-load-misses                                        N/A  thrpt              4.071                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:iTLB-loads                                              N/A  thrpt             10.057                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:instructions                                            N/A  thrpt        1732392.583                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                   N/A  thrpt    5     19201.302 ±     265.474  ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:CPI                                               N/A  thrpt              0.275                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-load-misses                             N/A  thrpt           1169.530                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-loads                                   N/A  thrpt         143313.045                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-stores                                  N/A  thrpt          73873.599                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-icache-load-misses                             N/A  thrpt             53.992                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-load-misses                                   N/A  thrpt              1.886                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-loads                                         N/A  thrpt             16.081                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-store-misses                                  N/A  thrpt              3.473                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-stores                                        N/A  thrpt             68.625                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:branch-misses                                     N/A  thrpt            185.109                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:branches                                          N/A  thrpt         185858.439                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:cycles                                            N/A  thrpt         202194.086                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-load-misses                                  N/A  thrpt              1.387                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-loads                                        N/A  thrpt         145081.350                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-store-misses                                 N/A  thrpt              0.199                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-stores                                       N/A  thrpt          73979.257                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-load-misses                                  N/A  thrpt              1.184                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-loads                                        N/A  thrpt              6.666                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:instructions                                      N/A  thrpt         735426.623                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                  N/A  thrpt    5     15112.880 ±     401.259  ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:CPI                                              N/A  thrpt              0.293                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-load-misses                            N/A  thrpt           2025.040                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-loads                                  N/A  thrpt         178684.602                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-stores                                 N/A  thrpt          95712.693                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-icache-load-misses                            N/A  thrpt             65.032                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-load-misses                                  N/A  thrpt              6.476                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-loads                                        N/A  thrpt             34.988                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-store-misses                                 N/A  thrpt              4.163                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-stores                                       N/A  thrpt            116.849                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:branch-misses                                    N/A  thrpt            332.597                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:branches                                         N/A  thrpt         192695.976                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:cycles                                           N/A  thrpt         241726.710                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-load-misses                                 N/A  thrpt              8.595                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-loads                                       N/A  thrpt         176001.293                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-store-misses                                N/A  thrpt              0.540                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-stores                                      N/A  thrpt          93952.428                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:iTLB-load-misses                                 N/A  thrpt              1.090                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:iTLB-loads                                       N/A  thrpt              9.739                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:instructions                                     N/A  thrpt         826184.074                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                 N/A  thrpt    5     23056.272 ±     157.409  ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:CPI                                             N/A  thrpt              0.288                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-load-misses                           N/A  thrpt            947.690                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-loads                                 N/A  thrpt          86205.348                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-stores                                N/A  thrpt          25240.133                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-icache-load-misses                           N/A  thrpt             50.522                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-load-misses                                 N/A  thrpt              1.173                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-loads                                       N/A  thrpt              6.995                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-store-misses                                N/A  thrpt              3.732                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-stores                                      N/A  thrpt             55.310                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:branch-misses                                   N/A  thrpt            167.722                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:branches                                        N/A  thrpt         171058.657                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:cycles                                          N/A  thrpt         164547.799                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-load-misses                                N/A  thrpt              2.308                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-loads                                      N/A  thrpt          84775.783                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-store-misses                               N/A  thrpt              2.817                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-stores                                     N/A  thrpt          24925.233                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-load-misses                                N/A  thrpt              0.464                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-loads                                      N/A  thrpt              1.582                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:instructions                                    N/A  thrpt         571178.158                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson                                                      N/A  thrpt    5      4176.732 ±     281.826  ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:CPI                                                  N/A  thrpt              0.375                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-load-misses                                N/A  thrpt          21524.083                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-loads                                      N/A  thrpt         714110.475                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-stores                                     N/A  thrpt         510499.009                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-icache-load-misses                                N/A  thrpt           1948.978                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-load-misses                                      N/A  thrpt            213.848                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-loads                                            N/A  thrpt           1752.781                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-store-misses                                     N/A  thrpt            246.505                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-stores                                           N/A  thrpt           2927.988                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:branch-misses                                        N/A  thrpt            839.476                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:branches                                             N/A  thrpt         419741.746                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:cycles                                               N/A  thrpt         914788.653                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-load-misses                                     N/A  thrpt             73.384                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-loads                                           N/A  thrpt         706501.417                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-store-misses                                    N/A  thrpt              1.231                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-stores                                          N/A  thrpt         514238.349                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:iTLB-load-misses                                     N/A  thrpt              6.369                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:iTLB-loads                                           N/A  thrpt             20.020                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:instructions                                         N/A  thrpt        2439845.805                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce                                                        N/A  thrpt    5     10312.501 ±     172.967  ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:CPI                                                    N/A  thrpt              0.314                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-dcache-load-misses                                  N/A  thrpt          10544.484                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-dcache-loads                                        N/A  thrpt         239692.639                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-dcache-stores                                       N/A  thrpt         187000.246                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-icache-load-misses                                  N/A  thrpt            668.142                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-load-misses                                        N/A  thrpt              9.811                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-loads                                              N/A  thrpt            781.161                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-store-misses                                       N/A  thrpt           1084.027                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-stores                                             N/A  thrpt           2223.691                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:branch-misses                                          N/A  thrpt            244.625                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:branches                                               N/A  thrpt         281742.298                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:cycles                                                 N/A  thrpt         365338.580                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-load-misses                                       N/A  thrpt              9.410                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-loads                                             N/A  thrpt         248007.712                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-store-misses                                      N/A  thrpt             15.973                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-stores                                            N/A  thrpt         190774.381                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:iTLB-load-misses                                       N/A  thrpt              3.412                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:iTLB-loads                                             N/A  thrpt              7.768                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:instructions                                           N/A  thrpt        1163875.067                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                  N/A  thrpt    5     58254.851 ±    2944.648  ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:CPI                                              N/A  thrpt              0.276                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-load-misses                            N/A  thrpt           1142.642                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-loads                                  N/A  thrpt          41002.649                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-stores                                 N/A  thrpt          24647.665                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-icache-load-misses                            N/A  thrpt              9.317                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-load-misses                                  N/A  thrpt              1.083                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-loads                                        N/A  thrpt              6.524                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-store-misses                                 N/A  thrpt            117.105                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-stores                                       N/A  thrpt            166.546                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:branch-misses                                    N/A  thrpt            107.671                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:branches                                         N/A  thrpt          62220.006                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:cycles                                           N/A  thrpt          66014.954                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-load-misses                                 N/A  thrpt              1.273                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-loads                                       N/A  thrpt          41653.608                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-store-misses                                N/A  thrpt              1.751                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-stores                                      N/A  thrpt          24983.397                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-load-misses                                 N/A  thrpt              0.064                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-loads                                       N/A  thrpt              0.186                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:instructions                                     N/A  thrpt         239544.213                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                 N/A  thrpt    5     42461.976 ±     520.645  ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:CPI                                             N/A  thrpt              0.293                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-load-misses                           N/A  thrpt           1630.616                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-loads                                 N/A  thrpt          72725.616                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-stores                                N/A  thrpt          41409.282                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-icache-load-misses                           N/A  thrpt             25.754                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-load-misses                                 N/A  thrpt              1.790                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-loads                                       N/A  thrpt              9.032                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-store-misses                                N/A  thrpt            240.842                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-stores                                      N/A  thrpt            351.855                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:branch-misses                                   N/A  thrpt            160.266                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:branches                                        N/A  thrpt          66719.049                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:cycles                                          N/A  thrpt          86147.336                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-load-misses                                N/A  thrpt              3.584                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-loads                                      N/A  thrpt          73683.477                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-store-misses                               N/A  thrpt              2.040                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-stores                                     N/A  thrpt          41580.278                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-load-misses                                N/A  thrpt              0.232                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-loads                                      N/A  thrpt              1.030                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:instructions                                    N/A  thrpt         293929.460                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                N/A  thrpt    5     85867.560 ±    2769.537  ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:CPI                                            N/A  thrpt              0.248                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses                          N/A  thrpt            898.645                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-loads                                N/A  thrpt          29294.381                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-stores                               N/A  thrpt          20961.678                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-icache-load-misses                          N/A  thrpt              2.655                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-load-misses                                N/A  thrpt              0.784                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-loads                                      N/A  thrpt              1.979                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-store-misses                               N/A  thrpt            111.669                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-stores                                     N/A  thrpt            156.012                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:branch-misses                                  N/A  thrpt             56.122                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:branches                                       N/A  thrpt          43144.282                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:cycles                                         N/A  thrpt          42339.092                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-load-misses                               N/A  thrpt              1.389                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-loads                                     N/A  thrpt          28945.337                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-store-misses                              N/A  thrpt              1.865                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-stores                                    N/A  thrpt          20873.277                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-load-misses                               N/A  thrpt              0.220                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-loads                                     N/A  thrpt              0.778                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:instructions                                   N/A  thrpt         170883.574                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                        N/A  thrpt    5    103422.144 ±    4220.998  ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:CPI                                    N/A  thrpt              0.234                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  N/A  thrpt            650.203                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        N/A  thrpt          23481.002                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       N/A  thrpt          23225.837                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  N/A  thrpt              1.749                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        N/A  thrpt              0.598                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              N/A  thrpt              1.523                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       N/A  thrpt              0.082                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             N/A  thrpt              0.766                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses                          N/A  thrpt             41.072                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branches                               N/A  thrpt          39745.143                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:cycles                                 N/A  thrpt          36746.136                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       N/A  thrpt              0.080                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             N/A  thrpt          23573.012                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      N/A  thrpt              0.063                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            N/A  thrpt          23385.563                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       N/A  thrpt              0.009                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             N/A  thrpt              0.180                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:instructions                           N/A  thrpt         157150.232                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson                                                     N/A  thrpt    5      7757.227 ±     525.272  ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:CPI                                                 N/A  thrpt              0.371                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-load-misses                               N/A  thrpt          12127.241                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-loads                                     N/A  thrpt         302906.682                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-stores                                    N/A  thrpt         213241.974                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-icache-load-misses                               N/A  thrpt            542.132                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-load-misses                                     N/A  thrpt             50.570                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-loads                                           N/A  thrpt           1480.066                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-store-misses                                    N/A  thrpt            571.547                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-stores                                          N/A  thrpt           2137.511                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:branch-misses                                       N/A  thrpt            447.840                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:branches                                            N/A  thrpt         258702.534                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:cycles                                              N/A  thrpt         488720.693                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-load-misses                                    N/A  thrpt             27.194                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-loads                                          N/A  thrpt         306726.115                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-store-misses                                   N/A  thrpt              2.462                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-stores                                         N/A  thrpt         224407.514                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:iTLB-load-misses                                    N/A  thrpt              2.157                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:iTLB-loads                                          N/A  thrpt              8.772                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:instructions                                        N/A  thrpt        1317173.825                 #/op
[info] IntBenchmark.readCirce                                                                   N/A  thrpt    5   8949741.187 ±   25237.955  ops/s
[info] IntBenchmark.readCirce:CPI                                                               N/A  thrpt              0.310                 #/op
[info] IntBenchmark.readCirce:L1-dcache-load-misses                                             N/A  thrpt             12.699                 #/op
[info] IntBenchmark.readCirce:L1-dcache-loads                                                   N/A  thrpt            176.399                 #/op
[info] IntBenchmark.readCirce:L1-dcache-stores                                                  N/A  thrpt            214.212                 #/op
[info] IntBenchmark.readCirce:L1-icache-load-misses                                             N/A  thrpt              0.173                 #/op
[info] IntBenchmark.readCirce:LLC-load-misses                                                   N/A  thrpt              0.110                 #/op
[info] IntBenchmark.readCirce:LLC-loads                                                         N/A  thrpt              0.154                 #/op
[info] IntBenchmark.readCirce:LLC-store-misses                                                  N/A  thrpt              2.201                 #/op
[info] IntBenchmark.readCirce:LLC-stores                                                        N/A  thrpt              4.213                 #/op
[info] IntBenchmark.readCirce:branch-misses                                                     N/A  thrpt              0.037                 #/op
[info] IntBenchmark.readCirce:branches                                                          N/A  thrpt            304.826                 #/op
[info] IntBenchmark.readCirce:cycles                                                            N/A  thrpt            436.156                 #/op
[info] IntBenchmark.readCirce:dTLB-load-misses                                                  N/A  thrpt              0.095                 #/op
[info] IntBenchmark.readCirce:dTLB-loads                                                        N/A  thrpt            182.348                 #/op
[info] IntBenchmark.readCirce:dTLB-store-misses                                                 N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readCirce:dTLB-stores                                                       N/A  thrpt            225.423                 #/op
[info] IntBenchmark.readCirce:iTLB-load-misses                                                  N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readCirce:iTLB-loads                                                        N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readCirce:instructions                                                      N/A  thrpt           1406.481                 #/op
[info] IntBenchmark.readDslJsonJava                                                             N/A  thrpt    5  37981734.557 ±   76753.097  ops/s
[info] IntBenchmark.readDslJsonJava:CPI                                                         N/A  thrpt              0.231                 #/op
[info] IntBenchmark.readDslJsonJava:L1-dcache-load-misses                                       N/A  thrpt              0.030                 #/op
[info] IntBenchmark.readDslJsonJava:L1-dcache-loads                                             N/A  thrpt             54.804                 #/op
[info] IntBenchmark.readDslJsonJava:L1-dcache-stores                                            N/A  thrpt             20.415                 #/op
[info] IntBenchmark.readDslJsonJava:L1-icache-load-misses                                       N/A  thrpt              0.019                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-load-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-loads                                                   N/A  thrpt              0.004                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-store-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-stores                                                  N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:branch-misses                                               N/A  thrpt              0.006                 #/op
[info] IntBenchmark.readDslJsonJava:branches                                                    N/A  thrpt            116.794                 #/op
[info] IntBenchmark.readDslJsonJava:cycles                                                      N/A  thrpt            100.364                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-load-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-loads                                                  N/A  thrpt             54.865                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-store-misses                                           N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-stores                                                 N/A  thrpt             20.371                 #/op
[info] IntBenchmark.readDslJsonJava:iTLB-load-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:iTLB-loads                                                  N/A  thrpt              0.002                 #/op
[info] IntBenchmark.readDslJsonJava:instructions                                                N/A  thrpt            435.143                 #/op
[info] IntBenchmark.readJacksonScala                                                            N/A  thrpt    5  10166492.756 ±   56345.509  ops/s
[info] IntBenchmark.readJacksonScala:CPI                                                        N/A  thrpt              0.319                 #/op
[info] IntBenchmark.readJacksonScala:L1-dcache-load-misses                                      N/A  thrpt              8.255                 #/op
[info] IntBenchmark.readJacksonScala:L1-dcache-loads                                            N/A  thrpt            249.600                 #/op
[info] IntBenchmark.readJacksonScala:L1-dcache-stores                                           N/A  thrpt            251.842                 #/op
[info] IntBenchmark.readJacksonScala:L1-icache-load-misses                                      N/A  thrpt              0.065                 #/op
[info] IntBenchmark.readJacksonScala:LLC-load-misses                                            N/A  thrpt              0.007                 #/op
[info] IntBenchmark.readJacksonScala:LLC-loads                                                  N/A  thrpt              0.033                 #/op
[info] IntBenchmark.readJacksonScala:LLC-store-misses                                           N/A  thrpt              0.161                 #/op
[info] IntBenchmark.readJacksonScala:LLC-stores                                                 N/A  thrpt              1.871                 #/op
[info] IntBenchmark.readJacksonScala:branch-misses                                              N/A  thrpt              0.024                 #/op
[info] IntBenchmark.readJacksonScala:branches                                                   N/A  thrpt            196.034                 #/op
[info] IntBenchmark.readJacksonScala:cycles                                                     N/A  thrpt            359.000                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-load-misses                                           N/A  thrpt              0.011                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-loads                                                 N/A  thrpt            256.334                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-store-misses                                          N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-stores                                                N/A  thrpt            251.428                 #/op
[info] IntBenchmark.readJacksonScala:iTLB-load-misses                                           N/A  thrpt              0.002                 #/op
[info] IntBenchmark.readJacksonScala:iTLB-loads                                                 N/A  thrpt              0.004                 #/op
[info] IntBenchmark.readJacksonScala:instructions                                               N/A  thrpt           1126.199                 #/op
[info] IntBenchmark.readJsoniterScala                                                           N/A  thrpt    5  45375074.561 ± 5772581.976  ops/s
[info] IntBenchmark.readJsoniterScala:CPI                                                       N/A  thrpt              0.217                 #/op
[info] IntBenchmark.readJsoniterScala:L1-dcache-load-misses                                     N/A  thrpt              0.030                 #/op
[info] IntBenchmark.readJsoniterScala:L1-dcache-loads                                           N/A  thrpt             53.892                 #/op
[info] IntBenchmark.readJsoniterScala:L1-dcache-stores                                          N/A  thrpt             20.478                 #/op
[info] IntBenchmark.readJsoniterScala:L1-icache-load-misses                                     N/A  thrpt              0.026                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-load-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-loads                                                 N/A  thrpt              0.005                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-store-misses                                          N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-stores                                                N/A  thrpt              0.006                 #/op
[info] IntBenchmark.readJsoniterScala:branch-misses                                             N/A  thrpt              0.004                 #/op
[info] IntBenchmark.readJsoniterScala:branches                                                  N/A  thrpt             83.307                 #/op
[info] IntBenchmark.readJsoniterScala:cycles                                                    N/A  thrpt             79.002                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-load-misses                                          N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-loads                                                N/A  thrpt             53.512                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-store-misses                                         N/A  thrpt             ≈ 10⁻⁵                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-stores                                               N/A  thrpt             20.459                 #/op
[info] IntBenchmark.readJsoniterScala:iTLB-load-misses                                          N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readJsoniterScala:iTLB-loads                                                N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJsoniterScala:instructions                                              N/A  thrpt            364.616                 #/op
[info] IntBenchmark.readNaiveScala                                                              N/A  thrpt    5  31580302.085 ±  225303.572  ops/s
[info] IntBenchmark.readNaiveScala:CPI                                                          N/A  thrpt              0.214                 #/op
[info] IntBenchmark.readNaiveScala:L1-dcache-load-misses                                        N/A  thrpt              0.676                 #/op
[info] IntBenchmark.readNaiveScala:L1-dcache-loads                                              N/A  thrpt             59.570                 #/op
[info] IntBenchmark.readNaiveScala:L1-dcache-stores                                             N/A  thrpt             27.286                 #/op
[info] IntBenchmark.readNaiveScala:L1-icache-load-misses                                        N/A  thrpt              0.009                 #/op
[info] IntBenchmark.readNaiveScala:LLC-load-misses                                              N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readNaiveScala:LLC-loads                                                    N/A  thrpt              0.003                 #/op
[info] IntBenchmark.readNaiveScala:LLC-store-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readNaiveScala:LLC-stores                                                   N/A  thrpt              0.040                 #/op
[info] IntBenchmark.readNaiveScala:branch-misses                                                N/A  thrpt              0.016                 #/op
[info] IntBenchmark.readNaiveScala:branches                                                     N/A  thrpt            129.063                 #/op
[info] IntBenchmark.readNaiveScala:cycles                                                       N/A  thrpt            121.888                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-load-misses                                             N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-loads                                                   N/A  thrpt             60.479                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-store-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-stores                                                  N/A  thrpt             27.749                 #/op
[info] IntBenchmark.readNaiveScala:iTLB-load-misses                                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readNaiveScala:iTLB-loads                                                   N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readNaiveScala:instructions                                                 N/A  thrpt            568.850                 #/op
[info] IntBenchmark.readPlayJson                                                                N/A  thrpt    5   8960061.226 ±  145177.338  ops/s
[info] IntBenchmark.readPlayJson:CPI                                                            N/A  thrpt              0.318                 #/op
[info] IntBenchmark.readPlayJson:L1-dcache-load-misses                                          N/A  thrpt              9.989                 #/op
[info] IntBenchmark.readPlayJson:L1-dcache-loads                                                N/A  thrpt            296.340                 #/op
[info] IntBenchmark.readPlayJson:L1-dcache-stores                                               N/A  thrpt            301.469                 #/op
[info] IntBenchmark.readPlayJson:L1-icache-load-misses                                          N/A  thrpt              0.098                 #/op
[info] IntBenchmark.readPlayJson:LLC-load-misses                                                N/A  thrpt              0.017                 #/op
[info] IntBenchmark.readPlayJson:LLC-loads                                                      N/A  thrpt              0.072                 #/op
[info] IntBenchmark.readPlayJson:LLC-store-misses                                               N/A  thrpt              0.473                 #/op
[info] IntBenchmark.readPlayJson:LLC-stores                                                     N/A  thrpt              1.866                 #/op
[info] IntBenchmark.readPlayJson:branch-misses                                                  N/A  thrpt              0.034                 #/op
[info] IntBenchmark.readPlayJson:branches                                                       N/A  thrpt            225.051                 #/op
[info] IntBenchmark.readPlayJson:cycles                                                         N/A  thrpt            429.006                 #/op
[info] IntBenchmark.readPlayJson:dTLB-load-misses                                               N/A  thrpt              0.023                 #/op
[info] IntBenchmark.readPlayJson:dTLB-loads                                                     N/A  thrpt            305.704                 #/op
[info] IntBenchmark.readPlayJson:dTLB-store-misses                                              N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readPlayJson:dTLB-stores                                                    N/A  thrpt            306.146                 #/op
[info] IntBenchmark.readPlayJson:iTLB-load-misses                                               N/A  thrpt              0.002                 #/op
[info] IntBenchmark.readPlayJson:iTLB-loads                                                     N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readPlayJson:instructions                                                   N/A  thrpt           1348.151                 #/op
[info] IntBenchmark.writeCirce                                                                  N/A  thrpt    5  13648642.471 ±  376725.185  ops/s
[info] IntBenchmark.writeCirce:CPI                                                              N/A  thrpt              0.306                 #/op
[info] IntBenchmark.writeCirce:L1-dcache-load-misses                                            N/A  thrpt              3.003                 #/op
[info] IntBenchmark.writeCirce:L1-dcache-loads                                                  N/A  thrpt            164.813                 #/op
[info] IntBenchmark.writeCirce:L1-dcache-stores                                                 N/A  thrpt            100.652                 #/op
[info] IntBenchmark.writeCirce:L1-icache-load-misses                                            N/A  thrpt              0.079                 #/op
[info] IntBenchmark.writeCirce:LLC-load-misses                                                  N/A  thrpt              0.005                 #/op
[info] IntBenchmark.writeCirce:LLC-loads                                                        N/A  thrpt              0.022                 #/op
[info] IntBenchmark.writeCirce:LLC-store-misses                                                 N/A  thrpt              0.016                 #/op
[info] IntBenchmark.writeCirce:LLC-stores                                                       N/A  thrpt              0.346                 #/op
[info] IntBenchmark.writeCirce:branch-misses                                                    N/A  thrpt              0.006                 #/op
[info] IntBenchmark.writeCirce:branches                                                         N/A  thrpt            183.077                 #/op
[info] IntBenchmark.writeCirce:cycles                                                           N/A  thrpt            277.542                 #/op
[info] IntBenchmark.writeCirce:dTLB-load-misses                                                 N/A  thrpt              0.003                 #/op
[info] IntBenchmark.writeCirce:dTLB-loads                                                       N/A  thrpt            163.776                 #/op
[info] IntBenchmark.writeCirce:dTLB-store-misses                                                N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.writeCirce:dTLB-stores                                                      N/A  thrpt             97.198                 #/op
[info] IntBenchmark.writeCirce:iTLB-load-misses                                                 N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeCirce:iTLB-loads                                                       N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeCirce:instructions                                                     N/A  thrpt            907.119                 #/op
[info] IntBenchmark.writeDslJsonJava                                                            N/A  thrpt    5  41115373.918 ± 1057855.195  ops/s
[info] IntBenchmark.writeDslJsonJava:CPI                                                        N/A  thrpt              0.391                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-dcache-load-misses                                      N/A  thrpt              0.548                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-dcache-loads                                            N/A  thrpt             50.983                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-dcache-stores                                           N/A  thrpt             32.590                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-icache-load-misses                                      N/A  thrpt              0.012                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-load-misses                                            N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-loads                                                  N/A  thrpt              0.006                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-store-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-stores                                                 N/A  thrpt              0.031                 #/op
[info] IntBenchmark.writeDslJsonJava:branch-misses                                              N/A  thrpt              0.016                 #/op
[info] IntBenchmark.writeDslJsonJava:branches                                                   N/A  thrpt             48.612                 #/op
[info] IntBenchmark.writeDslJsonJava:cycles                                                     N/A  thrpt             94.095                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-load-misses                                           N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-loads                                                 N/A  thrpt             51.833                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-store-misses                                          N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-stores                                                N/A  thrpt             33.131                 #/op
[info] IntBenchmark.writeDslJsonJava:iTLB-load-misses                                           N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.writeDslJsonJava:iTLB-loads                                                 N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeDslJsonJava:instructions                                               N/A  thrpt            240.548                 #/op
[info] IntBenchmark.writeJacksonScala                                                           N/A  thrpt    5  13148350.133 ±  334987.953  ops/s
[info] IntBenchmark.writeJacksonScala:CPI                                                       N/A  thrpt              0.329                 #/op
[info] IntBenchmark.writeJacksonScala:L1-dcache-load-misses                                     N/A  thrpt              5.042                 #/op
[info] IntBenchmark.writeJacksonScala:L1-dcache-loads                                           N/A  thrpt            220.399                 #/op
[info] IntBenchmark.writeJacksonScala:L1-dcache-stores                                          N/A  thrpt            191.152                 #/op
[info] IntBenchmark.writeJacksonScala:L1-icache-load-misses                                     N/A  thrpt              0.022                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-load-misses                                           N/A  thrpt              0.003                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-loads                                                 N/A  thrpt              0.013                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-store-misses                                          N/A  thrpt              0.053                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-stores                                                N/A  thrpt              0.610                 #/op
[info] IntBenchmark.writeJacksonScala:branch-misses                                             N/A  thrpt              0.019                 #/op
[info] IntBenchmark.writeJacksonScala:branches                                                  N/A  thrpt            157.142                 #/op
[info] IntBenchmark.writeJacksonScala:cycles                                                    N/A  thrpt            287.568                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-load-misses                                          N/A  thrpt              0.008                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-loads                                                N/A  thrpt            213.941                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-store-misses                                         N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-stores                                               N/A  thrpt            182.114                 #/op
[info] IntBenchmark.writeJacksonScala:iTLB-load-misses                                          N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJacksonScala:iTLB-loads                                                N/A  thrpt              0.004                 #/op
[info] IntBenchmark.writeJacksonScala:instructions                                              N/A  thrpt            874.633                 #/op
[info] IntBenchmark.writeJsoniterScala                                                          N/A  thrpt    5  47834409.071 ±  244999.698  ops/s
[info] IntBenchmark.writeJsoniterScala:CPI                                                      N/A  thrpt              0.239                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-dcache-load-misses                                    N/A  thrpt              0.521                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-dcache-loads                                          N/A  thrpt             62.136                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-dcache-stores                                         N/A  thrpt             38.463                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-icache-load-misses                                    N/A  thrpt              0.012                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-load-misses                                          N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-loads                                                N/A  thrpt              0.005                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-store-misses                                         N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-stores                                               N/A  thrpt              0.031                 #/op
[info] IntBenchmark.writeJsoniterScala:branch-misses                                            N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:branches                                                 N/A  thrpt             71.082                 #/op
[info] IntBenchmark.writeJsoniterScala:cycles                                                   N/A  thrpt             79.775                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-load-misses                                         N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-loads                                               N/A  thrpt             60.548                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-store-misses                                        N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-stores                                              N/A  thrpt             37.043                 #/op
[info] IntBenchmark.writeJsoniterScala:iTLB-load-misses                                         N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScala:iTLB-loads                                               N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScala:instructions                                             N/A  thrpt            334.474                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                  N/A  thrpt    5  59848183.671 ±   79522.554  ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:CPI                                              N/A  thrpt              0.238                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                            N/A  thrpt              0.021                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                                  N/A  thrpt             53.757                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                                 N/A  thrpt             33.893                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                            N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                                  N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                        N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                                 N/A  thrpt             ≈ 10⁻⁵                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                       N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:branch-misses                                    N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:branches                                         N/A  thrpt             44.661                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:cycles                                           N/A  thrpt             63.079                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                       N/A  thrpt             54.147                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                                N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                      N/A  thrpt             34.020                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                       N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:instructions                                     N/A  thrpt            264.587                 #/op
[info] IntBenchmark.writeNaiveScala                                                             N/A  thrpt    5  17600863.456 ±  601780.928  ops/s
[info] IntBenchmark.writeNaiveScala:CPI                                                         N/A  thrpt              0.322                 #/op
[info] IntBenchmark.writeNaiveScala:L1-dcache-load-misses                                       N/A  thrpt              2.325                 #/op
[info] IntBenchmark.writeNaiveScala:L1-dcache-loads                                             N/A  thrpt            108.423                 #/op
[info] IntBenchmark.writeNaiveScala:L1-dcache-stores                                            N/A  thrpt             70.752                 #/op
[info] IntBenchmark.writeNaiveScala:L1-icache-load-misses                                       N/A  thrpt              0.038                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-load-misses                                             N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-loads                                                   N/A  thrpt              0.011                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-store-misses                                            N/A  thrpt              0.016                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-stores                                                  N/A  thrpt              0.210                 #/op
[info] IntBenchmark.writeNaiveScala:branch-misses                                               N/A  thrpt              0.019                 #/op
[info] IntBenchmark.writeNaiveScala:branches                                                    N/A  thrpt            145.113                 #/op
[info] IntBenchmark.writeNaiveScala:cycles                                                      N/A  thrpt            215.030                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-load-misses                                            N/A  thrpt              0.004                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-loads                                                  N/A  thrpt            106.175                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-store-misses                                           N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-stores                                                 N/A  thrpt             69.476                 #/op
[info] IntBenchmark.writeNaiveScala:iTLB-load-misses                                            N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeNaiveScala:iTLB-loads                                                  N/A  thrpt              0.003                 #/op
[info] IntBenchmark.writeNaiveScala:instructions                                                N/A  thrpt            668.628                 #/op
[info] IntBenchmark.writePlayJson                                                               N/A  thrpt    5   2775720.837 ±   14126.688  ops/s
[info] IntBenchmark.writePlayJson:CPI                                                           N/A  thrpt              0.353                 #/op
[info] IntBenchmark.writePlayJson:L1-dcache-load-misses                                         N/A  thrpt             18.911                 #/op
[info] IntBenchmark.writePlayJson:L1-dcache-loads                                               N/A  thrpt            715.219                 #/op
[info] IntBenchmark.writePlayJson:L1-dcache-stores                                              N/A  thrpt            571.096                 #/op
[info] IntBenchmark.writePlayJson:L1-icache-load-misses                                         N/A  thrpt              0.294                 #/op
[info] IntBenchmark.writePlayJson:LLC-load-misses                                               N/A  thrpt              0.024                 #/op
[info] IntBenchmark.writePlayJson:LLC-loads                                                     N/A  thrpt              0.108                 #/op
[info] IntBenchmark.writePlayJson:LLC-store-misses                                              N/A  thrpt              0.159                 #/op
[info] IntBenchmark.writePlayJson:LLC-stores                                                    N/A  thrpt              3.552                 #/op
[info] IntBenchmark.writePlayJson:branch-misses                                                 N/A  thrpt              0.134                 #/op
[info] IntBenchmark.writePlayJson:branches                                                      N/A  thrpt            798.367                 #/op
[info] IntBenchmark.writePlayJson:cycles                                                        N/A  thrpt           1364.669                 #/op
[info] IntBenchmark.writePlayJson:dTLB-load-misses                                              N/A  thrpt              0.022                 #/op
[info] IntBenchmark.writePlayJson:dTLB-loads                                                    N/A  thrpt            732.981                 #/op
[info] IntBenchmark.writePlayJson:dTLB-store-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writePlayJson:dTLB-stores                                                   N/A  thrpt            574.022                 #/op
[info] IntBenchmark.writePlayJson:iTLB-load-misses                                              N/A  thrpt              0.006                 #/op
[info] IntBenchmark.writePlayJson:iTLB-loads                                                    N/A  thrpt              0.004                 #/op
[info] IntBenchmark.writePlayJson:instructions                                                  N/A  thrpt           3871.092                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                              128  thrpt    5    169188.949 ±    1464.767  ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.292                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt            489.485                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt          15481.977                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt          17033.800                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              4.920                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.606                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              2.927                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              4.794                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             79.219                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:branch-misses                                128  thrpt              1.320                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:branches                                     128  thrpt          12755.813                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:cycles                                       128  thrpt          22690.327                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.372                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt          15151.889                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.045                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt          16684.575                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.170                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.425                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:instructions                                 128  thrpt          77778.054                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson                                                   128  thrpt    5     34431.382 ±     797.870  ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:CPI                                               128  thrpt              0.327                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           3262.444                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          86014.921                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          61983.883                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt            640.987                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              3.249                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-loads                                         128  thrpt             97.548                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             59.037                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-stores                                        128  thrpt            331.328                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:branch-misses                                     128  thrpt            141.925                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:branches                                          128  thrpt          53516.144                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:cycles                                            128  thrpt         112506.808                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              7.950                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          90596.517                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.115                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          67052.229                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.394                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              1.265                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:instructions                                      128  thrpt         344189.035                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    144819.359 ±    1191.111  ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.292                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt            299.300                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt          19248.634                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt          11106.291                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.989                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.318                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              2.799                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt             18.379                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt             48.374                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:branch-misses                                128  thrpt             20.439                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:branches                                     128  thrpt          19837.098                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:cycles                                       128  thrpt          26337.606                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              1.400                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt          19822.703                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.019                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt          11062.742                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.069                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.148                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:instructions                                 128  thrpt          90170.596                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5    435400.904 ±   30146.772  ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.279                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt            120.034                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           6093.444                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           5682.862                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.345                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.266                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.854                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt             21.076                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt             34.872                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              1.683                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:branches                                    128  thrpt           6867.610                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:cycles                                      128  thrpt           8733.181                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.623                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           5932.299                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.016                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           5432.149                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.065                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.176                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:instructions                                128  thrpt          31303.297                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    480201.918 ±   25924.992  ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.261                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt             75.006                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           6034.568                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           5389.653                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              1.681                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.175                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.754                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.345                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              4.927                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              0.439                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           6699.027                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           7991.753                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.192                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           5899.496                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.010                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           5175.545                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.025                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.026                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          30672.169                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson                                                  128  thrpt    5     62089.381 ±     429.669  ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:CPI                                              128  thrpt              0.298                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt           1015.180                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt          49806.420                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt          27456.249                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt             93.582                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              1.774                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-loads                                        128  thrpt              6.485                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             46.999                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-stores                                       128  thrpt            131.331                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:branch-misses                                    128  thrpt             70.364                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:branches                                         128  thrpt          40351.195                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:cycles                                           128  thrpt          58692.167                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              1.928                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-loads                                       128  thrpt          49294.118                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.037                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-stores                                      128  thrpt          27298.295                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.294                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              0.846                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:instructions                                     128  thrpt         196939.263                 #/op
[info] ListOfBooleansBenchmark.readCirce                                                        128  thrpt    5    319239.962 ±    1471.124  ops/s
[info] ListOfBooleansBenchmark.readCirce:CPI                                                    128  thrpt              0.257                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt            184.318                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-dcache-loads                                        128  thrpt          10909.743                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-dcache-stores                                       128  thrpt           6148.706                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt              0.629                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-load-misses                                        128  thrpt              0.173                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-loads                                              128  thrpt              0.826                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-store-misses                                       128  thrpt             22.732                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-stores                                             128  thrpt             50.432                 #/op
[info] ListOfBooleansBenchmark.readCirce:branch-misses                                          128  thrpt             11.209                 #/op
[info] ListOfBooleansBenchmark.readCirce:branches                                               128  thrpt          11276.916                 #/op
[info] ListOfBooleansBenchmark.readCirce:cycles                                                 128  thrpt          12004.965                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-load-misses                                       128  thrpt              0.670                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-loads                                             128  thrpt          11066.192                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.017                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-stores                                            128  thrpt           6093.372                 #/op
[info] ListOfBooleansBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              0.058                 #/op
[info] ListOfBooleansBenchmark.readCirce:iTLB-loads                                             128  thrpt              0.140                 #/op
[info] ListOfBooleansBenchmark.readCirce:instructions                                           128  thrpt          46732.517                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala                                                 128  thrpt    5    472719.509 ±   34864.647  ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:CPI                                             128  thrpt              0.277                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt             75.560                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt           6349.429                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt           4075.988                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt              2.407                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              0.089                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-loads                                       128  thrpt              0.882                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              0.562                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-stores                                      128  thrpt              6.633                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:branch-misses                                   128  thrpt              3.325                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:branches                                        128  thrpt           6610.963                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:cycles                                          128  thrpt           7995.997                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              0.097                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt           6462.812                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.004                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt           4151.069                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.035                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              0.060                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:instructions                                    128  thrpt          28853.742                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala                                                128  thrpt    5   1346370.248 ±   36591.696  ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.232                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt             50.154                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt           2420.986                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt           1995.615                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              0.361                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.091                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              0.304                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              0.422                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt              3.516                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:branch-misses                                  128  thrpt              1.277                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:branches                                       128  thrpt           2907.214                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:cycles                                         128  thrpt           2840.211                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.027                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt           2434.449                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.003                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt           1986.283                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.019                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.049                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:instructions                                   128  thrpt          12256.738                 #/op
[info] ListOfBooleansBenchmark.readPlayJson                                                     128  thrpt    5     99927.035 ±    9020.516  ops/s
[info] ListOfBooleansBenchmark.readPlayJson:CPI                                                 128  thrpt              0.317                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt            936.795                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          33733.749                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          22469.844                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt             32.979                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              0.370                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-loads                                           128  thrpt              5.471                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             30.565                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-stores                                          128  thrpt            202.538                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:branch-misses                                       128  thrpt             37.993                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:branches                                            128  thrpt          21462.273                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:cycles                                              128  thrpt          37651.189                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              3.520                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          35398.303                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.146                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          23134.449                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.147                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              0.336                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:instructions                                        128  thrpt         118736.502                 #/op
[info] ListOfBooleansBenchmark.writeCirce                                                       128  thrpt    5    311790.492 ±   27274.667  ops/s
[info] ListOfBooleansBenchmark.writeCirce:CPI                                                   128  thrpt              0.275                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt             89.321                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          11776.063                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt           7157.107                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt              0.551                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              0.197                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-loads                                             128  thrpt              0.714                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-store-misses                                      128  thrpt             47.050                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-stores                                            128  thrpt             64.696                 #/op
[info] ListOfBooleansBenchmark.writeCirce:branch-misses                                         128  thrpt             14.928                 #/op
[info] ListOfBooleansBenchmark.writeCirce:branches                                              128  thrpt          10106.867                 #/op
[info] ListOfBooleansBenchmark.writeCirce:cycles                                                128  thrpt          12316.593                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              1.232                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-loads                                            128  thrpt          11657.030                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              0.025                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-stores                                           128  thrpt           6840.040                 #/op
[info] ListOfBooleansBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.068                 #/op
[info] ListOfBooleansBenchmark.writeCirce:iTLB-loads                                            128  thrpt              0.147                 #/op
[info] ListOfBooleansBenchmark.writeCirce:instructions                                          128  thrpt          44714.184                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala                                                128  thrpt    5    823985.981 ±    8630.500  ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.271                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt             20.150                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt           4395.741                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt           2399.075                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt              0.572                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.063                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              0.251                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt              3.237                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt              6.983                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:branch-misses                                  128  thrpt              1.699                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:branches                                       128  thrpt           3544.051                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:cycles                                         128  thrpt           4671.078                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              0.167                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt           4478.757                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.001                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt           2421.935                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.003                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              0.008                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:instructions                                   128  thrpt          17248.093                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala                                               128  thrpt    5   2208133.368 ±  211416.652  ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.230                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt             12.142                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt           1007.832                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt           1261.004                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt              0.079                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.032                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              0.066                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt              3.083                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt              6.895                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt              1.224                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:branches                                      128  thrpt           2011.222                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:cycles                                        128  thrpt           1693.041                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              0.178                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt            998.610                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.002                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt           1215.594                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.010                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.018                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:instructions                                  128  thrpt           7373.607                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   2531581.279 ±   10191.157  ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.220                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt              0.342                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt            961.075                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt           1137.426                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              0.040                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              0.021                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              0.040                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              0.005                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt              0.009                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt              1.058                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt           1904.249                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt           1522.002                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.015                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt            945.212                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt             ≈ 10⁻³                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt           1127.096                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.001                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.002                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt           6912.016                 #/op
[info] ListOfBooleansBenchmark.writePlayJson                                                    128  thrpt    5    455997.825 ±   12133.420  ops/s
[info] ListOfBooleansBenchmark.writePlayJson:CPI                                                128  thrpt              0.267                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                              128  thrpt             40.837                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                    128  thrpt           9132.211                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                   128  thrpt           3208.250                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                              128  thrpt              0.378                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-load-misses                                    128  thrpt              0.289                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-loads                                          128  thrpt              0.640                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-store-misses                                   128  thrpt              3.992                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-stores                                         128  thrpt             14.119                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:branch-misses                                      128  thrpt              4.165                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:branches                                           128  thrpt           6866.676                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:cycles                                             128  thrpt           8495.615                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                   128  thrpt              0.392                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-loads                                         128  thrpt           8649.353                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                  128  thrpt              0.008                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-stores                                        128  thrpt           3088.125                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                   128  thrpt              0.004                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:iTLB-loads                                         128  thrpt              0.021                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:instructions                                       128  thrpt          31779.923                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce                                                   128  thrpt    5     57520.251 ±    4142.059  ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:CPI                                               128  thrpt              0.292                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses                             128  thrpt           1066.567                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads                                   128  thrpt          44831.390                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores                                  128  thrpt          31217.442                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses                             128  thrpt             71.632                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses                                   128  thrpt              0.546                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-loads                                         128  thrpt              5.669                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses                                  128  thrpt             70.143                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-stores                                        128  thrpt            233.963                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:branch-misses                                     128  thrpt            153.149                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:branches                                          128  thrpt          48582.936                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:cycles                                            128  thrpt          64884.856                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses                                  128  thrpt              3.451                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-loads                                        128  thrpt          44606.604                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses                                 128  thrpt              0.108                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-stores                                       128  thrpt          30806.977                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses                                  128  thrpt              0.441                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:iTLB-loads                                        128  thrpt              1.054                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:instructions                                      128  thrpt         222415.112                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                            128  thrpt    5     93428.436 ±     784.748  ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:CPI                                        128  thrpt              0.307                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                      128  thrpt            820.714                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads                            128  thrpt          24748.881                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores                           128  thrpt          18884.791                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses                      128  thrpt            127.812                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses                            128  thrpt              0.533                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads                                  128  thrpt              5.941                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses                           128  thrpt             10.102                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores                                 128  thrpt             98.710                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses                              128  thrpt             39.204                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:branches                                   128  thrpt          23462.760                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:cycles                                     128  thrpt          40633.450                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses                           128  thrpt              1.435                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads                                 128  thrpt          25360.012                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses                          128  thrpt              0.041                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores                                128  thrpt          19265.747                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses                           128  thrpt              0.164                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads                                 128  thrpt              0.461                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:instructions                               128  thrpt         132389.367                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                           128  thrpt    5    166550.775 ±    8815.202  ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:CPI                                       128  thrpt              0.274                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                     128  thrpt            420.488                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads                           128  thrpt          15182.769                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores                          128  thrpt          13054.622                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                     128  thrpt              4.525                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses                           128  thrpt              0.649                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads                                 128  thrpt              3.364                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses                          128  thrpt              8.003                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores                                128  thrpt             84.466                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses                             128  thrpt             38.066                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:branches                                  128  thrpt          16287.355                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:cycles                                    128  thrpt          23141.827                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses                          128  thrpt              0.873                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads                                128  thrpt          15095.576                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses                         128  thrpt              0.040                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores                               128  thrpt          12782.516                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses                          128  thrpt              0.243                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads                                128  thrpt              0.653                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:instructions                              128  thrpt          84337.389                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                128  thrpt    5     33625.996 ±     569.098  ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:CPI                                            128  thrpt              0.357                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses                          128  thrpt           3153.788                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads                                128  thrpt          78279.701                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores                               128  thrpt          54050.458                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses                          128  thrpt            529.503                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses                                128  thrpt              5.857                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads                                      128  thrpt             71.434                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses                               128  thrpt             61.247                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores                                     128  thrpt            348.483                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:branch-misses                                  128  thrpt            537.462                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:branches                                       128  thrpt          52887.404                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:cycles                                         128  thrpt         114110.397                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses                               128  thrpt              9.916                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads                                     128  thrpt          77935.617                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses                              128  thrpt              0.134                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores                                    128  thrpt          54959.662                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses                               128  thrpt              0.351                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads                                     128  thrpt              2.323                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:instructions                                   128  thrpt         320023.008                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                           128  thrpt    5    160557.293 ±    9202.175  ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:CPI                                       128  thrpt              0.276                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                     128  thrpt            299.557                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads                           128  thrpt          17718.205                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores                          128  thrpt           9505.265                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                     128  thrpt              1.005                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses                           128  thrpt              0.249                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads                                 128  thrpt              1.832                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses                          128  thrpt             17.835                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores                                128  thrpt             37.887                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses                             128  thrpt              5.879                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:branches                                  128  thrpt          19409.797                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:cycles                                    128  thrpt          23589.109                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses                          128  thrpt              0.699                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads                                128  thrpt          17606.849                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses                         128  thrpt              0.023                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores                               128  thrpt           9304.745                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses                          128  thrpt              0.053                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads                                128  thrpt              0.165                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:instructions                              128  thrpt          85426.083                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                          128  thrpt    5    459524.597 ±   12771.547  ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI                                      128  thrpt              0.277                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                    128  thrpt             32.940                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                          128  thrpt           6185.757                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                         128  thrpt           4617.788                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                    128  thrpt              0.521                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses                          128  thrpt              0.103                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads                                128  thrpt              0.322                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses                         128  thrpt             19.708                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores                               128  thrpt             23.292                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses                            128  thrpt              1.446                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:branches                                 128  thrpt           6195.862                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles                                   128  thrpt           8286.987                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                         128  thrpt              0.429                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads                               128  thrpt           6135.314                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                        128  thrpt              0.006                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores                              128  thrpt           4515.316                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                         128  thrpt              0.031                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads                               128  thrpt              0.054                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions                             128  thrpt          29906.455                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                  128  thrpt    5    482943.042 ±    5050.461  ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                              128  thrpt              0.274                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses            128  thrpt             34.025                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                  128  thrpt           6131.200                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                 128  thrpt           4356.699                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses            128  thrpt              0.181                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                  128  thrpt              0.071                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                        128  thrpt              0.209                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                 128  thrpt              0.050                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                       128  thrpt              0.081                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                    128  thrpt              0.586                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches                         128  thrpt           5930.915                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                           128  thrpt           7930.477                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                 128  thrpt              0.043                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                       128  thrpt           6104.679                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                128  thrpt              0.001                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                      128  thrpt           4340.733                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                 128  thrpt              0.005                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                       128  thrpt              0.013                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                     128  thrpt          28948.543                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                               128  thrpt    5     63265.299 ±    1176.980  ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:CPI                                           128  thrpt              0.308                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses                         128  thrpt           1011.476                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads                               128  thrpt          49565.362                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores                              128  thrpt          26013.861                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses                         128  thrpt             32.685                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses                               128  thrpt              0.793                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads                                     128  thrpt              4.973                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses                              128  thrpt             43.103                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores                                    128  thrpt            119.794                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:branch-misses                                 128  thrpt             65.185                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:branches                                      128  thrpt          36310.589                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:cycles                                        128  thrpt          57990.613                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses                              128  thrpt              1.852                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads                                    128  thrpt          51061.063                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses                             128  thrpt              0.033                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores                                   128  thrpt          26396.685                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses                              128  thrpt              0.280                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads                                    128  thrpt              1.025                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:instructions                                  128  thrpt         188264.226                 #/op
[info] MissingReqFieldBenchmark.readCirce                                                       N/A  thrpt    5   2959292.040 ±   17096.363  ops/s
[info] MissingReqFieldBenchmark.readCirce:CPI                                                   N/A  thrpt              0.457                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-dcache-load-misses                                 N/A  thrpt             31.480                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-dcache-loads                                       N/A  thrpt            611.051                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-dcache-stores                                      N/A  thrpt            688.937                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-icache-load-misses                                 N/A  thrpt              0.144                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-load-misses                                       N/A  thrpt              0.063                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-loads                                             N/A  thrpt              0.190                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-store-misses                                      N/A  thrpt              8.125                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-stores                                            N/A  thrpt             12.620                 #/op
[info] MissingReqFieldBenchmark.readCirce:branch-misses                                         N/A  thrpt              0.067                 #/op
[info] MissingReqFieldBenchmark.readCirce:branches                                              N/A  thrpt            522.541                 #/op
[info] MissingReqFieldBenchmark.readCirce:cycles                                                N/A  thrpt           1278.891                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-load-misses                                      N/A  thrpt              0.131                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-loads                                            N/A  thrpt            586.910                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-store-misses                                     N/A  thrpt              0.002                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-stores                                           N/A  thrpt            672.143                 #/op
[info] MissingReqFieldBenchmark.readCirce:iTLB-load-misses                                      N/A  thrpt              0.013                 #/op
[info] MissingReqFieldBenchmark.readCirce:iTLB-loads                                            N/A  thrpt              0.016                 #/op
[info] MissingReqFieldBenchmark.readCirce:instructions                                          N/A  thrpt           2801.295                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava                                                 N/A  thrpt    5    796808.193 ±   76760.470  ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:CPI                                             N/A  thrpt              0.378                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-load-misses                           N/A  thrpt             92.528                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-loads                                 N/A  thrpt           4335.304                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-stores                                N/A  thrpt           2073.767                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-icache-load-misses                           N/A  thrpt              0.435                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-load-misses                                 N/A  thrpt              0.037                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-loads                                       N/A  thrpt              0.363                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-store-misses                                N/A  thrpt              0.492                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-stores                                      N/A  thrpt              1.835                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:branch-misses                                   N/A  thrpt              3.560                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:branches                                        N/A  thrpt           2400.995                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:cycles                                          N/A  thrpt           4707.880                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-load-misses                                N/A  thrpt              0.098                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-loads                                      N/A  thrpt           4379.959                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-store-misses                               N/A  thrpt              0.002                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-stores                                     N/A  thrpt           2101.504                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:iTLB-load-misses                                N/A  thrpt              0.084                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:iTLB-loads                                      N/A  thrpt              0.103                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:instructions                                    N/A  thrpt          12449.450                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala                                                N/A  thrpt    5    360697.607 ±   20722.649  ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:CPI                                            N/A  thrpt              0.437                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-dcache-load-misses                          N/A  thrpt            581.545                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-dcache-loads                                N/A  thrpt           7747.742                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-dcache-stores                               N/A  thrpt           4061.060                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-icache-load-misses                          N/A  thrpt            646.956                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-load-misses                                N/A  thrpt              0.300                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-loads                                      N/A  thrpt             28.994                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-store-misses                               N/A  thrpt              1.730                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-stores                                     N/A  thrpt             18.686                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:branch-misses                                  N/A  thrpt              7.133                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:branches                                       N/A  thrpt           5240.475                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:cycles                                         N/A  thrpt          11536.416                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-load-misses                               N/A  thrpt              0.534                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-loads                                     N/A  thrpt           7918.240                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-store-misses                              N/A  thrpt              0.031                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-stores                                    N/A  thrpt           3982.894                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:iTLB-load-misses                               N/A  thrpt              0.105                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:iTLB-loads                                     N/A  thrpt              0.405                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:instructions                                   N/A  thrpt          26389.952                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala                                               N/A  thrpt    5    762725.045 ±    4083.532  ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:CPI                                           N/A  thrpt              0.377                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-load-misses                         N/A  thrpt            115.172                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-loads                               N/A  thrpt           4435.141                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-stores                              N/A  thrpt           2171.627                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-icache-load-misses                         N/A  thrpt             31.727                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-load-misses                               N/A  thrpt              0.118                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-loads                                     N/A  thrpt              0.541                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-store-misses                              N/A  thrpt              7.103                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-stores                                    N/A  thrpt             15.059                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:branch-misses                                 N/A  thrpt              3.350                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:branches                                      N/A  thrpt           2520.276                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:cycles                                        N/A  thrpt           5043.352                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-load-misses                              N/A  thrpt              0.305                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-loads                                    N/A  thrpt           4396.797                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-store-misses                             N/A  thrpt              0.036                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-stores                                   N/A  thrpt           2156.546                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:iTLB-load-misses                              N/A  thrpt              0.083                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:iTLB-loads                                    N/A  thrpt              0.083                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:instructions                                  N/A  thrpt          13360.205                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless                                           N/A  thrpt    5   3103566.145 ±  121305.458  ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:CPI                                       N/A  thrpt              0.364                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-load-misses                     N/A  thrpt             15.217                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-loads                           N/A  thrpt            687.944                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-stores                          N/A  thrpt            568.775                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-icache-load-misses                     N/A  thrpt              0.105                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-load-misses                           N/A  thrpt              0.032                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-loads                                 N/A  thrpt              0.104                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-store-misses                          N/A  thrpt              4.731                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-stores                                N/A  thrpt              8.859                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:branch-misses                             N/A  thrpt              2.122                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:branches                                  N/A  thrpt            699.707                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:cycles                                    N/A  thrpt           1218.557                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-load-misses                          N/A  thrpt              0.209                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-loads                                N/A  thrpt            683.456                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-store-misses                         N/A  thrpt              0.002                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-stores                               N/A  thrpt            547.870                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:iTLB-load-misses                          N/A  thrpt              0.004                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:iTLB-loads                                N/A  thrpt              0.019                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:instructions                              N/A  thrpt           3346.139                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                     N/A  thrpt    5   8078302.159 ±  524754.466  ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:CPI                                 N/A  thrpt              0.329                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-load-misses               N/A  thrpt              2.788                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-loads                     N/A  thrpt            410.388                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-stores                    N/A  thrpt            270.108                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-icache-load-misses               N/A  thrpt              0.015                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-load-misses                     N/A  thrpt              0.006                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-loads                           N/A  thrpt              0.019                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-store-misses                    N/A  thrpt              0.012                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-stores                          N/A  thrpt              0.458                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branch-misses                       N/A  thrpt              1.020                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branches                            N/A  thrpt            302.832                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:cycles                              N/A  thrpt            474.056                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-load-misses                    N/A  thrpt              0.007                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-loads                          N/A  thrpt            399.056                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-store-misses                   N/A  thrpt             ≈ 10⁻³                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-stores                         N/A  thrpt            260.656                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-load-misses                    N/A  thrpt              0.001                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-loads                          N/A  thrpt              0.003                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:instructions                        N/A  thrpt           1439.971                 #/op
[info] MissingReqFieldBenchmark.readPlayJson                                                    N/A  thrpt    5    231215.354 ±   13156.741  ops/s
[info] MissingReqFieldBenchmark.readPlayJson:CPI                                                N/A  thrpt              0.428                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-dcache-load-misses                              N/A  thrpt            795.195                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-dcache-loads                                    N/A  thrpt           9633.840                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-dcache-stores                                   N/A  thrpt           6569.436                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-icache-load-misses                              N/A  thrpt            852.514                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-load-misses                                    N/A  thrpt              0.539                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-loads                                          N/A  thrpt             39.377                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-store-misses                                   N/A  thrpt             14.615                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-stores                                         N/A  thrpt             53.747                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:branch-misses                                      N/A  thrpt              8.082                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:branches                                           N/A  thrpt           7415.719                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:cycles                                             N/A  thrpt          16554.257                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-load-misses                                   N/A  thrpt              1.292                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-loads                                         N/A  thrpt           9112.713                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-store-misses                                  N/A  thrpt              0.065                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-stores                                        N/A  thrpt           6302.462                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:iTLB-load-misses                                   N/A  thrpt              0.171                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:iTLB-loads                                         N/A  thrpt              6.432                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:instructions                                       N/A  thrpt          38716.292                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala                                                 128  thrpt    5   1590677.223 ±   13986.767  ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:CPI                                             128  thrpt              0.203                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-dcache-load-misses                           128  thrpt              1.680                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-dcache-loads                                 128  thrpt            901.928                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-dcache-stores                                128  thrpt            568.158                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-icache-load-misses                           128  thrpt              0.309                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-load-misses                                 128  thrpt              0.030                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-loads                                       128  thrpt              0.118                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-store-misses                                128  thrpt              0.006                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-stores                                      128  thrpt              0.125                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:branch-misses                                   128  thrpt              2.284                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:branches                                        128  thrpt           3242.003                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:cycles                                          128  thrpt           2425.825                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-load-misses                                128  thrpt              0.013                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-loads                                      128  thrpt            895.485                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-stores                                     128  thrpt            564.068                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:iTLB-load-misses                                128  thrpt              0.007                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:iTLB-loads                                      128  thrpt              0.009                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:instructions                                    128  thrpt          11962.080                 #/op
[info] MutableBitSetBenchmark.readPlayJson                                                      128  thrpt    5     75853.506 ±    2447.017  ops/s
[info] MutableBitSetBenchmark.readPlayJson:CPI                                                  128  thrpt              0.306                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-dcache-load-misses                                128  thrpt           1629.190                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-dcache-loads                                      128  thrpt          43150.119                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-dcache-stores                                     128  thrpt          32348.319                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-icache-load-misses                                128  thrpt             80.840                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-load-misses                                      128  thrpt              3.224                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-loads                                            128  thrpt             10.434                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-store-misses                                     128  thrpt             32.825                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-stores                                           128  thrpt            191.786                 #/op
[info] MutableBitSetBenchmark.readPlayJson:branch-misses                                        128  thrpt             47.394                 #/op
[info] MutableBitSetBenchmark.readPlayJson:branches                                             128  thrpt          32536.197                 #/op
[info] MutableBitSetBenchmark.readPlayJson:cycles                                               128  thrpt          50503.293                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-load-misses                                     128  thrpt              3.115                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-loads                                           128  thrpt          41299.762                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-store-misses                                    128  thrpt              0.073                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-stores                                          128  thrpt          31951.285                 #/op
[info] MutableBitSetBenchmark.readPlayJson:iTLB-load-misses                                     128  thrpt              0.199                 #/op
[info] MutableBitSetBenchmark.readPlayJson:iTLB-loads                                           128  thrpt              0.325                 #/op
[info] MutableBitSetBenchmark.readPlayJson:instructions                                         128  thrpt         165146.574                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala                                                 128  thrpt    5   1571339.284 ±   85517.798  ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:CPI                                             128  thrpt              0.240                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-dcache-load-misses                           128  thrpt             13.890                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-dcache-loads                                 128  thrpt           1600.653                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-dcache-stores                                128  thrpt           1187.780                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-icache-load-misses                           128  thrpt              0.201                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-load-misses                                 128  thrpt              0.010                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-loads                                       128  thrpt              0.069                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-store-misses                                128  thrpt              1.178                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-stores                                      128  thrpt              2.926                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:branch-misses                                   128  thrpt              2.203                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:branches                                        128  thrpt           2425.525                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:cycles                                          128  thrpt           2428.860                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-load-misses                                128  thrpt              0.092                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-loads                                      128  thrpt           1568.815                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-store-misses                               128  thrpt              0.003                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-stores                                     128  thrpt           1148.475                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:iTLB-load-misses                                128  thrpt              0.009                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:iTLB-loads                                      128  thrpt              0.024                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:instructions                                    128  thrpt          10139.952                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala                                                128  thrpt    5   1876845.570 ±  168846.211  ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:CPI                                            128  thrpt              0.222                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses                          128  thrpt              7.354                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-loads                                128  thrpt            975.387                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-stores                               128  thrpt           1102.685                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-icache-load-misses                          128  thrpt              0.247                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-load-misses                                128  thrpt              0.011                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-loads                                      128  thrpt              0.094                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-store-misses                               128  thrpt              0.752                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-stores                                     128  thrpt              2.165                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:branch-misses                                  128  thrpt              2.063                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:branches                                       128  thrpt           2212.270                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:cycles                                         128  thrpt           1995.416                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-load-misses                               128  thrpt              0.105                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-loads                                     128  thrpt            962.294                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-store-misses                              128  thrpt              0.002                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-stores                                    128  thrpt           1080.864                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:iTLB-load-misses                               128  thrpt              0.004                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:iTLB-loads                                     128  thrpt              0.020                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:instructions                                   128  thrpt           9001.507                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   1967354.913 ±   36993.985  ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:CPI                                    128  thrpt              0.225                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  128  thrpt              0.555                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        128  thrpt            935.949                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       128  thrpt           1017.276                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  128  thrpt              0.045                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        128  thrpt              0.007                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              128  thrpt              0.022                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             128  thrpt              0.003                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses                          128  thrpt              2.036                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branches                               128  thrpt           2100.686                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:cycles                                 128  thrpt           1922.552                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             128  thrpt            933.225                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            128  thrpt           1013.779                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       128  thrpt              0.007                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             128  thrpt              0.024                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:instructions                           128  thrpt           8541.731                 #/op
[info] MutableBitSetBenchmark.writePlayJson                                                     128  thrpt    5     48889.426 ±    4194.072  ops/s
[info] MutableBitSetBenchmark.writePlayJson:CPI                                                 128  thrpt              0.338                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-dcache-load-misses                               128  thrpt           1326.853                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-dcache-loads                                     128  thrpt          47096.097                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-dcache-stores                                    128  thrpt          33836.468                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-icache-load-misses                               128  thrpt             27.579                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-load-misses                                     128  thrpt              1.929                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-loads                                           128  thrpt             14.588                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-store-misses                                    128  thrpt              9.387                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-stores                                          128  thrpt             87.005                 #/op
[info] MutableBitSetBenchmark.writePlayJson:branch-misses                                       128  thrpt            106.100                 #/op
[info] MutableBitSetBenchmark.writePlayJson:branches                                            128  thrpt          47919.383                 #/op
[info] MutableBitSetBenchmark.writePlayJson:cycles                                              128  thrpt          77364.064                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-load-misses                                    128  thrpt              2.411                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-loads                                          128  thrpt          48686.989                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-store-misses                                   128  thrpt              0.101                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-stores                                         128  thrpt          33593.867                 #/op
[info] MutableBitSetBenchmark.writePlayJson:iTLB-load-misses                                    128  thrpt              0.324                 #/op
[info] MutableBitSetBenchmark.writePlayJson:iTLB-loads                                          128  thrpt              1.067                 #/op
[info] MutableBitSetBenchmark.writePlayJson:instructions                                        128  thrpt         228745.712                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                      128  thrpt    5    272519.559 ±    5490.837  ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:CPI                                  128  thrpt              0.230                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                128  thrpt            103.795                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                      128  thrpt           6915.250                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                     128  thrpt           4273.113                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                128  thrpt              1.106                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                      128  thrpt              0.163                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-loads                            128  thrpt              0.587                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                     128  thrpt             50.495                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-stores                           128  thrpt             69.810                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:branch-misses                        128  thrpt              8.315                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:branches                             128  thrpt          14648.447                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:cycles                               128  thrpt          14138.868                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                     128  thrpt              1.360                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads                           128  thrpt           6889.119                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                    128  thrpt              0.018                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores                          128  thrpt           4198.952                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                     128  thrpt              0.042                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads                           128  thrpt              0.037                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:instructions                         128  thrpt          61454.713                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                           128  thrpt    5     39274.771 ±     407.155  ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:CPI                                       128  thrpt              0.323                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                     128  thrpt           2706.666                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads                           128  thrpt          74171.419                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores                          128  thrpt          46286.037                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                     128  thrpt            549.028                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-load-misses                           128  thrpt              4.659                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-loads                                 128  thrpt             43.063                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-store-misses                          128  thrpt             75.291                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-stores                                128  thrpt            260.887                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:branch-misses                             128  thrpt            213.407                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:branches                                  128  thrpt          52009.414                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:cycles                                    128  thrpt          97780.517                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses                          128  thrpt              9.553                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-loads                                128  thrpt          73243.209                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses                         128  thrpt              0.078                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-stores                               128  thrpt          45967.340                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses                          128  thrpt              0.300                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-loads                                128  thrpt              5.269                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:instructions                              128  thrpt         302840.306                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                      128  thrpt    5    113217.454 ±    4752.704  ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:CPI                                  128  thrpt              0.332                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                128  thrpt            310.354                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                      128  thrpt          17393.144                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                     128  thrpt          10225.526                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                128  thrpt              1.362                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                      128  thrpt              0.416                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-loads                            128  thrpt              2.465                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                     128  thrpt             60.080                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-stores                           128  thrpt             94.653                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:branch-misses                        128  thrpt             22.530                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:branches                             128  thrpt          23459.160                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:cycles                               128  thrpt          33610.568                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                     128  thrpt              1.741                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads                           128  thrpt          17506.939                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                    128  thrpt              0.046                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores                          128  thrpt          10102.538                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                     128  thrpt              0.165                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads                           128  thrpt              0.413                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:instructions                         128  thrpt         101271.294                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                     128  thrpt    5    266454.603 ±    3744.918  ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:CPI                                 128  thrpt              0.302                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses               128  thrpt            126.707                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                     128  thrpt           9747.097                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                    128  thrpt           6854.459                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses               128  thrpt              1.221                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                     128  thrpt              0.438                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads                           128  thrpt              1.113                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                    128  thrpt             27.762                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores                          128  thrpt             38.310                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branch-misses                       128  thrpt              1.697                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branches                            128  thrpt           8520.375                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:cycles                              128  thrpt          14028.510                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                    128  thrpt              0.931                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                          128  thrpt           9512.960                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                   128  thrpt              0.021                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                         128  thrpt           6566.531                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                    128  thrpt              0.077                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                          128  thrpt              0.262                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:instructions                        128  thrpt          46446.337                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                             128  thrpt    5    366618.878 ±     873.825  ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                         128  thrpt              0.294                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses       128  thrpt              4.562                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads             128  thrpt           6190.089                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores            128  thrpt           4583.460                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses       128  thrpt              0.329                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses             128  thrpt              0.058                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                   128  thrpt              0.135                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses            128  thrpt              0.003                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                  128  thrpt              0.041                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses               128  thrpt              1.593                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                    128  thrpt           6944.399                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                      128  thrpt          10368.808                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses            128  thrpt              0.001                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                  128  thrpt           6253.396                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses           128  thrpt              0.003                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                 128  thrpt           4638.369                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses            128  thrpt              0.054                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                  128  thrpt              0.079                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                128  thrpt          35304.291                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                          128  thrpt    5     51314.841 ±    1371.183  ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:CPI                                      128  thrpt              0.329                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                    128  thrpt           1033.182                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads                          128  thrpt          49825.005                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores                         128  thrpt          28514.409                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                    128  thrpt             33.075                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-load-misses                          128  thrpt              0.957                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-loads                                128  thrpt              5.869                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-store-misses                         128  thrpt             87.956                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-stores                               128  thrpt            194.171                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:branch-misses                            128  thrpt            106.405                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:branches                                 128  thrpt          43418.106                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:cycles                                   128  thrpt          73260.755                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses                         128  thrpt              3.331                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-loads                               128  thrpt          50679.950                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses                        128  thrpt              0.101                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-stores                              128  thrpt          28314.696                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses                         128  thrpt              0.505                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-loads                               128  thrpt              2.658                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:instructions                             128  thrpt         222349.191                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                            128  thrpt    5     72902.683 ±    5872.445  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:CPI                                        128  thrpt              0.257                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses                      128  thrpt            660.433                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads                            128  thrpt          38698.508                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores                           128  thrpt          21721.167                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses                      128  thrpt             17.331                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses                            128  thrpt              0.993                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-loads                                  128  thrpt              7.760                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses                           128  thrpt             65.220                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-stores                                 128  thrpt            142.986                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:branch-misses                              128  thrpt             29.646                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:branches                                   128  thrpt          47153.975                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:cycles                                     128  thrpt          52286.666                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses                           128  thrpt              2.397                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-loads                                 128  thrpt          39867.610                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses                          128  thrpt              0.057                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-stores                                128  thrpt          22382.562                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses                           128  thrpt              0.207                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-loads                                 128  thrpt              0.815                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:instructions                               128  thrpt         203256.948                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                     128  thrpt    5    129821.600 ±    3505.457  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:CPI                                 128  thrpt              0.285                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses               128  thrpt            358.046                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads                     128  thrpt          20112.244                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores                    128  thrpt          10604.118                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses               128  thrpt             20.704                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses                     128  thrpt              0.655                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads                           128  thrpt              3.252                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses                    128  thrpt              8.586                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores                          128  thrpt             30.176                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses                       128  thrpt              8.822                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branches                            128  thrpt          21879.835                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:cycles                              128  thrpt          30127.141                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses                    128  thrpt              0.714                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads                          128  thrpt          20900.971                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses                   128  thrpt              0.044                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores                         128  thrpt          10835.178                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses                    128  thrpt              0.075                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads                          128  thrpt              0.586                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:instructions                        128  thrpt         105657.618                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                    128  thrpt    5    262728.188 ±   11114.293  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:CPI                                128  thrpt              0.246                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses              128  thrpt            107.614                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads                    128  thrpt          10458.804                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores                   128  thrpt           5372.834                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses              128  thrpt              0.579                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses                    128  thrpt              0.369                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads                          128  thrpt              0.712                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses                   128  thrpt              7.879                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores                         128  thrpt             26.754                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses                      128  thrpt              2.487                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branches                           128  thrpt          14253.552                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:cycles                             128  thrpt          14424.053                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses                   128  thrpt              0.492                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads                         128  thrpt          10078.168                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses                  128  thrpt              0.019                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores                        128  thrpt           5170.365                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses                   128  thrpt              0.035                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads                         128  thrpt              0.110                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:instructions                       128  thrpt          58672.087                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                         128  thrpt    5     32932.657 ±     455.625  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:CPI                                     128  thrpt              0.333                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses                   128  thrpt           2837.480                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads                         128  thrpt          92030.010                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores                        128  thrpt          48884.559                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses                   128  thrpt            819.428                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses                         128  thrpt              3.625                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads                               128  thrpt             72.720                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses                        128  thrpt             50.779                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores                              128  thrpt            253.751                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:branch-misses                           128  thrpt            396.502                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:branches                                128  thrpt          66990.286                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:cycles                                  128  thrpt         117581.994                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses                        128  thrpt              9.016                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads                              128  thrpt          94849.877                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses                       128  thrpt              0.108                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores                             128  thrpt          50728.724                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses                        128  thrpt              0.306                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads                              128  thrpt              8.191                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:instructions                            128  thrpt         353031.377                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                    128  thrpt    5    171592.842 ±    1934.769  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:CPI                                128  thrpt              0.264                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses              128  thrpt            171.652                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads                    128  thrpt          15286.515                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores                   128  thrpt           8300.877                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses              128  thrpt              1.875                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses                    128  thrpt              0.733                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads                          128  thrpt              2.294                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses                   128  thrpt             17.381                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores                         128  thrpt             34.228                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses                      128  thrpt              5.817                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branches                           128  thrpt          19100.095                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:cycles                             128  thrpt          21459.667                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses                   128  thrpt              0.506                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads                         128  thrpt          15378.774                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses                  128  thrpt              0.010                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores                        128  thrpt           8306.181                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses                   128  thrpt              0.059                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads                         128  thrpt              0.147                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:instructions                       128  thrpt          81195.037                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                   128  thrpt    5    470669.434 ±   25658.358  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI                               128  thrpt              0.257                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses             128  thrpt             75.197                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                   128  thrpt           5661.894                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                  128  thrpt           4944.601                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses             128  thrpt              1.167                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses                   128  thrpt              0.331                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads                         128  thrpt              0.871                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses                  128  thrpt             19.485                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores                        128  thrpt             30.406                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses                     128  thrpt              2.204                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branches                          128  thrpt           7063.970                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles                            128  thrpt           8073.759                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                  128  thrpt              0.538                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads                        128  thrpt           5685.370                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                 128  thrpt              0.017                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores                       128  thrpt           4841.526                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                  128  thrpt              0.012                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads                        128  thrpt              0.026                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions                      128  thrpt          31432.336                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                           128  thrpt    5    517874.150 ±    4987.879  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                       128  thrpt              0.244                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses     128  thrpt             48.787                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads           128  thrpt           5713.943                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores          128  thrpt           4787.744                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses     128  thrpt              0.218                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses           128  thrpt              0.158                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                 128  thrpt              0.425                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses          128  thrpt              0.208                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                128  thrpt              3.060                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses             128  thrpt              0.546                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches                  128  thrpt           6862.732                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                    128  thrpt           7452.829                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses          128  thrpt              0.198                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                128  thrpt           5494.365                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses         128  thrpt              0.008                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores               128  thrpt           4653.251                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses          128  thrpt              0.017                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                128  thrpt              0.033                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions              128  thrpt          30525.627                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                        128  thrpt    5     66916.809 ±    3055.773  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:CPI                                    128  thrpt              0.294                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses                  128  thrpt            991.457                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads                        128  thrpt          49670.306                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores                       128  thrpt          26779.792                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses                  128  thrpt             53.484                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses                        128  thrpt              0.365                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads                              128  thrpt              2.545                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses                       128  thrpt             48.277                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores                             128  thrpt            131.967                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:branch-misses                          128  thrpt             46.929                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:branches                               128  thrpt          38348.537                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:cycles                                 128  thrpt          57408.383                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses                       128  thrpt              2.395                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads                             128  thrpt          49120.837                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses                      128  thrpt              0.084                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores                            128  thrpt          25717.135                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses                       128  thrpt              0.380                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads                             128  thrpt              0.982                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:instructions                           128  thrpt         195316.377                 #/op
[info] MutableSetOfIntsBenchmark.readCirce                                                      128  thrpt    5    102691.251 ±     865.797  ops/s
[info] MutableSetOfIntsBenchmark.readCirce:CPI                                                  128  thrpt              0.292                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt            506.878                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-dcache-loads                                      128  thrpt          24077.173                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-dcache-stores                                     128  thrpt          11410.719                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-icache-load-misses                                128  thrpt              1.846                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-load-misses                                      128  thrpt              0.749                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-loads                                            128  thrpt              3.097                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-store-misses                                     128  thrpt             61.315                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-stores                                           128  thrpt            123.213                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:branch-misses                                        128  thrpt             30.640                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:branches                                             128  thrpt          29595.212                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:cycles                                               128  thrpt          37392.646                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-load-misses                                     128  thrpt              1.631                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-loads                                           128  thrpt          24348.206                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.038                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-stores                                          128  thrpt          11286.316                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              0.131                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:iTLB-loads                                           128  thrpt              0.107                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:instructions                                         128  thrpt         128201.217                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala                                               128  thrpt    5    176326.691 ±    1061.644  ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:CPI                                           128  thrpt              0.281                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt            132.957                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt          16793.106                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt           8874.255                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt              3.719                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt              0.266                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-loads                                     128  thrpt              1.576                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt             39.317                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-stores                                    128  thrpt             56.765                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:branch-misses                                 128  thrpt              5.721                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:branches                                      128  thrpt          16550.138                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:cycles                                        128  thrpt          22057.152                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              0.716                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt          16605.939                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.043                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt           8614.382                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              0.119                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt              0.236                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:instructions                                  128  thrpt          78577.271                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                              128  thrpt    5    276650.762 ±    4679.292  ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.260                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt             94.228                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt           9539.172                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt           3669.069                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              6.156                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.202                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              1.277                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt             35.971                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             52.265                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:branch-misses                                128  thrpt              9.326                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:branches                                     128  thrpt          11457.444                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:cycles                                       128  thrpt          13713.706                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.850                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt           9522.957                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.021                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt           3676.254                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.062                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.102                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:instructions                                 128  thrpt          52820.450                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson                                                   128  thrpt    5     67788.862 ±    1210.422  ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:CPI                                               128  thrpt              0.330                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           1552.673                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          44771.529                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          29914.498                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt             76.643                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              1.619                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-loads                                         128  thrpt              8.204                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             65.222                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-stores                                        128  thrpt            243.795                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:branch-misses                                     128  thrpt             99.480                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:branches                                          128  thrpt          32048.556                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:cycles                                            128  thrpt          56450.342                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              7.208                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          45345.886                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.087                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          29642.828                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.381                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              0.689                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:instructions                                      128  thrpt         171110.513                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce                                                     128  thrpt    5    208069.863 ±    2842.504  ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:CPI                                                 128  thrpt              0.281                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt            185.803                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt          12441.420                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt           7361.888                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt              1.019                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.517                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-loads                                           128  thrpt              1.825                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-store-misses                                    128  thrpt             59.680                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-stores                                          128  thrpt             92.329                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:branch-misses                                       128  thrpt             10.999                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:branches                                            128  thrpt          14383.622                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:cycles                                              128  thrpt          18522.855                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              1.454                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-loads                                          128  thrpt          12851.478                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.016                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-stores                                         128  thrpt           7393.570                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.061                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.079                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:instructions                                        128  thrpt          66019.099                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                              128  thrpt    5    490473.692 ±    4187.911  ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.287                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt             22.591                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt           5672.039                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           2550.655                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.303                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.132                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              0.471                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt              4.170                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt              9.610                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:branch-misses                                128  thrpt              1.527                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:branches                                     128  thrpt           6243.610                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:cycles                                       128  thrpt           7556.682                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.216                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt           5623.331                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.111                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           2495.385                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.024                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.126                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:instructions                                 128  thrpt          26317.865                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                             128  thrpt    5    611518.369 ±    8269.042  ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.240                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             15.183                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           4962.495                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           2519.942                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.845                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.077                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.368                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt              4.645                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt              9.227                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              1.614                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:branches                                    128  thrpt           6021.787                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:cycles                                      128  thrpt           6182.422                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.220                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           4968.690                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.099                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           2498.079                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.014                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.042                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:instructions                                128  thrpt          25750.676                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    658764.251 ±    2349.907  ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.230                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              1.511                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           4942.958                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           2418.145                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.162                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.036                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.085                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.002                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.033                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              0.698                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           5900.202                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           5814.819                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.002                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           4962.730                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.001                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           2409.743                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.008                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.006                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          25289.280                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson                                                  128  thrpt    5     36138.997 ±    1348.754  ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:CPI                                              128  thrpt              0.352                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt           1688.784                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt          58081.786                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt          40630.530                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt             44.655                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              1.734                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-loads                                        128  thrpt             17.810                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             18.347                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-stores                                       128  thrpt            218.764                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:branch-misses                                    128  thrpt            175.539                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:branches                                         128  thrpt          63575.259                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:cycles                                           128  thrpt         105292.026                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              1.848                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-loads                                       128  thrpt          58608.868                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.108                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-stores                                      128  thrpt          40744.060                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.715                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              1.417                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:instructions                                     128  thrpt         299011.534                 #/op
[info] PrimitivesBenchmark.readCirce                                                            N/A  thrpt    5    839442.940 ±   57889.798  ops/s
[info] PrimitivesBenchmark.readCirce:CPI                                                        N/A  thrpt              0.345                 #/op
[info] PrimitivesBenchmark.readCirce:L1-dcache-load-misses                                      N/A  thrpt             71.188                 #/op
[info] PrimitivesBenchmark.readCirce:L1-dcache-loads                                            N/A  thrpt           2842.652                 #/op
[info] PrimitivesBenchmark.readCirce:L1-dcache-stores                                           N/A  thrpt           2108.502                 #/op
[info] PrimitivesBenchmark.readCirce:L1-icache-load-misses                                      N/A  thrpt             52.591                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-load-misses                                            N/A  thrpt              0.071                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-loads                                                  N/A  thrpt              0.303                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-store-misses                                           N/A  thrpt              2.957                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-stores                                                 N/A  thrpt             15.378                 #/op
[info] PrimitivesBenchmark.readCirce:branch-misses                                              N/A  thrpt              1.881                 #/op
[info] PrimitivesBenchmark.readCirce:branches                                                   N/A  thrpt           2985.861                 #/op
[info] PrimitivesBenchmark.readCirce:cycles                                                     N/A  thrpt           4534.878                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-load-misses                                           N/A  thrpt              0.255                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-loads                                                 N/A  thrpt           2769.681                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-store-misses                                          N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-stores                                                N/A  thrpt           2029.462                 #/op
[info] PrimitivesBenchmark.readCirce:iTLB-load-misses                                           N/A  thrpt              0.016                 #/op
[info] PrimitivesBenchmark.readCirce:iTLB-loads                                                 N/A  thrpt              0.039                 #/op
[info] PrimitivesBenchmark.readCirce:instructions                                               N/A  thrpt          13143.714                 #/op
[info] PrimitivesBenchmark.readJacksonScala                                                     N/A  thrpt    5   1826919.165 ±  212502.119  ops/s
[info] PrimitivesBenchmark.readJacksonScala:CPI                                                 N/A  thrpt              0.338                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-dcache-load-misses                               N/A  thrpt             23.699                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-dcache-loads                                     N/A  thrpt           1616.196                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-dcache-stores                                    N/A  thrpt           1008.164                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-icache-load-misses                               N/A  thrpt              0.258                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-load-misses                                     N/A  thrpt              0.067                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-loads                                           N/A  thrpt              0.232                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-store-misses                                    N/A  thrpt              0.191                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-stores                                          N/A  thrpt              3.093                 #/op
[info] PrimitivesBenchmark.readJacksonScala:branch-misses                                       N/A  thrpt              0.563                 #/op
[info] PrimitivesBenchmark.readJacksonScala:branches                                            N/A  thrpt           1391.962                 #/op
[info] PrimitivesBenchmark.readJacksonScala:cycles                                              N/A  thrpt           2274.989                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-load-misses                                    N/A  thrpt              0.054                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-loads                                          N/A  thrpt           1600.455                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-store-misses                                   N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-stores                                         N/A  thrpt            973.252                 #/op
[info] PrimitivesBenchmark.readJacksonScala:iTLB-load-misses                                    N/A  thrpt              0.018                 #/op
[info] PrimitivesBenchmark.readJacksonScala:iTLB-loads                                          N/A  thrpt              0.041                 #/op
[info] PrimitivesBenchmark.readJacksonScala:instructions                                        N/A  thrpt           6726.336                 #/op
[info] PrimitivesBenchmark.readJsoniterScala                                                    N/A  thrpt    5   8385148.118 ±   63645.414  ops/s
[info] PrimitivesBenchmark.readJsoniterScala:CPI                                                N/A  thrpt              0.247                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-dcache-load-misses                              N/A  thrpt              0.866                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-dcache-loads                                    N/A  thrpt            377.799                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-dcache-stores                                   N/A  thrpt            185.857                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-icache-load-misses                              N/A  thrpt              0.020                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-load-misses                                    N/A  thrpt              0.010                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-loads                                          N/A  thrpt              0.025                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-store-misses                                   N/A  thrpt              0.001                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-stores                                         N/A  thrpt              0.058                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:branch-misses                                      N/A  thrpt              0.019                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:branches                                           N/A  thrpt            498.025                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:cycles                                             N/A  thrpt            456.416                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-load-misses                                   N/A  thrpt              0.003                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-loads                                         N/A  thrpt            376.793                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-store-misses                                  N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-stores                                        N/A  thrpt            184.835                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:iTLB-load-misses                                   N/A  thrpt             ≈ 10⁻³                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:iTLB-loads                                         N/A  thrpt              0.004                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:instructions                                       N/A  thrpt           1849.129                 #/op
[info] PrimitivesBenchmark.readPlayJson                                                         N/A  thrpt    5    352028.532 ±   22892.799  ops/s
[info] PrimitivesBenchmark.readPlayJson:CPI                                                     N/A  thrpt              0.417                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-dcache-load-misses                                   N/A  thrpt            349.676                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-dcache-loads                                         N/A  thrpt           7387.066                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-dcache-stores                                        N/A  thrpt           5185.174                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-icache-load-misses                                   N/A  thrpt            425.712                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-load-misses                                         N/A  thrpt              0.565                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-loads                                               N/A  thrpt              3.841                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-store-misses                                        N/A  thrpt              2.608                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-stores                                              N/A  thrpt             20.686                 #/op
[info] PrimitivesBenchmark.readPlayJson:branch-misses                                           N/A  thrpt             14.684                 #/op
[info] PrimitivesBenchmark.readPlayJson:branches                                                N/A  thrpt           4448.730                 #/op
[info] PrimitivesBenchmark.readPlayJson:cycles                                                  N/A  thrpt          10883.997                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-load-misses                                        N/A  thrpt              2.020                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-loads                                              N/A  thrpt           7206.632                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-store-misses                                       N/A  thrpt              0.014                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-stores                                             N/A  thrpt           5139.150                 #/op
[info] PrimitivesBenchmark.readPlayJson:iTLB-load-misses                                        N/A  thrpt              0.060                 #/op
[info] PrimitivesBenchmark.readPlayJson:iTLB-loads                                              N/A  thrpt              0.225                 #/op
[info] PrimitivesBenchmark.readPlayJson:instructions                                            N/A  thrpt          26111.684                 #/op
[info] PrimitivesBenchmark.writeCirce                                                           N/A  thrpt    5   1096254.705 ±   47750.457  ops/s
[info] PrimitivesBenchmark.writeCirce:CPI                                                       N/A  thrpt              0.365                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-dcache-load-misses                                     N/A  thrpt             41.686                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-dcache-loads                                           N/A  thrpt           2356.556                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-dcache-stores                                          N/A  thrpt           1798.913                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-icache-load-misses                                     N/A  thrpt              0.415                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-load-misses                                           N/A  thrpt              0.021                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-loads                                                 N/A  thrpt              0.195                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-store-misses                                          N/A  thrpt              1.537                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-stores                                                N/A  thrpt              9.298                 #/op
[info] PrimitivesBenchmark.writeCirce:branch-misses                                             N/A  thrpt              0.283                 #/op
[info] PrimitivesBenchmark.writeCirce:branches                                                  N/A  thrpt           1848.534                 #/op
[info] PrimitivesBenchmark.writeCirce:cycles                                                    N/A  thrpt           3460.303                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-load-misses                                          N/A  thrpt              0.178                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-loads                                                N/A  thrpt           2259.513                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-store-misses                                         N/A  thrpt              0.015                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-stores                                               N/A  thrpt           1701.401                 #/op
[info] PrimitivesBenchmark.writeCirce:iTLB-load-misses                                          N/A  thrpt              0.008                 #/op
[info] PrimitivesBenchmark.writeCirce:iTLB-loads                                                N/A  thrpt              0.036                 #/op
[info] PrimitivesBenchmark.writeCirce:instructions                                              N/A  thrpt           9488.331                 #/op
[info] PrimitivesBenchmark.writeJacksonScala                                                    N/A  thrpt    5   2742353.922 ±   32272.043  ops/s
[info] PrimitivesBenchmark.writeJacksonScala:CPI                                                N/A  thrpt              0.331                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-dcache-load-misses                              N/A  thrpt             12.018                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-dcache-loads                                    N/A  thrpt           1054.355                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-dcache-stores                                   N/A  thrpt            711.790                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-icache-load-misses                              N/A  thrpt              0.074                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-load-misses                                    N/A  thrpt              0.023                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-loads                                          N/A  thrpt              0.113                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-store-misses                                   N/A  thrpt              0.040                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-stores                                         N/A  thrpt              0.768                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:branch-misses                                      N/A  thrpt              0.213                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:branches                                           N/A  thrpt            865.023                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:cycles                                             N/A  thrpt           1404.235                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-load-misses                                   N/A  thrpt              0.068                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-loads                                         N/A  thrpt           1067.021                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-store-misses                                  N/A  thrpt              0.002                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-stores                                        N/A  thrpt            705.214                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:iTLB-load-misses                                   N/A  thrpt              0.009                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:iTLB-loads                                         N/A  thrpt              0.012                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:instructions                                       N/A  thrpt           4248.205                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala                                                   N/A  thrpt    5   6263730.057 ±  461586.745  ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:CPI                                               N/A  thrpt              0.319                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-dcache-load-misses                             N/A  thrpt              3.005                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-dcache-loads                                   N/A  thrpt            306.003                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-dcache-stores                                  N/A  thrpt            319.506                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-icache-load-misses                             N/A  thrpt              0.027                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-load-misses                                   N/A  thrpt              0.006                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-loads                                         N/A  thrpt              0.021                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-store-misses                                  N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-stores                                        N/A  thrpt              0.287                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:branch-misses                                     N/A  thrpt              0.031                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:branches                                          N/A  thrpt            386.312                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:cycles                                            N/A  thrpt            603.727                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-load-misses                                  N/A  thrpt              0.023                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-loads                                        N/A  thrpt            300.367                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-store-misses                                 N/A  thrpt              0.001                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-stores                                       N/A  thrpt            312.266                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:iTLB-load-misses                                  N/A  thrpt              0.003                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:iTLB-loads                                        N/A  thrpt              0.016                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:instructions                                      N/A  thrpt           1892.109                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5   6596485.140 ±  345939.898  ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:CPI                                       N/A  thrpt              0.329                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                     N/A  thrpt              1.622                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                           N/A  thrpt            285.585                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                          N/A  thrpt            301.114                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                     N/A  thrpt              0.028                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                           N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                 N/A  thrpt              0.019                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                          N/A  thrpt              0.006                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                N/A  thrpt              0.104                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:branch-misses                             N/A  thrpt              0.023                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:branches                                  N/A  thrpt            353.139                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:cycles                                    N/A  thrpt            574.951                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                          N/A  thrpt              0.054                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                N/A  thrpt            281.105                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                         N/A  thrpt              0.008                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                               N/A  thrpt            293.310                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                          N/A  thrpt              0.003                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                N/A  thrpt              0.012                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:instructions                              N/A  thrpt           1749.384                 #/op
[info] PrimitivesBenchmark.writePlayJson                                                        N/A  thrpt    5    431985.201 ±   18244.710  ops/s
[info] PrimitivesBenchmark.writePlayJson:CPI                                                    N/A  thrpt              0.354                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-dcache-load-misses                                  N/A  thrpt            192.992                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-dcache-loads                                        N/A  thrpt           5966.759                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-dcache-stores                                       N/A  thrpt           4320.155                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-icache-load-misses                                  N/A  thrpt            182.806                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-load-misses                                        N/A  thrpt              0.114                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-loads                                              N/A  thrpt              2.260                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-store-misses                                       N/A  thrpt              1.866                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-stores                                             N/A  thrpt             28.945                 #/op
[info] PrimitivesBenchmark.writePlayJson:branch-misses                                          N/A  thrpt              4.306                 #/op
[info] PrimitivesBenchmark.writePlayJson:branches                                               N/A  thrpt           4443.493                 #/op
[info] PrimitivesBenchmark.writePlayJson:cycles                                                 N/A  thrpt           8874.422                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-load-misses                                       N/A  thrpt              0.385                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-loads                                             N/A  thrpt           6146.192                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-store-misses                                      N/A  thrpt              0.009                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-stores                                            N/A  thrpt           4518.539                 #/op
[info] PrimitivesBenchmark.writePlayJson:iTLB-load-misses                                       N/A  thrpt              0.022                 #/op
[info] PrimitivesBenchmark.writePlayJson:iTLB-loads                                             N/A  thrpt              0.098                 #/op
[info] PrimitivesBenchmark.writePlayJson:instructions                                           N/A  thrpt          25046.966                 #/op
[info] SetOfIntsBenchmark.readCirce                                                             128  thrpt    5     80223.831 ±    4501.571  ops/s
[info] SetOfIntsBenchmark.readCirce:CPI                                                         128  thrpt              0.305                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-dcache-load-misses                                       128  thrpt            870.764                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-dcache-loads                                             128  thrpt          29069.017                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-dcache-stores                                            128  thrpt          19418.314                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-icache-load-misses                                       128  thrpt             21.776                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-load-misses                                             128  thrpt              0.691                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-loads                                                   128  thrpt              4.745                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-store-misses                                            128  thrpt             40.902                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-stores                                                  128  thrpt            164.500                 #/op
[info] SetOfIntsBenchmark.readCirce:branch-misses                                               128  thrpt             97.534                 #/op
[info] SetOfIntsBenchmark.readCirce:branches                                                    128  thrpt          32406.453                 #/op
[info] SetOfIntsBenchmark.readCirce:cycles                                                      128  thrpt          47038.526                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-load-misses                                            128  thrpt              3.192                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-loads                                                  128  thrpt          28975.280                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-store-misses                                           128  thrpt              0.049                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-stores                                                 128  thrpt          18847.721                 #/op
[info] SetOfIntsBenchmark.readCirce:iTLB-load-misses                                            128  thrpt              0.318                 #/op
[info] SetOfIntsBenchmark.readCirce:iTLB-loads                                                  128  thrpt              0.391                 #/op
[info] SetOfIntsBenchmark.readCirce:instructions                                                128  thrpt         154203.305                 #/op
[info] SetOfIntsBenchmark.readJacksonScala                                                      128  thrpt    5    126777.198 ±    6749.055  ops/s
[info] SetOfIntsBenchmark.readJacksonScala:CPI                                                  128  thrpt              0.300                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses                                128  thrpt            528.891                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-dcache-loads                                      128  thrpt          20868.088                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-dcache-stores                                     128  thrpt          17028.105                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses                                128  thrpt            113.497                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-load-misses                                      128  thrpt              0.622                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-loads                                            128  thrpt              4.665                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-store-misses                                     128  thrpt              7.027                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-stores                                           128  thrpt             74.039                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:branch-misses                                        128  thrpt             32.979                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:branches                                             128  thrpt          18647.551                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:cycles                                               128  thrpt          30384.730                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-load-misses                                     128  thrpt              1.159                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-loads                                           128  thrpt          20673.375                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-store-misses                                    128  thrpt              0.067                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-stores                                          128  thrpt          16853.685                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:iTLB-load-misses                                     128  thrpt              0.081                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:iTLB-loads                                           128  thrpt              0.248                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:instructions                                         128  thrpt         101132.519                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala                                                     128  thrpt    5    180956.705 ±     813.780  ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:CPI                                                 128  thrpt              0.288                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                               128  thrpt            395.040                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads                                     128  thrpt          13874.146                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores                                    128  thrpt          11621.088                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses                               128  thrpt              1.613                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-load-misses                                     128  thrpt              0.289                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-loads                                           128  thrpt              1.877                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-store-misses                                    128  thrpt             11.560                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-stores                                          128  thrpt             76.621                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:branch-misses                                       128  thrpt             35.630                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:branches                                            128  thrpt          13374.943                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:cycles                                              128  thrpt          20796.489                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses                                    128  thrpt              1.219                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-loads                                          128  thrpt          13712.348                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses                                   128  thrpt              0.029                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-stores                                         128  thrpt          11450.782                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses                                    128  thrpt              0.263                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:iTLB-loads                                          128  thrpt              0.126                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:instructions                                        128  thrpt          72217.342                 #/op
[info] SetOfIntsBenchmark.readPlayJson                                                          128  thrpt    5     57177.470 ±    4080.194  ops/s
[info] SetOfIntsBenchmark.readPlayJson:CPI                                                      128  thrpt              0.343                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses                                    128  thrpt           1936.867                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-dcache-loads                                          128  thrpt          49235.432                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-dcache-stores                                         128  thrpt          38222.012                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-icache-load-misses                                    128  thrpt            230.225                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-load-misses                                          128  thrpt              1.819                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-loads                                                128  thrpt             19.487                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-store-misses                                         128  thrpt             35.862                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-stores                                               128  thrpt            261.567                 #/op
[info] SetOfIntsBenchmark.readPlayJson:branch-misses                                            128  thrpt            149.094                 #/op
[info] SetOfIntsBenchmark.readPlayJson:branches                                                 128  thrpt          33961.099                 #/op
[info] SetOfIntsBenchmark.readPlayJson:cycles                                                   128  thrpt          65678.421                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-load-misses                                         128  thrpt              5.570                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-loads                                               128  thrpt          49492.184                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-store-misses                                        128  thrpt              0.106                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-stores                                              128  thrpt          38271.479                 #/op
[info] SetOfIntsBenchmark.readPlayJson:iTLB-load-misses                                         128  thrpt              0.537                 #/op
[info] SetOfIntsBenchmark.readPlayJson:iTLB-loads                                               128  thrpt              1.259                 #/op
[info] SetOfIntsBenchmark.readPlayJson:instructions                                             128  thrpt         191230.686                 #/op
[info] SetOfIntsBenchmark.writeCirce                                                            128  thrpt    5    181960.235 ±    2884.661  ops/s
[info] SetOfIntsBenchmark.writeCirce:CPI                                                        128  thrpt              0.289                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-dcache-load-misses                                      128  thrpt            223.182                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-dcache-loads                                            128  thrpt          14917.012                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-dcache-stores                                           128  thrpt           8972.009                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-icache-load-misses                                      128  thrpt              0.976                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-load-misses                                            128  thrpt              0.479                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-loads                                                  128  thrpt              2.151                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-store-misses                                           128  thrpt             56.224                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-stores                                                 128  thrpt             85.814                 #/op
[info] SetOfIntsBenchmark.writeCirce:branch-misses                                              128  thrpt             10.865                 #/op
[info] SetOfIntsBenchmark.writeCirce:branches                                                   128  thrpt          14858.955                 #/op
[info] SetOfIntsBenchmark.writeCirce:cycles                                                     128  thrpt          20481.825                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-load-misses                                           128  thrpt              1.592                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-loads                                                 128  thrpt          14833.168                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-store-misses                                          128  thrpt              0.026                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-stores                                                128  thrpt           8846.006                 #/op
[info] SetOfIntsBenchmark.writeCirce:iTLB-load-misses                                           128  thrpt              0.113                 #/op
[info] SetOfIntsBenchmark.writeCirce:iTLB-loads                                                 128  thrpt              0.317                 #/op
[info] SetOfIntsBenchmark.writeCirce:instructions                                               128  thrpt          70961.863                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala                                                     128  thrpt    5    471316.074 ±    7839.985  ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:CPI                                                 128  thrpt              0.294                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                               128  thrpt             28.705                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads                                     128  thrpt           6952.204                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores                                    128  thrpt           3703.412                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses                               128  thrpt              5.870                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-load-misses                                     128  thrpt              0.171                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-loads                                           128  thrpt              1.137                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-store-misses                                    128  thrpt              3.629                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-stores                                          128  thrpt              9.133                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:branch-misses                                       128  thrpt              1.493                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:branches                                            128  thrpt           5773.933                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:cycles                                              128  thrpt           8288.158                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses                                    128  thrpt              0.264                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-loads                                          128  thrpt           6817.686                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses                                   128  thrpt              0.004                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-stores                                         128  thrpt           3680.344                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses                                    128  thrpt              0.006                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:iTLB-loads                                          128  thrpt              0.016                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:instructions                                        128  thrpt          28197.552                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala                                                    128  thrpt    5    623235.888 ±    8115.597  ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:CPI                                                128  thrpt              0.291                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                              128  thrpt             16.804                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads                                    128  thrpt           4415.279                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores                                   128  thrpt           2716.925                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                              128  thrpt              0.836                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses                                    128  thrpt              0.133                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-loads                                          128  thrpt              0.378                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses                                   128  thrpt              4.003                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-stores                                         128  thrpt              8.483                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:branch-misses                                      128  thrpt              1.429                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:branches                                           128  thrpt           4266.823                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:cycles                                             128  thrpt           6184.869                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses                                   128  thrpt              0.216                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-loads                                         128  thrpt           4387.502                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses                                  128  thrpt              0.002                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-stores                                        128  thrpt           2700.622                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses                                   128  thrpt              0.002                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:iTLB-loads                                         128  thrpt              0.008                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:instructions                                       128  thrpt          21242.595                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    675218.089 ±    5970.984  ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                        128  thrpt              0.274                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                      128  thrpt             19.152                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                            128  thrpt           4182.747                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                           128  thrpt           2423.136                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                      128  thrpt              0.497                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                            128  thrpt              0.039                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                  128  thrpt              0.152                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                           128  thrpt              0.025                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                 128  thrpt              0.170                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                              128  thrpt              0.137                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches                                   128  thrpt           4313.963                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles                                     128  thrpt           5564.155                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                           128  thrpt              0.021                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                 128  thrpt           4161.869                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                          128  thrpt             ≈ 10⁻⁴                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                128  thrpt           2428.219                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                           128  thrpt              0.004                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                 128  thrpt              0.025                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions                               128  thrpt          20277.616                 #/op
[info] SetOfIntsBenchmark.writePlayJson                                                         128  thrpt    5     35893.520 ±     233.135  ops/s
[info] SetOfIntsBenchmark.writePlayJson:CPI                                                     128  thrpt              0.360                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses                                   128  thrpt           1746.156                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-dcache-loads                                         128  thrpt          57463.415                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-dcache-stores                                        128  thrpt          40435.246                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-icache-load-misses                                   128  thrpt             81.049                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-load-misses                                         128  thrpt              1.119                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-loads                                               128  thrpt             17.172                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-store-misses                                        128  thrpt             25.203                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-stores                                              128  thrpt            232.391                 #/op
[info] SetOfIntsBenchmark.writePlayJson:branch-misses                                           128  thrpt            187.552                 #/op
[info] SetOfIntsBenchmark.writePlayJson:branches                                                128  thrpt          62617.472                 #/op
[info] SetOfIntsBenchmark.writePlayJson:cycles                                                  128  thrpt         106271.050                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-load-misses                                        128  thrpt              3.742                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-loads                                              128  thrpt          57644.750                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-store-misses                                       128  thrpt              0.124                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-stores                                             128  thrpt          40128.279                 #/op
[info] SetOfIntsBenchmark.writePlayJson:iTLB-load-misses                                        128  thrpt              0.602                 #/op
[info] SetOfIntsBenchmark.writePlayJson:iTLB-loads                                              128  thrpt              0.536                 #/op
[info] SetOfIntsBenchmark.writePlayJson:instructions                                            128  thrpt         295504.949                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce                                                    128  thrpt    5   3435334.849 ±  130184.185  ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:CPI                                                128  thrpt              0.250                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt             20.718                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-dcache-loads                                    128  thrpt            518.246                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-dcache-stores                                   128  thrpt            406.869                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-icache-load-misses                              128  thrpt              0.327                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-load-misses                                    128  thrpt              0.058                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-loads                                          128  thrpt              0.164                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-store-misses                                   128  thrpt              3.769                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-stores                                         128  thrpt              8.312                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:branch-misses                                      128  thrpt              2.076                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:branches                                           128  thrpt           1257.254                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:cycles                                             128  thrpt           1115.057                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-load-misses                                   128  thrpt              0.214                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-loads                                         128  thrpt            535.811                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-stores                                        128  thrpt            423.292                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:iTLB-load-misses                                   128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:iTLB-loads                                         128  thrpt              0.012                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:instructions                                       128  thrpt           4460.568                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                              128  thrpt    5   5942658.650 ±  318036.157  ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:CPI                                          128  thrpt              0.221                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses                        128  thrpt              5.008                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads                              128  thrpt            334.656                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores                             128  thrpt            202.846                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses                        128  thrpt              0.104                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses                              128  thrpt              0.023                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-loads                                    128  thrpt              0.084                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses                             128  thrpt              0.268                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-stores                                   128  thrpt              0.763                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:branch-misses                                128  thrpt              1.099                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:branches                                     128  thrpt            748.808                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:cycles                                       128  thrpt            647.385                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses                             128  thrpt              0.046                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-loads                                   128  thrpt            341.976                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses                            128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-stores                                  128  thrpt            212.126                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses                             128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-loads                                   128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:instructions                                 128  thrpt           2933.570                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                             128  thrpt    5   4023955.201 ±  258651.738  ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:CPI                                         128  thrpt              0.283                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt             13.393                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt            670.228                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt            420.152                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt              0.180                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              0.009                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-loads                                   128  thrpt              0.077                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt              0.406                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-stores                                  128  thrpt              3.138                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:branch-misses                               128  thrpt              1.054                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:branches                                    128  thrpt            739.022                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:cycles                                      128  thrpt            947.232                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              0.049                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt            697.864                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt            422.895                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt              0.012                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:instructions                                128  thrpt           3342.859                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                            128  thrpt    5   6937434.654 ±   61154.906  ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.210                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt              4.807                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt            324.911                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt            214.246                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              0.018                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.012                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              0.018                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              0.191                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt              0.836                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:branch-misses                              128  thrpt              1.475                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:branches                                   128  thrpt            856.072                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:cycles                                     128  thrpt            547.670                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              0.041                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt            315.131                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt            212.907                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:instructions                               128  thrpt           2601.765                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                 128  thrpt    5   4136520.023 ±  238003.854  ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:CPI                                             128  thrpt              0.280                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt             14.264                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt            676.254                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt            438.654                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt              0.036                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt              0.015                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-loads                                       128  thrpt              0.056                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-store-misses                                128  thrpt              0.846                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-stores                                      128  thrpt              2.387                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:branch-misses                                   128  thrpt              1.076                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:branches                                        128  thrpt            728.026                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:cycles                                          128  thrpt            912.750                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              0.079                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-loads                                      128  thrpt            682.726                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-stores                                     128  thrpt            436.603                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:iTLB-loads                                      128  thrpt              0.007                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:instructions                                    128  thrpt           3254.699                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce                                                   128  thrpt    5   2195804.418 ±   67759.643  ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:CPI                                               128  thrpt              0.233                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt             15.134                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt            569.251                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt            471.361                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt              0.056                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              0.061                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-loads                                         128  thrpt              0.129                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-store-misses                                  128  thrpt              1.544                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-stores                                        128  thrpt              3.127                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:branch-misses                                     128  thrpt              3.206                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:branches                                          128  thrpt           2822.161                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:cycles                                            128  thrpt           1756.275                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt              0.184                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-loads                                        128  thrpt            562.576                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-stores                                       128  thrpt            455.800                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:iTLB-loads                                        128  thrpt              0.010                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:instructions                                      128  thrpt           7546.602                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                             128  thrpt    5   5884366.259 ±   37981.814  ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:CPI                                         128  thrpt              0.223                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses                       128  thrpt              2.574                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads                             128  thrpt            191.534                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores                            128  thrpt            175.336                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses                       128  thrpt              0.167                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses                             128  thrpt              0.024                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-loads                                   128  thrpt              0.089                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses                            128  thrpt              0.015                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-stores                                  128  thrpt              0.560                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:branch-misses                               128  thrpt              1.029                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:branches                                    128  thrpt           1113.283                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:cycles                                      128  thrpt            651.124                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses                            128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads                                  128  thrpt            191.129                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses                           128  thrpt             ≈ 10⁻³                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores                                 128  thrpt            177.384                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses                            128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads                                  128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:instructions                                128  thrpt           2913.604                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                            128  thrpt    5   4697363.763 ±  255052.503  ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.234                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt              6.872                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt            477.171                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt            324.923                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt              0.114                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              0.036                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt              0.093                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt              0.077                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt              0.978                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:branch-misses                              128  thrpt              1.059                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:branches                                   128  thrpt           1078.405                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:cycles                                     128  thrpt            817.604                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              0.021                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt            458.497                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt            319.216                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:instructions                               128  thrpt           3489.167                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                           128  thrpt    5   6044715.330 ±   33135.341  ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.194                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt              2.516                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt            323.878                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt            185.628                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt              0.016                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt              0.018                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt              0.594                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:branch-misses                             128  thrpt              1.026                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:branches                                  128  thrpt           1091.529                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:cycles                                    128  thrpt            631.122                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt            319.013                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt            180.877                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:instructions                              128  thrpt           3252.563                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   6394004.467 ±   87959.432  ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.193                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt              0.176                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt            306.457                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt            155.544                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt              0.014                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt              0.007                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt              1.016                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt           1041.432                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt            595.153                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt            305.809                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt             ≈ 10⁻³                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt            154.815                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt           3090.640                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                128  thrpt    5   4651762.731 ±   72258.224  ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:CPI                                            128  thrpt              0.235                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt              7.121                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt            498.505                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt            338.891                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt              0.027                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              0.013                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-loads                                      128  thrpt              0.040                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-store-misses                               128  thrpt              0.087                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-stores                                     128  thrpt              0.878                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:branch-misses                                  128  thrpt              1.038                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:branches                                       128  thrpt           1080.909                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:cycles                                         128  thrpt            827.213                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt              0.021                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-loads                                     128  thrpt            486.490                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-stores                                    128  thrpt            321.277                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:instructions                                   128  thrpt           3520.152                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                 128  thrpt    5   1450701.201 ±   52210.109  ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:CPI                                             128  thrpt              0.247                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt             35.454                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-loads                                 128  thrpt            990.815                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-stores                                128  thrpt            580.723                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-icache-load-misses                           128  thrpt              0.124                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-load-misses                                 128  thrpt              0.115                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-loads                                       128  thrpt              0.290                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-store-misses                                128  thrpt              8.129                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-stores                                      128  thrpt             16.643                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:branch-misses                                   128  thrpt              3.262                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:branches                                        128  thrpt           2860.592                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:cycles                                          128  thrpt           2613.426                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-load-misses                                128  thrpt              0.393                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-loads                                      128  thrpt            999.231                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-store-misses                               128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-stores                                     128  thrpt            564.571                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:iTLB-load-misses                                128  thrpt              0.012                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:iTLB-loads                                      128  thrpt              0.013                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:instructions                                    128  thrpt          10601.434                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                           128  thrpt    5   2816663.063 ±  237528.214  ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:CPI                                       128  thrpt              0.214                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses                     128  thrpt              5.097                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads                           128  thrpt            604.384                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores                          128  thrpt            594.939                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses                     128  thrpt              0.097                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses                           128  thrpt              0.050                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-loads                                 128  thrpt              0.142                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses                          128  thrpt              0.247                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-stores                                128  thrpt              0.711                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:branch-misses                             128  thrpt              1.072                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:branches                                  128  thrpt           1396.840                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:cycles                                    128  thrpt           1346.486                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses                          128  thrpt              0.044                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-loads                                128  thrpt            603.674                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses                         128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-stores                               128  thrpt            599.397                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses                          128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-loads                                128  thrpt              0.007                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:instructions                              128  thrpt           6289.760                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                          128  thrpt    5   1754445.937 ±   22332.879  ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:CPI                                      128  thrpt              0.220                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt             15.478                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt            978.307                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt           1099.389                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt              0.378                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt              0.077                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-loads                                128  thrpt              0.228                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt              0.519                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-stores                               128  thrpt              2.787                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:branch-misses                            128  thrpt              1.126                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:branches                                 128  thrpt           2080.122                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:cycles                                   128  thrpt           2214.291                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt              0.087                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-loads                               128  thrpt            956.059                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-stores                              128  thrpt           1096.178                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-loads                               128  thrpt              0.016                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:instructions                             128  thrpt          10079.965                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                         128  thrpt    5   2393392.105 ±  133061.080  ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.208                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt              5.089                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt            601.914                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt            224.631                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              0.046                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.018                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-loads                               128  thrpt              0.056                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt              0.283                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-stores                              128  thrpt              0.750                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:branch-misses                           128  thrpt              1.069                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:branches                                128  thrpt           1929.650                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:cycles                                  128  thrpt           1584.394                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              0.057                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt            595.224                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.016                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt            218.434                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.004                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.025                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:instructions                            128  thrpt           7614.766                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                              128  thrpt    5   1688325.423 ±  154324.828  ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:CPI                                          128  thrpt              0.224                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt             14.624                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt           1076.599                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt           1110.715                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt              0.136                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-load-misses                              128  thrpt              0.060                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-loads                                    128  thrpt              0.133                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-store-misses                             128  thrpt              1.009                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-stores                                   128  thrpt              3.040                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:branch-misses                                128  thrpt              2.138                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:branches                                     128  thrpt           2085.973                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:cycles                                       128  thrpt           2249.723                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt              0.092                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-loads                                   128  thrpt           1063.611                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-stores                                  128  thrpt           1070.621                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt              0.004                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-loads                                   128  thrpt              0.008                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:instructions                                 128  thrpt          10055.324                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                128  thrpt    5   1204638.775 ±   76572.684  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:CPI                                            128  thrpt              0.256                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt             19.647                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-loads                                128  thrpt           2138.085                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-stores                               128  thrpt           1554.337                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt              0.128                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-load-misses                                128  thrpt              0.153                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-loads                                      128  thrpt              0.261                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-store-misses                               128  thrpt              2.255                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-stores                                     128  thrpt              5.522                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:branch-misses                                  128  thrpt              3.250                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:branches                                       128  thrpt           2717.878                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:cycles                                         128  thrpt           3168.256                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-load-misses                               128  thrpt              0.244                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-loads                                     128  thrpt           2112.007                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-stores                                    128  thrpt           1538.071                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-loads                                     128  thrpt              0.016                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:instructions                                   128  thrpt          12380.395                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                          128  thrpt    5   2801565.003 ±    5000.541  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:CPI                                      128  thrpt              0.245                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses                    128  thrpt              6.962                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads                          128  thrpt            210.360                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores                         128  thrpt            476.227                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses                    128  thrpt              0.102                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses                          128  thrpt              0.049                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-loads                                128  thrpt              0.161                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses                         128  thrpt              0.598                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-stores                               128  thrpt              2.106                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branch-misses                            128  thrpt              1.121                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branches                                 128  thrpt           1457.101                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:cycles                                   128  thrpt           1383.786                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses                         128  thrpt              0.077                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads                               128  thrpt            214.592                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses                        128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores                              128  thrpt            484.817                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses                         128  thrpt              0.007                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads                               128  thrpt              0.011                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:instructions                             128  thrpt           5659.192                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                         128  thrpt    5   2997477.370 ±   36268.531  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.231                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt             11.209                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt            366.210                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt            635.395                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt              0.519                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt              0.044                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-loads                               128  thrpt              0.150                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt              1.206                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-stores                              128  thrpt              2.570                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:branch-misses                           128  thrpt              1.061                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:branches                                128  thrpt           1292.727                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:cycles                                  128  thrpt           1294.523                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt              0.074                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt            366.025                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt            622.338                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:instructions                            128  thrpt           5604.023                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                        128  thrpt    5   3331474.716 ±   49298.086  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.221                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt              6.685                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt            214.483                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt            488.223                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              0.028                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.016                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              0.042                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt              0.826                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt              2.301                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              1.053                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branches                               128  thrpt           1285.160                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:cycles                                 128  thrpt           1137.640                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              0.098                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt            213.286                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt            473.772                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.022                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:instructions                           128  thrpt           5140.170                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5   3635898.612 ±   16366.765  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.216                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt              0.378                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt            186.780                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt            415.647                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.030                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.011                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              1.049                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt           1188.579                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt           1037.446                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt            181.358                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt            416.208                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt           4794.014                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                             128  thrpt    5   2792968.634 ±   71416.818  ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:CPI                                         128  thrpt              0.238                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt             12.643                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt            406.435                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt            677.343                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt              0.078                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-load-misses                             128  thrpt              0.039                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-loads                                   128  thrpt              0.107                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-store-misses                            128  thrpt              1.288                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-stores                                  128  thrpt              2.187                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:branch-misses                               128  thrpt              1.094                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:branches                                    128  thrpt           1286.094                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:cycles                                      128  thrpt           1350.025                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt              0.084                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-loads                                  128  thrpt            401.489                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-stores                                 128  thrpt            660.443                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-loads                                  128  thrpt              0.006                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:instructions                                128  thrpt           5684.031                 #/op
[info] TwitterAPIBenchmark.readCirce                                                            N/A  thrpt    5     11942.165 ±     779.258  ops/s
[info] TwitterAPIBenchmark.readCirce:CPI                                                        N/A  thrpt              0.316                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-dcache-load-misses                                      N/A  thrpt           7986.031                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-dcache-loads                                            N/A  thrpt         186615.783                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-dcache-stores                                           N/A  thrpt         101001.003                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-icache-load-misses                                      N/A  thrpt           3077.962                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-load-misses                                            N/A  thrpt              4.899                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-loads                                                  N/A  thrpt            383.182                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-store-misses                                           N/A  thrpt            726.488                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-stores                                                 N/A  thrpt           1382.005                 #/op
[info] TwitterAPIBenchmark.readCirce:branch-misses                                              N/A  thrpt            971.488                 #/op
[info] TwitterAPIBenchmark.readCirce:branches                                                   N/A  thrpt         258974.537                 #/op
[info] TwitterAPIBenchmark.readCirce:cycles                                                     N/A  thrpt         323409.876                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-load-misses                                           N/A  thrpt             14.321                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-loads                                                 N/A  thrpt         188911.993                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-store-misses                                          N/A  thrpt             12.829                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-stores                                                N/A  thrpt          97692.951                 #/op
[info] TwitterAPIBenchmark.readCirce:iTLB-load-misses                                           N/A  thrpt              3.210                 #/op
[info] TwitterAPIBenchmark.readCirce:iTLB-loads                                                 N/A  thrpt             45.382                 #/op
[info] TwitterAPIBenchmark.readCirce:instructions                                               N/A  thrpt        1023240.862                 #/op
[info] TwitterAPIBenchmark.readJacksonScala                                                     N/A  thrpt    5     22925.923 ±     353.567  ops/s
[info] TwitterAPIBenchmark.readJacksonScala:CPI                                                 N/A  thrpt              0.313                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-dcache-load-misses                               N/A  thrpt           4976.619                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-dcache-loads                                     N/A  thrpt         113960.942                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-dcache-stores                                    N/A  thrpt          55560.659                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-icache-load-misses                               N/A  thrpt           1428.528                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-load-misses                                     N/A  thrpt              3.015                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-loads                                           N/A  thrpt            180.232                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-store-misses                                    N/A  thrpt              6.825                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-stores                                          N/A  thrpt             76.462                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:branch-misses                                       N/A  thrpt            219.687                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:branches                                            N/A  thrpt         121493.655                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:cycles                                              N/A  thrpt         169939.125                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-load-misses                                    N/A  thrpt              3.558                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-loads                                          N/A  thrpt         113748.297                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-store-misses                                   N/A  thrpt              0.171                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-stores                                         N/A  thrpt          55045.789                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:iTLB-load-misses                                    N/A  thrpt              5.403                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:iTLB-loads                                          N/A  thrpt             10.128                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:instructions                                        N/A  thrpt         543468.159                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala                                                    N/A  thrpt    5     22826.865 ±     277.168  ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:CPI                                                N/A  thrpt              0.367                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-dcache-load-misses                              N/A  thrpt            613.477                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-dcache-loads                                    N/A  thrpt          94225.886                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-dcache-stores                                   N/A  thrpt          50006.412                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-icache-load-misses                              N/A  thrpt           4486.209                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-load-misses                                    N/A  thrpt              0.933                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-loads                                          N/A  thrpt             13.414                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-store-misses                                   N/A  thrpt              6.473                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-stores                                         N/A  thrpt             51.523                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:branch-misses                                      N/A  thrpt            259.308                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:branches                                           N/A  thrpt         123427.913                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:cycles                                             N/A  thrpt         163805.222                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-load-misses                                   N/A  thrpt              2.285                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-loads                                         N/A  thrpt          93428.813                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-store-misses                                  N/A  thrpt              3.035                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-stores                                        N/A  thrpt          49528.586                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:iTLB-load-misses                                   N/A  thrpt              0.235                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:iTLB-loads                                         N/A  thrpt              3.670                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:instructions                                       N/A  thrpt         446388.832                 #/op
[info] TwitterAPIBenchmark.readPlayJson                                                         N/A  thrpt    5      6236.794 ±     132.481  ops/s
[info] TwitterAPIBenchmark.readPlayJson:CPI                                                     N/A  thrpt              0.373                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-dcache-load-misses                                   N/A  thrpt          14312.010                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-dcache-loads                                         N/A  thrpt         396373.154                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-dcache-stores                                        N/A  thrpt         260719.070                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-icache-load-misses                                   N/A  thrpt          11296.700                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-load-misses                                         N/A  thrpt             68.652                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-loads                                               N/A  thrpt           1081.692                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-store-misses                                        N/A  thrpt            134.364                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-stores                                              N/A  thrpt           1369.507                 #/op
[info] TwitterAPIBenchmark.readPlayJson:branch-misses                                           N/A  thrpt           1773.321                 #/op
[info] TwitterAPIBenchmark.readPlayJson:branches                                                N/A  thrpt         292553.216                 #/op
[info] TwitterAPIBenchmark.readPlayJson:cycles                                                  N/A  thrpt         617758.547                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-load-misses                                        N/A  thrpt             17.372                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-loads                                              N/A  thrpt         391645.378                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-store-misses                                       N/A  thrpt              0.493                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-stores                                             N/A  thrpt         263556.910                 #/op
[info] TwitterAPIBenchmark.readPlayJson:iTLB-load-misses                                        N/A  thrpt              5.599                 #/op
[info] TwitterAPIBenchmark.readPlayJson:iTLB-loads                                              N/A  thrpt            120.004                 #/op
[info] TwitterAPIBenchmark.readPlayJson:instructions                                            N/A  thrpt        1654549.590                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala                                                    N/A  thrpt    5     63625.727 ±     972.347  ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:CPI                                                N/A  thrpt              0.298                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-dcache-load-misses                              N/A  thrpt           2970.965                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-dcache-loads                                    N/A  thrpt          38333.720                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-dcache-stores                                   N/A  thrpt          23497.137                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-icache-load-misses                              N/A  thrpt             25.274                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-load-misses                                    N/A  thrpt              0.926                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-loads                                          N/A  thrpt             12.539                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-store-misses                                   N/A  thrpt            203.276                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-stores                                         N/A  thrpt            305.126                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:branch-misses                                      N/A  thrpt            145.053                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:branches                                           N/A  thrpt          53921.000                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:cycles                                             N/A  thrpt          60935.391                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-load-misses                                   N/A  thrpt              3.522                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-loads                                         N/A  thrpt          38133.727                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-store-misses                                  N/A  thrpt              1.488                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-stores                                        N/A  thrpt          23866.323                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:iTLB-load-misses                                   N/A  thrpt              0.150                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:iTLB-loads                                         N/A  thrpt              0.986                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:instructions                                       N/A  thrpt         204149.170                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala                                                   N/A  thrpt    5     70684.302 ±    2199.138  ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:CPI                                               N/A  thrpt              0.328                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses                             N/A  thrpt            577.848                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-loads                                   N/A  thrpt          20731.763                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-stores                                  N/A  thrpt          17132.279                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-icache-load-misses                             N/A  thrpt           4118.268                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-load-misses                                   N/A  thrpt              0.989                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-loads                                         N/A  thrpt             10.371                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-store-misses                                  N/A  thrpt            108.793                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-stores                                        N/A  thrpt            176.374                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:branch-misses                                     N/A  thrpt             24.517                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:branches                                          N/A  thrpt          47179.843                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:cycles                                            N/A  thrpt          53411.399                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-load-misses                                  N/A  thrpt              1.414                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-loads                                        N/A  thrpt          20569.262                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-store-misses                                 N/A  thrpt              1.419                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-stores                                       N/A  thrpt          17040.254                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:iTLB-load-misses                                  N/A  thrpt              0.334                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:iTLB-loads                                        N/A  thrpt              0.946                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:instructions                                      N/A  thrpt         162664.867                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5     76034.788 ±    1094.294  ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:CPI                                       N/A  thrpt              0.330                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                     N/A  thrpt            309.500                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                           N/A  thrpt          18113.717                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                          N/A  thrpt          16838.485                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                     N/A  thrpt           3963.399                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                           N/A  thrpt              1.090                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                 N/A  thrpt              4.023                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                          N/A  thrpt              0.398                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                N/A  thrpt              9.164                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses                             N/A  thrpt             23.599                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branches                                  N/A  thrpt          45018.256                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:cycles                                    N/A  thrpt          50435.685                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                          N/A  thrpt              0.414                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                N/A  thrpt          17987.950                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                         N/A  thrpt              0.044                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                               N/A  thrpt          16833.243                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                          N/A  thrpt              0.148                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                N/A  thrpt              0.619                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:instructions                              N/A  thrpt         152877.877                 #/op
[info] VectorOfBooleansBenchmark.readCirce                                                      128  thrpt    5    314132.884 ±    1075.297  ops/s
[info] VectorOfBooleansBenchmark.readCirce:CPI                                                  128  thrpt              0.259                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt            149.775                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-dcache-loads                                      128  thrpt          11785.397                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-dcache-stores                                     128  thrpt           5398.818                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-icache-load-misses                                128  thrpt              0.546                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-load-misses                                      128  thrpt              0.222                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-loads                                            128  thrpt              0.823                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-store-misses                                     128  thrpt             19.420                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-stores                                           128  thrpt             49.355                 #/op
[info] VectorOfBooleansBenchmark.readCirce:branch-misses                                        128  thrpt             14.785                 #/op
[info] VectorOfBooleansBenchmark.readCirce:branches                                             128  thrpt          11828.236                 #/op
[info] VectorOfBooleansBenchmark.readCirce:cycles                                               128  thrpt          12173.419                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-load-misses                                     128  thrpt              0.714                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-loads                                           128  thrpt          11816.909                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.017                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-stores                                          128  thrpt           5298.239                 #/op
[info] VectorOfBooleansBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              0.050                 #/op
[info] VectorOfBooleansBenchmark.readCirce:iTLB-loads                                           128  thrpt              0.031                 #/op
[info] VectorOfBooleansBenchmark.readCirce:instructions                                         128  thrpt          46960.211                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala                                               128  thrpt    5    497686.244 ±   17926.328  ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:CPI                                           128  thrpt              0.276                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt             35.144                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt           6386.379                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt           3234.913                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt              0.476                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt              0.228                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-loads                                     128  thrpt              0.599                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt              2.773                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-stores                                    128  thrpt              8.878                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:branch-misses                                 128  thrpt              5.487                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:branches                                      128  thrpt           6692.059                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:cycles                                        128  thrpt           7744.862                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              0.176                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt           6213.071                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.006                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt           3194.667                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              0.054                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt              0.199                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:instructions                                  128  thrpt          28037.147                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala                                              128  thrpt    5   1261542.442 ±   48501.862  ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.233                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt             13.454                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt           3170.504                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt           1104.621                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              0.077                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.030                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              0.102                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              0.444                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt              3.629                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:branch-misses                                128  thrpt              5.073                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:branches                                     128  thrpt           3194.207                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:cycles                                       128  thrpt           2984.970                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.102                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt           3074.810                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.004                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt           1078.277                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.021                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.035                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:instructions                                 128  thrpt          12797.190                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson                                                   128  thrpt    5    100906.500 ±    5904.933  ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:CPI                                               128  thrpt              0.320                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt            925.972                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          34815.013                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          21982.757                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt             28.620                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              1.215                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-loads                                         128  thrpt              8.060                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             30.664                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-stores                                        128  thrpt            191.168                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:branch-misses                                     128  thrpt             38.632                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:branches                                          128  thrpt          21669.660                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:cycles                                            128  thrpt          37441.716                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              4.240                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          35767.837                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.146                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          22088.266                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.290                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              0.444                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:instructions                                      128  thrpt         116877.881                 #/op
[info] VectorOfBooleansBenchmark.writeCirce                                                     128  thrpt    5    312401.582 ±    3552.117  ops/s
[info] VectorOfBooleansBenchmark.writeCirce:CPI                                                 128  thrpt              0.295                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt             89.170                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt          11618.799                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt           7087.972                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt              0.424                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.271                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-loads                                           128  thrpt              0.794                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-store-misses                                    128  thrpt             45.998                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-stores                                          128  thrpt             62.211                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:branch-misses                                       128  thrpt             15.246                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:branches                                            128  thrpt           8942.621                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:cycles                                              128  thrpt          12253.400                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              1.117                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-loads                                          128  thrpt          11581.961                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.017                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-stores                                         128  thrpt           6985.364                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.114                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.299                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:instructions                                        128  thrpt          41580.659                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    722890.610 ±    7147.902  ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.285                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt             20.726                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt           5326.054                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           2096.656                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.223                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.113                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              0.195                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt              3.109                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt              8.172                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:branch-misses                                128  thrpt              6.244                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:branches                                     128  thrpt           4214.082                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:cycles                                       128  thrpt           5363.446                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.209                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt           5144.536                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.004                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           2046.512                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.010                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.010                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:instructions                                 128  thrpt          18840.361                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5   1675502.653 ±    3369.174  ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.217                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             11.931                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           2062.352                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           1459.043                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.049                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.033                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.080                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt              3.135                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt              6.978                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              2.065                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:branches                                    128  thrpt           2467.255                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:cycles                                      128  thrpt           2284.293                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.189                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           2007.749                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.004                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           1409.204                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.004                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.015                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:instructions                                128  thrpt          10536.353                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5   1750727.432 ±    6449.429  ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.212                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              0.487                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           2031.539                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           1344.242                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.060                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.011                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.045                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.002                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.034                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              2.101                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           2355.435                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           2138.673                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.002                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           2023.181                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.001                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           1331.864                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.009                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.026                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          10077.021                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson                                                  128  thrpt    5    436524.243 ±   38248.863  ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:CPI                                              128  thrpt              0.280                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt             39.841                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt           9270.984                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt           3338.926                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt              1.925                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              0.226                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-loads                                        128  thrpt              0.684                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt              4.134                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-stores                                       128  thrpt             14.975                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:branch-misses                                    128  thrpt              4.326                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:branches                                         128  thrpt           6399.867                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:cycles                                           128  thrpt           8606.683                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              0.310                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-loads                                       128  thrpt           9089.916                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.009                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-stores                                      128  thrpt           3230.307                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.024                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              0.058                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:instructions                                     128  thrpt          30790.817                 #/op
[info] Benchmark result is saved to graalvmce1.json
[success] Total time: 6075 s, completed May 20, 2018 12:35:46 AM
