[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed May 19, 2018 9:11:01 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:991:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1077:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:443:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:451:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:967:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 5 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.26.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.26.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:56: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = d0(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = d0(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           e0(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           e0(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "a"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "l"
[info]         case 1 => "r"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:60: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d7(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d12(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d5(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d15(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d8(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(d0(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e7(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e12(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e15(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e8(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e14(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "properties"
[info]         case 1 => "geometry"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "coordinates"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd, 300)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "bd"
[info]         case 2 => "os"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null, 300));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Char] = new Array[Char](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Double] = new Array[Double](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Float] = new Array[Float](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Int] = new Array[Int](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Long] = new Array[Long](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Short] = new Array[Short](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "l"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "destination_addresses"
[info]         case 1 => "origin_addresses"
[info]         case 2 => "rows"
[info]         case 3 => "status"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "distance"
[info]         case 1 => "duration"
[info]         case 2 => "status"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "text"
[info]         case 1 => "value"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "i"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]         case 1 => "s"
[info]         case 2 => "i"
[info]         case 3 => "l"
[info]         case 4 => "bl"
[info]         case 5 => "ch"
[info]         case 6 => "dbl"
[info]         case 7 => "f"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(f5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "retweeted_status"
[info]         case 18 => "is_quote_status"
[info]         case 19 => "retweet_count"
[info]         case 20 => "favorite_count"
[info]         case 21 => "favorited"
[info]         case 22 => "retweeted"
[info]         case 23 => "possibly_sensitive"
[info]         case 24 => "lang"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "screen_name"
[info]         case 1 => "name"
[info]         case 2 => "id"
[info]         case 3 => "id_str"
[info]         case 4 => "indices"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "expanded_url"
[info]         case 2 => "display_url"
[info]         case 3 => "indices"
[info]       };
[info]       private[this] def f3(i: Int): String = (i: @switch) match {
[info]         case 0 => "id"
[info]         case 1 => "id_str"
[info]         case 2 => "name"
[info]         case 3 => "screen_name"
[info]         case 4 => "location"
[info]         case 5 => "description"
[info]         case 6 => "url"
[info]         case 7 => "entities"
[info]         case 8 => "protected"
[info]         case 9 => "followers_count"
[info]         case 10 => "friends_count"
[info]         case 11 => "listed_count"
[info]         case 12 => "created_at"
[info]         case 13 => "favourites_count"
[info]         case 14 => "utc_offset"
[info]         case 15 => "time_zone"
[info]         case 16 => "geo_enabled"
[info]         case 17 => "verified"
[info]         case 18 => "statuses_count"
[info]         case 19 => "lang"
[info]         case 20 => "contributors_enabled"
[info]         case 21 => "is_translator"
[info]         case 22 => "is_translation_enabled"
[info]         case 23 => "profile_background_color"
[info]         case 24 => "profile_background_image_url"
[info]         case 25 => "profile_background_image_url_https"
[info]         case 26 => "profile_background_tile"
[info]         case 27 => "profile_image_url"
[info]         case 28 => "profile_image_url_https"
[info]         case 29 => "profile_banner_url"
[info]         case 30 => "profile_link_color"
[info]         case 31 => "profile_sidebar_border_color"
[info]         case 32 => "profile_sidebar_fill_color"
[info]         case 33 => "profile_text_color"
[info]         case 34 => "profile_use_background_image"
[info]         case 35 => "has_extended_profile"
[info]         case 36 => "default_profile"
[info]         case 37 => "default_profile_image"
[info]         case 38 => "following"
[info]         case 39 => "follow_request_sent"
[info]         case 40 => "notifications"
[info]         case 41 => "translator_type"
[info]       };
[info]       private[this] def f4(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "description"
[info]       };
[info]       private[this] def f5(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "is_quote_status"
[info]         case 18 => "retweet_count"
[info]         case 19 => "favorite_count"
[info]         case 20 => "favorited"
[info]         case 21 => "retweeted"
[info]         case 22 => "possibly_sensitive"
[info]         case 23 => "lang"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:49:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:50:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:51:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:55:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:56:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:57:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:58:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:59:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:60:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:61:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.26.1-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.26.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.26.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java -prof perfnorm -rf json -rff graalvmee1.json .*Benchmark.*
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 01:10:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 98129.550 ops/s
[info] # Warmup Iteration   2: 866458.416 ops/s
[info] # Warmup Iteration   3: 1077429.281 ops/s
[info] # Warmup Iteration   4: 1090740.209 ops/s
[info] # Warmup Iteration   5: 1093466.009 ops/s
[info] Iteration   1: 1105357.570 ops/s
[info] Iteration   2: 1106645.666 ops/s
[info] Iteration   3: 1088084.571 ops/s
[info] Iteration   4: 1073562.728 ops/s
[info] Iteration   5: 1105808.449 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   1095891.797 ±(99.9%) 56564.068 ops/s [Average]
[info]   (min, avg, max) = (1073562.728, 1095891.797, 1106645.666), stdev = 14689.509
[info]   CI (99.9%): [1039327.729, 1152455.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-dcache-load-misses":
[info]   54.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-dcache-loads":
[info]   2603.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-dcache-stores":
[info]   1433.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:L1-icache-load-misses":
[info]   36.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-load-misses":
[info]   0.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-loads":
[info]   0.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-store-misses":
[info]   3.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:LLC-stores":
[info]   11.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:branch-misses":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:branches":
[info]   2167.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:cycles":
[info]   3454.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-load-misses":
[info]   0.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-loads":
[info]   2573.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:dTLB-stores":
[info]   1427.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:instructions":
[info]   10500.268 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:27:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 47963.530 ops/s
[info] # Warmup Iteration   2: 1677055.780 ops/s
[info] # Warmup Iteration   3: 1929350.793 ops/s
[info] # Warmup Iteration   4: 2050233.975 ops/s
[info] # Warmup Iteration   5: 2050808.652 ops/s
[info] Iteration   1: 2040935.985 ops/s
[info] Iteration   2: 1999349.586 ops/s
[info] Iteration   3: 2046161.888 ops/s
[info] Iteration   4: 2056367.494 ops/s
[info] Iteration   5: 2013650.922 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   2031293.175 ±(99.9%) 91820.416 ops/s [Average]
[info]   (min, avg, max) = (1999349.586, 2031293.175, 2056367.494), stdev = 23845.470
[info]   CI (99.9%): [1939472.759, 2123113.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   19.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-dcache-loads":
[info]   1613.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-dcache-stores":
[info]   867.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-loads":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:LLC-stores":
[info]   2.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:branch-misses":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:branches":
[info]   1137.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:cycles":
[info]   1872.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-loads":
[info]   1595.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:dTLB-stores":
[info]   841.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:instructions":
[info]   5890.331 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:31:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4411735.227 ops/s
[info] # Warmup Iteration   2: 5321331.144 ops/s
[info] # Warmup Iteration   3: 5973007.481 ops/s
[info] # Warmup Iteration   4: 5964482.239 ops/s
[info] # Warmup Iteration   5: 5971425.989 ops/s
[info] Iteration   1: 5953440.395 ops/s
[info] Iteration   2: 5957946.629 ops/s
[info] Iteration   3: 5985304.290 ops/s
[info] Iteration   4: 5964481.932 ops/s
[info] Iteration   5: 5981175.168 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5968469.683 ±(99.9%) 54366.050 ops/s [Average]
[info]   (min, avg, max) = (5953440.395, 5968469.683, 5985304.290), stdev = 14118.691
[info]   CI (99.9%): [5914103.633, 6022835.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   403.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   240.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:LLC-stores":
[info]   0.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:branch-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:branches":
[info]   667.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:cycles":
[info]   637.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-loads":
[info]   399.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:dTLB-stores":
[info]   235.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:instructions":
[info]   2574.294 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:33:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10320.100 ops/s
[info] # Warmup Iteration   2: 353220.042 ops/s
[info] # Warmup Iteration   3: 449479.795 ops/s
[info] # Warmup Iteration   4: 449161.077 ops/s
[info] # Warmup Iteration   5: 463333.416 ops/s
[info] Iteration   1: 464690.638 ops/s
[info] Iteration   2: 468233.289 ops/s
[info] Iteration   3: 457248.101 ops/s
[info] Iteration   4: 466763.325 ops/s
[info] Iteration   5: 444238.638 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   460234.798 ±(99.9%) 38082.923 ops/s [Average]
[info]   (min, avg, max) = (444238.638, 460234.798, 468233.289), stdev = 9890.014
[info]   CI (99.9%): [422151.875, 498317.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:CPI":
[info]   0.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   192.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-dcache-loads":
[info]   5862.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-dcache-stores":
[info]   3404.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:L1-icache-load-misses":
[info]   129.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-load-misses":
[info]   0.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-loads":
[info]   3.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-store-misses":
[info]   3.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:LLC-stores":
[info]   26.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:branch-misses":
[info]   8.696 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:branches":
[info]   3572.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:cycles":
[info]   8083.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-loads":
[info]   5996.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:dTLB-stores":
[info]   3403.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:iTLB-loads":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:instructions":
[info]   20836.739 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:33:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 63098.697 ops/s
[info] # Warmup Iteration   2: 828827.600 ops/s
[info] # Warmup Iteration   3: 1008042.580 ops/s
[info] # Warmup Iteration   4: 1045147.882 ops/s
[info] # Warmup Iteration   5: 1003548.413 ops/s
[info] Iteration   1: 1006881.373 ops/s
[info] Iteration   2: 1007582.440 ops/s
[info] Iteration   3: 1045156.154 ops/s
[info] Iteration   4: 1062527.471 ops/s
[info] Iteration   5: 1064817.297 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   1037392.947 ±(99.9%) 109991.828 ops/s [Average]
[info]   (min, avg, max) = (1006881.373, 1037392.947, 1064817.297), stdev = 28564.528
[info]   CI (99.9%): [927401.119, 1147384.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:CPI":
[info]   0.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-dcache-load-misses":
[info]   69.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-dcache-loads":
[info]   2319.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-dcache-stores":
[info]   1563.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:L1-icache-load-misses":
[info]   151.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-load-misses":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-loads":
[info]   0.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-store-misses":
[info]   8.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:LLC-stores":
[info]   22.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:branch-misses":
[info]   1.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:branches":
[info]   1956.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:cycles":
[info]   3618.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-load-misses":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-loads":
[info]   2319.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:dTLB-stores":
[info]   1540.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:iTLB-loads":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:instructions":
[info]   9440.785 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:33:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 312939.792 ops/s
[info] # Warmup Iteration   2: 2646542.955 ops/s
[info] # Warmup Iteration   3: 3112077.504 ops/s
[info] # Warmup Iteration   4: 3114483.684 ops/s
[info] # Warmup Iteration   5: 3083318.906 ops/s
[info] Iteration   1: 2942526.418 ops/s
[info] Iteration   2: 3095873.920 ops/s
[info] Iteration   3: 3110830.673 ops/s
[info] Iteration   4: 3068892.670 ops/s
[info] Iteration   5: 2905630.775 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   3024750.891 ±(99.9%) 362079.188 ops/s [Average]
[info]   (min, avg, max) = (2905630.775, 3024750.891, 3110830.673), stdev = 94030.815
[info]   CI (99.9%): [2662671.703, 3386830.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   10.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   941.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   566.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-loads":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:LLC-stores":
[info]   1.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:branch-misses":
[info]   0.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:branches":
[info]   798.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:cycles":
[info]   1247.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-loads":
[info]   916.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:dTLB-stores":
[info]   554.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:instructions":
[info]   3778.869 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:33:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12730357.693 ops/s
[info] # Warmup Iteration   2: 16325239.852 ops/s
[info] # Warmup Iteration   3: 17550796.959 ops/s
[info] # Warmup Iteration   4: 20166016.214 ops/s
[info] # Warmup Iteration   5: 20529566.117 ops/s
[info] Iteration   1: 20498564.856 ops/s
[info] Iteration   2: 20555262.943 ops/s
[info] Iteration   3: 19708983.648 ops/s
[info] Iteration   4: 19776658.793 ops/s
[info] Iteration   5: 20102700.756 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   20128434.199 ±(99.9%) 1515420.895 ops/s [Average]
[info]   (min, avg, max) = (19708983.648, 20128434.199, 20555262.943), stdev = 393549.994
[info]   CI (99.9%): [18613013.304, 21643855.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:CPI":
[info]   0.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   1.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   108.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   163.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:branch-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:branches":
[info]   103.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:cycles":
[info]   192.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-loads":
[info]   106.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:dTLB-stores":
[info]   154.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:instructions":
[info]   553.452 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:34:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12756829.455 ops/s
[info] # Warmup Iteration   2: 19616236.428 ops/s
[info] # Warmup Iteration   3: 18915877.244 ops/s
[info] # Warmup Iteration   4: 18926805.389 ops/s
[info] # Warmup Iteration   5: 18924271.738 ops/s
[info] Iteration   1: 18909540.944 ops/s
[info] Iteration   2: 18910580.049 ops/s
[info] Iteration   3: 18937864.235 ops/s
[info] Iteration   4: 18932925.822 ops/s
[info] Iteration   5: 18937418.456 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   18925665.901 ±(99.9%) 55375.203 ops/s [Average]
[info]   (min, avg, max) = (18909540.944, 18925665.901, 18937864.235), stdev = 14380.764
[info]   CI (99.9%): [18870290.698, 18981041.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   127.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   183.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   105.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   198.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   126.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   181.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   629.889 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:34:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21461.577 ops/s
[info] # Warmup Iteration   2: 568347.334 ops/s
[info] # Warmup Iteration   3: 970861.932 ops/s
[info] # Warmup Iteration   4: 1054568.652 ops/s
[info] # Warmup Iteration   5: 1000819.098 ops/s
[info] Iteration   1: 1023357.230 ops/s
[info] Iteration   2: 1061173.120 ops/s
[info] Iteration   3: 1062228.351 ops/s
[info] Iteration   4: 1044955.935 ops/s
[info] Iteration   5: 1059347.456 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   1050212.418 ±(99.9%) 63762.765 ops/s [Average]
[info]   (min, avg, max) = (1023357.230, 1050212.418, 1062228.351), stdev = 16558.988
[info]   CI (99.9%): [986449.654, 1113975.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:CPI":
[info]   0.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   67.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-dcache-loads":
[info]   2499.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-dcache-stores":
[info]   1422.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:L1-icache-load-misses":
[info]   94.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-loads":
[info]   0.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-store-misses":
[info]   1.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:LLC-stores":
[info]   15.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:branch-misses":
[info]   0.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:branches":
[info]   1801.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:cycles":
[info]   3655.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-loads":
[info]   2585.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:dTLB-stores":
[info]   1500.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:iTLB-loads":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:instructions":
[info]   9950.875 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:34:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 444120.419 ops/s
[info] # Warmup Iteration   2: 2944691.867 ops/s
[info] # Warmup Iteration   3: 3721852.023 ops/s
[info] # Warmup Iteration   4: 3824181.413 ops/s
[info] # Warmup Iteration   5: 3894025.363 ops/s
[info] Iteration   1: 3933709.893 ops/s
[info] Iteration   2: 3775900.238 ops/s
[info] Iteration   3: 3952720.533 ops/s
[info] Iteration   4: 3904913.409 ops/s
[info] Iteration   5: 3835613.970 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   3880571.609 ±(99.9%) 282956.526 ops/s [Average]
[info]   (min, avg, max) = (3775900.238, 3880571.609, 3952720.533), stdev = 73482.911
[info]   CI (99.9%): [3597615.083, 4163528.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:CPI":
[info]   0.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-dcache-load-misses":
[info]   23.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-dcache-loads":
[info]   630.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-dcache-stores":
[info]   427.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:L1-icache-load-misses":
[info]   0.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-load-misses":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-loads":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-store-misses":
[info]   2.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:LLC-stores":
[info]   5.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:branch-misses":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:branches":
[info]   634.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:cycles":
[info]   981.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-loads":
[info]   644.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:dTLB-stores":
[info]   455.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:instructions":
[info]   3138.237 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:34:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.729 ops/s
[info] # Warmup Iteration   2: 10178438.177 ops/s
[info] # Warmup Iteration   3: 11196652.550 ops/s
[info] # Warmup Iteration   4: 11767915.900 ops/s
[info] # Warmup Iteration   5: 11849139.169 ops/s
[info] Iteration   1: 10876026.047 ops/s
[info] Iteration   2: 11806414.010 ops/s
[info] Iteration   3: 11736908.001 ops/s
[info] Iteration   4: 11208552.372 ops/s
[info] Iteration   5: 11243071.383 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   11374194.363 ±(99.9%) 1505174.774 ops/s [Average]
[info]   (min, avg, max) = (10876026.047, 11374194.363, 11806414.010), stdev = 390889.109
[info]   CI (99.9%): [9869019.589, 12879369.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   3.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   300.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   159.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:branch-misses":
[info]   0.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:branches":
[info]   299.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:cycles":
[info]   337.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-loads":
[info]   311.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:dTLB-stores":
[info]   164.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:instructions":
[info]   1365.384 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:34:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 319930.921 ops/s
[info] # Warmup Iteration   2: 3380181.796 ops/s
[info] # Warmup Iteration   3: 3664717.397 ops/s
[info] # Warmup Iteration   4: 3770259.979 ops/s
[info] # Warmup Iteration   5: 3724630.849 ops/s
[info] Iteration   1: 3916676.680 ops/s
[info] Iteration   2: 3917075.391 ops/s
[info] Iteration   3: 3523009.445 ops/s
[info] Iteration   4: 3897501.806 ops/s
[info] Iteration   5: 3942146.547 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3839281.974 ±(99.9%) 683531.974 ops/s [Average]
[info]   (min, avg, max) = (3523009.445, 3839281.974, 3942146.547), stdev = 177511.083
[info]   CI (99.9%): [3155750.000, 4522813.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   15.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   808.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   465.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-loads":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:LLC-stores":
[info]   2.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:branch-misses":
[info]   0.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:branches":
[info]   575.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:cycles":
[info]   994.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-loads":
[info]   810.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:dTLB-stores":
[info]   473.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:instructions":
[info]   3017.562 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:34:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11628613.007 ops/s
[info] # Warmup Iteration   2: 13503758.851 ops/s
[info] # Warmup Iteration   3: 14863751.047 ops/s
[info] # Warmup Iteration   4: 14103048.667 ops/s
[info] # Warmup Iteration   5: 14042388.963 ops/s
[info] Iteration   1: 14113401.200 ops/s
[info] Iteration   2: 14952553.811 ops/s
[info] Iteration   3: 14977427.882 ops/s
[info] Iteration   4: 14926227.736 ops/s
[info] Iteration   5: 14971403.371 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   14788202.800 ±(99.9%) 1454590.515 ops/s [Average]
[info]   (min, avg, max) = (14113401.200, 14788202.800, 14977427.882), stdev = 377752.537
[info]   CI (99.9%): [13333612.285, 16242793.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   3.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   192.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   135.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:branch-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:branches":
[info]   253.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:cycles":
[info]   254.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-loads":
[info]   197.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:dTLB-stores":
[info]   133.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:instructions":
[info]   1099.337 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:33:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22665.915 ops/s
[info] # Warmup Iteration   2: 1052452.972 ops/s
[info] # Warmup Iteration   3: 1741505.099 ops/s
[info] # Warmup Iteration   4: 1826641.095 ops/s
[info] # Warmup Iteration   5: 1820982.878 ops/s
[info] Iteration   1: 1738618.433 ops/s
[info] Iteration   2: 1811434.636 ops/s
[info] Iteration   3: 1818474.288 ops/s
[info] Iteration   4: 1824725.936 ops/s
[info] Iteration   5: 1832388.159 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1805128.290 ±(99.9%) 146230.896 ops/s [Average]
[info]   (min, avg, max) = (1738618.433, 1805128.290, 1832388.159), stdev = 37975.699
[info]   CI (99.9%): [1658897.395, 1951359.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:CPI":
[info]   0.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   41.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-dcache-loads":
[info]   1645.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-dcache-stores":
[info]   1008.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   11.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-loads":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-store-misses":
[info]   2.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:LLC-stores":
[info]   8.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:branch-misses":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:branches":
[info]   1033.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:cycles":
[info]   2128.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-loads":
[info]   1750.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:dTLB-stores":
[info]   1036.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:instructions":
[info]   5951.162 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:33:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 725143.970 ops/s
[info] # Warmup Iteration   2: 3472695.285 ops/s
[info] # Warmup Iteration   3: 4803675.675 ops/s
[info] # Warmup Iteration   4: 4784531.399 ops/s
[info] # Warmup Iteration   5: 4931698.732 ops/s
[info] Iteration   1: 4977811.997 ops/s
[info] Iteration   2: 4996031.411 ops/s
[info] Iteration   3: 4962750.650 ops/s
[info] Iteration   4: 4818358.272 ops/s
[info] Iteration   5: 4837585.982 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   4918507.662 ±(99.9%) 322527.901 ops/s [Average]
[info]   (min, avg, max) = (4818358.272, 4918507.662, 4996031.411), stdev = 83759.472
[info]   CI (99.9%): [4595979.761, 5241035.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   12.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-dcache-loads":
[info]   529.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-dcache-stores":
[info]   387.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-loads":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-store-misses":
[info]   0.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:LLC-stores":
[info]   2.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:branch-misses":
[info]   0.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:branches":
[info]   546.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:cycles":
[info]   800.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-loads":
[info]   556.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:dTLB-stores":
[info]   402.535 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:instructions":
[info]   2602.929 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:33:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.798 ops/s
[info] # Warmup Iteration   2: 22685872.231 ops/s
[info] # Warmup Iteration   3: 23438217.561 ops/s
[info] # Warmup Iteration   4: 24741610.528 ops/s
[info] # Warmup Iteration   5: 24731215.595 ops/s
[info] Iteration   1: 24635405.338 ops/s
[info] Iteration   2: 24707123.806 ops/s
[info] Iteration   3: 24692182.990 ops/s
[info] Iteration   4: 24630083.627 ops/s
[info] Iteration   5: 24621574.301 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   24657274.013 ±(99.9%) 151546.983 ops/s [Average]
[info]   (min, avg, max) = (24621574.301, 24657274.013, 24707123.806), stdev = 39356.270
[info]   CI (99.9%): [24505727.030, 24808820.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   0.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   125.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   63.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:LLC-stores":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:branch-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:branches":
[info]   156.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:cycles":
[info]   157.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   129.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   63.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:instructions":
[info]   659.638 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:33:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1060486.047 ops/s
[info] # Warmup Iteration   2: 10468143.548 ops/s
[info] # Warmup Iteration   3: 10838435.649 ops/s
[info] # Warmup Iteration   4: 10954138.776 ops/s
[info] # Warmup Iteration   5: 10910956.513 ops/s
[info] Iteration   1: 10922230.680 ops/s
[info] Iteration   2: 10990753.668 ops/s
[info] Iteration   3: 10241701.510 ops/s
[info] Iteration   4: 10235324.067 ops/s
[info] Iteration   5: 10200271.033 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   10518056.192 ±(99.9%) 1545179.366 ops/s [Average]
[info]   (min, avg, max) = (10200271.033, 10518056.192, 10990753.668), stdev = 401278.175
[info]   CI (99.9%): [8972876.825, 12063235.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:CPI":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   0.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   314.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   168.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:LLC-stores":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:branch-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:branches":
[info]   276.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:cycles":
[info]   346.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-loads":
[info]   312.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:dTLB-stores":
[info]   168.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:instructions":
[info]   1212.523 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:33:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20864151.745 ops/s
[info] # Warmup Iteration   2: 32112207.290 ops/s
[info] # Warmup Iteration   3: 32718346.396 ops/s
[info] # Warmup Iteration   4: 33513221.465 ops/s
[info] # Warmup Iteration   5: 34074557.816 ops/s
[info] Iteration   1: 34798824.336 ops/s
[info] Iteration   2: 34620254.980 ops/s
[info] Iteration   3: 34657127.348 ops/s
[info] Iteration   4: 34423297.404 ops/s
[info] Iteration   5: 34420135.612 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   34583927.936 ±(99.9%) 625324.787 ops/s [Average]
[info]   (min, avg, max) = (34420135.612, 34583927.936, 34798824.336), stdev = 162394.861
[info]   CI (99.9%): [33958603.149, 35209252.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   0.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   89.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   86.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:branches":
[info]   96.440 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:cycles":
[info]   111.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   88.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   84.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:instructions":
[info]   461.051 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:33:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21692543.072 ops/s
[info] # Warmup Iteration   2: 34923642.862 ops/s
[info] # Warmup Iteration   3: 36407592.760 ops/s
[info] # Warmup Iteration   4: 36421085.942 ops/s
[info] # Warmup Iteration   5: 36526712.969 ops/s
[info] Iteration   1: 36518521.385 ops/s
[info] Iteration   2: 35510347.173 ops/s
[info] Iteration   3: 36487774.653 ops/s
[info] Iteration   4: 36503905.662 ops/s
[info] Iteration   5: 36524054.124 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   36308920.599 ±(99.9%) 1719844.307 ops/s [Average]
[info]   (min, avg, max) = (35510347.173, 36308920.599, 36524054.124), stdev = 446638.105
[info]   CI (99.9%): [34589076.292, 38028764.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   90.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   77.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   99.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   104.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   89.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   77.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   460.689 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:32:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 85970.343 ops/s
[info] # Warmup Iteration   2: 1443071.435 ops/s
[info] # Warmup Iteration   3: 2303615.623 ops/s
[info] # Warmup Iteration   4: 2408285.844 ops/s
[info] # Warmup Iteration   5: 2394443.429 ops/s
[info] Iteration   1: 2414618.950 ops/s
[info] Iteration   2: 2418477.341 ops/s
[info] Iteration   3: 2410549.801 ops/s
[info] Iteration   4: 2387125.461 ops/s
[info] Iteration   5: 2341922.695 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   2394538.850 ±(99.9%) 122617.926 ops/s [Average]
[info]   (min, avg, max) = (2341922.695, 2394538.850, 2418477.341), stdev = 31843.486
[info]   CI (99.9%): [2271920.924, 2517156.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:CPI":
[info]   0.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   34.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-dcache-loads":
[info]   1158.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-dcache-stores":
[info]   775.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   4.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-loads":
[info]   0.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-store-misses":
[info]   1.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:LLC-stores":
[info]   7.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:branch-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:branches":
[info]   812.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:cycles":
[info]   1616.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-loads":
[info]   1202.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:dTLB-stores":
[info]   823.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:iTLB-loads":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:instructions":
[info]   4479.862 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:32:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 235913.999 ops/s
[info] # Warmup Iteration   2: 372832.880 ops/s
[info] # Warmup Iteration   3: 373655.642 ops/s
[info] # Warmup Iteration   4: 364858.833 ops/s
[info] # Warmup Iteration   5: 370669.330 ops/s
[info] Iteration   1: 378388.072 ops/s
[info] Iteration   2: 379284.252 ops/s
[info] Iteration   3: 376265.680 ops/s
[info] Iteration   4: 361363.973 ops/s
[info] Iteration   5: 377750.295 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   374610.454 ±(99.9%) 28827.312 ops/s [Average]
[info]   (min, avg, max) = (361363.973, 374610.454, 379284.252), stdev = 7486.361
[info]   CI (99.9%): [345783.143, 403437.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:CPI":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   168.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   7121.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   5481.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   24.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-loads":
[info]   5.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   25.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:LLC-stores":
[info]   51.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:branch-misses":
[info]   14.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:branches":
[info]   7985.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:cycles":
[info]   11409.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   1.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   7219.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   5589.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   2.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:instructions":
[info]   36244.833 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:32:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 194280.555 ops/s
[info] # Warmup Iteration   2: 740041.966 ops/s
[info] # Warmup Iteration   3: 747523.124 ops/s
[info] # Warmup Iteration   4: 750676.019 ops/s
[info] # Warmup Iteration   5: 754497.694 ops/s
[info] Iteration   1: 756219.978 ops/s
[info] Iteration   2: 756524.209 ops/s
[info] Iteration   3: 756731.768 ops/s
[info] Iteration   4: 757151.815 ops/s
[info] Iteration   5: 758426.643 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   757010.883 ±(99.9%) 3314.980 ops/s [Average]
[info]   (min, avg, max) = (756219.978, 757010.883, 758426.643), stdev = 860.890
[info]   CI (99.9%): [753695.902, 760325.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   24.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   3642.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   2526.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   6.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   2.879 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:branches":
[info]   4990.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:cycles":
[info]   4699.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   3650.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   2484.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:instructions":
[info]   19271.909 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:32:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1307212.710 ops/s
[info] # Warmup Iteration   2: 1495950.804 ops/s
[info] # Warmup Iteration   3: 1634413.472 ops/s
[info] # Warmup Iteration   4: 1715800.880 ops/s
[info] # Warmup Iteration   5: 1715766.017 ops/s
[info] Iteration   1: 1723636.945 ops/s
[info] Iteration   2: 1691082.774 ops/s
[info] Iteration   3: 1716754.297 ops/s
[info] Iteration   4: 1723230.168 ops/s
[info] Iteration   5: 1613749.776 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1693690.792 ±(99.9%) 179568.040 ops/s [Average]
[info]   (min, avg, max) = (1613749.776, 1693690.792, 1723636.945), stdev = 46633.250
[info]   CI (99.9%): [1514122.752, 1873258.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   17.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1719.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1309.805 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   3.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   1.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:branches":
[info]   2655.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   2247.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   1709.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   1300.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   10066.837 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:32:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 66730.505 ops/s
[info] # Warmup Iteration   2: 186661.323 ops/s
[info] # Warmup Iteration   3: 219945.216 ops/s
[info] # Warmup Iteration   4: 223577.507 ops/s
[info] # Warmup Iteration   5: 224483.709 ops/s
[info] Iteration   1: 223786.241 ops/s
[info] Iteration   2: 223945.948 ops/s
[info] Iteration   3: 224797.875 ops/s
[info] Iteration   4: 223805.112 ops/s
[info] Iteration   5: 222067.221 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   223680.479 ±(99.9%) 3825.710 ops/s [Average]
[info]   (min, avg, max) = (222067.221, 223680.479, 224797.875), stdev = 993.525
[info]   CI (99.9%): [219854.769, 227506.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   501.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   12966.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   10044.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   6.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   1.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   4.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   55.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   151.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   42.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:branches":
[info]   11646.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:cycles":
[info]   17292.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   1.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   13045.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   10698.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:instructions":
[info]   59934.182 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:31:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 212864.350 ops/s
[info] # Warmup Iteration   2: 364634.330 ops/s
[info] # Warmup Iteration   3: 463472.263 ops/s
[info] # Warmup Iteration   4: 471749.335 ops/s
[info] # Warmup Iteration   5: 468868.448 ops/s
[info] Iteration   1: 470841.703 ops/s
[info] Iteration   2: 468052.660 ops/s
[info] Iteration   3: 467737.028 ops/s
[info] Iteration   4: 465844.566 ops/s
[info] Iteration   5: 467349.219 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   467965.035 ±(99.9%) 6997.824 ops/s [Average]
[info]   (min, avg, max) = (465844.566, 467965.035, 470841.703), stdev = 1817.313
[info]   CI (99.9%): [460967.211, 474962.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:CPI":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   81.947 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   6335.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   5731.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   50.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   75.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:branch-misses":
[info]   10.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:branches":
[info]   5325.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:cycles":
[info]   7909.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   6508.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   5902.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:instructions":
[info]   27654.091 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:31:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 315839.238 ops/s
[info] # Warmup Iteration   2: 1235237.588 ops/s
[info] # Warmup Iteration   3: 1433440.441 ops/s
[info] # Warmup Iteration   4: 1438414.566 ops/s
[info] # Warmup Iteration   5: 1442890.095 ops/s
[info] Iteration   1: 1447882.352 ops/s
[info] Iteration   2: 1445058.600 ops/s
[info] Iteration   3: 1439626.890 ops/s
[info] Iteration   4: 1441894.238 ops/s
[info] Iteration   5: 1443771.719 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   1443646.760 ±(99.9%) 12051.321 ops/s [Average]
[info]   (min, avg, max) = (1439626.890, 1443646.760, 1447882.352), stdev = 3129.690
[info]   CI (99.9%): [1431595.439, 1455698.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   12.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   2731.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1336.583 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   7.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:branches":
[info]   2023.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   2573.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   2756.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   1371.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   11156.233 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:31:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1782922.384 ops/s
[info] # Warmup Iteration   2: 2337606.017 ops/s
[info] # Warmup Iteration   3: 2740290.591 ops/s
[info] # Warmup Iteration   4: 2713778.721 ops/s
[info] # Warmup Iteration   5: 2730911.669 ops/s
[info] Iteration   1: 2669310.224 ops/s
[info] Iteration   2: 2778396.441 ops/s
[info] Iteration   3: 2760785.978 ops/s
[info] Iteration   4: 2683453.999 ops/s
[info] Iteration   5: 2805941.033 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2739577.535 ±(99.9%) 231424.706 ops/s [Average]
[info]   (min, avg, max) = (2669310.224, 2739577.535, 2805941.033), stdev = 60100.261
[info]   CI (99.9%): [2508152.829, 2971002.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   12.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   598.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1172.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   3.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   7.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   1790.679 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   1358.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   594.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1110.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   6438.664 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:31:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1909628.485 ops/s
[info] # Warmup Iteration   2: 2452306.634 ops/s
[info] # Warmup Iteration   3: 2790504.372 ops/s
[info] # Warmup Iteration   4: 2792573.320 ops/s
[info] # Warmup Iteration   5: 2791189.317 ops/s
[info] Iteration   1: 2791830.820 ops/s
[info] Iteration   2: 2789220.489 ops/s
[info] Iteration   3: 2800147.103 ops/s
[info] Iteration   4: 2798499.609 ops/s
[info] Iteration   5: 2799514.105 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2795842.425 ±(99.9%) 19158.175 ops/s [Average]
[info]   (min, avg, max) = (2789220.489, 2795842.425, 2800147.103), stdev = 4975.317
[info]   CI (99.9%): [2776684.251, 2815000.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   557.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1126.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1745.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1354.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   555.901 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1112.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   6270.820 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:31:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 183084.146 ops/s
[info] # Warmup Iteration   2: 423803.072 ops/s
[info] # Warmup Iteration   3: 416371.722 ops/s
[info] # Warmup Iteration   4: 415285.538 ops/s
[info] # Warmup Iteration   5: 483814.167 ops/s
[info] Iteration   1: 506550.725 ops/s
[info] Iteration   2: 650068.466 ops/s
[info] Iteration   3: 669958.231 ops/s
[info] Iteration   4: 664352.325 ops/s
[info] Iteration   5: 666076.291 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   631401.208 ±(99.9%) 270306.505 ops/s [Average]
[info]   (min, avg, max) = (506550.725, 631401.208, 669958.231), stdev = 70197.741
[info]   CI (99.9%): [361094.703, 901707.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   75.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   6318.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   2831.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   22.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   6.602 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   4.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   14.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   10.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:branches":
[info]   4815.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:cycles":
[info]   7215.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   6491.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   2886.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   1.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:instructions":
[info]   23788.703 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:31:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6859.844 ops/s
[info] # Warmup Iteration   2: 12817.455 ops/s
[info] # Warmup Iteration   3: 14839.467 ops/s
[info] # Warmup Iteration   4: 21856.219 ops/s
[info] # Warmup Iteration   5: 22239.025 ops/s
[info] Iteration   1: 22398.866 ops/s
[info] Iteration   2: 19194.217 ops/s
[info] Iteration   3: 22533.736 ops/s
[info] Iteration   4: 22696.436 ops/s
[info] Iteration   5: 21376.848 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   21640.021 ±(99.9%) 5627.015 ops/s [Average]
[info]   (min, avg, max) = (19194.217, 21640.021, 22696.436), stdev = 1461.318
[info]   CI (99.9%): [16013.005, 27267.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:CPI":
[info]   0.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-load-misses":
[info]   4165.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-loads":
[info]   115967.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-stores":
[info]   60611.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:L1-icache-load-misses":
[info]   2275.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-load-misses":
[info]   47.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-loads":
[info]   356.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-store-misses":
[info]   213.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:LLC-stores":
[info]   586.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:branch-misses":
[info]   1346.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:branches":
[info]   138624.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:cycles":
[info]   263522.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-load-misses":
[info]   32.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-loads":
[info]   113787.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-store-misses":
[info]   2.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:dTLB-stores":
[info]   58465.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:iTLB-load-misses":
[info]   14.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:iTLB-loads":
[info]   159.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:instructions":
[info]   621754.433 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:30:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10215.328 ops/s
[info] # Warmup Iteration   2: 39820.594 ops/s
[info] # Warmup Iteration   3: 45404.487 ops/s
[info] # Warmup Iteration   4: 43011.148 ops/s
[info] # Warmup Iteration   5: 37952.189 ops/s
[info] Iteration   1: 41007.755 ops/s
[info] Iteration   2: 40311.486 ops/s
[info] Iteration   3: 40807.053 ops/s
[info] Iteration   4: 42493.604 ops/s
[info] Iteration   5: 42508.022 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   41425.584 ±(99.9%) 3903.571 ops/s [Average]
[info]   (min, avg, max) = (40311.486, 41425.584, 42508.022), stdev = 1013.745
[info]   CI (99.9%): [37522.013, 45329.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:CPI":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   940.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   36860.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   37435.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   214.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-loads":
[info]   10.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-store-misses":
[info]   5.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-stores":
[info]   132.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:branch-misses":
[info]   117.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:branches":
[info]   69734.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:cycles":
[info]   90827.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-loads":
[info]   37438.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-stores":
[info]   37611.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-loads":
[info]   1.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:instructions":
[info]   337606.368 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:30:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20142.535 ops/s
[info] # Warmup Iteration   2: 33904.242 ops/s
[info] # Warmup Iteration   3: 37674.430 ops/s
[info] # Warmup Iteration   4: 42833.012 ops/s
[info] # Warmup Iteration   5: 42920.687 ops/s
[info] Iteration   1: 46890.498 ops/s
[info] Iteration   2: 44059.545 ops/s
[info] Iteration   3: 47071.872 ops/s
[info] Iteration   4: 48197.179 ops/s
[info] Iteration   5: 48222.940 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   46888.407 ±(99.9%) 6537.591 ops/s [Average]
[info]   (min, avg, max) = (44059.545, 46888.407, 48222.940), stdev = 1697.792
[info]   CI (99.9%): [40350.816, 53425.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:CPI":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1047.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   41099.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   27381.548 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   299.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   14.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-loads":
[info]   160.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   15.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-stores":
[info]   96.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:branch-misses":
[info]   198.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:branches":
[info]   70253.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:cycles":
[info]   104808.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   6.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-loads":
[info]   42332.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-stores":
[info]   28855.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   2.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-loads":
[info]   32.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:instructions":
[info]   332546.933 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:30:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7097.719 ops/s
[info] # Warmup Iteration   2: 27218.894 ops/s
[info] # Warmup Iteration   3: 37485.670 ops/s
[info] # Warmup Iteration   4: 37081.809 ops/s
[info] # Warmup Iteration   5: 35277.641 ops/s
[info] Iteration   1: 36106.973 ops/s
[info] Iteration   2: 36284.032 ops/s
[info] Iteration   3: 36269.879 ops/s
[info] Iteration   4: 34190.259 ops/s
[info] Iteration   5: 34080.829 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   35386.394 ±(99.9%) 4407.588 ops/s [Average]
[info]   (min, avg, max) = (34080.829, 35386.394, 36284.032), stdev = 1144.637
[info]   CI (99.9%): [30978.807, 39793.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:CPI":
[info]   0.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1608.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-loads":
[info]   53922.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-stores":
[info]   46618.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   136.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-load-misses":
[info]   4.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-loads":
[info]   17.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-store-misses":
[info]   72.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-stores":
[info]   299.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:branch-misses":
[info]   173.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:branches":
[info]   78023.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:cycles":
[info]   106407.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-loads":
[info]   54018.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-stores":
[info]   46341.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-loads":
[info]   1.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:instructions":
[info]   391596.681 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:30:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13333.542 ops/s
[info] # Warmup Iteration   2: 28140.432 ops/s
[info] # Warmup Iteration   3: 35344.352 ops/s
[info] # Warmup Iteration   4: 34231.226 ops/s
[info] # Warmup Iteration   5: 32466.794 ops/s
[info] Iteration   1: 35098.351 ops/s
[info] Iteration   2: 36347.832 ops/s
[info] Iteration   3: 35898.296 ops/s
[info] Iteration   4: 36384.433 ops/s
[info] Iteration   5: 36390.415 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   36023.866 ±(99.9%) 2145.388 ops/s [Average]
[info]   (min, avg, max) = (35098.351, 36023.866, 36390.415), stdev = 557.150
[info]   CI (99.9%): [33878.478, 38169.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:CPI":
[info]   0.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2741.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-loads":
[info]   54920.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-stores":
[info]   39143.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:L1-icache-load-misses":
[info]   127.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-load-misses":
[info]   9.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-loads":
[info]   53.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-store-misses":
[info]   267.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:LLC-stores":
[info]   547.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:branch-misses":
[info]   144.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:branches":
[info]   56786.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:cycles":
[info]   107889.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-load-misses":
[info]   6.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-loads":
[info]   54912.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-store-misses":
[info]   1.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-stores":
[info]   41242.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-loads":
[info]   0.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:instructions":
[info]   322743.515 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:30:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5749.140 ops/s
[info] # Warmup Iteration   2: 19283.532 ops/s
[info] # Warmup Iteration   3: 31626.131 ops/s
[info] # Warmup Iteration   4: 33298.476 ops/s
[info] # Warmup Iteration   5: 31074.826 ops/s
[info] Iteration   1: 30098.784 ops/s
[info] Iteration   2: 35669.994 ops/s
[info] Iteration   3: 34887.851 ops/s
[info] Iteration   4: 34925.115 ops/s
[info] Iteration   5: 35740.532 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   34264.455 ±(99.9%) 9098.497 ops/s [Average]
[info]   (min, avg, max) = (30098.784, 34264.455, 35740.532), stdev = 2362.851
[info]   CI (99.9%): [25165.958, 43362.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:CPI":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   3076.966 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   66421.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   41701.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   627.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   22.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-loads":
[info]   162.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   129.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-stores":
[info]   330.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:branch-misses":
[info]   281.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:branches":
[info]   69500.609 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:cycles":
[info]   139815.912 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   10.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-loads":
[info]   67355.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-stores":
[info]   42634.863 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   3.445 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-loads":
[info]   38.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:instructions":
[info]   379403.857 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:30:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16627.968 ops/s
[info] # Warmup Iteration   2: 34022.166 ops/s
[info] # Warmup Iteration   3: 40786.973 ops/s
[info] # Warmup Iteration   4: 37604.300 ops/s
[info] # Warmup Iteration   5: 37536.226 ops/s
[info] Iteration   1: 40637.035 ops/s
[info] Iteration   2: 41618.641 ops/s
[info] Iteration   3: 41618.115 ops/s
[info] Iteration   4: 41645.591 ops/s
[info] Iteration   5: 39722.971 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   41048.471 ±(99.9%) 3296.954 ops/s [Average]
[info]   (min, avg, max) = (39722.971, 41048.471, 41645.591), stdev = 856.209
[info]   CI (99.9%): [37751.516, 44345.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:CPI":
[info]   0.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   2194.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   43380.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   30745.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   154.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   3.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-loads":
[info]   29.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   57.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-stores":
[info]   216.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branch-misses":
[info]   114.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branches":
[info]   46013.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:cycles":
[info]   92600.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   3.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   42357.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   30958.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:instructions":
[info]   271604.960 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:29:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23451.191 ops/s
[info] # Warmup Iteration   2: 36029.838 ops/s
[info] # Warmup Iteration   3: 38766.724 ops/s
[info] # Warmup Iteration   4: 37502.085 ops/s
[info] # Warmup Iteration   5: 38184.459 ops/s
[info] Iteration   1: 39990.389 ops/s
[info] Iteration   2: 38983.339 ops/s
[info] Iteration   3: 41522.263 ops/s
[info] Iteration   4: 41290.974 ops/s
[info] Iteration   5: 39139.571 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   40185.307 ±(99.9%) 4550.541 ops/s [Average]
[info]   (min, avg, max) = (38983.339, 40185.307, 41522.263), stdev = 1181.761
[info]   CI (99.9%): [35634.767, 44735.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   2279.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   48721.803 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   35251.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   270.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   6.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   58.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   28.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   175.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   153.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   48397.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   100920.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   3.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   50164.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   35768.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   1.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   8.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   287772.264 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:29:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2999.204 ops/s
[info] # Warmup Iteration   2: 6682.480 ops/s
[info] # Warmup Iteration   3: 9492.921 ops/s
[info] # Warmup Iteration   4: 9575.688 ops/s
[info] # Warmup Iteration   5: 9572.963 ops/s
[info] Iteration   1: 9567.115 ops/s
[info] Iteration   2: 9573.759 ops/s
[info] Iteration   3: 9525.867 ops/s
[info] Iteration   4: 9561.483 ops/s
[info] Iteration   5: 9576.971 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   9561.039 ±(99.9%) 79.145 ops/s [Average]
[info]   (min, avg, max) = (9525.867, 9561.039, 9576.971), stdev = 20.554
[info]   CI (99.9%): [9481.894, 9640.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:CPI":
[info]   0.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   4698.805 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-loads":
[info]   131323.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-stores":
[info]   97703.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   3859.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-load-misses":
[info]   11.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-loads":
[info]   235.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-store-misses":
[info]   185.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-stores":
[info]   649.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:branch-misses":
[info]   3801.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:branches":
[info]   163213.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:cycles":
[info]   396004.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-load-misses":
[info]   17.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-loads":
[info]   131695.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-stores":
[info]   97848.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-load-misses":
[info]   3.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-loads":
[info]   7.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:instructions":
[info]   878471.882 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:29:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7054.764 ops/s
[info] # Warmup Iteration   2: 16512.179 ops/s
[info] # Warmup Iteration   3: 15757.969 ops/s
[info] # Warmup Iteration   4: 22098.255 ops/s
[info] # Warmup Iteration   5: 22529.900 ops/s
[info] Iteration   1: 20327.128 ops/s
[info] Iteration   2: 21442.012 ops/s
[info] Iteration   3: 21922.861 ops/s
[info] Iteration   4: 20846.863 ops/s
[info] Iteration   5: 21454.337 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   21198.640 ±(99.9%) 2383.348 ops/s [Average]
[info]   (min, avg, max) = (20327.128, 21198.640, 21922.861), stdev = 618.948
[info]   CI (99.9%): [18815.292, 23581.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:CPI":
[info]   0.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   4180.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-dcache-loads":
[info]   120327.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-dcache-stores":
[info]   66721.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   2228.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-load-misses":
[info]   41.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-loads":
[info]   308.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-store-misses":
[info]   128.535 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:LLC-stores":
[info]   478.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:branch-misses":
[info]   725.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:branches":
[info]   141094.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:cycles":
[info]   271861.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-load-misses":
[info]   31.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-loads":
[info]   122076.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-store-misses":
[info]   1.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:dTLB-stores":
[info]   67200.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:iTLB-load-misses":
[info]   15.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:iTLB-loads":
[info]   188.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:instructions":
[info]   701956.937 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:29:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17800.895 ops/s
[info] # Warmup Iteration   2: 52988.831 ops/s
[info] # Warmup Iteration   3: 51456.550 ops/s
[info] # Warmup Iteration   4: 47448.106 ops/s
[info] # Warmup Iteration   5: 45188.993 ops/s
[info] Iteration   1: 47729.435 ops/s
[info] Iteration   2: 47794.035 ops/s
[info] Iteration   3: 47749.185 ops/s
[info] Iteration   4: 47822.274 ops/s
[info] Iteration   5: 47950.632 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   47809.112 ±(99.9%) 335.516 ops/s [Average]
[info]   (min, avg, max) = (47729.435, 47809.112, 47950.632), stdev = 87.132
[info]   CI (99.9%): [47473.597, 48144.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:CPI":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   958.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   41832.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   23915.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   572.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   5.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-loads":
[info]   23.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   5.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:LLC-stores":
[info]   98.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:branch-misses":
[info]   167.647 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:branches":
[info]   65481.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:cycles":
[info]   83288.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   41945.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   24733.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:instructions":
[info]   291467.397 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:29:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 49488.300 ops/s
[info] # Warmup Iteration   2: 62481.040 ops/s
[info] # Warmup Iteration   3: 61196.171 ops/s
[info] # Warmup Iteration   4: 64271.567 ops/s
[info] # Warmup Iteration   5: 66288.933 ops/s
[info] Iteration   1: 68383.086 ops/s
[info] Iteration   2: 68224.651 ops/s
[info] Iteration   3: 67423.035 ops/s
[info] Iteration   4: 66959.375 ops/s
[info] Iteration   5: 67020.672 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   67602.164 ±(99.9%) 2569.225 ops/s [Average]
[info]   (min, avg, max) = (66959.375, 67602.164, 68383.086), stdev = 667.220
[info]   CI (99.9%): [65032.939, 70171.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:CPI":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   316.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   24049.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   14511.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   14.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   4.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   48.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:branch-misses":
[info]   124.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:branches":
[info]   46593.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:cycles":
[info]   57024.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   23975.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   14372.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:instructions":
[info]   213057.966 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:28:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5044.035 ops/s
[info] # Warmup Iteration   2: 27590.608 ops/s
[info] # Warmup Iteration   3: 40994.650 ops/s
[info] # Warmup Iteration   4: 41765.472 ops/s
[info] # Warmup Iteration   5: 39531.418 ops/s
[info] Iteration   1: 40076.420 ops/s
[info] Iteration   2: 40635.702 ops/s
[info] Iteration   3: 41763.842 ops/s
[info] Iteration   4: 42575.676 ops/s
[info] Iteration   5: 43004.716 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   41611.271 ±(99.9%) 4794.998 ops/s [Average]
[info]   (min, avg, max) = (40076.420, 41611.271, 43004.716), stdev = 1245.246
[info]   CI (99.9%): [36816.273, 46406.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2064.936 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   50091.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   34962.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   132.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.947 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-loads":
[info]   15.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   109.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:LLC-stores":
[info]   386.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:branch-misses":
[info]   170.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:branches":
[info]   62322.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:cycles":
[info]   91871.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-loads":
[info]   52520.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:dTLB-stores":
[info]   35129.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   1.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:iTLB-loads":
[info]   6.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:instructions":
[info]   301336.762 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:28:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9303.248 ops/s
[info] # Warmup Iteration   2: 29821.842 ops/s
[info] # Warmup Iteration   3: 37278.268 ops/s
[info] # Warmup Iteration   4: 36791.931 ops/s
[info] # Warmup Iteration   5: 40756.197 ops/s
[info] Iteration   1: 41993.754 ops/s
[info] Iteration   2: 41478.597 ops/s
[info] Iteration   3: 41390.162 ops/s
[info] Iteration   4: 41492.744 ops/s
[info] Iteration   5: 43771.497 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   42025.351 ±(99.9%) 3867.981 ops/s [Average]
[info]   (min, avg, max) = (41390.162, 42025.351, 43771.497), stdev = 1004.502
[info]   CI (99.9%): [38157.369, 45893.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1379.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   42256.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   29430.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   5.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   1.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   6.558 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   86.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   217.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:branch-misses":
[info]   123.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:branches":
[info]   51161.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:cycles":
[info]   86434.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   3.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   42540.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   28781.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   1.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:instructions":
[info]   281542.385 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:28:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 26453.464 ops/s
[info] # Warmup Iteration   2: 54205.430 ops/s
[info] # Warmup Iteration   3: 49046.253 ops/s
[info] # Warmup Iteration   4: 55500.510 ops/s
[info] # Warmup Iteration   5: 56382.092 ops/s
[info] Iteration   1: 56270.754 ops/s
[info] Iteration   2: 56940.989 ops/s
[info] Iteration   3: 56758.493 ops/s
[info] Iteration   4: 53784.271 ops/s
[info] Iteration   5: 53967.849 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   55544.471 ±(99.9%) 5945.362 ops/s [Average]
[info]   (min, avg, max) = (53784.271, 55544.471, 56940.989), stdev = 1543.992
[info]   CI (99.9%): [49599.109, 61489.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   971.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   27160.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   19831.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   12.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   6.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   44.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   136.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   102.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:branches":
[info]   36000.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:cycles":
[info]   67693.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   27617.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   20287.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:instructions":
[info]   211154.968 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:28:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 25612.043 ops/s
[info] # Warmup Iteration   2: 54533.955 ops/s
[info] # Warmup Iteration   3: 51276.594 ops/s
[info] # Warmup Iteration   4: 55355.166 ops/s
[info] # Warmup Iteration   5: 56539.191 ops/s
[info] Iteration   1: 56098.525 ops/s
[info] Iteration   2: 55552.377 ops/s
[info] Iteration   3: 56926.661 ops/s
[info] Iteration   4: 56685.260 ops/s
[info] Iteration   5: 56009.996 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   56254.564 ±(99.9%) 2121.738 ops/s [Average]
[info]   (min, avg, max) = (55552.377, 56254.564, 56926.661), stdev = 551.009
[info]   CI (99.9%): [54132.825, 58376.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   937.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   26972.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   19506.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   10.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   1.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   6.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   6.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   88.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   101.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   36113.583 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   67930.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   27479.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   20050.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   1.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   214025.371 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:27:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 168588.656 ops/s
[info] # Warmup Iteration   2: 362711.669 ops/s
[info] # Warmup Iteration   3: 438259.077 ops/s
[info] # Warmup Iteration   4: 442737.190 ops/s
[info] # Warmup Iteration   5: 446890.225 ops/s
[info] Iteration   1: 445663.331 ops/s
[info] Iteration   2: 426906.975 ops/s
[info] Iteration   3: 390233.420 ops/s
[info] Iteration   4: 390572.370 ops/s
[info] Iteration   5: 391309.570 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   408937.133 ±(99.9%) 99476.995 ops/s [Average]
[info]   (min, avg, max) = (390233.420, 408937.133, 445663.331), stdev = 25833.860
[info]   CI (99.9%): [309460.138, 508414.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:CPI":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   151.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   6241.566 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   5093.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   19.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-loads":
[info]   5.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   23.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:LLC-stores":
[info]   47.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:branch-misses":
[info]   11.901 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:branches":
[info]   8328.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:cycles":
[info]   10383.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   1.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   6421.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   5298.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   2.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:instructions":
[info]   34206.762 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:27:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.882 ops/s
[info] # Warmup Iteration   2: 1570700.975 ops/s
[info] # Warmup Iteration   3: 1754172.564 ops/s
[info] # Warmup Iteration   4: 1801267.315 ops/s
[info] # Warmup Iteration   5: 1911438.761 ops/s
[info] Iteration   1: 1918743.101 ops/s
[info] Iteration   2: 1882337.248 ops/s
[info] Iteration   3: 1877752.242 ops/s
[info] Iteration   4: 1906045.222 ops/s
[info] Iteration   5: 1913641.956 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1899703.954 ±(99.9%) 71534.166 ops/s [Average]
[info]   (min, avg, max) = (1877752.242, 1899703.954, 1918743.101), stdev = 18577.196
[info]   CI (99.9%): [1828169.788, 1971238.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   8.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   1512.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   1180.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-loads":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:LLC-stores":
[info]   1.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:branch-misses":
[info]   0.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:branches":
[info]   2213.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:cycles":
[info]   2019.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-loads":
[info]   1519.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-stores":
[info]   1180.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:instructions":
[info]   9137.488 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:27:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 302616.320 ops/s
[info] # Warmup Iteration   2: 745602.284 ops/s
[info] # Warmup Iteration   3: 882853.869 ops/s
[info] # Warmup Iteration   4: 738144.259 ops/s
[info] # Warmup Iteration   5: 751885.831 ops/s
[info] Iteration   1: 744451.827 ops/s
[info] Iteration   2: 752898.657 ops/s
[info] Iteration   3: 753131.645 ops/s
[info] Iteration   4: 753213.613 ops/s
[info] Iteration   5: 754642.344 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   751667.617 ±(99.9%) 15755.389 ops/s [Average]
[info]   (min, avg, max) = (744451.827, 751667.617, 754642.344), stdev = 4091.624
[info]   CI (99.9%): [735912.228, 767423.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   11.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   2053.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   2020.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   1.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   2.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:branches":
[info]   4507.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:cycles":
[info]   5103.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   2063.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   2006.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:instructions":
[info]   15424.955 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:27:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1873030.962 ops/s
[info] # Warmup Iteration   2: 2046457.441 ops/s
[info] # Warmup Iteration   3: 2089551.319 ops/s
[info] # Warmup Iteration   4: 2200234.164 ops/s
[info] # Warmup Iteration   5: 2198301.962 ops/s
[info] Iteration   1: 2199338.961 ops/s
[info] Iteration   2: 2206617.602 ops/s
[info] Iteration   3: 2178144.847 ops/s
[info] Iteration   4: 2209145.640 ops/s
[info] Iteration   5: 2200267.450 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   2198702.900 ±(99.9%) 47049.577 ops/s [Average]
[info]   (min, avg, max) = (2178144.847, 2198702.900, 2209145.640), stdev = 12218.626
[info]   CI (99.9%): [2151653.322, 2245752.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   5.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1203.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   848.947 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   0.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:branches":
[info]   2498.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   1726.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   1184.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   834.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   8193.513 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:27:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 39685.522 ops/s
[info] # Warmup Iteration   2: 156609.141 ops/s
[info] # Warmup Iteration   3: 165727.054 ops/s
[info] # Warmup Iteration   4: 176727.489 ops/s
[info] # Warmup Iteration   5: 170341.347 ops/s
[info] Iteration   1: 171917.907 ops/s
[info] Iteration   2: 174422.803 ops/s
[info] Iteration   3: 179121.037 ops/s
[info] Iteration   4: 177332.846 ops/s
[info] Iteration   5: 179126.109 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   176384.141 ±(99.9%) 12131.533 ops/s [Average]
[info]   (min, avg, max) = (171917.907, 176384.141, 179126.109), stdev = 3150.521
[info]   CI (99.9%): [164252.608, 188515.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   718.996 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   16541.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   13465.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   8.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   1.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   5.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   82.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   208.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   31.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:branches":
[info]   12785.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:cycles":
[info]   21557.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   1.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   16640.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   13953.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:instructions":
[info]   71754.297 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:26:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 223832.937 ops/s
[info] # Warmup Iteration   2: 447445.444 ops/s
[info] # Warmup Iteration   3: 461707.319 ops/s
[info] # Warmup Iteration   4: 456417.802 ops/s
[info] # Warmup Iteration   5: 473359.552 ops/s
[info] Iteration   1: 473366.914 ops/s
[info] Iteration   2: 473071.209 ops/s
[info] Iteration   3: 471704.704 ops/s
[info] Iteration   4: 456238.355 ops/s
[info] Iteration   5: 461770.070 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   467230.250 ±(99.9%) 29977.672 ops/s [Average]
[info]   (min, avg, max) = (456238.355, 467230.250, 473366.914), stdev = 7785.106
[info]   CI (99.9%): [437252.578, 497207.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:CPI":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   82.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   6229.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   6015.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   51.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   75.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:branch-misses":
[info]   9.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:branches":
[info]   5292.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:cycles":
[info]   8105.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   6262.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6038.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:instructions":
[info]   26938.657 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:26:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.940 ops/s
[info] # Warmup Iteration   2: 2450457.371 ops/s
[info] # Warmup Iteration   3: 2680801.131 ops/s
[info] # Warmup Iteration   4: 2721523.891 ops/s
[info] # Warmup Iteration   5: 2719389.200 ops/s
[info] Iteration   1: 2628530.834 ops/s
[info] Iteration   2: 2563575.782 ops/s
[info] Iteration   3: 2578785.706 ops/s
[info] Iteration   4: 2468233.033 ops/s
[info] Iteration   5: 2505961.910 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   2549017.453 ±(99.9%) 242012.081 ops/s [Average]
[info]   (min, avg, max) = (2468233.033, 2549017.453, 2628530.834), stdev = 62849.769
[info]   CI (99.9%): [2307005.372, 2791029.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   12.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   1531.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   633.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   3.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-stores":
[info]   6.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:branch-misses":
[info]   1.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:branches":
[info]   1135.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:cycles":
[info]   1449.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-loads":
[info]   1587.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-stores":
[info]   647.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:instructions":
[info]   6196.280 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:26:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 617957.107 ops/s
[info] # Warmup Iteration   2: 1075311.346 ops/s
[info] # Warmup Iteration   3: 1108075.370 ops/s
[info] # Warmup Iteration   4: 1117146.668 ops/s
[info] # Warmup Iteration   5: 1130027.657 ops/s
[info] Iteration   1: 1198474.710 ops/s
[info] Iteration   2: 1176245.235 ops/s
[info] Iteration   3: 1181038.675 ops/s
[info] Iteration   4: 1121849.503 ops/s
[info] Iteration   5: 1131070.616 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1161735.748 ±(99.9%) 128638.919 ops/s [Average]
[info]   (min, avg, max) = (1121849.503, 1161735.748, 1198474.710), stdev = 33407.119
[info]   CI (99.9%): [1033096.828, 1290374.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   12.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   2484.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1383.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   6.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:branches":
[info]   2882.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   3207.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   2465.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   1368.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   12859.741 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:26:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2684205.245 ops/s
[info] # Warmup Iteration   2: 2888506.043 ops/s
[info] # Warmup Iteration   3: 3019971.123 ops/s
[info] # Warmup Iteration   4: 3032732.592 ops/s
[info] # Warmup Iteration   5: 3045811.901 ops/s
[info] Iteration   1: 3032298.991 ops/s
[info] Iteration   2: 2840134.859 ops/s
[info] Iteration   3: 2885675.665 ops/s
[info] Iteration   4: 3036519.656 ops/s
[info] Iteration   5: 3027275.396 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2964380.913 ±(99.9%) 362268.539 ops/s [Average]
[info]   (min, avg, max) = (2840134.859, 2964380.913, 3036519.656), stdev = 94079.989
[info]   CI (99.9%): [2602112.375, 3326649.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   11.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   329.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1133.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   3.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   6.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   1370.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   1253.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   326.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1147.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   5468.877 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:25:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2809260.141 ops/s
[info] # Warmup Iteration   2: 3093872.847 ops/s
[info] # Warmup Iteration   3: 3203972.633 ops/s
[info] # Warmup Iteration   4: 3201360.431 ops/s
[info] # Warmup Iteration   5: 3187239.840 ops/s
[info] Iteration   1: 3189636.365 ops/s
[info] Iteration   2: 3190002.110 ops/s
[info] Iteration   3: 3187657.531 ops/s
[info] Iteration   4: 3186011.991 ops/s
[info] Iteration   5: 3189321.977 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3188525.995 ±(99.9%) 6420.269 ops/s [Average]
[info]   (min, avg, max) = (3186011.991, 3188525.995, 3190002.110), stdev = 1667.324
[info]   CI (99.9%): [3182105.726, 3194946.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   307.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1136.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1374.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1205.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   301.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1139.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   5444.803 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:25:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 314681.767 ops/s
[info] # Warmup Iteration   2: 652307.438 ops/s
[info] # Warmup Iteration   3: 824716.570 ops/s
[info] # Warmup Iteration   4: 1002111.973 ops/s
[info] # Warmup Iteration   5: 1037666.691 ops/s
[info] Iteration   1: 1033523.708 ops/s
[info] Iteration   2: 1037661.925 ops/s
[info] Iteration   3: 1035667.288 ops/s
[info] Iteration   4: 1032388.145 ops/s
[info] Iteration   5: 1039155.842 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   1035679.382 ±(99.9%) 10805.082 ops/s [Average]
[info]   (min, avg, max) = (1032388.145, 1035679.382, 1039155.842), stdev = 2806.045
[info]   CI (99.9%): [1024874.300, 1046484.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   27.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   3402.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   2148.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   7.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   14.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   2.778 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:branches":
[info]   2747.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:cycles":
[info]   3715.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   3457.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   2135.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:instructions":
[info]   15148.981 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:25:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 71559.538 ops/s
[info] # Warmup Iteration   2: 216631.571 ops/s
[info] # Warmup Iteration   3: 223975.111 ops/s
[info] # Warmup Iteration   4: 213578.992 ops/s
[info] # Warmup Iteration   5: 204679.482 ops/s
[info] Iteration   1: 204901.694 ops/s
[info] Iteration   2: 218198.691 ops/s
[info] Iteration   3: 218151.673 ops/s
[info] Iteration   4: 208810.993 ops/s
[info] Iteration   5: 208687.104 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   211750.031 ±(99.9%) 23381.799 ops/s [Average]
[info]   (min, avg, max) = (204901.694, 211750.031, 218198.691), stdev = 6072.179
[info]   CI (99.9%): [188368.232, 235131.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:CPI":
[info]   0.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-dcache-load-misses":
[info]   380.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-dcache-loads":
[info]   10752.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-dcache-stores":
[info]   8791.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:L1-icache-load-misses":
[info]   35.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-load-misses":
[info]   1.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-loads":
[info]   8.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-store-misses":
[info]   11.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:LLC-stores":
[info]   50.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:branch-misses":
[info]   18.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:branches":
[info]   15317.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:cycles":
[info]   19980.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-load-misses":
[info]   1.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-loads":
[info]   10392.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-store-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:dTLB-stores":
[info]   8674.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:iTLB-load-misses":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:iTLB-loads":
[info]   4.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:instructions":
[info]   69574.325 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:25:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 179088.641 ops/s
[info] # Warmup Iteration   2: 502629.431 ops/s
[info] # Warmup Iteration   3: 380235.546 ops/s
[info] # Warmup Iteration   4: 430980.072 ops/s
[info] # Warmup Iteration   5: 428551.358 ops/s
[info] Iteration   1: 427901.262 ops/s
[info] Iteration   2: 427160.110 ops/s
[info] Iteration   3: 426862.914 ops/s
[info] Iteration   4: 432124.465 ops/s
[info] Iteration   5: 458165.729 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   434442.896 ±(99.9%) 51713.302 ops/s [Average]
[info]   (min, avg, max) = (426862.914, 434442.896, 458165.729), stdev = 13429.780
[info]   CI (99.9%): [382729.594, 486156.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:CPI":
[info]   0.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   19.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   5265.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   4812.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-loads":
[info]   0.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:LLC-stores":
[info]   3.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:branch-misses":
[info]   3.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:branches":
[info]   7137.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:cycles":
[info]   8267.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-loads":
[info]   5335.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:dTLB-stores":
[info]   4819.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:iTLB-loads":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:instructions":
[info]   28411.024 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:25:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1079021.444 ops/s
[info] # Warmup Iteration   2: 1292365.703 ops/s
[info] # Warmup Iteration   3: 1324058.090 ops/s
[info] # Warmup Iteration   4: 1259126.613 ops/s
[info] # Warmup Iteration   5: 1243968.990 ops/s
[info] Iteration   1: 1240122.271 ops/s
[info] Iteration   2: 1248607.516 ops/s
[info] Iteration   3: 1238515.049 ops/s
[info] Iteration   4: 1241363.980 ops/s
[info] Iteration   5: 1237047.936 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1241131.350 ±(99.9%) 17272.694 ops/s [Average]
[info]   (min, avg, max) = (1237047.936, 1241131.350, 1248607.516), stdev = 4485.664
[info]   CI (99.9%): [1223858.657, 1258404.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:CPI":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   5.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1188.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1258.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:LLC-stores":
[info]   0.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:branch-misses":
[info]   3.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:branches":
[info]   3670.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:cycles":
[info]   2911.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-loads":
[info]   1190.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:dTLB-stores":
[info]   1246.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:instructions":
[info]   13900.399 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:24:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 32989.153 ops/s
[info] # Warmup Iteration   2: 127730.944 ops/s
[info] # Warmup Iteration   3: 130916.950 ops/s
[info] # Warmup Iteration   4: 128240.093 ops/s
[info] # Warmup Iteration   5: 122439.617 ops/s
[info] Iteration   1: 124148.018 ops/s
[info] Iteration   2: 124574.475 ops/s
[info] Iteration   3: 128246.080 ops/s
[info] Iteration   4: 130192.412 ops/s
[info] Iteration   5: 129575.263 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   127347.250 ±(99.9%) 10855.513 ops/s [Average]
[info]   (min, avg, max) = (124148.018, 127347.250, 130192.412), stdev = 2819.142
[info]   CI (99.9%): [116491.736, 138202.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:CPI":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1126.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-dcache-loads":
[info]   24040.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-dcache-stores":
[info]   18871.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   34.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-load-misses":
[info]   1.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-loads":
[info]   7.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-store-misses":
[info]   60.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:LLC-stores":
[info]   203.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:branch-misses":
[info]   40.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:branches":
[info]   17211.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:cycles":
[info]   29494.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-loads":
[info]   24451.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:dTLB-stores":
[info]   19614.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:iTLB-loads":
[info]   0.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:instructions":
[info]   99450.804 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:24:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 164023.743 ops/s
[info] # Warmup Iteration   2: 352111.148 ops/s
[info] # Warmup Iteration   3: 360261.124 ops/s
[info] # Warmup Iteration   4: 356653.813 ops/s
[info] # Warmup Iteration   5: 362979.068 ops/s
[info] Iteration   1: 342262.246 ops/s
[info] Iteration   2: 351891.266 ops/s
[info] Iteration   3: 360176.168 ops/s
[info] Iteration   4: 364027.227 ops/s
[info] Iteration   5: 348173.419 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   353306.065 ±(99.9%) 34032.660 ops/s [Average]
[info]   (min, avg, max) = (342262.246, 353306.065, 364027.227), stdev = 8838.174
[info]   CI (99.9%): [319273.405, 387338.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:CPI":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   133.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-dcache-loads":
[info]   6979.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-dcache-stores":
[info]   6351.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-loads":
[info]   0.690 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-store-misses":
[info]   36.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:LLC-stores":
[info]   69.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:branch-misses":
[info]   10.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:branches":
[info]   7090.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:cycles":
[info]   10553.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-load-misses":
[info]   0.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-loads":
[info]   7203.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:dTLB-stores":
[info]   6378.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:iTLB-loads":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:instructions":
[info]   37083.448 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:24:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1142346.982 ops/s
[info] # Warmup Iteration   2: 2177038.024 ops/s
[info] # Warmup Iteration   3: 2288748.157 ops/s
[info] # Warmup Iteration   4: 2276331.076 ops/s
[info] # Warmup Iteration   5: 2271501.604 ops/s
[info] Iteration   1: 2259200.790 ops/s
[info] Iteration   2: 2224154.110 ops/s
[info] Iteration   3: 2194747.856 ops/s
[info] Iteration   4: 2307053.538 ops/s
[info] Iteration   5: 2306162.552 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   2258263.769 ±(99.9%) 191309.131 ops/s [Average]
[info]   (min, avg, max) = (2194747.856, 2258263.769, 2307053.538), stdev = 49682.374
[info]   CI (99.9%): [2066954.638, 2449572.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   7.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   548.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   909.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-loads":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:LLC-stores":
[info]   2.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:branch-misses":
[info]   1.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:branches":
[info]   1645.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:cycles":
[info]   1636.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-loads":
[info]   543.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:dTLB-stores":
[info]   905.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:instructions":
[info]   6998.780 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:24:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2448572.891 ops/s
[info] # Warmup Iteration   2: 3025741.785 ops/s
[info] # Warmup Iteration   3: 3073073.983 ops/s
[info] # Warmup Iteration   4: 3084004.635 ops/s
[info] # Warmup Iteration   5: 3242713.200 ops/s
[info] Iteration   1: 3283746.014 ops/s
[info] Iteration   2: 3280616.265 ops/s
[info] Iteration   3: 3273697.200 ops/s
[info] Iteration   4: 3284830.047 ops/s
[info] Iteration   5: 3184674.268 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   3261512.759 ±(99.9%) 166243.182 ops/s [Average]
[info]   (min, avg, max) = (3184674.268, 3261512.759, 3284830.047), stdev = 43172.826
[info]   CI (99.9%): [3095269.577, 3427755.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:CPI":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   7.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   585.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   736.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:branch-misses":
[info]   0.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:branches":
[info]   1484.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:cycles":
[info]   1180.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   595.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   729.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:instructions":
[info]   5400.344 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:23:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2611517.092 ops/s
[info] # Warmup Iteration   2: 3212262.702 ops/s
[info] # Warmup Iteration   3: 3384552.167 ops/s
[info] # Warmup Iteration   4: 3385507.626 ops/s
[info] # Warmup Iteration   5: 3403932.904 ops/s
[info] Iteration   1: 3401772.278 ops/s
[info] Iteration   2: 3405151.295 ops/s
[info] Iteration   3: 3398121.230 ops/s
[info] Iteration   4: 3392094.443 ops/s
[info] Iteration   5: 3390842.620 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3397596.373 ±(99.9%) 23633.272 ops/s [Average]
[info]   (min, avg, max) = (3390842.620, 3397596.373, 3405151.295), stdev = 6137.486
[info]   CI (99.9%): [3373963.102, 3421229.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   429.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   699.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1463.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1113.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   427.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   701.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   5167.892 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:23:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16155.781 ops/s
[info] # Warmup Iteration   2: 39563.183 ops/s
[info] # Warmup Iteration   3: 54491.386 ops/s
[info] # Warmup Iteration   4: 50245.454 ops/s
[info] # Warmup Iteration   5: 56470.350 ops/s
[info] Iteration   1: 56971.311 ops/s
[info] Iteration   2: 57023.450 ops/s
[info] Iteration   3: 57919.206 ops/s
[info] Iteration   4: 58017.062 ops/s
[info] Iteration   5: 55021.924 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   56990.591 ±(99.9%) 4634.018 ops/s [Average]
[info]   (min, avg, max) = (55021.924, 56990.591, 58017.062), stdev = 1203.440
[info]   CI (99.9%): [52356.573, 61624.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1137.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-dcache-loads":
[info]   40866.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-dcache-stores":
[info]   26079.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   8.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-load-misses":
[info]   3.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-loads":
[info]   11.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-store-misses":
[info]   8.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:LLC-stores":
[info]   98.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:branch-misses":
[info]   90.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:branches":
[info]   44439.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:cycles":
[info]   67410.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-loads":
[info]   39098.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:dTLB-stores":
[info]   25272.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:iTLB-loads":
[info]   0.736 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:instructions":
[info]   219839.998 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:23:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 129131.994 ops/s
[info] # Warmup Iteration   2: 281634.079 ops/s
[info] # Warmup Iteration   3: 319666.790 ops/s
[info] # Warmup Iteration   4: 311903.866 ops/s
[info] # Warmup Iteration   5: 315487.714 ops/s
[info] Iteration   1: 316638.482 ops/s
[info] Iteration   2: 316360.237 ops/s
[info] Iteration   3: 309311.827 ops/s
[info] Iteration   4: 301541.040 ops/s
[info] Iteration   5: 311657.265 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   311101.770 ±(99.9%) 23832.553 ops/s [Average]
[info]   (min, avg, max) = (301541.040, 311101.770, 316638.482), stdev = 6189.238
[info]   CI (99.9%): [287269.217, 334934.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:CPI":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-dcache-load-misses":
[info]   272.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-dcache-loads":
[info]   8483.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-dcache-stores":
[info]   7137.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:L1-icache-load-misses":
[info]   1.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-load-misses":
[info]   0.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-loads":
[info]   1.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-store-misses":
[info]   16.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:LLC-stores":
[info]   53.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:branch-misses":
[info]   9.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:branches":
[info]   9577.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:cycles":
[info]   11993.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-load-misses":
[info]   0.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-loads":
[info]   8175.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-store-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:dTLB-stores":
[info]   6870.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:iTLB-load-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:iTLB-loads":
[info]   0.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:instructions":
[info]   45158.070 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:23:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 210625.645 ops/s
[info] # Warmup Iteration   2: 637627.000 ops/s
[info] # Warmup Iteration   3: 636537.861 ops/s
[info] # Warmup Iteration   4: 640269.422 ops/s
[info] # Warmup Iteration   5: 684771.616 ops/s
[info] Iteration   1: 690968.528 ops/s
[info] Iteration   2: 692893.204 ops/s
[info] Iteration   3: 691453.442 ops/s
[info] Iteration   4: 693459.410 ops/s
[info] Iteration   5: 691661.348 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   692087.186 ±(99.9%) 4023.430 ops/s [Average]
[info]   (min, avg, max) = (690968.528, 692087.186, 693459.410), stdev = 1044.872
[info]   CI (99.9%): [688063.756, 696110.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:CPI":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   65.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   4969.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   3033.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-loads":
[info]   0.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:LLC-stores":
[info]   8.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:branch-misses":
[info]   3.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:branches":
[info]   5415.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:cycles":
[info]   5490.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-loads":
[info]   5101.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:dTLB-stores":
[info]   3048.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:instructions":
[info]   22095.267 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:22:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2393310.608 ops/s
[info] # Warmup Iteration   2: 2867348.618 ops/s
[info] # Warmup Iteration   3: 2930674.024 ops/s
[info] # Warmup Iteration   4: 2943625.376 ops/s
[info] # Warmup Iteration   5: 2908287.841 ops/s
[info] Iteration   1: 2742271.782 ops/s
[info] Iteration   2: 2765092.753 ops/s
[info] Iteration   3: 2774087.311 ops/s
[info] Iteration   4: 2783191.858 ops/s
[info] Iteration   5: 2912057.233 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2795340.188 ±(99.9%) 257973.733 ops/s [Average]
[info]   (min, avg, max) = (2742271.782, 2795340.188, 2912057.233), stdev = 66994.959
[info]   CI (99.9%): [2537366.455, 3053313.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:CPI":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   9.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   877.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   475.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:LLC-stores":
[info]   1.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:branch-misses":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:branches":
[info]   1849.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:cycles":
[info]   1329.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-loads":
[info]   904.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:dTLB-stores":
[info]   481.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:instructions":
[info]   6513.079 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:22:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16088.315 ops/s
[info] # Warmup Iteration   2: 115367.115 ops/s
[info] # Warmup Iteration   3: 126992.909 ops/s
[info] # Warmup Iteration   4: 138763.412 ops/s
[info] # Warmup Iteration   5: 139225.919 ops/s
[info] Iteration   1: 137170.704 ops/s
[info] Iteration   2: 138276.107 ops/s
[info] Iteration   3: 139326.694 ops/s
[info] Iteration   4: 132194.550 ops/s
[info] Iteration   5: 135225.039 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   136438.619 ±(99.9%) 10846.619 ops/s [Average]
[info]   (min, avg, max) = (132194.550, 136438.619, 139326.694), stdev = 2816.832
[info]   CI (99.9%): [125592.000, 147285.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1113.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-dcache-loads":
[info]   21902.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-dcache-stores":
[info]   17107.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   8.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-loads":
[info]   6.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-store-misses":
[info]   89.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:LLC-stores":
[info]   254.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:branch-misses":
[info]   36.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:branches":
[info]   15614.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:cycles":
[info]   27798.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-loads":
[info]   21467.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:dTLB-stores":
[info]   17050.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:iTLB-loads":
[info]   0.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:instructions":
[info]   91261.179 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:22:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 168933.719 ops/s
[info] # Warmup Iteration   2: 302098.911 ops/s
[info] # Warmup Iteration   3: 316804.413 ops/s
[info] # Warmup Iteration   4: 314932.630 ops/s
[info] # Warmup Iteration   5: 299281.477 ops/s
[info] Iteration   1: 300693.166 ops/s
[info] Iteration   2: 301514.416 ops/s
[info] Iteration   3: 302417.495 ops/s
[info] Iteration   4: 302481.164 ops/s
[info] Iteration   5: 316923.446 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   304805.937 ±(99.9%) 26236.159 ops/s [Average]
[info]   (min, avg, max) = (300693.166, 304805.937, 316923.446), stdev = 6813.447
[info]   CI (99.9%): [278569.779, 331042.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:CPI":
[info]   0.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   196.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-dcache-loads":
[info]   7142.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-dcache-stores":
[info]   6893.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-load-misses":
[info]   0.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-loads":
[info]   1.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-store-misses":
[info]   61.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:LLC-stores":
[info]   110.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:branch-misses":
[info]   9.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:branches":
[info]   8577.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:cycles":
[info]   12094.718 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-loads":
[info]   7177.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:dTLB-stores":
[info]   7159.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:iTLB-loads":
[info]   0.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:instructions":
[info]   40424.622 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:22:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1212109.884 ops/s
[info] # Warmup Iteration   2: 2048271.660 ops/s
[info] # Warmup Iteration   3: 2105357.575 ops/s
[info] # Warmup Iteration   4: 2110257.800 ops/s
[info] # Warmup Iteration   5: 2111069.666 ops/s
[info] Iteration   1: 2160697.717 ops/s
[info] Iteration   2: 2150421.974 ops/s
[info] Iteration   3: 2119007.859 ops/s
[info] Iteration   4: 2020242.223 ops/s
[info] Iteration   5: 2020773.851 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   2094228.725 ±(99.9%) 265802.078 ops/s [Average]
[info]   (min, avg, max) = (2020242.223, 2094228.725, 2160697.717), stdev = 69027.955
[info]   CI (99.9%): [1828426.647, 2360030.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:CPI":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   8.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   558.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   893.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   1.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:LLC-stores":
[info]   3.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:branch-misses":
[info]   1.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:branches":
[info]   2322.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:cycles":
[info]   1781.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-loads":
[info]   550.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:dTLB-stores":
[info]   873.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:instructions":
[info]   8455.473 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:22:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2000041.626 ops/s
[info] # Warmup Iteration   2: 2699426.852 ops/s
[info] # Warmup Iteration   3: 2785286.599 ops/s
[info] # Warmup Iteration   4: 2816337.576 ops/s
[info] # Warmup Iteration   5: 2845854.568 ops/s
[info] Iteration   1: 2833035.531 ops/s
[info] Iteration   2: 2685205.177 ops/s
[info] Iteration   3: 2665670.174 ops/s
[info] Iteration   4: 2682159.820 ops/s
[info] Iteration   5: 2681562.172 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2709526.575 ±(99.9%) 267476.517 ops/s [Average]
[info]   (min, avg, max) = (2665670.174, 2709526.575, 2833035.531), stdev = 69462.802
[info]   CI (99.9%): [2442050.058, 2977003.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   9.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   723.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1103.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   1.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:LLC-stores":
[info]   3.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:branches":
[info]   1549.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:cycles":
[info]   1377.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   735.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1116.890 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:instructions":
[info]   6228.557 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:21:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2182729.027 ops/s
[info] # Warmup Iteration   2: 2879012.576 ops/s
[info] # Warmup Iteration   3: 2943052.900 ops/s
[info] # Warmup Iteration   4: 2941417.278 ops/s
[info] # Warmup Iteration   5: 2944390.344 ops/s
[info] Iteration   1: 2935740.723 ops/s
[info] Iteration   2: 2942871.830 ops/s
[info] Iteration   3: 2941513.223 ops/s
[info] Iteration   4: 2942698.423 ops/s
[info] Iteration   5: 2942603.735 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2941085.587 ±(99.9%) 11687.056 ops/s [Average]
[info]   (min, avg, max) = (2935740.723, 2941085.587, 2942871.830), stdev = 3035.091
[info]   CI (99.9%): [2929398.531, 2952772.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   689.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1064.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1556.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1289.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   684.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁵ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1059.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   6177.858 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:21:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 223900.135 ops/s
[info] # Warmup Iteration   2: 659392.222 ops/s
[info] # Warmup Iteration   3: 778848.377 ops/s
[info] # Warmup Iteration   4: 801711.326 ops/s
[info] # Warmup Iteration   5: 797934.824 ops/s
[info] Iteration   1: 801444.577 ops/s
[info] Iteration   2: 802113.567 ops/s
[info] Iteration   3: 802794.632 ops/s
[info] Iteration   4: 786010.812 ops/s
[info] Iteration   5: 786968.204 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   795866.358 ±(99.9%) 33037.878 ops/s [Average]
[info]   (min, avg, max) = (786010.812, 795866.358, 802794.632), stdev = 8579.832
[info]   CI (99.9%): [762828.481, 828904.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:CPI":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   149.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-dcache-loads":
[info]   2011.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-dcache-stores":
[info]   2846.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-loads":
[info]   0.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-store-misses":
[info]   38.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:LLC-stores":
[info]   66.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:branch-misses":
[info]   1.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:branches":
[info]   2699.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:cycles":
[info]   4840.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-loads":
[info]   2002.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:dTLB-stores":
[info]   2840.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:instructions":
[info]   14031.436 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:21:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11659.574 ops/s
[info] # Warmup Iteration   2: 27052.317 ops/s
[info] # Warmup Iteration   3: 29218.003 ops/s
[info] # Warmup Iteration   4: 29701.630 ops/s
[info] # Warmup Iteration   5: 27711.287 ops/s
[info] Iteration   1: 28545.020 ops/s
[info] Iteration   2: 29204.111 ops/s
[info] Iteration   3: 28741.806 ops/s
[info] Iteration   4: 27818.459 ops/s
[info] Iteration   5: 28657.453 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   28593.370 ±(99.9%) 1927.217 ops/s [Average]
[info]   (min, avg, max) = (27818.459, 28593.370, 29204.111), stdev = 500.492
[info]   CI (99.9%): [26666.153, 30520.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:CPI":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-dcache-load-misses":
[info]   1976.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-dcache-loads":
[info]   63285.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-dcache-stores":
[info]   36789.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:L1-icache-load-misses":
[info]   288.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-load-misses":
[info]   3.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-loads":
[info]   35.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-store-misses":
[info]   71.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:LLC-stores":
[info]   267.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:branch-misses":
[info]   324.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:branches":
[info]   91374.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:cycles":
[info]   137502.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-load-misses":
[info]   4.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-loads":
[info]   63602.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-store-misses":
[info]   0.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:dTLB-stores":
[info]   38258.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:iTLB-load-misses":
[info]   0.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:iTLB-loads":
[info]   6.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:instructions":
[info]   405724.450 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:21:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.951 ops/s
[info] # Warmup Iteration   2: 65026.540 ops/s
[info] # Warmup Iteration   3: 85125.983 ops/s
[info] # Warmup Iteration   4: 88292.461 ops/s
[info] # Warmup Iteration   5: 101337.941 ops/s
[info] Iteration   1: 96808.034 ops/s
[info] Iteration   2: 99844.889 ops/s
[info] Iteration   3: 101540.374 ops/s
[info] Iteration   4: 100575.343 ops/s
[info] Iteration   5: 97148.866 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   99183.501 ±(99.9%) 8102.859 ops/s [Average]
[info]   (min, avg, max) = (96808.034, 99183.501, 101540.374), stdev = 2104.287
[info]   CI (99.9%): [91080.642, 107286.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:CPI":
[info]   0.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   448.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   21374.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   13259.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   108.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-load-misses":
[info]   6.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-loads":
[info]   53.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-store-misses":
[info]   15.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:LLC-stores":
[info]   52.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:branch-misses":
[info]   88.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:branches":
[info]   33267.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:cycles":
[info]   49740.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   3.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-loads":
[info]   21185.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-stores":
[info]   12862.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   1.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-loads":
[info]   17.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:instructions":
[info]   142344.336 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:20:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21548.261 ops/s
[info] # Warmup Iteration   2: 54042.940 ops/s
[info] # Warmup Iteration   3: 60516.631 ops/s
[info] # Warmup Iteration   4: 73823.942 ops/s
[info] # Warmup Iteration   5: 77204.023 ops/s
[info] Iteration   1: 77783.837 ops/s
[info] Iteration   2: 78738.812 ops/s
[info] Iteration   3: 77484.248 ops/s
[info] Iteration   4: 78188.220 ops/s
[info] Iteration   5: 73713.485 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   77181.720 ±(99.9%) 7682.083 ops/s [Average]
[info]   (min, avg, max) = (73713.485, 77181.720, 78738.812), stdev = 1995.012
[info]   CI (99.9%): [69499.638, 84863.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:CPI":
[info]   0.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1323.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   44819.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   28452.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   723.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-load-misses":
[info]   19.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-loads":
[info]   167.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-store-misses":
[info]   37.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:LLC-stores":
[info]   108.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:branch-misses":
[info]   188.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:branches":
[info]   54845.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:cycles":
[info]   90604.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   10.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-loads":
[info]   45496.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.674 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:dTLB-stores":
[info]   29051.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   3.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:iTLB-loads":
[info]   75.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:instructions":
[info]   249326.943 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:20:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 76295.436 ops/s
[info] # Warmup Iteration   2: 107635.806 ops/s
[info] # Warmup Iteration   3: 103959.401 ops/s
[info] # Warmup Iteration   4: 101222.269 ops/s
[info] # Warmup Iteration   5: 113367.273 ops/s
[info] Iteration   1: 116957.911 ops/s
[info] Iteration   2: 122630.255 ops/s
[info] Iteration   3: 138407.971 ops/s
[info] Iteration   4: 141942.744 ops/s
[info] Iteration   5: 139498.825 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   131887.541 ±(99.9%) 43486.113 ops/s [Average]
[info]   (min, avg, max) = (116957.911, 131887.541, 141942.744), stdev = 11293.205
[info]   CI (99.9%): [88401.429, 175373.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:CPI":
[info]   0.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   473.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   19521.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   10287.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   141.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   11.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-loads":
[info]   68.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   15.904 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:LLC-stores":
[info]   41.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:branch-misses":
[info]   82.532 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:branches":
[info]   26147.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:cycles":
[info]   43235.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   4.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-loads":
[info]   19603.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-stores":
[info]   10174.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   1.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-loads":
[info]   16.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:instructions":
[info]   119763.807 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:20:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6801.853 ops/s
[info] # Warmup Iteration   2: 37777.362 ops/s
[info] # Warmup Iteration   3: 52336.985 ops/s
[info] # Warmup Iteration   4: 44900.865 ops/s
[info] # Warmup Iteration   5: 50794.873 ops/s
[info] Iteration   1: 50804.049 ops/s
[info] Iteration   2: 51774.713 ops/s
[info] Iteration   3: 51783.259 ops/s
[info] Iteration   4: 50290.152 ops/s
[info] Iteration   5: 51385.971 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   51207.629 ±(99.9%) 2502.459 ops/s [Average]
[info]   (min, avg, max) = (50290.152, 51207.629, 51783.259), stdev = 649.881
[info]   CI (99.9%): [48705.169, 53710.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:CPI":
[info]   0.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1665.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-loads":
[info]   40712.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-stores":
[info]   35566.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   159.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-load-misses":
[info]   2.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-loads":
[info]   11.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-store-misses":
[info]   71.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:LLC-stores":
[info]   263.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:branch-misses":
[info]   107.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:branches":
[info]   51592.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:cycles":
[info]   74281.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-loads":
[info]   39577.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:dTLB-stores":
[info]   34194.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:iTLB-loads":
[info]   0.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:instructions":
[info]   258532.538 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:20:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 14786.187 ops/s
[info] # Warmup Iteration   2: 31129.765 ops/s
[info] # Warmup Iteration   3: 34161.074 ops/s
[info] # Warmup Iteration   4: 41661.764 ops/s
[info] # Warmup Iteration   5: 42687.225 ops/s
[info] Iteration   1: 44483.058 ops/s
[info] Iteration   2: 41935.158 ops/s
[info] Iteration   3: 43489.305 ops/s
[info] Iteration   4: 44335.198 ops/s
[info] Iteration   5: 42915.048 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   43431.553 ±(99.9%) 4053.042 ops/s [Average]
[info]   (min, avg, max) = (41935.158, 43431.553, 44483.058), stdev = 1052.562
[info]   CI (99.9%): [39378.511, 47484.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:CPI":
[info]   0.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1321.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-dcache-loads":
[info]   59311.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-dcache-stores":
[info]   31149.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:L1-icache-load-misses":
[info]   774.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-load-misses":
[info]   11.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-loads":
[info]   147.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-store-misses":
[info]   183.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:LLC-stores":
[info]   303.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:branch-misses":
[info]   198.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:branches":
[info]   57796.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:cycles":
[info]   126794.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-load-misses":
[info]   10.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-loads":
[info]   61033.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:dTLB-stores":
[info]   31933.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:iTLB-load-misses":
[info]   3.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:iTLB-loads":
[info]   66.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:instructions":
[info]   307124.367 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:20:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17946.287 ops/s
[info] # Warmup Iteration   2: 42037.551 ops/s
[info] # Warmup Iteration   3: 39243.658 ops/s
[info] # Warmup Iteration   4: 39972.109 ops/s
[info] # Warmup Iteration   5: 42917.740 ops/s
[info] Iteration   1: 41555.851 ops/s
[info] Iteration   2: 41550.310 ops/s
[info] Iteration   3: 41812.741 ops/s
[info] Iteration   4: 42585.592 ops/s
[info] Iteration   5: 42966.407 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   42094.180 ±(99.9%) 2485.878 ops/s [Average]
[info]   (min, avg, max) = (41550.310, 42094.180, 42966.407), stdev = 645.575
[info]   CI (99.9%): [39608.302, 44580.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:CPI":
[info]   0.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1164.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   56225.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   29748.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   521.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   10.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-loads":
[info]   161.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   34.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:LLC-stores":
[info]   98.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:branch-misses":
[info]   226.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:branches":
[info]   55445.445 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:cycles":
[info]   119879.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   12.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-loads":
[info]   56147.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.736 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-stores":
[info]   28969.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   5.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-loads":
[info]   57.672 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:instructions":
[info]   300278.171 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:19:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30429.048 ops/s
[info] # Warmup Iteration   2: 44766.837 ops/s
[info] # Warmup Iteration   3: 48126.392 ops/s
[info] # Warmup Iteration   4: 48504.582 ops/s
[info] # Warmup Iteration   5: 48259.279 ops/s
[info] Iteration   1: 47767.731 ops/s
[info] Iteration   2: 51529.385 ops/s
[info] Iteration   3: 47975.379 ops/s
[info] Iteration   4: 51866.993 ops/s
[info] Iteration   5: 51702.901 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   50168.478 ±(99.9%) 8092.022 ops/s [Average]
[info]   (min, avg, max) = (47767.731, 50168.478, 51866.993), stdev = 2101.472
[info]   CI (99.9%): [42076.456, 58260.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:CPI":
[info]   0.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   711.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   44574.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   22663.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   315.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   7.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-loads":
[info]   96.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   28.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-stores":
[info]   75.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:branch-misses":
[info]   147.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:branches":
[info]   41302.409 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:cycles":
[info]   96753.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   7.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   43116.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   22453.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   3.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   30.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:instructions":
[info]   232430.246 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:19:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22520.961 ops/s
[info] # Warmup Iteration   2: 43273.325 ops/s
[info] # Warmup Iteration   3: 47558.643 ops/s
[info] # Warmup Iteration   4: 47384.506 ops/s
[info] # Warmup Iteration   5: 48183.023 ops/s
[info] Iteration   1: 48708.431 ops/s
[info] Iteration   2: 50601.604 ops/s
[info] Iteration   3: 49577.799 ops/s
[info] Iteration   4: 50192.024 ops/s
[info] Iteration   5: 48429.728 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   49501.917 ±(99.9%) 3586.750 ops/s [Average]
[info]   (min, avg, max) = (48429.728, 49501.917, 50601.604), stdev = 931.467
[info]   CI (99.9%): [45915.168, 53088.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   931.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   49900.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   24601.398 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   502.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   12.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   146.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   18.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   76.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   205.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   45986.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   108179.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   10.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   49367.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   24669.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   4.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   43.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   255386.209 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:19:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6088.163 ops/s
[info] # Warmup Iteration   2: 9694.346 ops/s
[info] # Warmup Iteration   3: 14370.161 ops/s
[info] # Warmup Iteration   4: 18265.076 ops/s
[info] # Warmup Iteration   5: 18026.860 ops/s
[info] Iteration   1: 18017.959 ops/s
[info] Iteration   2: 17497.744 ops/s
[info] Iteration   3: 15887.043 ops/s
[info] Iteration   4: 16529.261 ops/s
[info] Iteration   5: 16607.714 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   16907.944 ±(99.9%) 3253.610 ops/s [Average]
[info]   (min, avg, max) = (15887.043, 16907.944, 18017.959), stdev = 844.952
[info]   CI (99.9%): [13654.334, 20161.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:CPI":
[info]   0.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-dcache-load-misses":
[info]   5258.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-dcache-loads":
[info]   229132.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-dcache-stores":
[info]   105970.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:L1-icache-load-misses":
[info]   2813.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-load-misses":
[info]   105.716 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-loads":
[info]   738.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-store-misses":
[info]   262.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:LLC-stores":
[info]   760.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:branch-misses":
[info]   819.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:branches":
[info]   189011.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:cycles":
[info]   361637.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-load-misses":
[info]   52.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-loads":
[info]   232276.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-store-misses":
[info]   3.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:dTLB-stores":
[info]   106000.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:iTLB-load-misses":
[info]   15.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:iTLB-loads":
[info]   182.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:instructions":
[info]   904731.848 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:19:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3792.809 ops/s
[info] # Warmup Iteration   2: 9691.239 ops/s
[info] # Warmup Iteration   3: 11501.965 ops/s
[info] # Warmup Iteration   4: 13316.166 ops/s
[info] # Warmup Iteration   5: 15994.291 ops/s
[info] Iteration   1: 16510.810 ops/s
[info] Iteration   2: 16643.533 ops/s
[info] Iteration   3: 16529.394 ops/s
[info] Iteration   4: 15222.231 ops/s
[info] Iteration   5: 13284.673 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   15638.128 ±(99.9%) 5539.606 ops/s [Average]
[info]   (min, avg, max) = (13284.673, 15638.128, 16643.533), stdev = 1438.618
[info]   CI (99.9%): [10098.522, 21177.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:CPI":
[info]   0.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4766.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   238447.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   109276.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   3158.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-load-misses":
[info]   83.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-loads":
[info]   544.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-store-misses":
[info]   113.900 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:LLC-stores":
[info]   419.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:branch-misses":
[info]   575.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:branches":
[info]   190054.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:cycles":
[info]   356040.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   40.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-loads":
[info]   226941.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   2.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:dTLB-stores":
[info]   106244.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   11.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:iTLB-loads":
[info]   195.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:instructions":
[info]   908506.358 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:18:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 105766.867 ops/s
[info] # Warmup Iteration   2: 142284.492 ops/s
[info] # Warmup Iteration   3: 148328.860 ops/s
[info] # Warmup Iteration   4: 149161.776 ops/s
[info] # Warmup Iteration   5: 148343.206 ops/s
[info] Iteration   1: 148724.878 ops/s
[info] Iteration   2: 149152.667 ops/s
[info] Iteration   3: 149200.964 ops/s
[info] Iteration   4: 149850.148 ops/s
[info] Iteration   5: 149841.364 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   149354.004 ±(99.9%) 1870.077 ops/s [Average]
[info]   (min, avg, max) = (148724.878, 149354.004, 149850.148), stdev = 485.653
[info]   CI (99.9%): [147483.927, 151224.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:CPI":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   73.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   13117.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   6226.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   5.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-loads":
[info]   1.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:LLC-stores":
[info]   13.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:branch-misses":
[info]   43.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:branches":
[info]   22873.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:cycles":
[info]   24285.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-loads":
[info]   13060.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-stores":
[info]   6186.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:instructions":
[info]   92937.788 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:18:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1826.008 ops/s
[info] # Warmup Iteration   2: 9429.417 ops/s
[info] # Warmup Iteration   3: 12350.233 ops/s
[info] # Warmup Iteration   4: 16486.589 ops/s
[info] # Warmup Iteration   5: 16513.803 ops/s
[info] Iteration   1: 16558.615 ops/s
[info] Iteration   2: 16644.445 ops/s
[info] Iteration   3: 15828.393 ops/s
[info] Iteration   4: 14489.384 ops/s
[info] Iteration   5: 14488.808 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   15601.929 ±(99.9%) 4097.893 ops/s [Average]
[info]   (min, avg, max) = (14488.808, 15601.929, 16644.445), stdev = 1064.210
[info]   CI (99.9%): [11504.036, 19699.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:CPI":
[info]   0.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   4735.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-loads":
[info]   214389.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-stores":
[info]   104289.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   2024.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-load-misses":
[info]   52.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-loads":
[info]   434.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-store-misses":
[info]   85.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:LLC-stores":
[info]   567.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:branch-misses":
[info]   693.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:branches":
[info]   170743.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:cycles":
[info]   309616.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-load-misses":
[info]   28.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-loads":
[info]   214403.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:dTLB-stores":
[info]   102775.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:iTLB-load-misses":
[info]   15.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:iTLB-loads":
[info]   161.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:instructions":
[info]   817903.185 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:18:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23661.196 ops/s
[info] # Warmup Iteration   2: 65699.416 ops/s
[info] # Warmup Iteration   3: 62806.322 ops/s
[info] # Warmup Iteration   4: 65907.773 ops/s
[info] # Warmup Iteration   5: 73627.040 ops/s
[info] Iteration   1: 73331.932 ops/s
[info] Iteration   2: 72603.674 ops/s
[info] Iteration   3: 73296.737 ops/s
[info] Iteration   4: 70949.237 ops/s
[info] Iteration   5: 70502.705 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   72136.857 ±(99.9%) 5120.175 ops/s [Average]
[info]   (min, avg, max) = (70502.705, 72136.857, 73331.932), stdev = 1329.693
[info]   CI (99.9%): [67016.682, 77257.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:CPI":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   835.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-dcache-loads":
[info]   22352.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-dcache-stores":
[info]   15365.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:L1-icache-load-misses":
[info]   11.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-load-misses":
[info]   0.778 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-loads":
[info]   5.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-store-misses":
[info]   199.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:LLC-stores":
[info]   337.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:branch-misses":
[info]   106.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:branches":
[info]   49829.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:cycles":
[info]   52867.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-load-misses":
[info]   3.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-loads":
[info]   22950.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:dTLB-stores":
[info]   15678.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:iTLB-loads":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:instructions":
[info]   198584.662 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:18:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 42300.634 ops/s
[info] # Warmup Iteration   2: 94573.706 ops/s
[info] # Warmup Iteration   3: 99864.308 ops/s
[info] # Warmup Iteration   4: 102794.316 ops/s
[info] # Warmup Iteration   5: 102968.698 ops/s
[info] Iteration   1: 103259.378 ops/s
[info] Iteration   2: 107825.135 ops/s
[info] Iteration   3: 109695.694 ops/s
[info] Iteration   4: 104714.215 ops/s
[info] Iteration   5: 105589.949 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   106216.874 ±(99.9%) 9833.570 ops/s [Average]
[info]   (min, avg, max) = (103259.378, 106216.874, 109695.694), stdev = 2553.747
[info]   CI (99.9%): [96383.305, 116050.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:CPI":
[info]   0.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   386.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   16773.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   9911.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.600 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-loads":
[info]   2.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   72.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:LLC-stores":
[info]   134.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:branch-misses":
[info]   59.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:branches":
[info]   27957.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:cycles":
[info]   34874.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   1.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-loads":
[info]   16877.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-stores":
[info]   9841.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:instructions":
[info]   139769.265 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:18:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 198814.155 ops/s
[info] # Warmup Iteration   2: 225962.106 ops/s
[info] # Warmup Iteration   3: 229847.441 ops/s
[info] # Warmup Iteration   4: 229405.386 ops/s
[info] # Warmup Iteration   5: 229274.855 ops/s
[info] Iteration   1: 229952.365 ops/s
[info] Iteration   2: 229267.682 ops/s
[info] Iteration   3: 230698.307 ops/s
[info] Iteration   4: 230438.909 ops/s
[info] Iteration   5: 246111.699 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   233293.792 ±(99.9%) 27671.125 ops/s [Average]
[info]   (min, avg, max) = (229267.682, 233293.792, 246111.699), stdev = 7186.103
[info]   CI (99.9%): [205622.667, 260964.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   43.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   8085.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5713.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   3.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.810 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   35.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-stores":
[info]   43.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:branch-misses":
[info]   22.537 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:branches":
[info]   11099.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:cycles":
[info]   15692.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   8029.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5655.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:instructions":
[info]   64366.567 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:17:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 226514.637 ops/s
[info] # Warmup Iteration   2: 269084.694 ops/s
[info] # Warmup Iteration   3: 281124.416 ops/s
[info] # Warmup Iteration   4: 280625.224 ops/s
[info] # Warmup Iteration   5: 281084.765 ops/s
[info] Iteration   1: 281231.726 ops/s
[info] Iteration   2: 281408.627 ops/s
[info] Iteration   3: 281545.996 ops/s
[info] Iteration   4: 281181.738 ops/s
[info] Iteration   5: 281281.344 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   281329.886 ±(99.9%) 567.377 ops/s [Average]
[info]   (min, avg, max) = (281181.738, 281329.886, 281545.996), stdev = 147.346
[info]   CI (99.9%): [280762.509, 281897.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   4.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   5374.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   4935.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   22.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   10713.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   13613.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5351.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   4918.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   57397.565 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:17:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 39588.425 ops/s
[info] # Warmup Iteration   2: 72101.941 ops/s
[info] # Warmup Iteration   3: 73543.378 ops/s
[info] # Warmup Iteration   4: 79676.798 ops/s
[info] # Warmup Iteration   5: 69606.283 ops/s
[info] Iteration   1: 89275.356 ops/s
[info] Iteration   2: 92398.419 ops/s
[info] Iteration   3: 100932.651 ops/s
[info] Iteration   4: 97791.808 ops/s
[info] Iteration   5: 103274.847 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   96734.616 ±(99.9%) 22449.529 ops/s [Average]
[info]   (min, avg, max) = (89275.356, 96734.616, 103274.847), stdev = 5830.071
[info]   CI (99.9%): [74285.087, 119184.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:CPI":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1143.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-loads":
[info]   26457.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-stores":
[info]   14532.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   62.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-load-misses":
[info]   15.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-loads":
[info]   84.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-store-misses":
[info]   102.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:LLC-stores":
[info]   211.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:branch-misses":
[info]   140.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:branches":
[info]   35309.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:cycles":
[info]   55158.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-load-misses":
[info]   6.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-loads":
[info]   25824.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:dTLB-stores":
[info]   13859.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:iTLB-loads":
[info]   6.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:instructions":
[info]   174025.493 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:17:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16406.170 ops/s
[info] # Warmup Iteration   2: 90487.112 ops/s
[info] # Warmup Iteration   3: 119599.678 ops/s
[info] # Warmup Iteration   4: 125661.880 ops/s
[info] # Warmup Iteration   5: 121695.236 ops/s
[info] Iteration   1: 122010.550 ops/s
[info] Iteration   2: 129722.843 ops/s
[info] Iteration   3: 130926.179 ops/s
[info] Iteration   4: 130672.061 ops/s
[info] Iteration   5: 131208.803 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   128908.087 ±(99.9%) 15002.377 ops/s [Average]
[info]   (min, avg, max) = (122010.550, 128908.087, 131208.803), stdev = 3896.070
[info]   CI (99.9%): [113905.710, 143910.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:CPI":
[info]   0.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-dcache-load-misses":
[info]   343.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-dcache-loads":
[info]   22232.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-dcache-stores":
[info]   9285.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:L1-icache-load-misses":
[info]   6.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-load-misses":
[info]   0.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-loads":
[info]   3.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-store-misses":
[info]   44.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:LLC-stores":
[info]   78.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:branch-misses":
[info]   16.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:branches":
[info]   23386.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:cycles":
[info]   29623.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-load-misses":
[info]   1.777 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-loads":
[info]   22415.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-store-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:dTLB-stores":
[info]   9224.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:iTLB-load-misses":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:iTLB-loads":
[info]   0.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:instructions":
[info]   101950.446 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:17:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 58587.506 ops/s
[info] # Warmup Iteration   2: 114834.338 ops/s
[info] # Warmup Iteration   3: 135382.161 ops/s
[info] # Warmup Iteration   4: 136441.844 ops/s
[info] # Warmup Iteration   5: 158371.780 ops/s
[info] Iteration   1: 159281.679 ops/s
[info] Iteration   2: 158866.975 ops/s
[info] Iteration   3: 159479.052 ops/s
[info] Iteration   4: 157310.991 ops/s
[info] Iteration   5: 160484.921 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   159084.723 ±(99.9%) 4452.609 ops/s [Average]
[info]   (min, avg, max) = (157310.991, 159084.723, 160484.921), stdev = 1156.328
[info]   CI (99.9%): [154632.114, 163537.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   163.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   19613.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   7631.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   171.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-loads":
[info]   1.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:LLC-stores":
[info]   16.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:branch-misses":
[info]   12.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:branches":
[info]   19929.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:cycles":
[info]   23692.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   1.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-loads":
[info]   19912.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:dTLB-stores":
[info]   7693.398 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:instructions":
[info]   86556.071 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:16:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 171268.207 ops/s
[info] # Warmup Iteration   2: 213943.088 ops/s
[info] # Warmup Iteration   3: 229835.605 ops/s
[info] # Warmup Iteration   4: 229876.110 ops/s
[info] # Warmup Iteration   5: 228763.272 ops/s
[info] Iteration   1: 229707.136 ops/s
[info] Iteration   2: 229785.330 ops/s
[info] Iteration   3: 228349.375 ops/s
[info] Iteration   4: 226694.815 ops/s
[info] Iteration   5: 227004.976 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   228308.326 ±(99.9%) 5594.057 ops/s [Average]
[info]   (min, avg, max) = (226694.815, 228308.326, 229785.330), stdev = 1452.759
[info]   CI (99.9%): [222714.269, 233902.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:CPI":
[info]   0.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   21.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   15251.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2605.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   4.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   1.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:LLC-stores":
[info]   4.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:branch-misses":
[info]   9.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:branches":
[info]   16333.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:cycles":
[info]   16674.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-loads":
[info]   15206.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2627.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:instructions":
[info]   63356.577 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:16:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7105.850 ops/s
[info] # Warmup Iteration   2: 69523.679 ops/s
[info] # Warmup Iteration   3: 81569.775 ops/s
[info] # Warmup Iteration   4: 83223.594 ops/s
[info] # Warmup Iteration   5: 83490.840 ops/s
[info] Iteration   1: 83675.272 ops/s
[info] Iteration   2: 79514.379 ops/s
[info] Iteration   3: 79310.695 ops/s
[info] Iteration   4: 79007.227 ops/s
[info] Iteration   5: 82582.742 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   80818.063 ±(99.9%) 8287.524 ops/s [Average]
[info]   (min, avg, max) = (79007.227, 80818.063, 83675.272), stdev = 2152.244
[info]   CI (99.9%): [72530.539, 89105.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:CPI":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1165.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-loads":
[info]   37606.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-stores":
[info]   23601.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   15.583 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-loads":
[info]   3.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-store-misses":
[info]   94.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:LLC-stores":
[info]   245.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:branch-misses":
[info]   34.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:branches":
[info]   27567.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:cycles":
[info]   46308.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-loads":
[info]   39568.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:dTLB-stores":
[info]   23616.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:iTLB-loads":
[info]   0.647 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:instructions":
[info]   151542.660 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:16:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 94069.519 ops/s
[info] # Warmup Iteration   2: 212702.514 ops/s
[info] # Warmup Iteration   3: 231294.451 ops/s
[info] # Warmup Iteration   4: 231138.296 ops/s
[info] # Warmup Iteration   5: 231693.732 ops/s
[info] Iteration   1: 230867.029 ops/s
[info] Iteration   2: 231419.407 ops/s
[info] Iteration   3: 230259.165 ops/s
[info] Iteration   4: 225293.060 ops/s
[info] Iteration   5: 231326.804 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   229833.093 ±(99.9%) 9931.756 ops/s [Average]
[info]   (min, avg, max) = (225293.060, 229833.093, 231419.407), stdev = 2579.245
[info]   CI (99.9%): [219901.337, 239764.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:CPI":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   163.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-dcache-loads":
[info]   8675.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-dcache-stores":
[info]   7020.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-load-misses":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-loads":
[info]   1.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-store-misses":
[info]   104.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:LLC-stores":
[info]   142.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:branch-misses":
[info]   11.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:branches":
[info]   16536.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:cycles":
[info]   16636.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-loads":
[info]   8850.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:dTLB-stores":
[info]   6947.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:iTLB-loads":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:instructions":
[info]   59848.156 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:16:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 331523.179 ops/s
[info] # Warmup Iteration   2: 642553.243 ops/s
[info] # Warmup Iteration   3: 723346.017 ops/s
[info] # Warmup Iteration   4: 725694.763 ops/s
[info] # Warmup Iteration   5: 726945.431 ops/s
[info] Iteration   1: 725322.953 ops/s
[info] Iteration   2: 762814.833 ops/s
[info] Iteration   3: 733848.258 ops/s
[info] Iteration   4: 746632.602 ops/s
[info] Iteration   5: 772770.695 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   748277.868 ±(99.9%) 75777.273 ops/s [Average]
[info]   (min, avg, max) = (725322.953, 748277.868, 772770.695), stdev = 19679.117
[info]   CI (99.9%): [672500.595, 824055.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:CPI":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   19.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   2983.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1773.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   12.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:LLC-stores":
[info]   17.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:branch-misses":
[info]   1.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:branches":
[info]   5149.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:cycles":
[info]   4874.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-loads":
[info]   2971.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-stores":
[info]   1719.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:instructions":
[info]   20289.854 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:15:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 488064.909 ops/s
[info] # Warmup Iteration   2: 652136.395 ops/s
[info] # Warmup Iteration   3: 685464.569 ops/s
[info] # Warmup Iteration   4: 685891.330 ops/s
[info] # Warmup Iteration   5: 684411.213 ops/s
[info] Iteration   1: 684212.777 ops/s
[info] Iteration   2: 684783.006 ops/s
[info] Iteration   3: 684147.728 ops/s
[info] Iteration   4: 686813.820 ops/s
[info] Iteration   5: 683263.783 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   684644.223 ±(99.9%) 5117.402 ops/s [Average]
[info]   (min, avg, max) = (683263.783, 684644.223, 686813.820), stdev = 1328.973
[info]   CI (99.9%): [679526.820, 689761.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   20.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3155.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1946.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   9.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-stores":
[info]   17.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:branches":
[info]   6053.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:cycles":
[info]   5612.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3124.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1884.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:instructions":
[info]   24186.655 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:15:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 492243.843 ops/s
[info] # Warmup Iteration   2: 706771.191 ops/s
[info] # Warmup Iteration   3: 682106.441 ops/s
[info] # Warmup Iteration   4: 682592.055 ops/s
[info] # Warmup Iteration   5: 682901.652 ops/s
[info] Iteration   1: 682098.928 ops/s
[info] Iteration   2: 682685.427 ops/s
[info] Iteration   3: 682401.724 ops/s
[info] Iteration   4: 682685.156 ops/s
[info] Iteration   5: 682239.364 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   682422.120 ±(99.9%) 1012.923 ops/s [Average]
[info]   (min, avg, max) = (682098.928, 682422.120, 682685.427), stdev = 263.053
[info]   CI (99.9%): [681409.196, 683435.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3337.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2137.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5955.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   5574.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3353.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2139.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   24419.355 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:15:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 95047.775 ops/s
[info] # Warmup Iteration   2: 510350.337 ops/s
[info] # Warmup Iteration   3: 627867.426 ops/s
[info] # Warmup Iteration   4: 626859.276 ops/s
[info] # Warmup Iteration   5: 597277.819 ops/s
[info] Iteration   1: 597301.272 ops/s
[info] Iteration   2: 629574.532 ops/s
[info] Iteration   3: 630634.351 ops/s
[info] Iteration   4: 630517.642 ops/s
[info] Iteration   5: 616850.453 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   620975.650 ±(99.9%) 55660.599 ops/s [Average]
[info]   (min, avg, max) = (597301.272, 620975.650, 630634.351), stdev = 14454.881
[info]   CI (99.9%): [565315.051, 676636.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   62.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-loads":
[info]   3656.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-stores":
[info]   2602.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-loads":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-store-misses":
[info]   18.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:LLC-stores":
[info]   34.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:branch-misses":
[info]   2.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:branches":
[info]   5619.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:cycles":
[info]   6003.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-loads":
[info]   3727.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:dTLB-stores":
[info]   2598.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:iTLB-loads":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:instructions":
[info]   22913.751 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:15:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13812.107 ops/s
[info] # Warmup Iteration   2: 26283.804 ops/s
[info] # Warmup Iteration   3: 34239.452 ops/s
[info] # Warmup Iteration   4: 39082.848 ops/s
[info] # Warmup Iteration   5: 35140.206 ops/s
[info] Iteration   1: 37193.490 ops/s
[info] Iteration   2: 40899.136 ops/s
[info] Iteration   3: 41834.812 ops/s
[info] Iteration   4: 42004.651 ops/s
[info] Iteration   5: 40847.094 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   40555.837 ±(99.9%) 7516.872 ops/s [Average]
[info]   (min, avg, max) = (37193.490, 40555.837, 42004.651), stdev = 1952.108
[info]   CI (99.9%): [33038.965, 48072.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:CPI":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-dcache-load-misses":
[info]   1658.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-dcache-loads":
[info]   51622.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-dcache-stores":
[info]   30394.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:L1-icache-load-misses":
[info]   688.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-load-misses":
[info]   8.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-loads":
[info]   61.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-store-misses":
[info]   64.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:LLC-stores":
[info]   201.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:branch-misses":
[info]   166.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:branches":
[info]   66807.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:cycles":
[info]   107247.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-load-misses":
[info]   6.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-loads":
[info]   50108.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-store-misses":
[info]   0.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:dTLB-stores":
[info]   30235.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:iTLB-load-misses":
[info]   1.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:iTLB-loads":
[info]   27.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:instructions":
[info]   304273.346 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:15:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.900 ops/s
[info] # Warmup Iteration   2: 228388.070 ops/s
[info] # Warmup Iteration   3: 279433.222 ops/s
[info] # Warmup Iteration   4: 282619.679 ops/s
[info] # Warmup Iteration   5: 281921.991 ops/s
[info] Iteration   1: 282799.991 ops/s
[info] Iteration   2: 282830.831 ops/s
[info] Iteration   3: 283893.633 ops/s
[info] Iteration   4: 282573.282 ops/s
[info] Iteration   5: 284131.897 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   283245.927 ±(99.9%) 2741.865 ops/s [Average]
[info]   (min, avg, max) = (282573.282, 283245.927, 284131.897), stdev = 712.054
[info]   CI (99.9%): [280504.061, 285987.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:CPI":
[info]   0.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   30.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   5238.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   3177.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   1.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   2.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:LLC-stores":
[info]   9.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:branch-misses":
[info]   29.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:branches":
[info]   14404.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:cycles":
[info]   12644.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-loads":
[info]   5271.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-stores":
[info]   3172.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:instructions":
[info]   53443.913 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:14:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 44613.333 ops/s
[info] # Warmup Iteration   2: 127464.286 ops/s
[info] # Warmup Iteration   3: 120727.605 ops/s
[info] # Warmup Iteration   4: 135811.778 ops/s
[info] # Warmup Iteration   5: 136545.685 ops/s
[info] Iteration   1: 136926.240 ops/s
[info] Iteration   2: 137475.510 ops/s
[info] Iteration   3: 137281.826 ops/s
[info] Iteration   4: 132841.823 ops/s
[info] Iteration   5: 128936.253 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   134692.330 ±(99.9%) 14407.627 ops/s [Average]
[info]   (min, avg, max) = (128936.253, 134692.330, 137475.510), stdev = 3741.615
[info]   CI (99.9%): [120284.703, 149099.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:CPI":
[info]   0.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   246.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   13462.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   10753.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   17.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-loads":
[info]   4.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-store-misses":
[info]   2.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:LLC-stores":
[info]   24.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:branch-misses":
[info]   32.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:branches":
[info]   25887.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:cycles":
[info]   28099.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-loads":
[info]   13850.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:dTLB-stores":
[info]   11062.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:instructions":
[info]   104789.884 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:14:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 395092.939 ops/s
[info] # Warmup Iteration   2: 524927.664 ops/s
[info] # Warmup Iteration   3: 554097.122 ops/s
[info] # Warmup Iteration   4: 552886.246 ops/s
[info] # Warmup Iteration   5: 552991.530 ops/s
[info] Iteration   1: 554129.202 ops/s
[info] Iteration   2: 555695.848 ops/s
[info] Iteration   3: 553711.397 ops/s
[info] Iteration   4: 556020.401 ops/s
[info] Iteration   5: 552948.058 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   554500.981 ±(99.9%) 5060.916 ops/s [Average]
[info]   (min, avg, max) = (552948.058, 554500.981, 556020.401), stdev = 1314.304
[info]   CI (99.9%): [549440.065, 559561.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   18.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   3214.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2448.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:LLC-stores":
[info]   3.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:branch-misses":
[info]   5.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:branches":
[info]   7568.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:cycles":
[info]   6876.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-loads":
[info]   3124.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2362.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:instructions":
[info]   30556.839 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:14:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7872.068 ops/s
[info] # Warmup Iteration   2: 30474.233 ops/s
[info] # Warmup Iteration   3: 44718.607 ops/s
[info] # Warmup Iteration   4: 46984.826 ops/s
[info] # Warmup Iteration   5: 47536.362 ops/s
[info] Iteration   1: 52045.392 ops/s
[info] Iteration   2: 54226.802 ops/s
[info] Iteration   3: 54453.943 ops/s
[info] Iteration   4: 54358.650 ops/s
[info] Iteration   5: 54422.981 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   53901.554 ±(99.9%) 4009.609 ops/s [Average]
[info]   (min, avg, max) = (52045.392, 53901.554, 54453.943), stdev = 1041.283
[info]   CI (99.9%): [49891.944, 57911.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1529.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-loads":
[info]   37963.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-stores":
[info]   31621.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   119.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-load-misses":
[info]   4.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-loads":
[info]   10.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-store-misses":
[info]   44.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:LLC-stores":
[info]   210.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:branch-misses":
[info]   121.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:branches":
[info]   44613.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:cycles":
[info]   70931.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-loads":
[info]   36884.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:dTLB-stores":
[info]   31329.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:iTLB-loads":
[info]   0.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:instructions":
[info]   232680.302 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:14:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 45379.658 ops/s
[info] # Warmup Iteration   2: 93421.312 ops/s
[info] # Warmup Iteration   3: 87795.337 ops/s
[info] # Warmup Iteration   4: 95810.994 ops/s
[info] # Warmup Iteration   5: 95339.752 ops/s
[info] Iteration   1: 95839.831 ops/s
[info] Iteration   2: 95804.828 ops/s
[info] Iteration   3: 94890.706 ops/s
[info] Iteration   4: 92436.819 ops/s
[info] Iteration   5: 96037.504 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   95001.938 ±(99.9%) 5779.591 ops/s [Average]
[info]   (min, avg, max) = (92436.819, 95001.938, 96037.504), stdev = 1500.942
[info]   CI (99.9%): [89222.346, 100781.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:CPI":
[info]   0.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   216.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-dcache-loads":
[info]   16847.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-dcache-stores":
[info]   14476.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:L1-icache-load-misses":
[info]   9.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-load-misses":
[info]   0.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-loads":
[info]   3.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-store-misses":
[info]   117.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:LLC-stores":
[info]   166.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:branch-misses":
[info]   31.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:branches":
[info]   19224.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:cycles":
[info]   40353.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-loads":
[info]   17025.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:dTLB-stores":
[info]   14318.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:iTLB-loads":
[info]   0.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:instructions":
[info]   105594.138 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:13:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.941 ops/s
[info] # Warmup Iteration   2: 107390.674 ops/s
[info] # Warmup Iteration   3: 114256.553 ops/s
[info] # Warmup Iteration   4: 121517.797 ops/s
[info] # Warmup Iteration   5: 120959.378 ops/s
[info] Iteration   1: 120832.733 ops/s
[info] Iteration   2: 121374.961 ops/s
[info] Iteration   3: 120978.470 ops/s
[info] Iteration   4: 119414.094 ops/s
[info] Iteration   5: 116448.837 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   119809.819 ±(99.9%) 7776.625 ops/s [Average]
[info]   (min, avg, max) = (116448.837, 119809.819, 121374.961), stdev = 2019.565
[info]   CI (99.9%): [112033.194, 127586.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:CPI":
[info]   0.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   103.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   11907.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   9000.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   1.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-loads":
[info]   1.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   6.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-stores":
[info]   20.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:branch-misses":
[info]   13.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:branches":
[info]   13513.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:cycles":
[info]   31474.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   1.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   12023.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   8885.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:instructions":
[info]   85174.582 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:13:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 52910.972 ops/s
[info] # Warmup Iteration   2: 97611.747 ops/s
[info] # Warmup Iteration   3: 97717.605 ops/s
[info] # Warmup Iteration   4: 105734.885 ops/s
[info] # Warmup Iteration   5: 105944.930 ops/s
[info] Iteration   1: 106302.065 ops/s
[info] Iteration   2: 106086.037 ops/s
[info] Iteration   3: 101954.302 ops/s
[info] Iteration   4: 101680.080 ops/s
[info] Iteration   5: 101748.578 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   103554.213 ±(99.9%) 9292.192 ops/s [Average]
[info]   (min, avg, max) = (101680.080, 103554.213, 106302.065), stdev = 2413.153
[info]   CI (99.9%): [94262.020, 112846.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:CPI":
[info]   0.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   103.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   14806.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   10853.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   4.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-loads":
[info]   1.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   6.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:LLC-stores":
[info]   19.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:branch-misses":
[info]   30.885 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:branches":
[info]   18184.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:cycles":
[info]   36154.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-loads":
[info]   14808.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-stores":
[info]   10700.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:instructions":
[info]   104073.406 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:13:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 97271.568 ops/s
[info] # Warmup Iteration   2: 114655.587 ops/s
[info] # Warmup Iteration   3: 119326.210 ops/s
[info] # Warmup Iteration   4: 123358.877 ops/s
[info] # Warmup Iteration   5: 124149.070 ops/s
[info] Iteration   1: 123562.929 ops/s
[info] Iteration   2: 119498.182 ops/s
[info] Iteration   3: 119378.205 ops/s
[info] Iteration   4: 119276.044 ops/s
[info] Iteration   5: 119359.632 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   120214.998 ±(99.9%) 7213.144 ops/s [Average]
[info]   (min, avg, max) = (119276.044, 120214.998, 123562.929), stdev = 1873.231
[info]   CI (99.9%): [113001.855, 127428.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:CPI":
[info]   0.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   100.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   12128.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   8253.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   2.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   6.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-stores":
[info]   19.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:branch-misses":
[info]   13.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:branches":
[info]   13494.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:cycles":
[info]   31222.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   12016.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   7985.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:instructions":
[info]   85341.067 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:13:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 97801.731 ops/s
[info] # Warmup Iteration   2: 112680.083 ops/s
[info] # Warmup Iteration   3: 122770.384 ops/s
[info] # Warmup Iteration   4: 122785.616 ops/s
[info] # Warmup Iteration   5: 122866.089 ops/s
[info] Iteration   1: 123393.131 ops/s
[info] Iteration   2: 122691.478 ops/s
[info] Iteration   3: 123300.435 ops/s
[info] Iteration   4: 122659.989 ops/s
[info] Iteration   5: 123236.848 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   123056.376 ±(99.9%) 1355.695 ops/s [Average]
[info]   (min, avg, max) = (122659.989, 123056.376, 123393.131), stdev = 352.070
[info]   CI (99.9%): [121700.681, 124412.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   84.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   12138.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   8200.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   2.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   1.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   5.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   15.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   13401.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   31419.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   1.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   11993.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   8112.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   85191.401 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:12:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3602.058 ops/s
[info] # Warmup Iteration   2: 7559.166 ops/s
[info] # Warmup Iteration   3: 9772.105 ops/s
[info] # Warmup Iteration   4: 12621.887 ops/s
[info] # Warmup Iteration   5: 13579.153 ops/s
[info] Iteration   1: 13618.081 ops/s
[info] Iteration   2: 13251.479 ops/s
[info] Iteration   3: 13183.301 ops/s
[info] Iteration   4: 13498.346 ops/s
[info] Iteration   5: 12561.750 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   13222.592 ±(99.9%) 1577.756 ops/s [Average]
[info]   (min, avg, max) = (12561.750, 13222.592, 13618.081), stdev = 409.738
[info]   CI (99.9%): [11644.836, 14800.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:CPI":
[info]   0.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-dcache-load-misses":
[info]   5855.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-dcache-loads":
[info]   241818.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-dcache-stores":
[info]   116282.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:L1-icache-load-misses":
[info]   5216.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-load-misses":
[info]   65.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-loads":
[info]   435.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-store-misses":
[info]   378.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:LLC-stores":
[info]   1145.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:branch-misses":
[info]   342.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:branches":
[info]   194296.872 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:cycles":
[info]   359210.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-load-misses":
[info]   29.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-loads":
[info]   240944.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-store-misses":
[info]   2.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:dTLB-stores":
[info]   115492.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:iTLB-load-misses":
[info]   13.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:iTLB-loads":
[info]   127.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:instructions":
[info]   948532.751 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:12:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3363.327 ops/s
[info] # Warmup Iteration   2: 11623.192 ops/s
[info] # Warmup Iteration   3: 13323.944 ops/s
[info] # Warmup Iteration   4: 13405.026 ops/s
[info] # Warmup Iteration   5: 13405.240 ops/s
[info] Iteration   1: 12396.189 ops/s
[info] Iteration   2: 13341.218 ops/s
[info] Iteration   3: 13298.199 ops/s
[info] Iteration   4: 12863.916 ops/s
[info] Iteration   5: 12788.331 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   12937.570 ±(99.9%) 1508.371 ops/s [Average]
[info]   (min, avg, max) = (12396.189, 12937.570, 13341.218), stdev = 391.719
[info]   CI (99.9%): [11429.199, 14445.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:CPI":
[info]   0.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   5928.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   249324.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   119738.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   6602.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-load-misses":
[info]   57.694 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-loads":
[info]   510.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-store-misses":
[info]   355.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:LLC-stores":
[info]   922.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:branch-misses":
[info]   461.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:branches":
[info]   199186.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:cycles":
[info]   385100.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   32.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-loads":
[info]   251122.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   2.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:dTLB-stores":
[info]   121128.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   15.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:iTLB-loads":
[info]   202.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:instructions":
[info]   975847.730 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:12:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 119539.330 ops/s
[info] # Warmup Iteration   2: 145237.813 ops/s
[info] # Warmup Iteration   3: 194294.909 ops/s
[info] # Warmup Iteration   4: 199877.886 ops/s
[info] # Warmup Iteration   5: 201864.852 ops/s
[info] Iteration   1: 202886.255 ops/s
[info] Iteration   2: 203827.596 ops/s
[info] Iteration   3: 203558.688 ops/s
[info] Iteration   4: 200095.734 ops/s
[info] Iteration   5: 206318.727 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   203337.400 ±(99.9%) 8586.483 ops/s [Average]
[info]   (min, avg, max) = (200095.734, 203337.400, 206318.727), stdev = 2229.882
[info]   CI (99.9%): [194750.916, 211923.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   69.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   12137.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   6785.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:LLC-stores":
[info]   12.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:branch-misses":
[info]   6.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:branches":
[info]   15072.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:cycles":
[info]   16933.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-loads":
[info]   12084.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-stores":
[info]   6641.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:instructions":
[info]   70729.578 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:12:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 396.307 ops/s
[info] # Warmup Iteration   2: 2635.365 ops/s
[info] # Warmup Iteration   3: 5104.832 ops/s
[info] # Warmup Iteration   4: 5524.482 ops/s
[info] # Warmup Iteration   5: 6061.487 ops/s
[info] Iteration   1: 6149.732 ops/s
[info] Iteration   2: 6094.000 ops/s
[info] Iteration   3: 6102.520 ops/s
[info] Iteration   4: 6114.944 ops/s
[info] Iteration   5: 6146.051 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   6121.449 ±(99.9%) 97.401 ops/s [Average]
[info]   (min, avg, max) = (6094.000, 6121.449, 6149.732), stdev = 25.295
[info]   CI (99.9%): [6024.048, 6218.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:CPI":
[info]   0.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   7240.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-loads":
[info]   445169.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-stores":
[info]   231261.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   7162.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-load-misses":
[info]   9.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-loads":
[info]   289.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-store-misses":
[info]   162.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:LLC-stores":
[info]   1057.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:branch-misses":
[info]   199.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:branches":
[info]   344617.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:cycles":
[info]   565985.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-load-misses":
[info]   13.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-loads":
[info]   443755.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:dTLB-stores":
[info]   229973.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:iTLB-load-misses":
[info]   2.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:iTLB-loads":
[info]   6.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:instructions":
[info]   1753804.013 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:12:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7324.976 ops/s
[info] # Warmup Iteration   2: 14435.796 ops/s
[info] # Warmup Iteration   3: 22089.962 ops/s
[info] # Warmup Iteration   4: 32142.615 ops/s
[info] # Warmup Iteration   5: 33112.408 ops/s
[info] Iteration   1: 28278.866 ops/s
[info] Iteration   2: 27700.249 ops/s
[info] Iteration   3: 25872.447 ops/s
[info] Iteration   4: 28201.160 ops/s
[info] Iteration   5: 32724.032 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   28555.351 ±(99.9%) 9724.109 ops/s [Average]
[info]   (min, avg, max) = (25872.447, 28555.351, 32724.032), stdev = 2525.320
[info]   CI (99.9%): [18831.242, 38279.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:CPI":
[info]   0.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   4375.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-dcache-loads":
[info]   97242.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-dcache-stores":
[info]   51998.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1110.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-load-misses":
[info]   70.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-loads":
[info]   371.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-store-misses":
[info]   419.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:LLC-stores":
[info]   718.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:branch-misses":
[info]   429.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:branches":
[info]   117780.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:cycles":
[info]   216261.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-load-misses":
[info]   22.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-loads":
[info]   98137.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-store-misses":
[info]   7.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:dTLB-stores":
[info]   51637.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:iTLB-load-misses":
[info]   5.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:iTLB-loads":
[info]   109.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:instructions":
[info]   526715.015 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:11:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9045.668 ops/s
[info] # Warmup Iteration   2: 18042.565 ops/s
[info] # Warmup Iteration   3: 21377.351 ops/s
[info] # Warmup Iteration   4: 32500.828 ops/s
[info] # Warmup Iteration   5: 35646.808 ops/s
[info] Iteration   1: 32195.204 ops/s
[info] Iteration   2: 32541.975 ops/s
[info] Iteration   3: 35021.580 ops/s
[info] Iteration   4: 32044.996 ops/s
[info] Iteration   5: 32995.617 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   32959.874 ±(99.9%) 4656.045 ops/s [Average]
[info]   (min, avg, max) = (32044.996, 32959.874, 35021.580), stdev = 1209.160
[info]   CI (99.9%): [28303.830, 37615.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:CPI":
[info]   0.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   4326.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   99163.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   50342.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   857.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   78.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-loads":
[info]   492.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   257.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:LLC-stores":
[info]   473.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:branch-misses":
[info]   459.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:branches":
[info]   92931.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:cycles":
[info]   201324.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   34.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-loads":
[info]   96158.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   3.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-stores":
[info]   50896.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   5.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-loads":
[info]   79.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:instructions":
[info]   482978.818 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:11:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 251401.495 ops/s
[info] # Warmup Iteration   2: 301645.057 ops/s
[info] # Warmup Iteration   3: 320302.800 ops/s
[info] # Warmup Iteration   4: 319815.428 ops/s
[info] # Warmup Iteration   5: 319015.413 ops/s
[info] Iteration   1: 319919.433 ops/s
[info] Iteration   2: 319087.337 ops/s
[info] Iteration   3: 320833.510 ops/s
[info] Iteration   4: 318811.474 ops/s
[info] Iteration   5: 317634.774 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   319257.306 ±(99.9%) 4630.028 ops/s [Average]
[info]   (min, avg, max) = (317634.774, 319257.306, 320833.510), stdev = 1202.404
[info]   CI (99.9%): [314627.277, 323887.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:CPI":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   50.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   4926.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   4512.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   37.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-stores":
[info]   53.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:branch-misses":
[info]   3.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:branches":
[info]   2451.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:cycles":
[info]   10222.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   4988.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   4456.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:instructions":
[info]   27705.756 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:11:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 289857.526 ops/s
[info] # Warmup Iteration   2: 333793.411 ops/s
[info] # Warmup Iteration   3: 350410.740 ops/s
[info] # Warmup Iteration   4: 350624.542 ops/s
[info] # Warmup Iteration   5: 350760.097 ops/s
[info] Iteration   1: 350473.219 ops/s
[info] Iteration   2: 350810.319 ops/s
[info] Iteration   3: 349101.461 ops/s
[info] Iteration   4: 351256.001 ops/s
[info] Iteration   5: 351440.568 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   350616.314 ±(99.9%) 3571.712 ops/s [Average]
[info]   (min, avg, max) = (349101.461, 350616.314, 351440.568), stdev = 927.562
[info]   CI (99.9%): [347044.602, 354188.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   5605.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5028.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2739.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   10812.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   5613.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5022.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   32585.487 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:11:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11273.786 ops/s
[info] # Warmup Iteration   2: 19113.327 ops/s
[info] # Warmup Iteration   3: 17818.507 ops/s
[info] # Warmup Iteration   4: 21674.153 ops/s
[info] # Warmup Iteration   5: 23472.303 ops/s
[info] Iteration   1: 33739.687 ops/s
[info] Iteration   2: 35830.862 ops/s
[info] Iteration   3: 35079.459 ops/s
[info] Iteration   4: 35944.777 ops/s
[info] Iteration   5: 35957.211 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   35310.399 ±(99.9%) 3659.202 ops/s [Average]
[info]   (min, avg, max) = (33739.687, 35310.399, 35957.211), stdev = 950.283
[info]   CI (99.9%): [31651.197, 38969.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:CPI":
[info]   0.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   5310.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-loads":
[info]   101997.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-stores":
[info]   55073.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   851.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-load-misses":
[info]   80.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-loads":
[info]   658.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-store-misses":
[info]   237.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:LLC-stores":
[info]   470.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:branch-misses":
[info]   493.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:branches":
[info]   90505.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:cycles":
[info]   209390.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-load-misses":
[info]   28.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-loads":
[info]   102729.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-store-misses":
[info]   2.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:dTLB-stores":
[info]   56790.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:iTLB-load-misses":
[info]   8.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:iTLB-loads":
[info]   94.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:instructions":
[info]   482480.722 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:10:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 77216.843 ops/s
[info] # Warmup Iteration   2: 147186.274 ops/s
[info] # Warmup Iteration   3: 159008.015 ops/s
[info] # Warmup Iteration   4: 173138.175 ops/s
[info] # Warmup Iteration   5: 174362.148 ops/s
[info] Iteration   1: 182621.009 ops/s
[info] Iteration   2: 182775.417 ops/s
[info] Iteration   3: 181675.438 ops/s
[info] Iteration   4: 175149.491 ops/s
[info] Iteration   5: 182129.818 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   180870.235 ±(99.9%) 12426.419 ops/s [Average]
[info]   (min, avg, max) = (175149.491, 180870.235, 182775.417), stdev = 3227.102
[info]   CI (99.9%): [168443.815, 193296.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:CPI":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   371.583 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-dcache-loads":
[info]   11474.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-dcache-stores":
[info]   7561.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   5.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-load-misses":
[info]   0.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-loads":
[info]   4.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-store-misses":
[info]   36.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:LLC-stores":
[info]   87.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:branch-misses":
[info]   27.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:branches":
[info]   18866.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:cycles":
[info]   21061.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-load-misses":
[info]   1.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-loads":
[info]   11664.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:dTLB-stores":
[info]   7895.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:iTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:iTLB-loads":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:instructions":
[info]   84679.657 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:10:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.858 ops/s
[info] # Warmup Iteration   2: 453940.543 ops/s
[info] # Warmup Iteration   3: 518544.975 ops/s
[info] # Warmup Iteration   4: 568874.889 ops/s
[info] # Warmup Iteration   5: 568367.120 ops/s
[info] Iteration   1: 566102.601 ops/s
[info] Iteration   2: 566949.360 ops/s
[info] Iteration   3: 567837.549 ops/s
[info] Iteration   4: 567544.100 ops/s
[info] Iteration   5: 534683.191 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   560623.360 ±(99.9%) 55896.507 ops/s [Average]
[info]   (min, avg, max) = (534683.191, 560623.360, 567837.549), stdev = 14516.145
[info]   CI (99.9%): [504726.853, 616519.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   30.690 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   3225.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   2343.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   2.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:LLC-stores":
[info]   9.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:branch-misses":
[info]   12.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:branches":
[info]   7735.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:cycles":
[info]   6888.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-loads":
[info]   3219.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:dTLB-stores":
[info]   2352.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:instructions":
[info]   31132.858 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:10:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 96296.995 ops/s
[info] # Warmup Iteration   2: 313110.485 ops/s
[info] # Warmup Iteration   3: 254288.296 ops/s
[info] # Warmup Iteration   4: 449321.228 ops/s
[info] # Warmup Iteration   5: 428691.234 ops/s
[info] Iteration   1: 426401.137 ops/s
[info] Iteration   2: 427261.611 ops/s
[info] Iteration   3: 450342.290 ops/s
[info] Iteration   4: 449942.103 ops/s
[info] Iteration   5: 450875.461 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   440964.521 ±(99.9%) 49710.164 ops/s [Average]
[info]   (min, avg, max) = (426401.137, 440964.521, 450875.461), stdev = 12909.572
[info]   CI (99.9%): [391254.357, 490674.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:CPI":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   26.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   4952.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   3833.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-loads":
[info]   0.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:LLC-stores":
[info]   6.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:branch-misses":
[info]   0.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:branches":
[info]   8227.994 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:cycles":
[info]   8543.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   4953.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   3838.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:instructions":
[info]   33734.295 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:10:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 507007.594 ops/s
[info] # Warmup Iteration   2: 660574.381 ops/s
[info] # Warmup Iteration   3: 685504.670 ops/s
[info] # Warmup Iteration   4: 683800.116 ops/s
[info] # Warmup Iteration   5: 683483.117 ops/s
[info] Iteration   1: 683053.107 ops/s
[info] Iteration   2: 653768.565 ops/s
[info] Iteration   3: 683843.121 ops/s
[info] Iteration   4: 683361.494 ops/s
[info] Iteration   5: 686077.843 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   678020.826 ±(99.9%) 52403.904 ops/s [Average]
[info]   (min, avg, max) = (653768.565, 678020.826, 686077.843), stdev = 13609.127
[info]   CI (99.9%): [625616.922, 730424.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   17.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2028.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1856.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   3.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:branch-misses":
[info]   2.935 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:branches":
[info]   6655.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:cycles":
[info]   5616.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   2013.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   1816.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:instructions":
[info]   26301.364 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:10:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 19215.367 ops/s
[info] # Warmup Iteration   2: 111072.674 ops/s
[info] # Warmup Iteration   3: 100866.241 ops/s
[info] # Warmup Iteration   4: 105465.919 ops/s
[info] # Warmup Iteration   5: 105395.352 ops/s
[info] Iteration   1: 105063.865 ops/s
[info] Iteration   2: 105251.131 ops/s
[info] Iteration   3: 106753.069 ops/s
[info] Iteration   4: 105836.214 ops/s
[info] Iteration   5: 111303.082 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   106841.472 ±(99.9%) 9932.383 ops/s [Average]
[info]   (min, avg, max) = (105063.865, 106841.472, 111303.082), stdev = 2579.408
[info]   CI (99.9%): [96909.089, 116773.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:CPI":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1213.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   25062.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   21851.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   11.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-loads":
[info]   3.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   73.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:LLC-stores":
[info]   229.694 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:branch-misses":
[info]   71.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:branches":
[info]   19293.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:cycles":
[info]   35010.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-loads":
[info]   26444.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:dTLB-stores":
[info]   22335.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:iTLB-loads":
[info]   0.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:instructions":
[info]   111394.718 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:09:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 130245.674 ops/s
[info] # Warmup Iteration   2: 232648.327 ops/s
[info] # Warmup Iteration   3: 251298.359 ops/s
[info] # Warmup Iteration   4: 251948.023 ops/s
[info] # Warmup Iteration   5: 251563.329 ops/s
[info] Iteration   1: 251862.812 ops/s
[info] Iteration   2: 249274.553 ops/s
[info] Iteration   3: 251943.874 ops/s
[info] Iteration   4: 252471.304 ops/s
[info] Iteration   5: 251367.495 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   251384.008 ±(99.9%) 4784.334 ops/s [Average]
[info]   (min, avg, max) = (249274.553, 251384.008, 252471.304), stdev = 1242.476
[info]   CI (99.9%): [246599.673, 256168.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:CPI":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   182.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-dcache-loads":
[info]   8138.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-dcache-stores":
[info]   7334.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-load-misses":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-loads":
[info]   1.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-store-misses":
[info]   82.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:LLC-stores":
[info]   132.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:branch-misses":
[info]   23.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:branches":
[info]   10122.445 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:cycles":
[info]   15348.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-loads":
[info]   8333.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:dTLB-stores":
[info]   7364.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:iTLB-loads":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:instructions":
[info]   53747.048 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:09:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.886 ops/s
[info] # Warmup Iteration   2: 1096613.937 ops/s
[info] # Warmup Iteration   3: 1209013.518 ops/s
[info] # Warmup Iteration   4: 1204290.693 ops/s
[info] # Warmup Iteration   5: 1217343.379 ops/s
[info] Iteration   1: 1217433.964 ops/s
[info] Iteration   2: 1218318.839 ops/s
[info] Iteration   3: 1219138.328 ops/s
[info] Iteration   4: 1218700.342 ops/s
[info] Iteration   5: 1218604.772 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   1218439.249 ±(99.9%) 2442.485 ops/s [Average]
[info]   (min, avg, max) = (1217433.964, 1218439.249, 1219138.328), stdev = 634.306
[info]   CI (99.9%): [1215996.764, 1220881.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   14.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   1212.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   1685.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   8.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:LLC-stores":
[info]   11.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:branch-misses":
[info]   0.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:branches":
[info]   2009.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:cycles":
[info]   3145.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   1200.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   1663.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:instructions":
[info]   13013.132 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:09:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 653962.337 ops/s
[info] # Warmup Iteration   2: 1175265.861 ops/s
[info] # Warmup Iteration   3: 1244584.447 ops/s
[info] # Warmup Iteration   4: 1246119.982 ops/s
[info] # Warmup Iteration   5: 1245296.202 ops/s
[info] Iteration   1: 1176691.388 ops/s
[info] Iteration   2: 1164739.279 ops/s
[info] Iteration   3: 1165251.056 ops/s
[info] Iteration   4: 1230973.166 ops/s
[info] Iteration   5: 1244862.067 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   1196503.391 ±(99.9%) 147948.306 ops/s [Average]
[info]   (min, avg, max) = (1164739.279, 1196503.391, 1244862.067), stdev = 38421.705
[info]   CI (99.9%): [1048555.086, 1344451.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:CPI":
[info]   0.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   14.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   1758.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2132.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   4.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   8.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:branch-misses":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:branches":
[info]   2355.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:cycles":
[info]   3083.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   1758.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2108.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:instructions":
[info]   13087.890 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:09:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 928650.164 ops/s
[info] # Warmup Iteration   2: 1131137.584 ops/s
[info] # Warmup Iteration   3: 1142076.527 ops/s
[info] # Warmup Iteration   4: 1138564.708 ops/s
[info] # Warmup Iteration   5: 1143890.177 ops/s
[info] Iteration   1: 1145188.913 ops/s
[info] Iteration   2: 1145062.519 ops/s
[info] Iteration   3: 1143104.912 ops/s
[info] Iteration   4: 1142693.224 ops/s
[info] Iteration   5: 1144581.378 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1144126.189 ±(99.9%) 4436.474 ops/s [Average]
[info]   (min, avg, max) = (1142693.224, 1144126.189, 1145188.913), stdev = 1152.138
[info]   CI (99.9%): [1139689.715, 1148562.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   14.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1398.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1302.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   8.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   7.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:branches":
[info]   3236.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:cycles":
[info]   3346.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1404.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1273.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:instructions":
[info]   13824.714 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:08:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 946821.737 ops/s
[info] # Warmup Iteration   2: 1121326.514 ops/s
[info] # Warmup Iteration   3: 1165896.548 ops/s
[info] # Warmup Iteration   4: 1169291.733 ops/s
[info] # Warmup Iteration   5: 1168404.112 ops/s
[info] Iteration   1: 1163691.370 ops/s
[info] Iteration   2: 1170296.894 ops/s
[info] Iteration   3: 1166339.432 ops/s
[info] Iteration   4: 1135626.144 ops/s
[info] Iteration   5: 1126686.317 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1152528.031 ±(99.9%) 76640.763 ops/s [Average]
[info]   (min, avg, max) = (1126686.317, 1152528.031, 1170296.894), stdev = 19903.363
[info]   CI (99.9%): [1075887.268, 1229168.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1338.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1248.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   6.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   3153.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   3239.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1347.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1265.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   13817.450 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:08:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13539.472 ops/s
[info] # Warmup Iteration   2: 35103.677 ops/s
[info] # Warmup Iteration   3: 40599.947 ops/s
[info] # Warmup Iteration   4: 37233.738 ops/s
[info] # Warmup Iteration   5: 37468.629 ops/s
[info] Iteration   1: 40645.412 ops/s
[info] Iteration   2: 40571.052 ops/s
[info] Iteration   3: 40561.614 ops/s
[info] Iteration   4: 40626.525 ops/s
[info] Iteration   5: 40614.541 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   40603.829 ±(99.9%) 139.043 ops/s [Average]
[info]   (min, avg, max) = (40561.614, 40603.829, 40645.412), stdev = 36.109
[info]   CI (99.9%): [40464.786, 40742.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:CPI":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1480.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-dcache-loads":
[info]   49360.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-dcache-stores":
[info]   30404.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   69.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-load-misses":
[info]   5.866 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-loads":
[info]   21.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-store-misses":
[info]   34.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:LLC-stores":
[info]   199.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:branch-misses":
[info]   129.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:branches":
[info]   59034.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:cycles":
[info]   95330.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-loads":
[info]   49656.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:dTLB-stores":
[info]   31707.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:iTLB-loads":
[info]   0.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:instructions":
[info]   293762.966 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:08:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 45657.387 ops/s
[info] # Warmup Iteration   2: 120295.406 ops/s
[info] # Warmup Iteration   3: 142092.273 ops/s
[info] # Warmup Iteration   4: 149758.682 ops/s
[info] # Warmup Iteration   5: 142969.518 ops/s
[info] Iteration   1: 161663.387 ops/s
[info] Iteration   2: 160833.542 ops/s
[info] Iteration   3: 152835.267 ops/s
[info] Iteration   4: 151730.480 ops/s
[info] Iteration   5: 151745.342 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   155761.603 ±(99.9%) 19397.021 ops/s [Average]
[info]   (min, avg, max) = (151730.480, 155761.603, 161663.387), stdev = 5037.345
[info]   CI (99.9%): [136364.582, 175158.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:CPI":
[info]   0.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-load-misses":
[info]   340.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-loads":
[info]   19439.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-stores":
[info]   8911.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:L1-icache-load-misses":
[info]   4.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-load-misses":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-loads":
[info]   2.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-store-misses":
[info]   43.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:LLC-stores":
[info]   77.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:branch-misses":
[info]   14.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:branches":
[info]   17875.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:cycles":
[info]   23910.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-load-misses":
[info]   1.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-loads":
[info]   19476.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-store-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:dTLB-stores":
[info]   8760.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:iTLB-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:iTLB-loads":
[info]   0.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:instructions":
[info]   87449.599 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:08:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 79946.191 ops/s
[info] # Warmup Iteration   2: 190392.305 ops/s
[info] # Warmup Iteration   3: 190483.469 ops/s
[info] # Warmup Iteration   4: 212853.975 ops/s
[info] # Warmup Iteration   5: 212196.963 ops/s
[info] Iteration   1: 214542.323 ops/s
[info] Iteration   2: 213813.365 ops/s
[info] Iteration   3: 213465.415 ops/s
[info] Iteration   4: 213249.910 ops/s
[info] Iteration   5: 213521.520 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   213718.507 ±(99.9%) 1935.033 ops/s [Average]
[info]   (min, avg, max) = (213249.910, 213718.507, 214542.323), stdev = 502.522
[info]   CI (99.9%): [211783.474, 215653.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:CPI":
[info]   0.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   164.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   13713.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   8326.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   57.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-loads":
[info]   3.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-stores":
[info]   19.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:branch-misses":
[info]   12.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:branches":
[info]   14352.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:cycles":
[info]   18570.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-loads":
[info]   13241.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-stores":
[info]   8233.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:instructions":
[info]   71658.248 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:07:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 190311.943 ops/s
[info] # Warmup Iteration   2: 230490.659 ops/s
[info] # Warmup Iteration   3: 240791.330 ops/s
[info] # Warmup Iteration   4: 241957.420 ops/s
[info] # Warmup Iteration   5: 229627.818 ops/s
[info] Iteration   1: 226846.284 ops/s
[info] Iteration   2: 226898.128 ops/s
[info] Iteration   3: 228407.546 ops/s
[info] Iteration   4: 241346.784 ops/s
[info] Iteration   5: 238699.106 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   232439.570 ±(99.9%) 27007.396 ops/s [Average]
[info]   (min, avg, max) = (226846.284, 232439.570, 241346.784), stdev = 7013.735
[info]   CI (99.9%): [205432.174, 259446.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:CPI":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   136.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   12406.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5745.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   3.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.873 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.929 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-stores":
[info]   13.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:branch-misses":
[info]   10.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:branches":
[info]   13481.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:cycles":
[info]   15761.901 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-loads":
[info]   12446.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-stores":
[info]   5729.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:instructions":
[info]   62229.904 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:07:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17287.680 ops/s
[info] # Warmup Iteration   2: 78966.158 ops/s
[info] # Warmup Iteration   3: 94692.979 ops/s
[info] # Warmup Iteration   4: 101341.245 ops/s
[info] # Warmup Iteration   5: 101672.227 ops/s
[info] Iteration   1: 101858.574 ops/s
[info] Iteration   2: 101139.900 ops/s
[info] Iteration   3: 97673.059 ops/s
[info] Iteration   4: 97577.548 ops/s
[info] Iteration   5: 98929.449 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   99435.706 ±(99.9%) 7602.106 ops/s [Average]
[info]   (min, avg, max) = (97577.548, 99435.706, 101858.574), stdev = 1974.243
[info]   CI (99.9%): [91833.600, 107037.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1238.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-loads":
[info]   30649.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-stores":
[info]   19728.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   60.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-loads":
[info]   5.237 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-store-misses":
[info]   90.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-stores":
[info]   246.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:branch-misses":
[info]   41.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:branches":
[info]   23952.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:cycles":
[info]   37697.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.719 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-loads":
[info]   30719.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-stores":
[info]   19709.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-loads":
[info]   0.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:instructions":
[info]   130950.550 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:07:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 123108.163 ops/s
[info] # Warmup Iteration   2: 209836.164 ops/s
[info] # Warmup Iteration   3: 240614.625 ops/s
[info] # Warmup Iteration   4: 237974.201 ops/s
[info] # Warmup Iteration   5: 239076.690 ops/s
[info] Iteration   1: 240778.270 ops/s
[info] Iteration   2: 240695.510 ops/s
[info] Iteration   3: 240247.518 ops/s
[info] Iteration   4: 240099.816 ops/s
[info] Iteration   5: 240543.641 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   240472.951 ±(99.9%) 1119.007 ops/s [Average]
[info]   (min, avg, max) = (240099.816, 240472.951, 240778.270), stdev = 290.602
[info]   CI (99.9%): [239353.945, 241591.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:CPI":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   164.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-loads":
[info]   9680.838 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-stores":
[info]   7351.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-load-misses":
[info]   0.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-loads":
[info]   1.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-store-misses":
[info]   106.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:LLC-stores":
[info]   146.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:branch-misses":
[info]   12.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:branches":
[info]   16334.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:cycles":
[info]   16000.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-loads":
[info]   9849.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-stores":
[info]   7373.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-loads":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:instructions":
[info]   59282.597 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:07:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 248154.450 ops/s
[info] # Warmup Iteration   2: 750230.180 ops/s
[info] # Warmup Iteration   3: 862764.404 ops/s
[info] # Warmup Iteration   4: 846085.825 ops/s
[info] # Warmup Iteration   5: 860836.206 ops/s
[info] Iteration   1: 825901.339 ops/s
[info] Iteration   2: 840273.961 ops/s
[info] Iteration   3: 859753.928 ops/s
[info] Iteration   4: 858589.953 ops/s
[info] Iteration   5: 856717.261 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   848247.288 ±(99.9%) 56920.192 ops/s [Average]
[info]   (min, avg, max) = (825901.339, 848247.288, 859753.928), stdev = 14781.993
[info]   CI (99.9%): [791327.097, 905167.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   20.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   3167.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2220.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   11.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-stores":
[info]   17.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:branch-misses":
[info]   1.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:branches":
[info]   3512.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:cycles":
[info]   4482.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-loads":
[info]   3197.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2242.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:instructions":
[info]   15780.020 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:06:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 538555.508 ops/s
[info] # Warmup Iteration   2: 693940.617 ops/s
[info] # Warmup Iteration   3: 686983.367 ops/s
[info] # Warmup Iteration   4: 685143.389 ops/s
[info] # Warmup Iteration   5: 687601.069 ops/s
[info] Iteration   1: 683323.998 ops/s
[info] Iteration   2: 683759.164 ops/s
[info] Iteration   3: 650792.446 ops/s
[info] Iteration   4: 687644.594 ops/s
[info] Iteration   5: 685496.375 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   678203.315 ±(99.9%) 59366.486 ops/s [Average]
[info]   (min, avg, max) = (650792.446, 678203.315, 687644.594), stdev = 15417.288
[info]   CI (99.9%): [618836.830, 737569.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:CPI":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   20.701 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3324.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2078.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   9.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-stores":
[info]   17.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branches":
[info]   6064.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:cycles":
[info]   5630.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3310.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2038.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:instructions":
[info]   24356.164 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:06:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 520363.268 ops/s
[info] # Warmup Iteration   2: 686876.996 ops/s
[info] # Warmup Iteration   3: 676159.521 ops/s
[info] # Warmup Iteration   4: 676401.145 ops/s
[info] # Warmup Iteration   5: 675387.180 ops/s
[info] Iteration   1: 675515.332 ops/s
[info] Iteration   2: 674779.216 ops/s
[info] Iteration   3: 676591.073 ops/s
[info] Iteration   4: 686848.686 ops/s
[info] Iteration   5: 685325.629 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   679811.987 ±(99.9%) 22293.839 ops/s [Average]
[info]   (min, avg, max) = (674779.216, 679811.987, 686848.686), stdev = 5789.639
[info]   CI (99.9%): [657518.148, 702105.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3231.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2002.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5983.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   5582.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3246.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2022.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   24400.608 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:06:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 117039.048 ops/s
[info] # Warmup Iteration   2: 546627.361 ops/s
[info] # Warmup Iteration   3: 601510.671 ops/s
[info] # Warmup Iteration   4: 600488.407 ops/s
[info] # Warmup Iteration   5: 600435.090 ops/s
[info] Iteration   1: 602894.880 ops/s
[info] Iteration   2: 604151.640 ops/s
[info] Iteration   3: 609033.269 ops/s
[info] Iteration   4: 628788.243 ops/s
[info] Iteration   5: 612448.340 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   611463.274 ±(99.9%) 40105.302 ops/s [Average]
[info]   (min, avg, max) = (602894.880, 611463.274, 628788.243), stdev = 10415.219
[info]   CI (99.9%): [571357.973, 651568.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   62.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-loads":
[info]   3666.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-stores":
[info]   2550.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   1.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-loads":
[info]   0.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-store-misses":
[info]   18.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-stores":
[info]   33.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:branch-misses":
[info]   2.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:branches":
[info]   5504.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:cycles":
[info]   6151.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-loads":
[info]   3726.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-stores":
[info]   2588.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-loads":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:instructions":
[info]   23260.020 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:06:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2749.252 ops/s
[info] # Warmup Iteration   2: 5910.477 ops/s
[info] # Warmup Iteration   3: 7909.556 ops/s
[info] # Warmup Iteration   4: 11903.187 ops/s
[info] # Warmup Iteration   5: 12495.688 ops/s
[info] Iteration   1: 12475.679 ops/s
[info] Iteration   2: 12146.705 ops/s
[info] Iteration   3: 12083.972 ops/s
[info] Iteration   4: 12333.940 ops/s
[info] Iteration   5: 12460.361 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   12300.131 ±(99.9%) 688.550 ops/s [Average]
[info]   (min, avg, max) = (12083.972, 12300.131, 12475.679), stdev = 178.814
[info]   CI (99.9%): [11611.582, 12988.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   3986.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-loads":
[info]   254551.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-stores":
[info]   121578.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   903.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-load-misses":
[info]   19.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-loads":
[info]   163.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-store-misses":
[info]   210.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:LLC-stores":
[info]   598.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:branch-misses":
[info]   154.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:branches":
[info]   195870.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:cycles":
[info]   321357.996 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-load-misses":
[info]   13.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-loads":
[info]   253305.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-store-misses":
[info]   1.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-stores":
[info]   118958.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-load-misses":
[info]   5.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-loads":
[info]   60.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:instructions":
[info]   973490.175 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:06:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1795.241 ops/s
[info] # Warmup Iteration   2: 8493.352 ops/s
[info] # Warmup Iteration   3: 12253.808 ops/s
[info] # Warmup Iteration   4: 12255.914 ops/s
[info] # Warmup Iteration   5: 12246.037 ops/s
[info] Iteration   1: 12247.478 ops/s
[info] Iteration   2: 9696.960 ops/s
[info] Iteration   3: 11501.908 ops/s
[info] Iteration   4: 11656.538 ops/s
[info] Iteration   5: 11838.265 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   11388.230 ±(99.9%) 3795.447 ops/s [Average]
[info]   (min, avg, max) = (9696.960, 11388.230, 12247.478), stdev = 985.666
[info]   CI (99.9%): [7592.783, 15183.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:CPI":
[info]   0.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   6103.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   297979.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   142728.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   4429.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   72.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-loads":
[info]   588.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   313.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-stores":
[info]   821.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:branch-misses":
[info]   606.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:branches":
[info]   229370.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:cycles":
[info]   449014.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   32.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   313921.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   2.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   148835.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   23.852 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   257.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:instructions":
[info]   1157376.502 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:05:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 177853.690 ops/s
[info] # Warmup Iteration   2: 275620.396 ops/s
[info] # Warmup Iteration   3: 331515.807 ops/s
[info] # Warmup Iteration   4: 336418.311 ops/s
[info] # Warmup Iteration   5: 335698.435 ops/s
[info] Iteration   1: 341969.108 ops/s
[info] Iteration   2: 342829.320 ops/s
[info] Iteration   3: 341826.313 ops/s
[info] Iteration   4: 338927.652 ops/s
[info] Iteration   5: 342178.190 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   341546.117 ±(99.9%) 5827.054 ops/s [Average]
[info]   (min, avg, max) = (338927.652, 341546.117, 342829.320), stdev = 1513.268
[info]   CI (99.9%): [335719.063, 347373.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   163.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   6978.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5081.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   5.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   1.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   5.000 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   22.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branch-misses":
[info]   8.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branches":
[info]   11090.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:cycles":
[info]   11306.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   7297.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   5257.744 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:instructions":
[info]   48208.698 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:05:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 894.475 ops/s
[info] # Warmup Iteration   2: 5847.226 ops/s
[info] # Warmup Iteration   3: 7136.914 ops/s
[info] # Warmup Iteration   4: 9482.636 ops/s
[info] # Warmup Iteration   5: 9301.326 ops/s
[info] Iteration   1: 8970.274 ops/s
[info] Iteration   2: 9260.281 ops/s
[info] Iteration   3: 9498.563 ops/s
[info] Iteration   4: 9465.053 ops/s
[info] Iteration   5: 9533.582 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   9345.551 ±(99.9%) 905.418 ops/s [Average]
[info]   (min, avg, max) = (8970.274, 9345.551, 9533.582), stdev = 235.134
[info]   CI (99.9%): [8440.132, 10250.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:CPI":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5278.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   309308.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   153645.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   6062.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   16.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-loads":
[info]   249.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   296.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-stores":
[info]   920.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:branch-misses":
[info]   400.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:branches":
[info]   233095.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:cycles":
[info]   410918.944 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   136.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-loads":
[info]   312807.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-stores":
[info]   157883.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   2.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-loads":
[info]   12.808 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:instructions":
[info]   1207645.031 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 01:05:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7329.715 ops/s
[info] # Warmup Iteration   2: 19064.067 ops/s
[info] # Warmup Iteration   3: 24878.971 ops/s
[info] # Warmup Iteration   4: 29305.425 ops/s
[info] # Warmup Iteration   5: 28281.301 ops/s
[info] Iteration   1: 26527.924 ops/s
[info] Iteration   2: 27115.586 ops/s
[info] Iteration   3: 26023.284 ops/s
[info] Iteration   4: 28057.643 ops/s
[info] Iteration   5: 28304.918 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   27205.871 ±(99.9%) 3752.993 ops/s [Average]
[info]   (min, avg, max) = (26023.284, 27205.871, 28304.918), stdev = 974.640
[info]   CI (99.9%): [23452.878, 30958.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:CPI":
[info]   0.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   3782.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   125327.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   65211.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   978.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-load-misses":
[info]   41.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-loads":
[info]   403.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-store-misses":
[info]   268.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-stores":
[info]   499.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:branch-misses":
[info]   395.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:branches":
[info]   137654.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:cycles":
[info]   215549.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   19.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-loads":
[info]   125515.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   2.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-stores":
[info]   65758.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   3.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-loads":
[info]   92.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:instructions":
[info]   611483.447 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 01:05:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7657.581 ops/s
[info] # Warmup Iteration   2: 21922.750 ops/s
[info] # Warmup Iteration   3: 28132.985 ops/s
[info] # Warmup Iteration   4: 26542.183 ops/s
[info] # Warmup Iteration   5: 29700.087 ops/s
[info] Iteration   1: 29724.818 ops/s
[info] Iteration   2: 31076.759 ops/s
[info] Iteration   3: 31413.788 ops/s
[info] Iteration   4: 31313.692 ops/s
[info] Iteration   5: 31482.165 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   31002.244 ±(99.9%) 2812.593 ops/s [Average]
[info]   (min, avg, max) = (29724.818, 31002.244, 31482.165), stdev = 730.422
[info]   CI (99.9%): [28189.651, 33814.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1845.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   87779.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   45923.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   280.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   16.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   222.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   86.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   187.521 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branch-misses":
[info]   248.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branches":
[info]   89710.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:cycles":
[info]   145315.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   8.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   87544.143 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   46819.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   2.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   29.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:instructions":
[info]   433410.872 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 01:04:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 669196.593 ops/s
[info] # Warmup Iteration   2: 777617.272 ops/s
[info] # Warmup Iteration   3: 804808.501 ops/s
[info] # Warmup Iteration   4: 808568.933 ops/s
[info] # Warmup Iteration   5: 810565.977 ops/s
[info] Iteration   1: 808418.148 ops/s
[info] Iteration   2: 807978.389 ops/s
[info] Iteration   3: 812911.757 ops/s
[info] Iteration   4: 813816.356 ops/s
[info] Iteration   5: 809156.020 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   810456.134 ±(99.9%) 10422.393 ops/s [Average]
[info]   (min, avg, max) = (807978.389, 810456.134, 813816.356), stdev = 2706.662
[info]   CI (99.9%): [800033.741, 820878.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   47.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3563.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3795.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   36.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   48.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branches":
[info]   2364.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:cycles":
[info]   4778.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3445.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3690.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:instructions":
[info]   18309.805 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 01:04:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 812457.166 ops/s
[info] # Warmup Iteration   2: 903344.006 ops/s
[info] # Warmup Iteration   3: 932055.258 ops/s
[info] # Warmup Iteration   4: 930561.045 ops/s
[info] # Warmup Iteration   5: 931059.390 ops/s
[info] Iteration   1: 931562.326 ops/s
[info] Iteration   2: 931145.757 ops/s
[info] Iteration   3: 930650.496 ops/s
[info] Iteration   4: 931140.323 ops/s
[info] Iteration   5: 931118.279 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   931123.436 ±(99.9%) 1243.446 ops/s [Average]
[info]   (min, avg, max) = (930650.496, 931123.436, 931562.326), stdev = 322.919
[info]   CI (99.9%): [929879.990, 932366.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3354.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3586.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2185.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4044.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3394.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3633.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   17168.449 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 01:04:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10993.929 ops/s
[info] # Warmup Iteration   2: 23226.043 ops/s
[info] # Warmup Iteration   3: 28956.493 ops/s
[info] # Warmup Iteration   4: 31550.100 ops/s
[info] # Warmup Iteration   5: 28627.966 ops/s
[info] Iteration   1: 29564.854 ops/s
[info] Iteration   2: 31491.584 ops/s
[info] Iteration   3: 30810.418 ops/s
[info] Iteration   4: 29291.260 ops/s
[info] Iteration   5: 29283.525 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   30088.328 ±(99.9%) 3873.483 ops/s [Average]
[info]   (min, avg, max) = (29283.525, 30088.328, 31491.584), stdev = 1005.931
[info]   CI (99.9%): [26214.845, 33961.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:CPI":
[info]   0.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2847.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   93181.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   49526.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   358.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   20.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-loads":
[info]   139.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   89.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-stores":
[info]   250.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:branch-misses":
[info]   273.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:branches":
[info]   95266.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:cycles":
[info]   154872.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   13.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-loads":
[info]   89982.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-stores":
[info]   47204.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   2.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-loads":
[info]   32.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:instructions":
[info]   454543.367 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 01:04:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13286.538 ops/s
[info] # Warmup Iteration   2: 26407.538 ops/s
[info] # Warmup Iteration   3: 41203.662 ops/s
[info] # Warmup Iteration   4: 48066.044 ops/s
[info] # Warmup Iteration   5: 45059.420 ops/s
[info] Iteration   1: 47613.022 ops/s
[info] Iteration   2: 38938.110 ops/s
[info] Iteration   3: 44582.970 ops/s
[info] Iteration   4: 44744.052 ops/s
[info] Iteration   5: 45956.042 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   44366.839 ±(99.9%) 12584.505 ops/s [Average]
[info]   (min, avg, max) = (38938.110, 44366.839, 47613.022), stdev = 3268.156
[info]   CI (99.9%): [31782.334, 56951.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:CPI":
[info]   0.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-load-misses":
[info]   2302.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-loads":
[info]   94033.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-stores":
[info]   43308.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:L1-icache-load-misses":
[info]   694.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-load-misses":
[info]   32.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-loads":
[info]   196.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-store-misses":
[info]   107.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:LLC-stores":
[info]   263.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:branch-misses":
[info]   227.939 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:branches":
[info]   75422.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:cycles":
[info]   132014.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-load-misses":
[info]   14.626 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-loads":
[info]   94321.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-store-misses":
[info]   1.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:dTLB-stores":
[info]   43055.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:iTLB-load-misses":
[info]   4.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:iTLB-loads":
[info]   53.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:instructions":
[info]   367542.205 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 01:03:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11322.088 ops/s
[info] # Warmup Iteration   2: 37048.588 ops/s
[info] # Warmup Iteration   3: 49833.359 ops/s
[info] # Warmup Iteration   4: 50957.499 ops/s
[info] # Warmup Iteration   5: 38839.507 ops/s
[info] Iteration   1: 43664.845 ops/s
[info] Iteration   2: 41014.396 ops/s
[info] Iteration   3: 40153.113 ops/s
[info] Iteration   4: 41459.800 ops/s
[info] Iteration   5: 41497.547 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   41557.940 ±(99.9%) 4991.490 ops/s [Average]
[info]   (min, avg, max) = (40153.113, 41557.940, 43664.845), stdev = 1296.274
[info]   CI (99.9%): [36566.450, 46549.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:CPI":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1072.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   72598.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   35660.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   216.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-load-misses":
[info]   2.777 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-loads":
[info]   14.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-store-misses":
[info]   7.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-stores":
[info]   119.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:branch-misses":
[info]   41.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:branches":
[info]   59252.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:cycles":
[info]   90724.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   2.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-loads":
[info]   74150.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-stores":
[info]   36040.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-loads":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:instructions":
[info]   288758.272 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 01:03:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 339012.167 ops/s
[info] # Warmup Iteration   2: 491246.628 ops/s
[info] # Warmup Iteration   3: 486292.074 ops/s
[info] # Warmup Iteration   4: 496171.490 ops/s
[info] # Warmup Iteration   5: 498792.181 ops/s
[info] Iteration   1: 500264.129 ops/s
[info] Iteration   2: 502054.906 ops/s
[info] Iteration   3: 503181.512 ops/s
[info] Iteration   4: 504748.182 ops/s
[info] Iteration   5: 535664.844 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   509182.715 ±(99.9%) 57351.638 ops/s [Average]
[info]   (min, avg, max) = (500264.129, 509182.715, 535664.844), stdev = 14894.038
[info]   CI (99.9%): [451831.076, 566534.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:CPI":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   66.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   4009.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   3147.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-stores":
[info]   13.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:branch-misses":
[info]   6.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:branches":
[info]   7297.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:cycles":
[info]   7210.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-loads":
[info]   4102.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-stores":
[info]   3179.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:instructions":
[info]   30884.033 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 01:03:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4609.749 ops/s
[info] # Warmup Iteration   2: 17461.869 ops/s
[info] # Warmup Iteration   3: 20721.789 ops/s
[info] # Warmup Iteration   4: 21563.443 ops/s
[info] # Warmup Iteration   5: 21460.120 ops/s
[info] Iteration   1: 20669.859 ops/s
[info] Iteration   2: 20041.673 ops/s
[info] Iteration   3: 22557.836 ops/s
[info] Iteration   4: 23040.234 ops/s
[info] Iteration   5: 22210.325 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   21703.986 ±(99.9%) 4947.628 ops/s [Average]
[info]   (min, avg, max) = (20041.673, 21703.986, 23040.234), stdev = 1284.883
[info]   CI (99.9%): [16756.357, 26651.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:CPI":
[info]   0.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3917.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-loads":
[info]   157627.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-stores":
[info]   84886.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1214.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-load-misses":
[info]   32.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-loads":
[info]   269.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-store-misses":
[info]   92.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:LLC-stores":
[info]   340.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:branch-misses":
[info]   307.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:branches":
[info]   120127.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:cycles":
[info]   223272.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-load-misses":
[info]   21.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-loads":
[info]   160111.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-stores":
[info]   88655.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-load-misses":
[info]   10.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-loads":
[info]   103.904 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:instructions":
[info]   615565.358 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 01:03:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22541.583 ops/s
[info] # Warmup Iteration   2: 69637.656 ops/s
[info] # Warmup Iteration   3: 63677.458 ops/s
[info] # Warmup Iteration   4: 65686.705 ops/s
[info] # Warmup Iteration   5: 72896.070 ops/s
[info] Iteration   1: 68690.647 ops/s
[info] Iteration   2: 68438.337 ops/s
[info] Iteration   3: 68720.389 ops/s
[info] Iteration   4: 71603.274 ops/s
[info] Iteration   5: 73039.071 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   70098.344 ±(99.9%) 8065.394 ops/s [Average]
[info]   (min, avg, max) = (68438.337, 70098.344, 73039.071), stdev = 2094.557
[info]   CI (99.9%): [62032.949, 78163.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1108.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-loads":
[info]   33738.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-stores":
[info]   21615.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:L1-icache-load-misses":
[info]   8.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-load-misses":
[info]   0.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-loads":
[info]   4.968 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-store-misses":
[info]   136.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:LLC-stores":
[info]   254.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:branch-misses":
[info]   30.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:branches":
[info]   48856.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:cycles":
[info]   52507.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-load-misses":
[info]   2.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-loads":
[info]   34003.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:dTLB-stores":
[info]   21750.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:iTLB-loads":
[info]   0.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:instructions":
[info]   204318.866 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 01:03:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 89230.596 ops/s
[info] # Warmup Iteration   2: 180938.578 ops/s
[info] # Warmup Iteration   3: 184080.194 ops/s
[info] # Warmup Iteration   4: 183626.139 ops/s
[info] # Warmup Iteration   5: 183589.717 ops/s
[info] Iteration   1: 183139.240 ops/s
[info] Iteration   2: 182941.221 ops/s
[info] Iteration   3: 182464.762 ops/s
[info] Iteration   4: 182692.008 ops/s
[info] Iteration   5: 183156.564 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   182878.759 ±(99.9%) 1147.460 ops/s [Average]
[info]   (min, avg, max) = (182464.762, 182878.759, 183156.564), stdev = 297.992
[info]   CI (99.9%): [181731.299, 184026.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   203.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   12082.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   7473.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   2.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-loads":
[info]   2.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   15.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-stores":
[info]   42.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:branch-misses":
[info]   12.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:branches":
[info]   16536.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:cycles":
[info]   19869.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-loads":
[info]   12152.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-stores":
[info]   7470.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:instructions":
[info]   82007.481 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 01:02:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 762936.967 ops/s
[info] # Warmup Iteration   2: 840049.524 ops/s
[info] # Warmup Iteration   3: 858099.547 ops/s
[info] # Warmup Iteration   4: 857431.346 ops/s
[info] # Warmup Iteration   5: 860329.636 ops/s
[info] Iteration   1: 855823.208 ops/s
[info] Iteration   2: 860750.731 ops/s
[info] Iteration   3: 859098.915 ops/s
[info] Iteration   4: 858484.691 ops/s
[info] Iteration   5: 860000.679 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   858831.645 ±(99.9%) 7278.642 ops/s [Average]
[info]   (min, avg, max) = (855823.208, 858831.645, 860750.731), stdev = 1890.240
[info]   CI (99.9%): [851553.003, 866110.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:CPI":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   28.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3810.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   4054.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   24.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-stores":
[info]   28.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:branch-misses":
[info]   1.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:branches":
[info]   2188.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:cycles":
[info]   4514.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3743.906 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3795.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:instructions":
[info]   16696.762 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 01:02:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 886489.674 ops/s
[info] # Warmup Iteration   2: 977711.477 ops/s
[info] # Warmup Iteration   3: 901646.549 ops/s
[info] # Warmup Iteration   4: 900359.815 ops/s
[info] # Warmup Iteration   5: 901524.870 ops/s
[info] Iteration   1: 902501.758 ops/s
[info] Iteration   2: 903410.201 ops/s
[info] Iteration   3: 905497.799 ops/s
[info] Iteration   4: 906977.751 ops/s
[info] Iteration   5: 907756.729 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   905228.848 ±(99.9%) 8667.301 ops/s [Average]
[info]   (min, avg, max) = (902501.758, 905228.848, 907756.729), stdev = 2250.871
[info]   CI (99.9%): [896561.547, 913896.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3693.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3916.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2111.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4143.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3671.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3939.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   16338.621 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 01:02:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 26645.219 ops/s
[info] # Warmup Iteration   2: 79047.243 ops/s
[info] # Warmup Iteration   3: 76783.175 ops/s
[info] # Warmup Iteration   4: 86478.135 ops/s
[info] # Warmup Iteration   5: 86373.716 ops/s
[info] Iteration   1: 86435.333 ops/s
[info] Iteration   2: 91951.124 ops/s
[info] Iteration   3: 92376.738 ops/s
[info] Iteration   4: 91573.500 ops/s
[info] Iteration   5: 90812.707 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   90629.880 ±(99.9%) 9296.588 ops/s [Average]
[info]   (min, avg, max) = (86435.333, 90629.880, 92376.738), stdev = 2414.294
[info]   CI (99.9%): [81333.292, 99926.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:CPI":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   933.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-loads":
[info]   26964.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-stores":
[info]   16353.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   9.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-load-misses":
[info]   1.582 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-loads":
[info]   5.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-store-misses":
[info]   23.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:LLC-stores":
[info]   96.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:branch-misses":
[info]   14.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:branches":
[info]   34847.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:cycles":
[info]   41368.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-loads":
[info]   27177.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-stores":
[info]   16414.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-loads":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:instructions":
[info]   162367.697 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 01:02:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5718.104 ops/s
[info] # Warmup Iteration   2: 9647.442 ops/s
[info] # Warmup Iteration   3: 14773.819 ops/s
[info] # Warmup Iteration   4: 18403.258 ops/s
[info] # Warmup Iteration   5: 17332.929 ops/s
[info] Iteration   1: 17868.204 ops/s
[info] Iteration   2: 17410.506 ops/s
[info] Iteration   3: 16445.957 ops/s
[info] Iteration   4: 16259.835 ops/s
[info] Iteration   5: 15898.293 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   16776.559 ±(99.9%) 3187.691 ops/s [Average]
[info]   (min, avg, max) = (15898.293, 16776.559, 17868.204), stdev = 827.833
[info]   CI (99.9%): [13588.868, 19964.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:CPI":
[info]   0.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   5096.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-loads":
[info]   213424.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-stores":
[info]   110813.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   2093.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-load-misses":
[info]   60.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-loads":
[info]   509.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-store-misses":
[info]   149.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:LLC-stores":
[info]   455.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:branch-misses":
[info]   450.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:branches":
[info]   157653.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:cycles":
[info]   317003.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-load-misses":
[info]   35.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-loads":
[info]   210936.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-store-misses":
[info]   2.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:dTLB-stores":
[info]   112281.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:iTLB-load-misses":
[info]   11.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:iTLB-loads":
[info]   159.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:instructions":
[info]   821967.396 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 01:01:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4282.754 ops/s
[info] # Warmup Iteration   2: 12658.357 ops/s
[info] # Warmup Iteration   3: 17508.260 ops/s
[info] # Warmup Iteration   4: 17623.418 ops/s
[info] # Warmup Iteration   5: 19158.557 ops/s
[info] Iteration   1: 19142.016 ops/s
[info] Iteration   2: 17928.409 ops/s
[info] Iteration   3: 16053.954 ops/s
[info] Iteration   4: 17176.360 ops/s
[info] Iteration   5: 18146.176 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   17689.383 ±(99.9%) 4438.172 ops/s [Average]
[info]   (min, avg, max) = (16053.954, 17689.383, 19142.016), stdev = 1152.579
[info]   CI (99.9%): [13251.211, 22127.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:CPI":
[info]   0.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   3770.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   192613.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   91899.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2634.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   33.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-loads":
[info]   315.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   66.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-stores":
[info]   391.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:branch-misses":
[info]   261.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:branches":
[info]   147714.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:cycles":
[info]   272724.398 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   16.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   195186.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   1.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   94898.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   7.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   143.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:instructions":
[info]   737307.218 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 01:01:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 514869.236 ops/s
[info] # Warmup Iteration   2: 697796.440 ops/s
[info] # Warmup Iteration   3: 810796.159 ops/s
[info] # Warmup Iteration   4: 778541.908 ops/s
[info] # Warmup Iteration   5: 771839.042 ops/s
[info] Iteration   1: 819004.195 ops/s
[info] Iteration   2: 826398.778 ops/s
[info] Iteration   3: 812435.840 ops/s
[info] Iteration   4: 785866.118 ops/s
[info] Iteration   5: 808523.281 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   810445.642 ±(99.9%) 59015.460 ops/s [Average]
[info]   (min, avg, max) = (785866.118, 810445.642, 826398.778), stdev = 15326.128
[info]   CI (99.9%): [751430.182, 869461.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   66.646 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   3185.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2750.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.458 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   14.159 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:branch-misses":
[info]   0.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:branches":
[info]   4993.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:cycles":
[info]   4656.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   3197.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   2722.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:instructions":
[info]   20839.063 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 01:01:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2199.908 ops/s
[info] # Warmup Iteration   2: 7498.595 ops/s
[info] # Warmup Iteration   3: 11293.269 ops/s
[info] # Warmup Iteration   4: 14026.399 ops/s
[info] # Warmup Iteration   5: 14221.659 ops/s
[info] Iteration   1: 14005.440 ops/s
[info] Iteration   2: 14247.931 ops/s
[info] Iteration   3: 14335.787 ops/s
[info] Iteration   4: 13475.315 ops/s
[info] Iteration   5: 11681.877 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   13549.270 ±(99.9%) 4221.444 ops/s [Average]
[info]   (min, avg, max) = (11681.877, 13549.270, 14335.787), stdev = 1096.295
[info]   CI (99.9%): [9327.826, 17770.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:CPI":
[info]   0.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5567.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   241191.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   137344.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   2274.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   43.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-loads":
[info]   471.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   143.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:LLC-stores":
[info]   720.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:branch-misses":
[info]   440.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:branches":
[info]   176228.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:cycles":
[info]   345401.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   32.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-loads":
[info]   241028.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-stores":
[info]   136677.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   16.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-loads":
[info]   165.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:instructions":
[info]   943458.758 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 01:01:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6874.037 ops/s
[info] # Warmup Iteration   2: 27699.062 ops/s
[info] # Warmup Iteration   3: 35284.450 ops/s
[info] # Warmup Iteration   4: 46243.201 ops/s
[info] # Warmup Iteration   5: 43230.564 ops/s
[info] Iteration   1: 42946.718 ops/s
[info] Iteration   2: 43435.314 ops/s
[info] Iteration   3: 46202.256 ops/s
[info] Iteration   4: 45506.630 ops/s
[info] Iteration   5: 45710.735 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   44760.330 ±(99.9%) 5640.976 ops/s [Average]
[info]   (min, avg, max) = (42946.718, 44760.330, 46202.256), stdev = 1464.944
[info]   CI (99.9%): [39119.354, 50401.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:CPI":
[info]   0.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2632.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   71711.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   38592.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   394.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-load-misses":
[info]   31.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-loads":
[info]   278.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-store-misses":
[info]   150.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:LLC-stores":
[info]   302.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:branch-misses":
[info]   235.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:branches":
[info]   75090.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:cycles":
[info]   122949.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   13.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-loads":
[info]   72255.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:dTLB-stores":
[info]   39401.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   1.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:iTLB-loads":
[info]   37.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:instructions":
[info]   346739.188 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 01:00:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7021.584 ops/s
[info] # Warmup Iteration   2: 33238.304 ops/s
[info] # Warmup Iteration   3: 39857.273 ops/s
[info] # Warmup Iteration   4: 39697.236 ops/s
[info] # Warmup Iteration   5: 47904.593 ops/s
[info] Iteration   1: 49916.317 ops/s
[info] Iteration   2: 50064.931 ops/s
[info] Iteration   3: 55812.643 ops/s
[info] Iteration   4: 57420.787 ops/s
[info] Iteration   5: 57119.289 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   54066.793 ±(99.9%) 14517.534 ops/s [Average]
[info]   (min, avg, max) = (49916.317, 54066.793, 57420.787), stdev = 3770.158
[info]   CI (99.9%): [39549.259, 68584.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:CPI":
[info]   0.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1420.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   54274.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   29448.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   268.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   16.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   143.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   36.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   139.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:branch-misses":
[info]   219.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:branches":
[info]   51960.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:cycles":
[info]   96985.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   8.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   54583.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   28932.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   19.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:instructions":
[info]   251812.693 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 01:00:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 868166.869 ops/s
[info] # Warmup Iteration   2: 1008762.290 ops/s
[info] # Warmup Iteration   3: 1040335.382 ops/s
[info] # Warmup Iteration   4: 1047811.101 ops/s
[info] # Warmup Iteration   5: 1047036.696 ops/s
[info] Iteration   1: 1043584.599 ops/s
[info] Iteration   2: 1044054.679 ops/s
[info] Iteration   3: 1032038.879 ops/s
[info] Iteration   4: 1039817.968 ops/s
[info] Iteration   5: 1033333.763 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1038565.978 ±(99.9%) 21685.225 ops/s [Average]
[info]   (min, avg, max) = (1032038.879, 1038565.978, 1044054.679), stdev = 5631.584
[info]   CI (99.9%): [1016880.753, 1060251.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   24.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3170.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3308.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   16.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   21.746 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   1.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:branches":
[info]   2009.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:cycles":
[info]   3762.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3306.679 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3403.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:instructions":
[info]   13369.289 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 01:00:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 964237.898 ops/s
[info] # Warmup Iteration   2: 1070286.313 ops/s
[info] # Warmup Iteration   3: 1099457.972 ops/s
[info] # Warmup Iteration   4: 1099397.038 ops/s
[info] # Warmup Iteration   5: 1099238.458 ops/s
[info] Iteration   1: 1099683.421 ops/s
[info] Iteration   2: 1099803.003 ops/s
[info] Iteration   3: 1099557.663 ops/s
[info] Iteration   4: 1100152.619 ops/s
[info] Iteration   5: 1100172.682 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1099873.878 ±(99.9%) 1068.977 ops/s [Average]
[info]   (min, avg, max) = (1099557.663, 1099873.878, 1100172.682), stdev = 277.610
[info]   CI (99.9%): [1098804.900, 1100942.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3086.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3198.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1936.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   3434.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3124.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3237.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   12916.955 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 01:00:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1878.127 ops/s
[info] # Warmup Iteration   2: 3512.160 ops/s
[info] # Warmup Iteration   3: 3274.135 ops/s
[info] # Warmup Iteration   4: 3044.824 ops/s
[info] # Warmup Iteration   5: 2962.237 ops/s
[info] Iteration   1: 3485.863 ops/s
[info] Iteration   2: 4161.007 ops/s
[info] Iteration   3: 4160.602 ops/s
[info] Iteration   4: 4177.181 ops/s
[info] Iteration   5: 4162.729 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   4029.476 ±(99.9%) 1170.466 ops/s [Average]
[info]   (min, avg, max) = (3485.863, 4029.476, 4177.181), stdev = 303.966
[info]   CI (99.9%): [2859.010, 5199.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:CPI":
[info]   0.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   41654.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   960192.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   420003.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   3896.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   349.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-loads":
[info]   2295.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   341.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:LLC-stores":
[info]   1007.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:branch-misses":
[info]   1824.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:branches":
[info]   501680.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:cycles":
[info]   1230800.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   139.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-loads":
[info]   950049.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   5.996 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-stores":
[info]   413238.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   18.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-loads":
[info]   804.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:instructions":
[info]   2759279.748 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 01:00:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 43017.711 ops/s
[info] # Warmup Iteration   2: 133510.031 ops/s
[info] # Warmup Iteration   3: 141837.997 ops/s
[info] # Warmup Iteration   4: 126221.428 ops/s
[info] # Warmup Iteration   5: 130139.500 ops/s
[info] Iteration   1: 126243.514 ops/s
[info] Iteration   2: 140905.031 ops/s
[info] Iteration   3: 140919.903 ops/s
[info] Iteration   4: 139207.287 ops/s
[info] Iteration   5: 138614.930 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   137178.133 ±(99.9%) 23864.547 ops/s [Average]
[info]   (min, avg, max) = (126243.514, 137178.133, 140919.903), stdev = 6197.547
[info]   CI (99.9%): [113313.586, 161042.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-dcache-load-misses":
[info]   487.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-dcache-loads":
[info]   14445.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-dcache-stores":
[info]   8652.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:L1-icache-load-misses":
[info]   58.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-load-misses":
[info]   2.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-loads":
[info]   14.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-store-misses":
[info]   59.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:LLC-stores":
[info]   122.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:branch-misses":
[info]   20.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:branches":
[info]   23183.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:cycles":
[info]   30260.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-load-misses":
[info]   1.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-loads":
[info]   14499.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-store-misses":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:dTLB-stores":
[info]   8745.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:iTLB-load-misses":
[info]   0.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:iTLB-loads":
[info]   4.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:instructions":
[info]   106541.193 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:59:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.886 ops/s
[info] # Warmup Iteration   2: 373849.651 ops/s
[info] # Warmup Iteration   3: 396043.031 ops/s
[info] # Warmup Iteration   4: 397933.984 ops/s
[info] # Warmup Iteration   5: 400300.800 ops/s
[info] Iteration   1: 400168.040 ops/s
[info] Iteration   2: 402179.383 ops/s
[info] Iteration   3: 403694.769 ops/s
[info] Iteration   4: 397601.318 ops/s
[info] Iteration   5: 396172.714 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   399963.245 ±(99.9%) 11996.517 ops/s [Average]
[info]   (min, avg, max) = (396172.714, 399963.245, 403694.769), stdev = 3115.457
[info]   CI (99.9%): [387966.728, 411959.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:CPI":
[info]   0.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   55.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   4300.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   2805.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   15.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:LLC-stores":
[info]   27.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:branch-misses":
[info]   9.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:branches":
[info]   10770.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:cycles":
[info]   9668.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-loads":
[info]   4379.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:dTLB-stores":
[info]   2865.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:instructions":
[info]   44687.268 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:59:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 114478.113 ops/s
[info] # Warmup Iteration   2: 250828.575 ops/s
[info] # Warmup Iteration   3: 266489.435 ops/s
[info] # Warmup Iteration   4: 265541.293 ops/s
[info] # Warmup Iteration   5: 265528.218 ops/s
[info] Iteration   1: 264824.231 ops/s
[info] Iteration   2: 263371.085 ops/s
[info] Iteration   3: 266112.805 ops/s
[info] Iteration   4: 265033.175 ops/s
[info] Iteration   5: 265140.837 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   264896.427 ±(99.9%) 3797.276 ops/s [Average]
[info]   (min, avg, max) = (263371.085, 264896.427, 266112.805), stdev = 986.140
[info]   CI (99.9%): [261099.151, 268693.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:CPI":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   55.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   11375.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   7683.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-loads":
[info]   0.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-store-misses":
[info]   13.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:LLC-stores":
[info]   24.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:branch-misses":
[info]   7.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:branches":
[info]   12417.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:cycles":
[info]   14449.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-loads":
[info]   11415.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:dTLB-stores":
[info]   7708.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:instructions":
[info]   58768.442 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:59:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 360604.344 ops/s
[info] # Warmup Iteration   2: 483781.582 ops/s
[info] # Warmup Iteration   3: 489731.190 ops/s
[info] # Warmup Iteration   4: 491644.933 ops/s
[info] # Warmup Iteration   5: 492409.507 ops/s
[info] Iteration   1: 491662.849 ops/s
[info] Iteration   2: 490185.666 ops/s
[info] Iteration   3: 490132.764 ops/s
[info] Iteration   4: 489142.520 ops/s
[info] Iteration   5: 491827.147 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   490590.189 ±(99.9%) 4368.948 ops/s [Average]
[info]   (min, avg, max) = (489142.520, 490590.189, 491827.147), stdev = 1134.602
[info]   CI (99.9%): [486221.241, 494959.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   33.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2894.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2170.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   8.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:LLC-stores":
[info]   16.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:branch-misses":
[info]   5.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:branches":
[info]   8637.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:cycles":
[info]   7867.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-loads":
[info]   2864.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2104.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:instructions":
[info]   36749.081 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:59:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 32310.476 ops/s
[info] # Warmup Iteration   2: 101011.358 ops/s
[info] # Warmup Iteration   3: 103532.275 ops/s
[info] # Warmup Iteration   4: 109173.361 ops/s
[info] # Warmup Iteration   5: 108151.550 ops/s
[info] Iteration   1: 106083.560 ops/s
[info] Iteration   2: 109578.674 ops/s
[info] Iteration   3: 109634.498 ops/s
[info] Iteration   4: 109382.771 ops/s
[info] Iteration   5: 109511.798 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   108838.261 ±(99.9%) 5940.710 ops/s [Average]
[info]   (min, avg, max) = (106083.560, 108838.261, 109634.498), stdev = 1542.784
[info]   CI (99.9%): [102897.550, 114778.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:CPI":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1248.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-dcache-loads":
[info]   26260.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-dcache-stores":
[info]   21620.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   14.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-loads":
[info]   5.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-store-misses":
[info]   84.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:LLC-stores":
[info]   243.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:branch-misses":
[info]   50.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:branches":
[info]   21990.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:cycles":
[info]   35199.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-loads":
[info]   26858.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:dTLB-stores":
[info]   22336.440 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:iTLB-loads":
[info]   0.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:instructions":
[info]   122940.317 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:58:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 90068.789 ops/s
[info] # Warmup Iteration   2: 183659.667 ops/s
[info] # Warmup Iteration   3: 209707.829 ops/s
[info] # Warmup Iteration   4: 212544.762 ops/s
[info] # Warmup Iteration   5: 213200.063 ops/s
[info] Iteration   1: 212630.016 ops/s
[info] Iteration   2: 212856.108 ops/s
[info] Iteration   3: 209019.010 ops/s
[info] Iteration   4: 212419.814 ops/s
[info] Iteration   5: 211785.274 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   211742.044 ±(99.9%) 6059.655 ops/s [Average]
[info]   (min, avg, max) = (209019.010, 211742.044, 212856.108), stdev = 1573.673
[info]   CI (99.9%): [205682.389, 217801.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:CPI":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   220.636 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-dcache-loads":
[info]   9479.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-dcache-stores":
[info]   7587.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-load-misses":
[info]   0.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-loads":
[info]   1.736 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-store-misses":
[info]   120.558 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:LLC-stores":
[info]   169.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:branch-misses":
[info]   15.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:branches":
[info]   11868.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:cycles":
[info]   18041.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-loads":
[info]   9780.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:dTLB-stores":
[info]   7719.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:iTLB-loads":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:instructions":
[info]   64993.488 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:58:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.780 ops/s
[info] # Warmup Iteration   2: 776950.543 ops/s
[info] # Warmup Iteration   3: 925467.749 ops/s
[info] # Warmup Iteration   4: 935796.205 ops/s
[info] # Warmup Iteration   5: 926236.307 ops/s
[info] Iteration   1: 934995.842 ops/s
[info] Iteration   2: 935917.673 ops/s
[info] Iteration   3: 933977.960 ops/s
[info] Iteration   4: 929409.608 ops/s
[info] Iteration   5: 932092.746 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   933278.766 ±(99.9%) 9963.066 ops/s [Average]
[info]   (min, avg, max) = (929409.608, 933278.766, 935917.673), stdev = 2587.377
[info]   CI (99.9%): [923315.699, 943241.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:CPI":
[info]   0.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   21.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   2038.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   2507.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   12.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:LLC-stores":
[info]   18.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:branch-misses":
[info]   1.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:branches":
[info]   2149.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:cycles":
[info]   4122.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   2068.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   2566.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:instructions":
[info]   15444.833 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:58:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 343271.765 ops/s
[info] # Warmup Iteration   2: 583904.167 ops/s
[info] # Warmup Iteration   3: 606854.414 ops/s
[info] # Warmup Iteration   4: 608828.847 ops/s
[info] # Warmup Iteration   5: 607386.969 ops/s
[info] Iteration   1: 607424.221 ops/s
[info] Iteration   2: 609392.034 ops/s
[info] Iteration   3: 604027.449 ops/s
[info] Iteration   4: 605319.603 ops/s
[info] Iteration   5: 607217.699 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   606676.201 ±(99.9%) 7958.069 ops/s [Average]
[info]   (min, avg, max) = (604027.449, 606676.201, 609392.034), stdev = 2066.685
[info]   CI (99.9%): [598718.133, 614634.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:CPI":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   21.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   1959.873 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2211.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   12.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:LLC-stores":
[info]   18.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:branch-misses":
[info]   2.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:branches":
[info]   2756.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:cycles":
[info]   6330.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-loads":
[info]   1959.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2202.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:instructions":
[info]   17137.405 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:58:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 655665.237 ops/s
[info] # Warmup Iteration   2: 768117.896 ops/s
[info] # Warmup Iteration   3: 784739.766 ops/s
[info] # Warmup Iteration   4: 781612.953 ops/s
[info] # Warmup Iteration   5: 781381.691 ops/s
[info] Iteration   1: 787444.137 ops/s
[info] Iteration   2: 786757.783 ops/s
[info] Iteration   3: 786187.608 ops/s
[info] Iteration   4: 788245.412 ops/s
[info] Iteration   5: 791030.541 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   787933.096 ±(99.9%) 7295.644 ops/s [Average]
[info]   (min, avg, max) = (786187.608, 787933.096, 791030.541), stdev = 1894.656
[info]   CI (99.9%): [780637.452, 795228.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   20.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2394.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2368.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   12.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:LLC-stores":
[info]   17.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:branch-misses":
[info]   3.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:branches":
[info]   3482.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:cycles":
[info]   4866.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2404.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2316.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:instructions":
[info]   19993.996 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:57:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 695233.698 ops/s
[info] # Warmup Iteration   2: 754476.771 ops/s
[info] # Warmup Iteration   3: 815846.708 ops/s
[info] # Warmup Iteration   4: 833195.295 ops/s
[info] # Warmup Iteration   5: 830335.327 ops/s
[info] Iteration   1: 832786.013 ops/s
[info] Iteration   2: 833808.930 ops/s
[info] Iteration   3: 833757.629 ops/s
[info] Iteration   4: 833058.409 ops/s
[info] Iteration   5: 821078.070 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   830897.810 ±(99.9%) 21206.001 ops/s [Average]
[info]   (min, avg, max) = (821078.070, 830897.810, 833808.930), stdev = 5507.131
[info]   CI (99.9%): [809691.809, 852103.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2358.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   2339.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   3.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   3430.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4590.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2356.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2327.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   19702.207 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:57:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13600.806 ops/s
[info] # Warmup Iteration   2: 31977.894 ops/s
[info] # Warmup Iteration   3: 34129.393 ops/s
[info] # Warmup Iteration   4: 33169.590 ops/s
[info] # Warmup Iteration   5: 33560.563 ops/s
[info] Iteration   1: 34856.880 ops/s
[info] Iteration   2: 34181.341 ops/s
[info] Iteration   3: 34695.596 ops/s
[info] Iteration   4: 36302.569 ops/s
[info] Iteration   5: 36183.599 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   35243.997 ±(99.9%) 3644.542 ops/s [Average]
[info]   (min, avg, max) = (34181.341, 35243.997, 36302.569), stdev = 946.476
[info]   CI (99.9%): [31599.455, 38888.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:CPI":
[info]   0.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1483.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-dcache-loads":
[info]   51781.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-dcache-stores":
[info]   29684.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   75.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-load-misses":
[info]   2.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-loads":
[info]   34.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-store-misses":
[info]   42.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:LLC-stores":
[info]   184.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:branch-misses":
[info]   154.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:branches":
[info]   68205.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:cycles":
[info]   111444.679 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-loads":
[info]   52802.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:dTLB-stores":
[info]   30330.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:iTLB-loads":
[info]   5.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:instructions":
[info]   335621.496 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:57:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4048.979 ops/s
[info] # Warmup Iteration   2: 6862.724 ops/s
[info] # Warmup Iteration   3: 8089.634 ops/s
[info] # Warmup Iteration   4: 8617.749 ops/s
[info] # Warmup Iteration   5: 8634.545 ops/s
[info] Iteration   1: 8696.079 ops/s
[info] Iteration   2: 9083.498 ops/s
[info] Iteration   3: 9094.535 ops/s
[info] Iteration   4: 8701.483 ops/s
[info] Iteration   5: 9072.782 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8929.675 ±(99.9%) 812.200 ops/s [Average]
[info]   (min, avg, max) = (8696.079, 8929.675, 9094.535), stdev = 210.926
[info]   CI (99.9%): [8117.475, 9741.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:CPI":
[info]   0.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   4777.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-loads":
[info]   324362.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-stores":
[info]   145829.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   5601.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-load-misses":
[info]   25.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-loads":
[info]   228.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-store-misses":
[info]   206.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-stores":
[info]   774.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:branch-misses":
[info]   196.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:branches":
[info]   278686.803 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:cycles":
[info]   443565.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-load-misses":
[info]   13.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-loads":
[info]   323778.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-store-misses":
[info]   1.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-stores":
[info]   147716.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-load-misses":
[info]   2.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-loads":
[info]   30.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:instructions":
[info]   1348325.746 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:57:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2357.169 ops/s
[info] # Warmup Iteration   2: 7847.377 ops/s
[info] # Warmup Iteration   3: 8665.573 ops/s
[info] # Warmup Iteration   4: 8771.335 ops/s
[info] # Warmup Iteration   5: 8997.649 ops/s
[info] Iteration   1: 9244.298 ops/s
[info] Iteration   2: 9236.809 ops/s
[info] Iteration   3: 9193.190 ops/s
[info] Iteration   4: 9208.570 ops/s
[info] Iteration   5: 9198.682 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   9216.310 ±(99.9%) 88.412 ops/s [Average]
[info]   (min, avg, max) = (9193.190, 9216.310, 9244.298), stdev = 22.960
[info]   CI (99.9%): [9127.898, 9304.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:CPI":
[info]   0.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4154.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   307589.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   133128.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2532.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   12.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-loads":
[info]   129.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   156.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-stores":
[info]   639.771 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branch-misses":
[info]   130.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branches":
[info]   258309.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:cycles":
[info]   416218.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   3.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   308411.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   132915.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   3.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   4.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:instructions":
[info]   1234031.045 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:56:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 132219.833 ops/s
[info] # Warmup Iteration   2: 177219.387 ops/s
[info] # Warmup Iteration   3: 194968.950 ops/s
[info] # Warmup Iteration   4: 196107.423 ops/s
[info] # Warmup Iteration   5: 195973.142 ops/s
[info] Iteration   1: 196749.652 ops/s
[info] Iteration   2: 198048.980 ops/s
[info] Iteration   3: 198096.958 ops/s
[info] Iteration   4: 200134.907 ops/s
[info] Iteration   5: 194515.494 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   197509.198 ±(99.9%) 7954.713 ops/s [Average]
[info]   (min, avg, max) = (194515.494, 197509.198, 200134.907), stdev = 2065.814
[info]   CI (99.9%): [189554.485, 205463.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   261.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   12451.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   9052.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   5.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   2.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   6.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   60.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branch-misses":
[info]   11.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branches":
[info]   17168.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:cycles":
[info]   19273.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   12313.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   9035.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:instructions":
[info]   77647.925 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:56:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1499.135 ops/s
[info] # Warmup Iteration   2: 5179.071 ops/s
[info] # Warmup Iteration   3: 7479.163 ops/s
[info] # Warmup Iteration   4: 9000.704 ops/s
[info] # Warmup Iteration   5: 8925.921 ops/s
[info] Iteration   1: 8944.488 ops/s
[info] Iteration   2: 8513.650 ops/s
[info] Iteration   3: 9013.929 ops/s
[info] Iteration   4: 8595.254 ops/s
[info] Iteration   5: 8843.948 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   8782.254 ±(99.9%) 841.250 ops/s [Average]
[info]   (min, avg, max) = (8513.650, 8782.254, 9013.929), stdev = 218.470
[info]   CI (99.9%): [7941.004, 9623.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:CPI":
[info]   0.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5932.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   332592.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   146454.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   5848.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   40.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-loads":
[info]   390.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   259.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-stores":
[info]   885.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:branch-misses":
[info]   382.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:branches":
[info]   273474.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:cycles":
[info]   470675.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   19.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-loads":
[info]   340874.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-stores":
[info]   152969.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   13.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-loads":
[info]   100.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:instructions":
[info]   1354363.998 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:56:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5985.725 ops/s
[info] # Warmup Iteration   2: 14884.755 ops/s
[info] # Warmup Iteration   3: 16720.313 ops/s
[info] # Warmup Iteration   4: 23934.865 ops/s
[info] # Warmup Iteration   5: 24727.640 ops/s
[info] Iteration   1: 24061.183 ops/s
[info] Iteration   2: 22341.786 ops/s
[info] Iteration   3: 21470.879 ops/s
[info] Iteration   4: 21276.843 ops/s
[info] Iteration   5: 21520.526 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   22134.243 ±(99.9%) 4435.771 ops/s [Average]
[info]   (min, avg, max) = (21276.843, 22134.243, 24061.183), stdev = 1151.956
[info]   CI (99.9%): [17698.472, 26570.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:CPI":
[info]   0.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   5779.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   165558.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   80288.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   1486.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-load-misses":
[info]   60.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-loads":
[info]   697.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-store-misses":
[info]   363.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-stores":
[info]   714.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:branch-misses":
[info]   548.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:branches":
[info]   172071.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:cycles":
[info]   288357.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   26.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-loads":
[info]   167814.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   4.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-stores":
[info]   82727.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   6.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-loads":
[info]   189.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:instructions":
[info]   776216.125 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:56:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7308.673 ops/s
[info] # Warmup Iteration   2: 16673.870 ops/s
[info] # Warmup Iteration   3: 17799.243 ops/s
[info] # Warmup Iteration   4: 23626.475 ops/s
[info] # Warmup Iteration   5: 24314.865 ops/s
[info] Iteration   1: 23971.965 ops/s
[info] Iteration   2: 23425.317 ops/s
[info] Iteration   3: 25069.082 ops/s
[info] Iteration   4: 26219.084 ops/s
[info] Iteration   5: 24735.734 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   24684.236 ±(99.9%) 4128.782 ops/s [Average]
[info]   (min, avg, max) = (23425.317, 24684.236, 26219.084), stdev = 1072.232
[info]   CI (99.9%): [20555.454, 28813.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:CPI":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   2920.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   122527.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   62816.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   711.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   31.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   260.293 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   127.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   331.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branch-misses":
[info]   377.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branches":
[info]   117591.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:cycles":
[info]   204467.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   17.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   125184.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   65219.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   7.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   75.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:instructions":
[info]   578037.528 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:56:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 431733.400 ops/s
[info] # Warmup Iteration   2: 519736.234 ops/s
[info] # Warmup Iteration   3: 539993.814 ops/s
[info] # Warmup Iteration   4: 541892.060 ops/s
[info] # Warmup Iteration   5: 543918.453 ops/s
[info] Iteration   1: 541221.209 ops/s
[info] Iteration   2: 520812.661 ops/s
[info] Iteration   3: 519012.021 ops/s
[info] Iteration   4: 521614.788 ops/s
[info] Iteration   5: 520481.104 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   524628.357 ±(99.9%) 35901.283 ops/s [Average]
[info]   (min, avg, max) = (519012.021, 524628.357, 541221.209), stdev = 9323.449
[info]   CI (99.9%): [488727.074, 560529.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   73.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   4812.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5364.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   5.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   47.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   66.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   3.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branches":
[info]   3328.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:cycles":
[info]   7184.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   4957.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5555.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:instructions":
[info]   26080.378 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:55:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 508205.450 ops/s
[info] # Warmup Iteration   2: 614723.644 ops/s
[info] # Warmup Iteration   3: 611636.910 ops/s
[info] # Warmup Iteration   4: 611801.528 ops/s
[info] # Warmup Iteration   5: 612361.769 ops/s
[info] Iteration   1: 612342.836 ops/s
[info] Iteration   2: 612340.929 ops/s
[info] Iteration   3: 612690.292 ops/s
[info] Iteration   4: 611955.373 ops/s
[info] Iteration   5: 611143.110 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   612094.508 ±(99.9%) 2279.589 ops/s [Average]
[info]   (min, avg, max) = (611143.110, 612094.508, 612690.292), stdev = 592.002
[info]   CI (99.9%): [609814.919, 614374.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   24.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   4644.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5202.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   3195.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   6173.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   4628.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5177.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   25520.196 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:55:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6806.053 ops/s
[info] # Warmup Iteration   2: 14746.147 ops/s
[info] # Warmup Iteration   3: 17066.793 ops/s
[info] # Warmup Iteration   4: 22264.998 ops/s
[info] # Warmup Iteration   5: 25901.344 ops/s
[info] Iteration   1: 25325.300 ops/s
[info] Iteration   2: 24410.494 ops/s
[info] Iteration   3: 23303.040 ops/s
[info] Iteration   4: 25240.310 ops/s
[info] Iteration   5: 25473.793 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   24750.587 ±(99.9%) 3499.749 ops/s [Average]
[info]   (min, avg, max) = (23303.040, 24750.587, 25473.793), stdev = 908.874
[info]   CI (99.9%): [21250.838, 28250.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:CPI":
[info]   0.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   3986.664 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   130221.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   64920.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   954.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   44.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-loads":
[info]   413.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   145.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-stores":
[info]   357.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:branch-misses":
[info]   458.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:branches":
[info]   121711.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:cycles":
[info]   226896.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   22.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-loads":
[info]   131742.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   1.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-stores":
[info]   65013.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   7.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-loads":
[info]   95.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:instructions":
[info]   596800.769 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:55:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2461.792 ops/s
[info] # Warmup Iteration   2: 8049.493 ops/s
[info] # Warmup Iteration   3: 9572.352 ops/s
[info] # Warmup Iteration   4: 13182.662 ops/s
[info] # Warmup Iteration   5: 13172.051 ops/s
[info] Iteration   1: 12765.861 ops/s
[info] Iteration   2: 12430.257 ops/s
[info] Iteration   3: 13225.375 ops/s
[info] Iteration   4: 13539.253 ops/s
[info] Iteration   5: 12972.562 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   12986.662 ±(99.9%) 1634.688 ops/s [Average]
[info]   (min, avg, max) = (12430.257, 12986.662, 13539.253), stdev = 424.523
[info]   CI (99.9%): [11351.974, 14621.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:CPI":
[info]   0.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   5274.526 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-loads":
[info]   249470.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-stores":
[info]   126995.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   3487.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-load-misses":
[info]   47.909 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-loads":
[info]   506.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-store-misses":
[info]   142.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:LLC-stores":
[info]   586.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:branch-misses":
[info]   435.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:branches":
[info]   191507.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:cycles":
[info]   369559.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-load-misses":
[info]   35.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-loads":
[info]   253088.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-store-misses":
[info]   1.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:dTLB-stores":
[info]   125894.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:iTLB-load-misses":
[info]   19.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:iTLB-loads":
[info]   201.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:instructions":
[info]   965123.658 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:55:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3427.413 ops/s
[info] # Warmup Iteration   2: 9823.524 ops/s
[info] # Warmup Iteration   3: 12318.545 ops/s
[info] # Warmup Iteration   4: 14197.932 ops/s
[info] # Warmup Iteration   5: 13531.036 ops/s
[info] Iteration   1: 13657.612 ops/s
[info] Iteration   2: 14068.095 ops/s
[info] Iteration   3: 13920.650 ops/s
[info] Iteration   4: 13119.686 ops/s
[info] Iteration   5: 13371.937 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13627.596 ±(99.9%) 1496.503 ops/s [Average]
[info]   (min, avg, max) = (13119.686, 13627.596, 14068.095), stdev = 388.637
[info]   CI (99.9%): [12131.093, 15124.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:CPI":
[info]   0.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4410.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   238342.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   120374.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   6058.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   37.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-loads":
[info]   347.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   125.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-stores":
[info]   620.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:branch-misses":
[info]   316.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:branches":
[info]   183225.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:cycles":
[info]   344995.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   17.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   245314.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   1.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   120577.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   9.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   139.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:instructions":
[info]   930087.105 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:54:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 164783.624 ops/s
[info] # Warmup Iteration   2: 249558.279 ops/s
[info] # Warmup Iteration   3: 337410.326 ops/s
[info] # Warmup Iteration   4: 326860.088 ops/s
[info] # Warmup Iteration   5: 326007.876 ops/s
[info] Iteration   1: 325234.593 ops/s
[info] Iteration   2: 326619.407 ops/s
[info] Iteration   3: 326960.512 ops/s
[info] Iteration   4: 327047.812 ops/s
[info] Iteration   5: 328339.788 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   326840.422 ±(99.9%) 4276.236 ops/s [Average]
[info]   (min, avg, max) = (325234.593, 326840.422, 328339.788), stdev = 1110.525
[info]   CI (99.9%): [322564.186, 331116.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:CPI":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   118.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   7525.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   4921.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   2.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   5.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   21.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:branch-misses":
[info]   3.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:branches":
[info]   9980.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:cycles":
[info]   11071.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   7811.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   5159.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:instructions":
[info]   44952.358 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:54:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1799.329 ops/s
[info] # Warmup Iteration   2: 8508.667 ops/s
[info] # Warmup Iteration   3: 9413.475 ops/s
[info] # Warmup Iteration   4: 12959.526 ops/s
[info] # Warmup Iteration   5: 13088.337 ops/s
[info] Iteration   1: 13116.419 ops/s
[info] Iteration   2: 13011.703 ops/s
[info] Iteration   3: 13103.033 ops/s
[info] Iteration   4: 12596.275 ops/s
[info] Iteration   5: 12202.072 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   12805.900 ±(99.9%) 1534.973 ops/s [Average]
[info]   (min, avg, max) = (12202.072, 12805.900, 13116.419), stdev = 398.628
[info]   CI (99.9%): [11270.928, 14340.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:CPI":
[info]   0.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   4774.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   228803.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   112469.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1964.874 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   31.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-loads":
[info]   287.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   135.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-stores":
[info]   645.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:branch-misses":
[info]   217.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:branches":
[info]   179496.986 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:cycles":
[info]   317860.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   13.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-loads":
[info]   235254.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-stores":
[info]   118078.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   8.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-loads":
[info]   66.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:instructions":
[info]   908202.422 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:54:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7698.469 ops/s
[info] # Warmup Iteration   2: 24298.903 ops/s
[info] # Warmup Iteration   3: 33541.190 ops/s
[info] # Warmup Iteration   4: 36860.555 ops/s
[info] # Warmup Iteration   5: 33482.863 ops/s
[info] Iteration   1: 33216.650 ops/s
[info] Iteration   2: 33489.717 ops/s
[info] Iteration   3: 34235.712 ops/s
[info] Iteration   4: 36105.789 ops/s
[info] Iteration   5: 35914.489 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   34592.471 ±(99.9%) 5192.694 ops/s [Average]
[info]   (min, avg, max) = (33216.650, 34592.471, 36105.789), stdev = 1348.526
[info]   CI (99.9%): [29399.777, 39785.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:CPI":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   3146.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   97076.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   51325.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   783.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-load-misses":
[info]   32.621 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-loads":
[info]   192.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-store-misses":
[info]   223.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:LLC-stores":
[info]   467.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:branch-misses":
[info]   303.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:branches":
[info]   98884.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:cycles":
[info]   169903.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   17.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-loads":
[info]   99945.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   1.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-stores":
[info]   51679.771 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   2.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-loads":
[info]   57.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:instructions":
[info]   460825.776 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:54:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 50228.337 ops/s
[info] # Warmup Iteration   2: 108419.047 ops/s
[info] # Warmup Iteration   3: 121601.692 ops/s
[info] # Warmup Iteration   4: 125772.998 ops/s
[info] # Warmup Iteration   5: 123088.447 ops/s
[info] Iteration   1: 119520.300 ops/s
[info] Iteration   2: 121157.494 ops/s
[info] Iteration   3: 123381.427 ops/s
[info] Iteration   4: 124231.031 ops/s
[info] Iteration   5: 125998.889 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   122857.828 ±(99.9%) 9827.885 ops/s [Average]
[info]   (min, avg, max) = (119520.300, 122857.828, 125998.889), stdev = 2552.270
[info]   CI (99.9%): [113029.944, 132685.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   598.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   19318.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   12661.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   4.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   2.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   69.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   134.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:branch-misses":
[info]   97.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:branches":
[info]   22350.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:cycles":
[info]   30510.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   1.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   19279.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   12410.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.681 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:instructions":
[info]   111260.533 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:53:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 731253.587 ops/s
[info] # Warmup Iteration   2: 800133.363 ops/s
[info] # Warmup Iteration   3: 831966.155 ops/s
[info] # Warmup Iteration   4: 832210.153 ops/s
[info] # Warmup Iteration   5: 873380.743 ops/s
[info] Iteration   1: 880914.403 ops/s
[info] Iteration   2: 880847.470 ops/s
[info] Iteration   3: 883488.058 ops/s
[info] Iteration   4: 881796.642 ops/s
[info] Iteration   5: 882321.072 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   881873.529 ±(99.9%) 4211.851 ops/s [Average]
[info]   (min, avg, max) = (880847.470, 881873.529, 883488.058), stdev = 1093.804
[info]   CI (99.9%): [877661.678, 886085.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   35.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2820.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3399.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   29.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   36.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   1.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branches":
[info]   2610.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:cycles":
[info]   4318.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2820.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3325.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:instructions":
[info]   17170.545 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:53:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 811588.467 ops/s
[info] # Warmup Iteration   2: 940038.020 ops/s
[info] # Warmup Iteration   3: 958449.972 ops/s
[info] # Warmup Iteration   4: 958190.586 ops/s
[info] # Warmup Iteration   5: 958629.080 ops/s
[info] Iteration   1: 958691.036 ops/s
[info] Iteration   2: 957800.188 ops/s
[info] Iteration   3: 958253.727 ops/s
[info] Iteration   4: 958367.146 ops/s
[info] Iteration   5: 926186.960 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   951859.812 ±(99.9%) 55276.412 ops/s [Average]
[info]   (min, avg, max) = (926186.960, 951859.812, 958691.036), stdev = 14355.109
[info]   CI (99.9%): [896583.400, 1007136.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2760.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3343.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2565.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   3999.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2765.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3364.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   17144.969 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:53:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 28372.576 ops/s
[info] # Warmup Iteration   2: 98211.025 ops/s
[info] # Warmup Iteration   3: 101959.078 ops/s
[info] # Warmup Iteration   4: 120860.341 ops/s
[info] # Warmup Iteration   5: 117768.987 ops/s
[info] Iteration   1: 123740.206 ops/s
[info] Iteration   2: 123928.269 ops/s
[info] Iteration   3: 124294.262 ops/s
[info] Iteration   4: 124180.674 ops/s
[info] Iteration   5: 124115.461 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   124051.774 ±(99.9%) 843.194 ops/s [Average]
[info]   (min, avg, max) = (123740.206, 124051.774, 124294.262), stdev = 218.975
[info]   CI (99.9%): [123208.581, 124894.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:CPI":
[info]   0.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1184.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   19268.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   13776.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   2.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   1.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-loads":
[info]   5.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   70.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-stores":
[info]   160.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:branch-misses":
[info]   94.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:branches":
[info]   22777.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:cycles":
[info]   31608.674 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   1.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-loads":
[info]   18798.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-stores":
[info]   13490.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-loads":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:instructions":
[info]   115704.890 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:53:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7336.697 ops/s
[info] # Warmup Iteration   2: 10034.228 ops/s
[info] # Warmup Iteration   3: 15032.530 ops/s
[info] # Warmup Iteration   4: 17714.214 ops/s
[info] # Warmup Iteration   5: 18718.289 ops/s
[info] Iteration   1: 19726.094 ops/s
[info] Iteration   2: 18073.475 ops/s
[info] Iteration   3: 17261.528 ops/s
[info] Iteration   4: 17348.330 ops/s
[info] Iteration   5: 18061.238 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   18094.133 ±(99.9%) 3809.151 ops/s [Average]
[info]   (min, avg, max) = (17261.528, 18094.133, 19726.094), stdev = 989.224
[info]   CI (99.9%): [14284.983, 21903.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:CPI":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-dcache-load-misses":
[info]   4153.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-dcache-loads":
[info]   226525.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-dcache-stores":
[info]   102874.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:L1-icache-load-misses":
[info]   2532.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-load-misses":
[info]   81.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-loads":
[info]   528.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-store-misses":
[info]   162.673 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:LLC-stores":
[info]   483.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:branch-misses":
[info]   607.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:branches":
[info]   194246.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:cycles":
[info]   317344.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-load-misses":
[info]   37.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-loads":
[info]   226407.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-store-misses":
[info]   2.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:dTLB-stores":
[info]   105016.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:iTLB-load-misses":
[info]   15.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:iTLB-loads":
[info]   212.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:instructions":
[info]   897541.994 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:53:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5252.411 ops/s
[info] # Warmup Iteration   2: 18510.349 ops/s
[info] # Warmup Iteration   3: 20742.409 ops/s
[info] # Warmup Iteration   4: 20156.476 ops/s
[info] # Warmup Iteration   5: 15262.307 ops/s
[info] Iteration   1: 18858.578 ops/s
[info] Iteration   2: 18682.244 ops/s
[info] Iteration   3: 18130.650 ops/s
[info] Iteration   4: 18367.217 ops/s
[info] Iteration   5: 19701.803 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   18748.098 ±(99.9%) 2320.319 ops/s [Average]
[info]   (min, avg, max) = (18130.650, 18748.098, 19701.803), stdev = 602.580
[info]   CI (99.9%): [16427.779, 21068.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:CPI":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   4267.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   216877.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   104571.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2275.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-load-misses":
[info]   87.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-loads":
[info]   488.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-store-misses":
[info]   113.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:LLC-stores":
[info]   380.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:branch-misses":
[info]   506.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:branches":
[info]   180586.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:cycles":
[info]   324260.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   39.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-loads":
[info]   216978.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   2.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-stores":
[info]   106089.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   10.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-loads":
[info]   200.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:instructions":
[info]   857908.068 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:52:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 111872.376 ops/s
[info] # Warmup Iteration   2: 148540.247 ops/s
[info] # Warmup Iteration   3: 167377.808 ops/s
[info] # Warmup Iteration   4: 167431.590 ops/s
[info] # Warmup Iteration   5: 169668.476 ops/s
[info] Iteration   1: 168948.733 ops/s
[info] Iteration   2: 168602.277 ops/s
[info] Iteration   3: 169666.985 ops/s
[info] Iteration   4: 168823.703 ops/s
[info] Iteration   5: 168873.203 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   168982.980 ±(99.9%) 1553.904 ops/s [Average]
[info]   (min, avg, max) = (168602.277, 168982.980, 169666.985), stdev = 403.544
[info]   CI (99.9%): [167429.076, 170536.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   69.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   7980.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   5418.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   2.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-loads":
[info]   1.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   2.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-stores":
[info]   11.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:branch-misses":
[info]   28.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:branches":
[info]   27552.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:cycles":
[info]   22806.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-loads":
[info]   7919.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-stores":
[info]   5276.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:instructions":
[info]   93676.532 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:52:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4840.777 ops/s
[info] # Warmup Iteration   2: 14689.640 ops/s
[info] # Warmup Iteration   3: 16594.092 ops/s
[info] # Warmup Iteration   4: 17265.608 ops/s
[info] # Warmup Iteration   5: 16780.843 ops/s
[info] Iteration   1: 18039.729 ops/s
[info] Iteration   2: 17474.912 ops/s
[info] Iteration   3: 16444.525 ops/s
[info] Iteration   4: 16788.329 ops/s
[info] Iteration   5: 16611.519 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   17071.803 ±(99.9%) 2572.359 ops/s [Average]
[info]   (min, avg, max) = (16444.525, 17071.803, 18039.729), stdev = 668.034
[info]   CI (99.9%): [14499.444, 19644.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:CPI":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3625.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-loads":
[info]   204787.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-stores":
[info]   98991.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1290.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-load-misses":
[info]   26.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-loads":
[info]   270.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-store-misses":
[info]   70.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:LLC-stores":
[info]   377.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:branch-misses":
[info]   462.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:branches":
[info]   170295.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:cycles":
[info]   269662.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-load-misses":
[info]   27.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-loads":
[info]   208123.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:dTLB-stores":
[info]   101269.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:iTLB-load-misses":
[info]   10.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:iTLB-loads":
[info]   89.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:instructions":
[info]   796361.366 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:52:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 27981.062 ops/s
[info] # Warmup Iteration   2: 64230.010 ops/s
[info] # Warmup Iteration   3: 58676.941 ops/s
[info] # Warmup Iteration   4: 62862.972 ops/s
[info] # Warmup Iteration   5: 65826.214 ops/s
[info] Iteration   1: 66006.096 ops/s
[info] Iteration   2: 66289.570 ops/s
[info] Iteration   3: 66246.771 ops/s
[info] Iteration   4: 65641.482 ops/s
[info] Iteration   5: 63956.047 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   65627.993 ±(99.9%) 3732.900 ops/s [Average]
[info]   (min, avg, max) = (63956.047, 65627.993, 66289.570), stdev = 969.422
[info]   CI (99.9%): [61895.093, 69360.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:CPI":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1156.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-loads":
[info]   24863.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-stores":
[info]   17253.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:L1-icache-load-misses":
[info]   14.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-load-misses":
[info]   1.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-loads":
[info]   6.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-store-misses":
[info]   239.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:LLC-stores":
[info]   417.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:branch-misses":
[info]   96.968 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:branches":
[info]   54778.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:cycles":
[info]   58010.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-load-misses":
[info]   3.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-loads":
[info]   25163.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-store-misses":
[info]   1.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:dTLB-stores":
[info]   17360.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:iTLB-loads":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:instructions":
[info]   203193.609 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:52:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 40736.211 ops/s
[info] # Warmup Iteration   2: 88601.187 ops/s
[info] # Warmup Iteration   3: 97304.979 ops/s
[info] # Warmup Iteration   4: 101850.054 ops/s
[info] # Warmup Iteration   5: 101877.639 ops/s
[info] Iteration   1: 101837.547 ops/s
[info] Iteration   2: 101790.151 ops/s
[info] Iteration   3: 101819.082 ops/s
[info] Iteration   4: 98130.977 ops/s
[info] Iteration   5: 101692.956 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   101054.143 ±(99.9%) 6295.993 ops/s [Average]
[info]   (min, avg, max) = (98130.977, 101054.143, 101837.547), stdev = 1635.049
[info]   CI (99.9%): [94758.150, 107350.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:CPI":
[info]   0.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   563.357 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   19033.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   11817.670 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   12.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   1.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-loads":
[info]   6.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   79.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-stores":
[info]   161.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:branch-misses":
[info]   53.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:branches":
[info]   29218.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:cycles":
[info]   37492.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-loads":
[info]   18989.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-stores":
[info]   11989.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:instructions":
[info]   140381.305 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:51:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 233581.461 ops/s
[info] # Warmup Iteration   2: 293081.501 ops/s
[info] # Warmup Iteration   3: 293636.934 ops/s
[info] # Warmup Iteration   4: 291589.684 ops/s
[info] # Warmup Iteration   5: 304266.693 ops/s
[info] Iteration   1: 308012.567 ops/s
[info] Iteration   2: 303097.134 ops/s
[info] Iteration   3: 304321.037 ops/s
[info] Iteration   4: 305113.852 ops/s
[info] Iteration   5: 305023.960 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   305113.710 ±(99.9%) 6970.181 ops/s [Average]
[info]   (min, avg, max) = (303097.134, 305113.710, 308012.567), stdev = 1810.134
[info]   CI (99.9%): [298143.529, 312083.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   53.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   6976.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5800.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   41.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-stores":
[info]   54.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:branch-misses":
[info]   14.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:branches":
[info]   10480.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:cycles":
[info]   12545.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   6931.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5567.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:instructions":
[info]   51407.623 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:51:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 311410.899 ops/s
[info] # Warmup Iteration   2: 366358.199 ops/s
[info] # Warmup Iteration   3: 375276.139 ops/s
[info] # Warmup Iteration   4: 375506.018 ops/s
[info] # Warmup Iteration   5: 374893.876 ops/s
[info] Iteration   1: 375329.328 ops/s
[info] Iteration   2: 384767.651 ops/s
[info] Iteration   3: 390522.781 ops/s
[info] Iteration   4: 390642.209 ops/s
[info] Iteration   5: 390418.571 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   386336.108 ±(99.9%) 25567.414 ops/s [Average]
[info]   (min, avg, max) = (375329.328, 386336.108, 390642.209), stdev = 6639.776
[info]   CI (99.9%): [360768.694, 411903.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   4.454 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3880.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   4823.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   2.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   15.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   10032.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   9835.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3856.884 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   4803.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   43454.624 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:51:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 25826.548 ops/s
[info] # Warmup Iteration   2: 48987.924 ops/s
[info] # Warmup Iteration   3: 69431.615 ops/s
[info] # Warmup Iteration   4: 81648.232 ops/s
[info] # Warmup Iteration   5: 84368.058 ops/s
[info] Iteration   1: 89435.265 ops/s
[info] Iteration   2: 89328.023 ops/s
[info] Iteration   3: 84918.272 ops/s
[info] Iteration   4: 84348.229 ops/s
[info] Iteration   5: 84469.620 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   86499.882 ±(99.9%) 10163.790 ops/s [Average]
[info]   (min, avg, max) = (84348.229, 86499.882, 89435.265), stdev = 2639.504
[info]   CI (99.9%): [76336.092, 96663.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:CPI":
[info]   0.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   960.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-loads":
[info]   22349.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-stores":
[info]   13879.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   14.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-load-misses":
[info]   1.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-loads":
[info]   5.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-store-misses":
[info]   82.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:LLC-stores":
[info]   180.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:branch-misses":
[info]   98.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:branches":
[info]   31920.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:cycles":
[info]   43353.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-loads":
[info]   22464.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:dTLB-stores":
[info]   14148.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:iTLB-loads":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:instructions":
[info]   154272.702 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:51:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 81715.142 ops/s
[info] # Warmup Iteration   2: 196827.562 ops/s
[info] # Warmup Iteration   3: 214243.899 ops/s
[info] # Warmup Iteration   4: 215279.166 ops/s
[info] # Warmup Iteration   5: 209844.468 ops/s
[info] Iteration   1: 216486.911 ops/s
[info] Iteration   2: 217727.755 ops/s
[info] Iteration   3: 214304.132 ops/s
[info] Iteration   4: 213302.784 ops/s
[info] Iteration   5: 217993.316 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   215962.979 ±(99.9%) 8017.208 ops/s [Average]
[info]   (min, avg, max) = (213302.784, 215962.979, 217993.316), stdev = 2082.043
[info]   CI (99.9%): [207945.771, 223980.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-dcache-load-misses":
[info]   342.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-dcache-loads":
[info]   9927.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-dcache-stores":
[info]   6966.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:L1-icache-load-misses":
[info]   7.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-load-misses":
[info]   0.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-loads":
[info]   3.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-store-misses":
[info]   17.952 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:LLC-stores":
[info]   69.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:branch-misses":
[info]   23.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:branches":
[info]   15349.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:cycles":
[info]   17868.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-load-misses":
[info]   0.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-loads":
[info]   10086.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:dTLB-stores":
[info]   7371.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:iTLB-load-misses":
[info]   0.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:iTLB-loads":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:instructions":
[info]   67721.372 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:50:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.932 ops/s
[info] # Warmup Iteration   2: 714975.063 ops/s
[info] # Warmup Iteration   3: 789654.052 ops/s
[info] # Warmup Iteration   4: 824793.363 ops/s
[info] # Warmup Iteration   5: 794603.115 ops/s
[info] Iteration   1: 826078.956 ops/s
[info] Iteration   2: 827567.282 ops/s
[info] Iteration   3: 825273.925 ops/s
[info] Iteration   4: 824570.617 ops/s
[info] Iteration   5: 827549.841 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   826208.124 ±(99.9%) 5172.763 ops/s [Average]
[info]   (min, avg, max) = (824570.617, 826208.124, 827567.282), stdev = 1343.350
[info]   CI (99.9%): [821035.361, 831380.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:CPI":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   15.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   2213.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   1858.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   1.424 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:LLC-stores":
[info]   2.672 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:branch-misses":
[info]   8.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:branches":
[info]   5304.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:cycles":
[info]   4681.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-loads":
[info]   2212.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:dTLB-stores":
[info]   1832.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:instructions":
[info]   21300.633 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:50:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 162942.292 ops/s
[info] # Warmup Iteration   2: 377260.912 ops/s
[info] # Warmup Iteration   3: 402694.742 ops/s
[info] # Warmup Iteration   4: 405886.073 ops/s
[info] # Warmup Iteration   5: 424770.986 ops/s
[info] Iteration   1: 430827.129 ops/s
[info] Iteration   2: 430378.237 ops/s
[info] Iteration   3: 439322.410 ops/s
[info] Iteration   4: 440928.094 ops/s
[info] Iteration   5: 438242.932 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   435939.760 ±(99.9%) 19127.659 ops/s [Average]
[info]   (min, avg, max) = (430378.237, 435939.760, 440928.094), stdev = 4967.392
[info]   CI (99.9%): [416812.102, 455067.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:CPI":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   23.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   7644.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   5719.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-loads":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:LLC-stores":
[info]   5.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:branch-misses":
[info]   2.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:branches":
[info]   8516.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:cycles":
[info]   8700.770 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-loads":
[info]   7711.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:dTLB-stores":
[info]   5748.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:instructions":
[info]   36519.969 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:50:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 592615.161 ops/s
[info] # Warmup Iteration   2: 1003944.247 ops/s
[info] # Warmup Iteration   3: 1072453.694 ops/s
[info] # Warmup Iteration   4: 1073588.698 ops/s
[info] # Warmup Iteration   5: 1077460.957 ops/s
[info] Iteration   1: 1071392.368 ops/s
[info] Iteration   2: 1077770.453 ops/s
[info] Iteration   3: 1072903.841 ops/s
[info] Iteration   4: 1073259.106 ops/s
[info] Iteration   5: 1076643.315 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1074393.817 ±(99.9%) 10364.279 ops/s [Average]
[info]   (min, avg, max) = (1071392.368, 1074393.817, 1077770.453), stdev = 2691.570
[info]   CI (99.9%): [1064029.538, 1084758.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:CPI":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   9.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1360.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1508.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:LLC-stores":
[info]   1.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:branch-misses":
[info]   3.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:branches":
[info]   4145.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:cycles":
[info]   3528.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-loads":
[info]   1338.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:dTLB-stores":
[info]   1466.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:instructions":
[info]   16416.811 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:50:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16472.877 ops/s
[info] # Warmup Iteration   2: 97521.576 ops/s
[info] # Warmup Iteration   3: 104003.565 ops/s
[info] # Warmup Iteration   4: 106517.051 ops/s
[info] # Warmup Iteration   5: 106528.863 ops/s
[info] Iteration   1: 106887.153 ops/s
[info] Iteration   2: 104703.537 ops/s
[info] Iteration   3: 104322.904 ops/s
[info] Iteration   4: 101731.476 ops/s
[info] Iteration   5: 106950.282 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   104919.070 ±(99.9%) 8294.942 ops/s [Average]
[info]   (min, avg, max) = (101731.476, 104919.070, 106950.282), stdev = 2154.170
[info]   CI (99.9%): [96624.129, 113214.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:CPI":
[info]   0.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1170.723 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-dcache-loads":
[info]   26331.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-dcache-stores":
[info]   22798.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   17.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-loads":
[info]   5.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-store-misses":
[info]   69.795 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:LLC-stores":
[info]   233.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:branch-misses":
[info]   66.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:branches":
[info]   17296.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:cycles":
[info]   35798.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-loads":
[info]   26480.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:dTLB-stores":
[info]   22258.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:iTLB-loads":
[info]   0.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:instructions":
[info]   101134.900 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:49:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 153868.537 ops/s
[info] # Warmup Iteration   2: 286970.509 ops/s
[info] # Warmup Iteration   3: 308924.946 ops/s
[info] # Warmup Iteration   4: 310315.403 ops/s
[info] # Warmup Iteration   5: 308920.273 ops/s
[info] Iteration   1: 309407.340 ops/s
[info] Iteration   2: 307781.038 ops/s
[info] Iteration   3: 299155.568 ops/s
[info] Iteration   4: 309334.131 ops/s
[info] Iteration   5: 310740.540 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   307283.723 ±(99.9%) 17955.909 ops/s [Average]
[info]   (min, avg, max) = (299155.568, 307283.723, 310740.540), stdev = 4663.093
[info]   CI (99.9%): [289327.814, 325239.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   147.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-dcache-loads":
[info]   7342.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-dcache-stores":
[info]   6498.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.602 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-load-misses":
[info]   0.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-loads":
[info]   1.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-store-misses":
[info]   49.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:LLC-stores":
[info]   90.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:branch-misses":
[info]   24.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:branches":
[info]   7661.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:cycles":
[info]   12217.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-loads":
[info]   7480.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:dTLB-stores":
[info]   6555.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:iTLB-loads":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:instructions":
[info]   40746.274 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:49:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.837 ops/s
[info] # Warmup Iteration   2: 1844202.425 ops/s
[info] # Warmup Iteration   3: 1825445.388 ops/s
[info] # Warmup Iteration   4: 2031764.499 ops/s
[info] # Warmup Iteration   5: 2031625.888 ops/s
[info] Iteration   1: 2031153.767 ops/s
[info] Iteration   2: 1903250.139 ops/s
[info] Iteration   3: 2006920.302 ops/s
[info] Iteration   4: 2025951.907 ops/s
[info] Iteration   5: 2028951.503 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1999245.524 ±(99.9%) 209920.390 ops/s [Average]
[info]   (min, avg, max) = (1903250.139, 1999245.524, 2031153.767), stdev = 54515.659
[info]   CI (99.9%): [1789325.133, 2209165.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   9.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   700.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   1063.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   1.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:LLC-stores":
[info]   3.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:branch-misses":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:branches":
[info]   1628.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:cycles":
[info]   1902.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   689.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   1043.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:instructions":
[info]   8278.455 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:49:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1053729.614 ops/s
[info] # Warmup Iteration   2: 1697032.605 ops/s
[info] # Warmup Iteration   3: 1839189.844 ops/s
[info] # Warmup Iteration   4: 1835816.372 ops/s
[info] # Warmup Iteration   5: 1842599.543 ops/s
[info] Iteration   1: 1841911.564 ops/s
[info] Iteration   2: 1839715.303 ops/s
[info] Iteration   3: 1839609.566 ops/s
[info] Iteration   4: 1838342.277 ops/s
[info] Iteration   5: 1886363.739 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1849188.490 ±(99.9%) 80175.044 ops/s [Average]
[info]   (min, avg, max) = (1838342.277, 1849188.490, 1886363.739), stdev = 20821.204
[info]   CI (99.9%): [1769013.446, 1929363.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   9.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   906.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1254.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   1.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:LLC-stores":
[info]   3.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:branch-misses":
[info]   1.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:branches":
[info]   1921.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:cycles":
[info]   1953.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-loads":
[info]   901.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:dTLB-stores":
[info]   1228.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:instructions":
[info]   8751.525 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:49:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1837385.749 ops/s
[info] # Warmup Iteration   2: 2117803.783 ops/s
[info] # Warmup Iteration   3: 2109061.310 ops/s
[info] # Warmup Iteration   4: 2118672.685 ops/s
[info] # Warmup Iteration   5: 2212917.983 ops/s
[info] Iteration   1: 2213599.490 ops/s
[info] Iteration   2: 2222525.556 ops/s
[info] Iteration   3: 2222475.869 ops/s
[info] Iteration   4: 2221931.845 ops/s
[info] Iteration   5: 2214563.433 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   2219019.239 ±(99.9%) 17429.610 ops/s [Average]
[info]   (min, avg, max) = (2213599.490, 2219019.239, 2222525.556), stdev = 4526.414
[info]   CI (99.9%): [2201589.628, 2236448.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:CPI":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   9.075 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   979.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1115.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.418 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   1.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:LLC-stores":
[info]   3.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:branches":
[info]   1843.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:cycles":
[info]   1751.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   953.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1065.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:instructions":
[info]   8015.620 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:49:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1952437.816 ops/s
[info] # Warmup Iteration   2: 2075846.573 ops/s
[info] # Warmup Iteration   3: 2215471.197 ops/s
[info] # Warmup Iteration   4: 2354777.703 ops/s
[info] # Warmup Iteration   5: 2353866.880 ops/s
[info] Iteration   1: 2354445.340 ops/s
[info] Iteration   2: 2352006.542 ops/s
[info] Iteration   3: 2351767.716 ops/s
[info] Iteration   4: 2355200.341 ops/s
[info] Iteration   5: 2354193.378 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2353522.664 ±(99.9%) 5932.447 ops/s [Average]
[info]   (min, avg, max) = (2351767.716, 2353522.664, 2355200.341), stdev = 1540.638
[info]   CI (99.9%): [2347590.217, 2359455.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   921.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1056.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1747.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1601.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   924.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1067.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   7433.206 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:48:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12814.474 ops/s
[info] # Warmup Iteration   2: 33862.215 ops/s
[info] # Warmup Iteration   3: 48346.211 ops/s
[info] # Warmup Iteration   4: 43372.176 ops/s
[info] # Warmup Iteration   5: 45377.495 ops/s
[info] Iteration   1: 47874.767 ops/s
[info] Iteration   2: 47890.382 ops/s
[info] Iteration   3: 45448.122 ops/s
[info] Iteration   4: 47916.994 ops/s
[info] Iteration   5: 47973.305 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   47420.714 ±(99.9%) 4248.606 ops/s [Average]
[info]   (min, avg, max) = (45448.122, 47420.714, 47973.305), stdev = 1103.350
[info]   CI (99.9%): [43172.108, 51669.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:CPI":
[info]   0.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1200.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-dcache-loads":
[info]   39918.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-dcache-stores":
[info]   26409.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   35.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-load-misses":
[info]   2.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-loads":
[info]   15.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-store-misses":
[info]   15.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:LLC-stores":
[info]   129.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:branch-misses":
[info]   151.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:branches":
[info]   45945.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:cycles":
[info]   80785.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-loads":
[info]   41415.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:dTLB-stores":
[info]   27370.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:iTLB-loads":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:instructions":
[info]   232830.712 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:48:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8090.734 ops/s
[info] # Warmup Iteration   2: 11293.770 ops/s
[info] # Warmup Iteration   3: 15102.012 ops/s
[info] # Warmup Iteration   4: 18118.880 ops/s
[info] # Warmup Iteration   5: 17936.789 ops/s
[info] Iteration   1: 17723.786 ops/s
[info] Iteration   2: 17592.270 ops/s
[info] Iteration   3: 16932.690 ops/s
[info] Iteration   4: 17282.818 ops/s
[info] Iteration   5: 16866.392 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   17279.591 ±(99.9%) 1474.050 ops/s [Average]
[info]   (min, avg, max) = (16866.392, 17279.591, 17723.786), stdev = 382.806
[info]   CI (99.9%): [15805.541, 18753.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:CPI":
[info]   0.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-dcache-load-misses":
[info]   6080.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-dcache-loads":
[info]   173672.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-dcache-stores":
[info]   86988.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:L1-icache-load-misses":
[info]   3097.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-load-misses":
[info]   83.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-loads":
[info]   493.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-store-misses":
[info]   237.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:LLC-stores":
[info]   512.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:branch-misses":
[info]   1287.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:branches":
[info]   194173.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:cycles":
[info]   354596.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-load-misses":
[info]   41.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-loads":
[info]   171381.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-store-misses":
[info]   3.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:dTLB-stores":
[info]   87669.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:iTLB-load-misses":
[info]   13.762 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:iTLB-loads":
[info]   189.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:instructions":
[info]   911514.452 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:48:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 35111.814 ops/s
[info] # Warmup Iteration   2: 97867.223 ops/s
[info] # Warmup Iteration   3: 99673.645 ops/s
[info] # Warmup Iteration   4: 98950.035 ops/s
[info] # Warmup Iteration   5: 107766.316 ops/s
[info] Iteration   1: 109073.228 ops/s
[info] Iteration   2: 108527.001 ops/s
[info] Iteration   3: 108365.316 ops/s
[info] Iteration   4: 108259.940 ops/s
[info] Iteration   5: 108483.281 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   108541.753 ±(99.9%) 1212.572 ops/s [Average]
[info]   (min, avg, max) = (108259.940, 108541.753, 109073.228), stdev = 314.901
[info]   CI (99.9%): [107329.181, 109754.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:CPI":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   366.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   29838.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   10392.648 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   4.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.665 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-loads":
[info]   3.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:LLC-stores":
[info]   33.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:branch-misses":
[info]   15.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:branches":
[info]   31464.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:cycles":
[info]   35352.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-loads":
[info]   30783.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-stores":
[info]   10542.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:instructions":
[info]   146415.860 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:48:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 194232.523 ops/s
[info] # Warmup Iteration   2: 258562.143 ops/s
[info] # Warmup Iteration   3: 278858.863 ops/s
[info] # Warmup Iteration   4: 278923.145 ops/s
[info] # Warmup Iteration   5: 265991.180 ops/s
[info] Iteration   1: 260050.450 ops/s
[info] Iteration   2: 261907.436 ops/s
[info] Iteration   3: 261513.664 ops/s
[info] Iteration   4: 261307.295 ops/s
[info] Iteration   5: 267926.609 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   262541.091 ±(99.9%) 11897.566 ops/s [Average]
[info]   (min, avg, max) = (260050.450, 262541.091, 267926.609), stdev = 3089.760
[info]   CI (99.9%): [250643.525, 274438.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:CPI":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   87.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   17002.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   8450.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-stores":
[info]   16.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:branch-misses":
[info]   3.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:branches":
[info]   9948.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:cycles":
[info]   13830.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-loads":
[info]   17683.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-stores":
[info]   8546.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:instructions":
[info]   58203.872 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:47:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1377.037 ops/s
[info] # Warmup Iteration   2: 5827.714 ops/s
[info] # Warmup Iteration   3: 6631.342 ops/s
[info] # Warmup Iteration   4: 7462.075 ops/s
[info] # Warmup Iteration   5: 7563.315 ops/s
[info] Iteration   1: 9996.914 ops/s
[info] Iteration   2: 13478.770 ops/s
[info] Iteration   3: 13931.078 ops/s
[info] Iteration   4: 14181.670 ops/s
[info] Iteration   5: 14376.711 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   13193.029 ±(99.9%) 7000.346 ops/s [Average]
[info]   (min, avg, max) = (9996.914, 13193.029, 14376.711), stdev = 1817.968
[info]   CI (99.9%): [6192.682, 20193.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:CPI":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5174.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-loads":
[info]   141318.883 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-stores":
[info]   77721.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1277.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-load-misses":
[info]   49.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-loads":
[info]   257.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-store-misses":
[info]   146.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:LLC-stores":
[info]   420.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:branch-misses":
[info]   1010.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:branches":
[info]   156521.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:cycles":
[info]   279086.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-load-misses":
[info]   17.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-loads":
[info]   141680.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:dTLB-stores":
[info]   77537.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:iTLB-load-misses":
[info]   4.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:iTLB-loads":
[info]   48.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:instructions":
[info]   755380.713 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:47:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11940.485 ops/s
[info] # Warmup Iteration   2: 31295.072 ops/s
[info] # Warmup Iteration   3: 38626.515 ops/s
[info] # Warmup Iteration   4: 34758.768 ops/s
[info] # Warmup Iteration   5: 32432.744 ops/s
[info] Iteration   1: 39021.709 ops/s
[info] Iteration   2: 40033.138 ops/s
[info] Iteration   3: 39707.458 ops/s
[info] Iteration   4: 39690.626 ops/s
[info] Iteration   5: 39870.173 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   39664.621 ±(99.9%) 1483.752 ops/s [Average]
[info]   (min, avg, max) = (39021.709, 39664.621, 40033.138), stdev = 385.326
[info]   CI (99.9%): [38180.869, 41148.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   2792.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-loads":
[info]   42711.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-stores":
[info]   34490.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:L1-icache-load-misses":
[info]   28.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-load-misses":
[info]   6.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-loads":
[info]   14.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-store-misses":
[info]   549.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:LLC-stores":
[info]   901.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:branch-misses":
[info]   29.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:branches":
[info]   82505.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:cycles":
[info]   86837.682 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-load-misses":
[info]   8.497 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-loads":
[info]   43540.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-store-misses":
[info]   4.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:dTLB-stores":
[info]   35496.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:iTLB-loads":
[info]   0.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:instructions":
[info]   301662.737 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:47:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30572.047 ops/s
[info] # Warmup Iteration   2: 111123.458 ops/s
[info] # Warmup Iteration   3: 115089.849 ops/s
[info] # Warmup Iteration   4: 132503.135 ops/s
[info] # Warmup Iteration   5: 135997.347 ops/s
[info] Iteration   1: 136373.834 ops/s
[info] Iteration   2: 136576.565 ops/s
[info] Iteration   3: 137451.971 ops/s
[info] Iteration   4: 138743.292 ops/s
[info] Iteration   5: 138999.413 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   137629.015 ±(99.9%) 4650.391 ops/s [Average]
[info]   (min, avg, max) = (136373.834, 137629.015, 138999.413), stdev = 1207.692
[info]   CI (99.9%): [132978.624, 142279.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:CPI":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   469.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   16010.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   11825.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   10.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-loads":
[info]   2.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   118.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-stores":
[info]   191.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:branch-misses":
[info]   7.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:branches":
[info]   21099.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:cycles":
[info]   26358.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.464 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-loads":
[info]   15634.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-stores":
[info]   11663.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:instructions":
[info]   104427.931 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:47:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 175700.287 ops/s
[info] # Warmup Iteration   2: 229342.316 ops/s
[info] # Warmup Iteration   3: 250655.697 ops/s
[info] # Warmup Iteration   4: 250737.445 ops/s
[info] # Warmup Iteration   5: 252228.215 ops/s
[info] Iteration   1: 252771.659 ops/s
[info] Iteration   2: 250975.158 ops/s
[info] Iteration   3: 252476.683 ops/s
[info] Iteration   4: 251759.715 ops/s
[info] Iteration   5: 252557.784 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   252108.200 ±(99.9%) 2844.861 ops/s [Average]
[info]   (min, avg, max) = (250975.158, 252108.200, 252771.659), stdev = 738.801
[info]   CI (99.9%): [249263.338, 254953.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:CPI":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   89.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   9709.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   9420.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   4.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-loads":
[info]   1.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   64.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-stores":
[info]   94.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:branch-misses":
[info]   3.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:branches":
[info]   5386.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:cycles":
[info]   15404.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   9951.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   9998.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:instructions":
[info]   49390.830 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:46:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 212121.132 ops/s
[info] # Warmup Iteration   2: 264229.816 ops/s
[info] # Warmup Iteration   3: 276714.538 ops/s
[info] # Warmup Iteration   4: 271714.439 ops/s
[info] # Warmup Iteration   5: 271890.242 ops/s
[info] Iteration   1: 276969.062 ops/s
[info] Iteration   2: 276778.159 ops/s
[info] Iteration   3: 276979.528 ops/s
[info] Iteration   4: 276977.252 ops/s
[info] Iteration   5: 276810.893 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   276902.979 ±(99.9%) 384.116 ops/s [Average]
[info]   (min, avg, max) = (276778.159, 276902.979, 276979.528), stdev = 99.754
[info]   CI (99.9%): [276518.863, 277287.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   2.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   9454.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   9566.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5044.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   13695.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   9390.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   9466.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   46964.858 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:46:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16394.497 ops/s
[info] # Warmup Iteration   2: 55680.981 ops/s
[info] # Warmup Iteration   3: 53080.390 ops/s
[info] # Warmup Iteration   4: 57199.201 ops/s
[info] # Warmup Iteration   5: 59350.463 ops/s
[info] Iteration   1: 60446.409 ops/s
[info] Iteration   2: 59789.693 ops/s
[info] Iteration   3: 60426.512 ops/s
[info] Iteration   4: 60640.173 ops/s
[info] Iteration   5: 60828.308 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   60426.219 ±(99.9%) 1507.449 ops/s [Average]
[info]   (min, avg, max) = (59789.693, 60426.219, 60828.308), stdev = 391.480
[info]   CI (99.9%): [58918.770, 61933.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:CPI":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2386.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-loads":
[info]   35780.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-stores":
[info]   30198.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   15.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-load-misses":
[info]   2.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-loads":
[info]   9.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-store-misses":
[info]   282.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:LLC-stores":
[info]   471.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:branch-misses":
[info]   148.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:branches":
[info]   38558.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:cycles":
[info]   63383.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-load-misses":
[info]   6.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-loads":
[info]   36548.342 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:dTLB-stores":
[info]   30368.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:iTLB-loads":
[info]   2.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:instructions":
[info]   203238.753 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:46:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7470.562 ops/s
[info] # Warmup Iteration   2: 15354.111 ops/s
[info] # Warmup Iteration   3: 19522.889 ops/s
[info] # Warmup Iteration   4: 35001.124 ops/s
[info] # Warmup Iteration   5: 37287.480 ops/s
[info] Iteration   1: 31298.133 ops/s
[info] Iteration   2: 33585.065 ops/s
[info] Iteration   3: 32916.954 ops/s
[info] Iteration   4: 40123.349 ops/s
[info] Iteration   5: 40013.421 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   35587.384 ±(99.9%) 16074.182 ops/s [Average]
[info]   (min, avg, max) = (31298.133, 35587.384, 40123.349), stdev = 4174.414
[info]   CI (99.9%): [19513.202, 51661.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:CPI":
[info]   0.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-load-misses":
[info]   2624.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-loads":
[info]   108475.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-stores":
[info]   44974.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:L1-icache-load-misses":
[info]   1193.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-load-misses":
[info]   44.955 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-loads":
[info]   308.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-store-misses":
[info]   103.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:LLC-stores":
[info]   253.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:branch-misses":
[info]   311.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:branches":
[info]   92634.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:cycles":
[info]   167020.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-load-misses":
[info]   21.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-loads":
[info]   110242.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-store-misses":
[info]   1.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:dTLB-stores":
[info]   45345.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:iTLB-load-misses":
[info]   7.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:iTLB-loads":
[info]   89.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:instructions":
[info]   442427.993 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:46:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7683.241 ops/s
[info] # Warmup Iteration   2: 22139.968 ops/s
[info] # Warmup Iteration   3: 41899.155 ops/s
[info] # Warmup Iteration   4: 42998.837 ops/s
[info] # Warmup Iteration   5: 39313.272 ops/s
[info] Iteration   1: 38255.158 ops/s
[info] Iteration   2: 41794.825 ops/s
[info] Iteration   3: 41779.021 ops/s
[info] Iteration   4: 41113.040 ops/s
[info] Iteration   5: 41809.231 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   40950.255 ±(99.9%) 5911.723 ops/s [Average]
[info]   (min, avg, max) = (38255.158, 40950.255, 41809.231), stdev = 1535.256
[info]   CI (99.9%): [35038.532, 46861.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:CPI":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   1246.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   81283.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   30603.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   494.825 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-load-misses":
[info]   8.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-loads":
[info]   47.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-store-misses":
[info]   9.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-stores":
[info]   113.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:branch-misses":
[info]   75.712 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:branches":
[info]   70889.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:cycles":
[info]   104934.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   4.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-loads":
[info]   81614.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-stores":
[info]   29930.894 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-loads":
[info]   11.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:instructions":
[info]   325994.640 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:46:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 433061.065 ops/s
[info] # Warmup Iteration   2: 593388.195 ops/s
[info] # Warmup Iteration   3: 648028.093 ops/s
[info] # Warmup Iteration   4: 649793.363 ops/s
[info] # Warmup Iteration   5: 647578.735 ops/s
[info] Iteration   1: 649577.391 ops/s
[info] Iteration   2: 650688.516 ops/s
[info] Iteration   3: 651910.440 ops/s
[info] Iteration   4: 651805.278 ops/s
[info] Iteration   5: 652578.834 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   651312.092 ±(99.9%) 4557.740 ops/s [Average]
[info]   (min, avg, max) = (649577.391, 651312.092, 652578.834), stdev = 1183.630
[info]   CI (99.9%): [646754.352, 655869.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   66.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   3386.482 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2416.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.978 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-stores":
[info]   13.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:branch-misses":
[info]   5.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:branches":
[info]   5895.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:cycles":
[info]   5903.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-loads":
[info]   3452.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2432.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:instructions":
[info]   25257.289 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:45:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1048.382 ops/s
[info] # Warmup Iteration   2: 20817.797 ops/s
[info] # Warmup Iteration   3: 23578.236 ops/s
[info] # Warmup Iteration   4: 30466.774 ops/s
[info] # Warmup Iteration   5: 39434.069 ops/s
[info] Iteration   1: 34261.181 ops/s
[info] Iteration   2: 32457.515 ops/s
[info] Iteration   3: 35569.774 ops/s
[info] Iteration   4: 35542.693 ops/s
[info] Iteration   5: 35933.012 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   34752.835 ±(99.9%) 5511.366 ops/s [Average]
[info]   (min, avg, max) = (32457.515, 34752.835, 35933.012), stdev = 1431.284
[info]   CI (99.9%): [29241.469, 40264.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:CPI":
[info]   0.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2860.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-loads":
[info]   102594.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-stores":
[info]   46382.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   875.420 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-load-misses":
[info]   20.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-loads":
[info]   185.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-store-misses":
[info]   119.855 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:LLC-stores":
[info]   426.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:branch-misses":
[info]   206.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:branches":
[info]   86955.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:cycles":
[info]   146031.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-load-misses":
[info]   13.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-loads":
[info]   106619.566 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.785 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-stores":
[info]   48564.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-load-misses":
[info]   5.522 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-loads":
[info]   69.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:instructions":
[info]   419853.086 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:45:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 34898.012 ops/s
[info] # Warmup Iteration   2: 89797.726 ops/s
[info] # Warmup Iteration   3: 81954.064 ops/s
[info] # Warmup Iteration   4: 95054.812 ops/s
[info] # Warmup Iteration   5: 95297.707 ops/s
[info] Iteration   1: 95373.003 ops/s
[info] Iteration   2: 95393.220 ops/s
[info] Iteration   3: 95399.757 ops/s
[info] Iteration   4: 95536.122 ops/s
[info] Iteration   5: 95267.625 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   95393.945 ±(99.9%) 368.557 ops/s [Average]
[info]   (min, avg, max) = (95267.625, 95393.945, 95536.122), stdev = 95.713
[info]   CI (99.9%): [95025.388, 95762.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:CPI":
[info]   0.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   808.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-loads":
[info]   23316.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-stores":
[info]   16611.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:L1-icache-load-misses":
[info]   4.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-load-misses":
[info]   0.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-loads":
[info]   3.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-store-misses":
[info]   114.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:LLC-stores":
[info]   221.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:branch-misses":
[info]   43.771 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:branches":
[info]   33940.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:cycles":
[info]   40219.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-loads":
[info]   24308.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:dTLB-stores":
[info]   16620.790 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:iTLB-loads":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:instructions":
[info]   151711.197 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:45:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 115721.152 ops/s
[info] # Warmup Iteration   2: 228424.279 ops/s
[info] # Warmup Iteration   3: 246096.642 ops/s
[info] # Warmup Iteration   4: 247941.927 ops/s
[info] # Warmup Iteration   5: 234580.692 ops/s
[info] Iteration   1: 231986.262 ops/s
[info] Iteration   2: 237682.631 ops/s
[info] Iteration   3: 247544.563 ops/s
[info] Iteration   4: 248480.916 ops/s
[info] Iteration   5: 248184.988 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   242775.872 ±(99.9%) 29001.719 ops/s [Average]
[info]   (min, avg, max) = (231986.262, 242775.872, 248480.916), stdev = 7531.654
[info]   CI (99.9%): [213774.153, 271777.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   178.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   9502.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   6208.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   7.851 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-stores":
[info]   27.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:branch-misses":
[info]   22.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:branches":
[info]   12035.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:cycles":
[info]   15312.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-loads":
[info]   9491.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-stores":
[info]   6117.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:instructions":
[info]   61865.048 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:45:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 948013.407 ops/s
[info] # Warmup Iteration   2: 1064845.278 ops/s
[info] # Warmup Iteration   3: 1109232.896 ops/s
[info] # Warmup Iteration   4: 1089668.515 ops/s
[info] # Warmup Iteration   5: 1119176.547 ops/s
[info] Iteration   1: 1104301.739 ops/s
[info] Iteration   2: 1108897.010 ops/s
[info] Iteration   3: 1111851.607 ops/s
[info] Iteration   4: 1109595.822 ops/s
[info] Iteration   5: 1116659.837 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1110261.203 ±(99.9%) 17358.982 ops/s [Average]
[info]   (min, avg, max) = (1104301.739, 1110261.203, 1116659.837), stdev = 4508.072
[info]   CI (99.9%): [1092902.221, 1127620.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:CPI":
[info]   0.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   22.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2865.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3101.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   15.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-stores":
[info]   21.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:branches":
[info]   2039.633 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:cycles":
[info]   3499.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2837.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   2951.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:instructions":
[info]   13581.537 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:44:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1061344.056 ops/s
[info] # Warmup Iteration   2: 1137765.020 ops/s
[info] # Warmup Iteration   3: 1151180.008 ops/s
[info] # Warmup Iteration   4: 1151273.135 ops/s
[info] # Warmup Iteration   5: 1150296.951 ops/s
[info] Iteration   1: 1151902.544 ops/s
[info] Iteration   2: 1151543.822 ops/s
[info] Iteration   3: 1151900.177 ops/s
[info] Iteration   4: 1150779.574 ops/s
[info] Iteration   5: 1145395.504 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1150304.324 ±(99.9%) 10712.783 ops/s [Average]
[info]   (min, avg, max) = (1145395.504, 1150304.324, 1151902.544), stdev = 2782.076
[info]   CI (99.9%): [1139591.541, 1161017.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2751.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3004.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1947.582 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   3316.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2759.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3000.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   13119.589 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:44:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 65713.004 ops/s
[info] # Warmup Iteration   2: 184832.989 ops/s
[info] # Warmup Iteration   3: 222252.748 ops/s
[info] # Warmup Iteration   4: 224206.218 ops/s
[info] # Warmup Iteration   5: 224016.170 ops/s
[info] Iteration   1: 237293.293 ops/s
[info] Iteration   2: 240545.354 ops/s
[info] Iteration   3: 232025.531 ops/s
[info] Iteration   4: 240544.957 ops/s
[info] Iteration   5: 236567.455 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   237395.318 ±(99.9%) 13528.498 ops/s [Average]
[info]   (min, avg, max) = (232025.531, 237395.318, 240545.354), stdev = 3513.308
[info]   CI (99.9%): [223866.820, 250923.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:CPI":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   329.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-loads":
[info]   9947.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-stores":
[info]   7087.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   1.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-loads":
[info]   1.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-store-misses":
[info]   16.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:LLC-stores":
[info]   54.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:branch-misses":
[info]   13.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:branches":
[info]   12003.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:cycles":
[info]   16016.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-loads":
[info]   10343.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-stores":
[info]   7105.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-loads":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:instructions":
[info]   63041.198 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:44:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16348.492 ops/s
[info] # Warmup Iteration   2: 46340.083 ops/s
[info] # Warmup Iteration   3: 52048.024 ops/s
[info] # Warmup Iteration   4: 52909.692 ops/s
[info] # Warmup Iteration   5: 50781.667 ops/s
[info] Iteration   1: 52533.104 ops/s
[info] Iteration   2: 52630.186 ops/s
[info] Iteration   3: 52611.302 ops/s
[info] Iteration   4: 53459.205 ops/s
[info] Iteration   5: 53546.161 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   52955.992 ±(99.9%) 1930.433 ops/s [Average]
[info]   (min, avg, max) = (52533.104, 52955.992, 53546.161), stdev = 501.327
[info]   CI (99.9%): [51025.558, 54886.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:CPI":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   858.809 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   55346.851 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   21986.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   201.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-loads":
[info]   4.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-store-misses":
[info]   6.482 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:LLC-stores":
[info]   112.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:branch-misses":
[info]   27.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:branches":
[info]   53865.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:cycles":
[info]   71661.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-loads":
[info]   55948.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:dTLB-stores":
[info]   21784.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:iTLB-loads":
[info]   1.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:instructions":
[info]   241211.449 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:44:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 610671.217 ops/s
[info] # Warmup Iteration   2: 729731.360 ops/s
[info] # Warmup Iteration   3: 777958.386 ops/s
[info] # Warmup Iteration   4: 778991.112 ops/s
[info] # Warmup Iteration   5: 753115.724 ops/s
[info] Iteration   1: 777268.147 ops/s
[info] Iteration   2: 765802.618 ops/s
[info] Iteration   3: 781433.990 ops/s
[info] Iteration   4: 780342.422 ops/s
[info] Iteration   5: 780566.603 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   777082.756 ±(99.9%) 25027.092 ops/s [Average]
[info]   (min, avg, max) = (765802.618, 777082.756, 781433.990), stdev = 6499.456
[info]   CI (99.9%): [752055.664, 802109.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   49.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   2950.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2140.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   4.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:LLC-stores":
[info]   14.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:branch-misses":
[info]   5.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:branches":
[info]   4609.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:cycles":
[info]   4935.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-loads":
[info]   3016.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2138.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:instructions":
[info]   21066.900 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:43:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2236.964 ops/s
[info] # Warmup Iteration   2: 17546.831 ops/s
[info] # Warmup Iteration   3: 27558.080 ops/s
[info] # Warmup Iteration   4: 50482.913 ops/s
[info] # Warmup Iteration   5: 43836.987 ops/s
[info] Iteration   1: 42974.289 ops/s
[info] Iteration   2: 43649.789 ops/s
[info] Iteration   3: 44799.208 ops/s
[info] Iteration   4: 44712.272 ops/s
[info] Iteration   5: 44830.202 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   44193.152 ±(99.9%) 3235.167 ops/s [Average]
[info]   (min, avg, max) = (42974.289, 44193.152, 44830.202), stdev = 840.163
[info]   CI (99.9%): [40957.985, 47428.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:CPI":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2363.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-dcache-loads":
[info]   76821.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-dcache-stores":
[info]   36565.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   621.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-load-misses":
[info]   16.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-loads":
[info]   120.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-store-misses":
[info]   105.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:LLC-stores":
[info]   385.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:branch-misses":
[info]   143.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:branches":
[info]   65890.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:cycles":
[info]   102788.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-load-misses":
[info]   9.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-loads":
[info]   77670.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:dTLB-stores":
[info]   38100.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:iTLB-load-misses":
[info]   3.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:iTLB-loads":
[info]   35.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:instructions":
[info]   321715.234 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:43:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 165458.971 ops/s
[info] # Warmup Iteration   2: 386490.181 ops/s
[info] # Warmup Iteration   3: 416776.491 ops/s
[info] # Warmup Iteration   4: 417792.525 ops/s
[info] # Warmup Iteration   5: 416780.985 ops/s
[info] Iteration   1: 417609.763 ops/s
[info] Iteration   2: 416705.747 ops/s
[info] Iteration   3: 416743.366 ops/s
[info] Iteration   4: 417518.895 ops/s
[info] Iteration   5: 417145.864 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   417144.727 ±(99.9%) 1622.368 ops/s [Average]
[info]   (min, avg, max) = (416705.747, 417144.727, 417609.763), stdev = 421.324
[info]   CI (99.9%): [415522.359, 418767.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   65.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   5797.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   3165.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   2.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:LLC-stores":
[info]   12.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:branch-misses":
[info]   1.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:branches":
[info]   7551.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:cycles":
[info]   9089.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-loads":
[info]   5730.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:dTLB-stores":
[info]   3115.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:instructions":
[info]   36847.105 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:43:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1285015.509 ops/s
[info] # Warmup Iteration   2: 1508370.708 ops/s
[info] # Warmup Iteration   3: 1517542.288 ops/s
[info] # Warmup Iteration   4: 1509330.060 ops/s
[info] # Warmup Iteration   5: 1562219.353 ops/s
[info] Iteration   1: 1635782.509 ops/s
[info] Iteration   2: 1643718.087 ops/s
[info] Iteration   3: 1630085.508 ops/s
[info] Iteration   4: 1640773.063 ops/s
[info] Iteration   5: 1650436.231 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1640159.080 ±(99.9%) 29783.093 ops/s [Average]
[info]   (min, avg, max) = (1630085.508, 1640159.080, 1650436.231), stdev = 7734.575
[info]   CI (99.9%): [1610375.987, 1669942.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:CPI":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   15.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1767.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1907.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   6.433 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:LLC-stores":
[info]   11.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:branches":
[info]   1813.415 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:cycles":
[info]   2346.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1802.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1891.515 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:instructions":
[info]   9840.916 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:43:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1302736.381 ops/s
[info] # Warmup Iteration   2: 1644884.853 ops/s
[info] # Warmup Iteration   3: 1592768.672 ops/s
[info] # Warmup Iteration   4: 1593873.053 ops/s
[info] # Warmup Iteration   5: 1593244.416 ops/s
[info] Iteration   1: 1591991.249 ops/s
[info] Iteration   2: 1591061.353 ops/s
[info] Iteration   3: 1591714.832 ops/s
[info] Iteration   4: 1591924.790 ops/s
[info] Iteration   5: 1590984.010 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1591535.247 ±(99.9%) 1847.076 ops/s [Average]
[info]   (min, avg, max) = (1590984.010, 1591535.247, 1591991.249), stdev = 479.680
[info]   CI (99.9%): [1589688.171, 1593382.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1724.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1829.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1818.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2393.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1723.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1831.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   9910.053 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:43:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 126030.365 ops/s
[info] # Warmup Iteration   2: 341269.875 ops/s
[info] # Warmup Iteration   3: 354009.390 ops/s
[info] # Warmup Iteration   4: 357650.383 ops/s
[info] # Warmup Iteration   5: 372091.951 ops/s
[info] Iteration   1: 363622.627 ops/s
[info] Iteration   2: 372986.604 ops/s
[info] Iteration   3: 352938.535 ops/s
[info] Iteration   4: 353192.595 ops/s
[info] Iteration   5: 365654.608 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   361678.994 ±(99.9%) 33116.649 ops/s [Average]
[info]   (min, avg, max) = (352938.535, 361678.994, 372986.604), stdev = 8600.289
[info]   CI (99.9%): [328562.345, 394795.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:CPI":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   163.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-dcache-loads":
[info]   6089.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-dcache-stores":
[info]   4196.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-loads":
[info]   0.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-store-misses":
[info]   11.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:LLC-stores":
[info]   28.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:branch-misses":
[info]   4.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:branches":
[info]   8159.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:cycles":
[info]   10345.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-loads":
[info]   6277.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:dTLB-stores":
[info]   4194.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:iTLB-loads":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:instructions":
[info]   41278.218 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:42:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 20165.437 ops/s
[info] # Warmup Iteration   2: 49593.538 ops/s
[info] # Warmup Iteration   3: 59676.102 ops/s
[info] # Warmup Iteration   4: 70740.159 ops/s
[info] # Warmup Iteration   5: 80457.819 ops/s
[info] Iteration   1: 83253.347 ops/s
[info] Iteration   2: 83398.583 ops/s
[info] Iteration   3: 83488.237 ops/s
[info] Iteration   4: 83163.389 ops/s
[info] Iteration   5: 83348.407 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   83330.393 ±(99.9%) 485.988 ops/s [Average]
[info]   (min, avg, max) = (83163.389, 83330.393, 83488.237), stdev = 126.210
[info]   CI (99.9%): [82844.404, 83816.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-load-misses":
[info]   1190.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-loads":
[info]   29034.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-stores":
[info]   13228.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:L1-icache-load-misses":
[info]   56.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-load-misses":
[info]   1.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-loads":
[info]   11.904 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-store-misses":
[info]   56.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:LLC-stores":
[info]   141.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:branch-misses":
[info]   67.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:branches":
[info]   36406.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:cycles":
[info]   45833.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-load-misses":
[info]   2.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-loads":
[info]   28923.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-store-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:dTLB-stores":
[info]   13321.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:iTLB-load-misses":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:iTLB-loads":
[info]   0.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:instructions":
[info]   158895.850 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:42:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 44252.865 ops/s
[info] # Warmup Iteration   2: 90929.822 ops/s
[info] # Warmup Iteration   3: 88725.327 ops/s
[info] # Warmup Iteration   4: 93568.829 ops/s
[info] # Warmup Iteration   5: 87865.955 ops/s
[info] Iteration   1: 92812.381 ops/s
[info] Iteration   2: 90270.676 ops/s
[info] Iteration   3: 94277.274 ops/s
[info] Iteration   4: 90179.101 ops/s
[info] Iteration   5: 90317.545 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   91571.396 ±(99.9%) 7220.425 ops/s [Average]
[info]   (min, avg, max) = (90179.101, 91571.396, 94277.274), stdev = 1875.121
[info]   CI (99.9%): [84350.971, 98791.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:CPI":
[info]   0.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   992.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   24209.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   10905.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   73.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-loads":
[info]   8.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-store-misses":
[info]   4.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-stores":
[info]   49.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:branch-misses":
[info]   55.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:branches":
[info]   29978.155 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:cycles":
[info]   40611.840 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-loads":
[info]   24769.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-stores":
[info]   11132.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:instructions":
[info]   131568.987 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:42:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 48710.590 ops/s
[info] # Warmup Iteration   2: 86929.101 ops/s
[info] # Warmup Iteration   3: 84536.708 ops/s
[info] # Warmup Iteration   4: 100941.521 ops/s
[info] # Warmup Iteration   5: 100544.382 ops/s
[info] Iteration   1: 99433.800 ops/s
[info] Iteration   2: 98928.784 ops/s
[info] Iteration   3: 101077.907 ops/s
[info] Iteration   4: 101146.233 ops/s
[info] Iteration   5: 100915.088 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   100300.362 ±(99.9%) 4006.391 ops/s [Average]
[info]   (min, avg, max) = (98928.784, 100300.362, 101146.233), stdev = 1040.447
[info]   CI (99.9%): [96293.972, 104306.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:CPI":
[info]   0.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   740.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   20110.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   8319.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   70.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-loads":
[info]   9.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   3.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-stores":
[info]   49.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:branch-misses":
[info]   85.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:branches":
[info]   30157.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:cycles":
[info]   38403.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-loads":
[info]   20818.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-stores":
[info]   8500.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:instructions":
[info]   124101.981 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:42:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9979.289 ops/s
[info] # Warmup Iteration   2: 47666.809 ops/s
[info] # Warmup Iteration   3: 52703.986 ops/s
[info] # Warmup Iteration   4: 52785.545 ops/s
[info] # Warmup Iteration   5: 61121.280 ops/s
[info] Iteration   1: 61151.706 ops/s
[info] Iteration   2: 59032.816 ops/s
[info] Iteration   3: 59198.328 ops/s
[info] Iteration   4: 61691.804 ops/s
[info] Iteration   5: 60287.958 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   60272.523 ±(99.9%) 4506.376 ops/s [Average]
[info]   (min, avg, max) = (59032.816, 60272.523, 61691.804), stdev = 1170.291
[info]   CI (99.9%): [55766.147, 64778.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:CPI":
[info]   0.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2046.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-loads":
[info]   39242.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-stores":
[info]   22607.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   94.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-load-misses":
[info]   2.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-loads":
[info]   35.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-store-misses":
[info]   30.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:LLC-stores":
[info]   259.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:branch-misses":
[info]   180.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:branches":
[info]   39015.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:cycles":
[info]   62109.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-loads":
[info]   40418.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-stores":
[info]   23636.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-loads":
[info]   1.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:instructions":
[info]   189176.814 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:41:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 76386.864 ops/s
[info] # Warmup Iteration   2: 139697.632 ops/s
[info] # Warmup Iteration   3: 154950.722 ops/s
[info] # Warmup Iteration   4: 159150.965 ops/s
[info] # Warmup Iteration   5: 160232.877 ops/s
[info] Iteration   1: 156274.901 ops/s
[info] Iteration   2: 154777.964 ops/s
[info] Iteration   3: 160564.042 ops/s
[info] Iteration   4: 156151.682 ops/s
[info] Iteration   5: 155047.102 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   156563.138 ±(99.9%) 8978.034 ops/s [Average]
[info]   (min, avg, max) = (154777.964, 156563.138, 160564.042), stdev = 2331.567
[info]   CI (99.9%): [147585.104, 165541.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   821.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-loads":
[info]   11543.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-stores":
[info]   8242.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-load-misses":
[info]   0.786 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-loads":
[info]   4.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-store-misses":
[info]   157.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:LLC-stores":
[info]   229.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:branch-misses":
[info]   28.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:branches":
[info]   26083.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:cycles":
[info]   24177.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-load-misses":
[info]   2.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-loads":
[info]   11826.873 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:dTLB-stores":
[info]   8375.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:iTLB-loads":
[info]   0.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:instructions":
[info]   85165.564 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:41:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 185269.624 ops/s
[info] # Warmup Iteration   2: 324579.989 ops/s
[info] # Warmup Iteration   3: 379291.518 ops/s
[info] # Warmup Iteration   4: 378930.556 ops/s
[info] # Warmup Iteration   5: 372954.911 ops/s
[info] Iteration   1: 379637.590 ops/s
[info] Iteration   2: 382300.644 ops/s
[info] Iteration   3: 373764.659 ops/s
[info] Iteration   4: 380990.002 ops/s
[info] Iteration   5: 379725.473 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   379283.673 ±(99.9%) 12594.848 ops/s [Average]
[info]   (min, avg, max) = (373764.659, 379283.673, 382300.644), stdev = 3270.842
[info]   CI (99.9%): [366688.826, 391878.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:CPI":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   457.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   5108.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2881.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.446 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   26.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-stores":
[info]   33.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:branch-misses":
[info]   14.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:branches":
[info]   8486.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:cycles":
[info]   10051.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-loads":
[info]   5067.690 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2876.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:instructions":
[info]   33094.409 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:41:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 789286.650 ops/s
[info] # Warmup Iteration   2: 923049.059 ops/s
[info] # Warmup Iteration   3: 961713.462 ops/s
[info] # Warmup Iteration   4: 965424.787 ops/s
[info] # Warmup Iteration   5: 937604.642 ops/s
[info] Iteration   1: 907772.168 ops/s
[info] Iteration   2: 925327.095 ops/s
[info] Iteration   3: 964523.837 ops/s
[info] Iteration   4: 961272.290 ops/s
[info] Iteration   5: 962537.586 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   944286.595 ±(99.9%) 100484.922 ops/s [Average]
[info]   (min, avg, max) = (907772.168, 944286.595, 964523.837), stdev = 26095.615
[info]   CI (99.9%): [843801.674, 1044771.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:CPI":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   126.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2078.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1394.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   26.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-stores":
[info]   33.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:branches":
[info]   2476.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:cycles":
[info]   4071.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2107.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1383.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:instructions":
[info]   12327.417 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:41:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 848814.900 ops/s
[info] # Warmup Iteration   2: 991275.190 ops/s
[info] # Warmup Iteration   3: 936972.226 ops/s
[info] # Warmup Iteration   4: 961803.563 ops/s
[info] # Warmup Iteration   5: 963409.197 ops/s
[info] Iteration   1: 972326.200 ops/s
[info] Iteration   2: 976223.947 ops/s
[info] Iteration   3: 999284.055 ops/s
[info] Iteration   4: 978531.971 ops/s
[info] Iteration   5: 1001546.105 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   985582.456 ±(99.9%) 52923.288 ops/s [Average]
[info]   (min, avg, max) = (972326.200, 985582.456, 1001546.105), stdev = 13744.010
[info]   CI (99.9%): [932659.168, 1038505.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   90.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1857.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1666.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2426.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   3844.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1849.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1650.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   12144.379 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:40:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 86106.215 ops/s
[info] # Warmup Iteration   2: 130545.363 ops/s
[info] # Warmup Iteration   3: 205521.078 ops/s
[info] # Warmup Iteration   4: 290913.107 ops/s
[info] # Warmup Iteration   5: 293441.409 ops/s
[info] Iteration   1: 294014.143 ops/s
[info] Iteration   2: 290081.737 ops/s
[info] Iteration   3: 279635.589 ops/s
[info] Iteration   4: 295597.216 ops/s
[info] Iteration   5: 295584.154 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   290982.568 ±(99.9%) 25918.685 ops/s [Average]
[info]   (min, avg, max) = (279635.589, 290982.568, 295597.216), stdev = 6731.000
[info]   CI (99.9%): [265063.883, 316901.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   565.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-loads":
[info]   9265.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-stores":
[info]   4157.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   3.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-loads":
[info]   2.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-store-misses":
[info]   25.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:LLC-stores":
[info]   40.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:branch-misses":
[info]   22.783 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:branches":
[info]   10422.774 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:cycles":
[info]   12987.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-loads":
[info]   9311.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-stores":
[info]   4163.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-loads":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:instructions":
[info]   43067.440 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:40:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15758.471 ops/s
[info] # Warmup Iteration   2: 111342.409 ops/s
[info] # Warmup Iteration   3: 125895.588 ops/s
[info] # Warmup Iteration   4: 131021.965 ops/s
[info] # Warmup Iteration   5: 135434.898 ops/s
[info] Iteration   1: 134541.704 ops/s
[info] Iteration   2: 136513.212 ops/s
[info] Iteration   3: 147194.183 ops/s
[info] Iteration   4: 147398.130 ops/s
[info] Iteration   5: 147120.964 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   142553.639 ±(99.9%) 24846.507 ops/s [Average]
[info]   (min, avg, max) = (134541.704, 142553.639, 147398.130), stdev = 6452.559
[info]   CI (99.9%): [117707.132, 167400.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:CPI":
[info]   0.328 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-load-misses":
[info]   548.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-loads":
[info]   21907.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-stores":
[info]   11251.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:L1-icache-load-misses":
[info]   158.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-load-misses":
[info]   3.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-loads":
[info]   27.366 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-store-misses":
[info]   46.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:LLC-stores":
[info]   85.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:branch-misses":
[info]   57.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:branches":
[info]   20729.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:cycles":
[info]   32999.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-load-misses":
[info]   2.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-loads":
[info]   22338.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-store-misses":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-stores":
[info]   11413.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-load-misses":
[info]   0.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-loads":
[info]   15.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:instructions":
[info]   100711.539 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:40:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 69275.471 ops/s
[info] # Warmup Iteration   2: 162039.262 ops/s
[info] # Warmup Iteration   3: 192317.836 ops/s
[info] # Warmup Iteration   4: 227570.950 ops/s
[info] # Warmup Iteration   5: 227632.571 ops/s
[info] Iteration   1: 227583.487 ops/s
[info] Iteration   2: 226981.332 ops/s
[info] Iteration   3: 227405.492 ops/s
[info] Iteration   4: 215251.392 ops/s
[info] Iteration   5: 214308.644 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   222306.070 ±(99.9%) 26499.636 ops/s [Average]
[info]   (min, avg, max) = (214308.644, 222306.070, 227583.487), stdev = 6881.871
[info]   CI (99.9%): [195806.433, 248805.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:CPI":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   109.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   11265.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   5323.430 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-loads":
[info]   1.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-stores":
[info]   11.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:branch-misses":
[info]   30.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:branches":
[info]   13019.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:cycles":
[info]   16854.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-loads":
[info]   11335.634 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-stores":
[info]   5186.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:instructions":
[info]   60591.496 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:40:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 209092.323 ops/s
[info] # Warmup Iteration   2: 408975.643 ops/s
[info] # Warmup Iteration   3: 467788.656 ops/s
[info] # Warmup Iteration   4: 449656.163 ops/s
[info] # Warmup Iteration   5: 437274.464 ops/s
[info] Iteration   1: 437074.891 ops/s
[info] Iteration   2: 437428.538 ops/s
[info] Iteration   3: 438000.316 ops/s
[info] Iteration   4: 457403.049 ops/s
[info] Iteration   5: 457682.048 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   445517.768 ±(99.9%) 42289.623 ops/s [Average]
[info]   (min, avg, max) = (437074.891, 445517.768, 457682.048), stdev = 10982.481
[info]   CI (99.9%): [403228.146, 487807.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:CPI":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   56.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   5396.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   2676.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   1.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-loads":
[info]   1.126 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   1.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-stores":
[info]   10.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branch-misses":
[info]   3.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branches":
[info]   6559.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:cycles":
[info]   8602.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-loads":
[info]   5570.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-stores":
[info]   2798.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:instructions":
[info]   30388.092 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:40:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4610.016 ops/s
[info] # Warmup Iteration   2: 76146.791 ops/s
[info] # Warmup Iteration   3: 90433.271 ops/s
[info] # Warmup Iteration   4: 92559.561 ops/s
[info] # Warmup Iteration   5: 91191.124 ops/s
[info] Iteration   1: 98811.122 ops/s
[info] Iteration   2: 99686.873 ops/s
[info] Iteration   3: 99630.403 ops/s
[info] Iteration   4: 97560.695 ops/s
[info] Iteration   5: 99955.145 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   99128.848 ±(99.9%) 3755.992 ops/s [Average]
[info]   (min, avg, max) = (97560.695, 99128.848, 99955.145), stdev = 975.419
[info]   CI (99.9%): [95372.855, 102884.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1371.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-loads":
[info]   28971.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-stores":
[info]   19364.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   14.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-load-misses":
[info]   1.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-loads":
[info]   4.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-store-misses":
[info]   95.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-stores":
[info]   252.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:branch-misses":
[info]   68.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:branches":
[info]   23219.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:cycles":
[info]   38865.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-load-misses":
[info]   2.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-loads":
[info]   29926.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-stores":
[info]   20075.683 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-loads":
[info]   0.372 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:instructions":
[info]   128887.357 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:39:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 99162.826 ops/s
[info] # Warmup Iteration   2: 205106.493 ops/s
[info] # Warmup Iteration   3: 244033.702 ops/s
[info] # Warmup Iteration   4: 240857.881 ops/s
[info] # Warmup Iteration   5: 243228.328 ops/s
[info] Iteration   1: 243966.721 ops/s
[info] Iteration   2: 244086.482 ops/s
[info] Iteration   3: 235086.305 ops/s
[info] Iteration   4: 243762.652 ops/s
[info] Iteration   5: 243906.742 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   242161.780 ±(99.9%) 15237.110 ops/s [Average]
[info]   (min, avg, max) = (235086.305, 242161.780, 244086.482), stdev = 3957.029
[info]   CI (99.9%): [226924.670, 257398.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   162.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-loads":
[info]   9820.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-stores":
[info]   7286.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:L1-icache-load-misses":
[info]   3.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-load-misses":
[info]   0.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-loads":
[info]   1.959 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-store-misses":
[info]   101.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-stores":
[info]   140.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:branch-misses":
[info]   12.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:branches":
[info]   16072.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:cycles":
[info]   15577.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-loads":
[info]   9804.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-stores":
[info]   7108.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-loads":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:instructions":
[info]   59480.191 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:39:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 287281.174 ops/s
[info] # Warmup Iteration   2: 692774.830 ops/s
[info] # Warmup Iteration   3: 780501.711 ops/s
[info] # Warmup Iteration   4: 778881.074 ops/s
[info] # Warmup Iteration   5: 777366.333 ops/s
[info] Iteration   1: 780882.999 ops/s
[info] Iteration   2: 752254.884 ops/s
[info] Iteration   3: 743569.056 ops/s
[info] Iteration   4: 780494.302 ops/s
[info] Iteration   5: 780795.557 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   767599.359 ±(99.9%) 70209.147 ops/s [Average]
[info]   (min, avg, max) = (743569.056, 767599.359, 780882.999), stdev = 18233.092
[info]   CI (99.9%): [697390.213, 837808.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   20.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   2954.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1749.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   12.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-stores":
[info]   17.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branch-misses":
[info]   2.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branches":
[info]   5059.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:cycles":
[info]   4907.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-loads":
[info]   2931.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-stores":
[info]   1718.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:instructions":
[info]   19900.077 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:39:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1230669.575 ops/s
[info] # Warmup Iteration   2: 1379508.888 ops/s
[info] # Warmup Iteration   3: 1410586.471 ops/s
[info] # Warmup Iteration   4: 1411011.889 ops/s
[info] # Warmup Iteration   5: 1424148.504 ops/s
[info] Iteration   1: 1421246.144 ops/s
[info] Iteration   2: 1431288.275 ops/s
[info] Iteration   3: 1337493.237 ops/s
[info] Iteration   4: 1334656.815 ops/s
[info] Iteration   5: 1417464.893 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1388429.873 ±(99.9%) 185100.111 ops/s [Average]
[info]   (min, avg, max) = (1334656.815, 1388429.873, 1431288.275), stdev = 48069.911
[info]   CI (99.9%): [1203329.762, 1573529.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:CPI":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   19.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1563.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   2064.629 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   9.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-stores":
[info]   14.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branches":
[info]   2310.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:cycles":
[info]   2742.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1496.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1921.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:instructions":
[info]   12473.811 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:39:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1213579.993 ops/s
[info] # Warmup Iteration   2: 1385776.603 ops/s
[info] # Warmup Iteration   3: 1525210.141 ops/s
[info] # Warmup Iteration   4: 1526287.442 ops/s
[info] # Warmup Iteration   5: 1526602.974 ops/s
[info] Iteration   1: 1525745.752 ops/s
[info] Iteration   2: 1468133.292 ops/s
[info] Iteration   3: 1467306.033 ops/s
[info] Iteration   4: 1525926.865 ops/s
[info] Iteration   5: 1526140.904 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1502650.569 ±(99.9%) 122793.404 ops/s [Average]
[info]   (min, avg, max) = (1467306.033, 1502650.569, 1526140.904), stdev = 31889.057
[info]   CI (99.9%): [1379857.165, 1625443.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1451.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1943.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2155.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2475.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1459.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1946.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   11698.333 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:38:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 136874.851 ops/s
[info] # Warmup Iteration   2: 548688.681 ops/s
[info] # Warmup Iteration   3: 619107.607 ops/s
[info] # Warmup Iteration   4: 630856.832 ops/s
[info] # Warmup Iteration   5: 621274.735 ops/s
[info] Iteration   1: 630701.393 ops/s
[info] Iteration   2: 630546.672 ops/s
[info] Iteration   3: 629715.049 ops/s
[info] Iteration   4: 629222.519 ops/s
[info] Iteration   5: 611685.354 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   626374.197 ±(99.9%) 31704.768 ops/s [Average]
[info]   (min, avg, max) = (611685.354, 626374.197, 630701.393), stdev = 8233.628
[info]   CI (99.9%): [594669.429, 658078.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:CPI":
[info]   0.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   68.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-loads":
[info]   3622.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-stores":
[info]   2567.860 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-loads":
[info]   0.527 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-store-misses":
[info]   17.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-stores":
[info]   34.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:branch-misses":
[info]   3.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:branches":
[info]   5254.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:cycles":
[info]   6080.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.467 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-loads":
[info]   3687.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-stores":
[info]   2550.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-loads":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:instructions":
[info]   22137.623 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:38:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 280.395 ops/s
[info] # Warmup Iteration   2: 469.127 ops/s
[info] # Warmup Iteration   3: 700.423 ops/s
[info] # Warmup Iteration   4: 795.328 ops/s
[info] # Warmup Iteration   5: 789.685 ops/s
[info] Iteration   1: 795.124 ops/s
[info] Iteration   2: 795.586 ops/s
[info] Iteration   3: 782.449 ops/s
[info] Iteration   4: 738.309 ops/s
[info] Iteration   5: 668.653 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   756.024 ±(99.9%) 208.610 ops/s [Average]
[info]   (min, avg, max) = (668.653, 756.024, 795.586), stdev = 54.175
[info]   CI (99.9%): [547.415, 964.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:CPI":
[info]   0.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-load-misses":
[info]   295011.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-loads":
[info]   4954130.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-stores":
[info]   2734354.952 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:L1-icache-load-misses":
[info]   75852.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-load-misses":
[info]   1715.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-loads":
[info]   30079.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-store-misses":
[info]   8301.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:LLC-stores":
[info]   17333.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:branch-misses":
[info]   13242.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:branches":
[info]   3691062.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:cycles":
[info]   6510442.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-load-misses":
[info]   838.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-loads":
[info]   5004516.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-store-misses":
[info]   37.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-stores":
[info]   2740633.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-load-misses":
[info]   343.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-loads":
[info]   3671.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:instructions":
[info]   19277363.649 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:38:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 126.668 ops/s
[info] # Warmup Iteration   2: 529.507 ops/s
[info] # Warmup Iteration   3: 735.232 ops/s
[info] # Warmup Iteration   4: 774.889 ops/s
[info] # Warmup Iteration   5: 772.431 ops/s
[info] Iteration   1: 777.868 ops/s
[info] Iteration   2: 774.153 ops/s
[info] Iteration   3: 745.778 ops/s
[info] Iteration   4: 746.960 ops/s
[info] Iteration   5: 770.726 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   763.097 ±(99.9%) 59.622 ops/s [Average]
[info]   (min, avg, max) = (745.778, 763.097, 777.868), stdev = 15.484
[info]   CI (99.9%): [703.475, 822.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   231815.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   4338666.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   2391401.912 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   51017.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-load-misses":
[info]   522.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-loads":
[info]   13357.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-store-misses":
[info]   7129.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-stores":
[info]   15256.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:branch-misses":
[info]   13706.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:branches":
[info]   3237042.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:cycles":
[info]   5239096.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   452.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-loads":
[info]   4552937.476 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   14.507 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-stores":
[info]   2526346.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   178.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-loads":
[info]   933.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:instructions":
[info]   17067105.390 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:38:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 21744.215 ops/s
[info] # Warmup Iteration   2: 34961.294 ops/s
[info] # Warmup Iteration   3: 40893.454 ops/s
[info] # Warmup Iteration   4: 38084.466 ops/s
[info] # Warmup Iteration   5: 38895.244 ops/s
[info] Iteration   1: 37657.272 ops/s
[info] Iteration   2: 38042.227 ops/s
[info] Iteration   3: 38331.609 ops/s
[info] Iteration   4: 37863.650 ops/s
[info] Iteration   5: 36735.932 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   37726.138 ±(99.9%) 2334.859 ops/s [Average]
[info]   (min, avg, max) = (36735.932, 37726.138, 38331.609), stdev = 606.355
[info]   CI (99.9%): [35391.279, 40060.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:CPI":
[info]   0.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   3862.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   43924.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   21258.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   280.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   3.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-loads":
[info]   1398.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   24.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-stores":
[info]   98.875 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branch-misses":
[info]   194.682 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branches":
[info]   60085.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:cycles":
[info]   102170.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-loads":
[info]   43839.663 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-stores":
[info]   21423.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   4.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-loads":
[info]   1.191 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:instructions":
[info]   252254.408 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:37:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 218.901 ops/s
[info] # Warmup Iteration   2: 541.823 ops/s
[info] # Warmup Iteration   3: 730.167 ops/s
[info] # Warmup Iteration   4: 762.396 ops/s
[info] # Warmup Iteration   5: 736.235 ops/s
[info] Iteration   1: 727.548 ops/s
[info] Iteration   2: 716.204 ops/s
[info] Iteration   3: 770.221 ops/s
[info] Iteration   4: 729.296 ops/s
[info] Iteration   5: 768.008 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   742.256 ±(99.9%) 96.423 ops/s [Average]
[info]   (min, avg, max) = (716.204, 742.256, 770.221), stdev = 25.041
[info]   CI (99.9%): [645.832, 838.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:CPI":
[info]   0.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   258537.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-loads":
[info]   4692172.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-stores":
[info]   2546015.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   61504.834 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-load-misses":
[info]   1193.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-loads":
[info]   21457.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-store-misses":
[info]   7722.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-stores":
[info]   16181.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:branch-misses":
[info]   13549.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:branches":
[info]   3528505.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:cycles":
[info]   5947935.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-load-misses":
[info]   756.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-loads":
[info]   4705765.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-store-misses":
[info]   27.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-stores":
[info]   2670590.115 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-load-misses":
[info]   329.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-loads":
[info]   2351.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:instructions":
[info]   18660465.159 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:37:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6126.789 ops/s
[info] # Warmup Iteration   2: 11700.484 ops/s
[info] # Warmup Iteration   3: 13433.379 ops/s
[info] # Warmup Iteration   4: 16863.671 ops/s
[info] # Warmup Iteration   5: 16846.894 ops/s
[info] Iteration   1: 17252.225 ops/s
[info] Iteration   2: 17268.470 ops/s
[info] Iteration   3: 16015.204 ops/s
[info] Iteration   4: 16249.608 ops/s
[info] Iteration   5: 15749.263 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   16506.954 ±(99.9%) 2734.687 ops/s [Average]
[info]   (min, avg, max) = (15749.263, 16506.954, 17268.470), stdev = 710.190
[info]   CI (99.9%): [13772.267, 19241.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:CPI":
[info]   0.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   6421.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-loads":
[info]   191029.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-stores":
[info]   89520.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:L1-icache-load-misses":
[info]   1916.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-load-misses":
[info]   62.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-loads":
[info]   724.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-store-misses":
[info]   543.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-stores":
[info]   1069.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:branch-misses":
[info]   950.455 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:branches":
[info]   215314.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:cycles":
[info]   349235.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-load-misses":
[info]   31.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-loads":
[info]   189621.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-store-misses":
[info]   6.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-stores":
[info]   89633.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-load-misses":
[info]   9.942 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-loads":
[info]   174.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:instructions":
[info]   905334.504 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:37:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5232.470 ops/s
[info] # Warmup Iteration   2: 13699.265 ops/s
[info] # Warmup Iteration   3: 15775.976 ops/s
[info] # Warmup Iteration   4: 20348.468 ops/s
[info] # Warmup Iteration   5: 19052.239 ops/s
[info] Iteration   1: 20015.985 ops/s
[info] Iteration   2: 18997.124 ops/s
[info] Iteration   3: 18193.768 ops/s
[info] Iteration   4: 19318.179 ops/s
[info] Iteration   5: 19479.681 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   19200.947 ±(99.9%) 2591.455 ops/s [Average]
[info]   (min, avg, max) = (18193.768, 19200.947, 20015.985), stdev = 672.993
[info]   CI (99.9%): [16609.492, 21792.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:CPI":
[info]   0.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   4511.836 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   159614.951 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   76625.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   941.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   40.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-loads":
[info]   475.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   180.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-stores":
[info]   487.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branch-misses":
[info]   735.882 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branches":
[info]   152116.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:cycles":
[info]   276955.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   26.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-loads":
[info]   160525.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   1.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-stores":
[info]   77036.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   8.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-loads":
[info]   124.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:instructions":
[info]   720517.825 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:37:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 244307.479 ops/s
[info] # Warmup Iteration   2: 304587.807 ops/s
[info] # Warmup Iteration   3: 315554.632 ops/s
[info] # Warmup Iteration   4: 316144.054 ops/s
[info] # Warmup Iteration   5: 315734.275 ops/s
[info] Iteration   1: 308518.670 ops/s
[info] Iteration   2: 305218.098 ops/s
[info] Iteration   3: 313496.140 ops/s
[info] Iteration   4: 313615.924 ops/s
[info] Iteration   5: 314534.285 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   311076.624 ±(99.9%) 15537.119 ops/s [Average]
[info]   (min, avg, max) = (305218.098, 311076.624, 314534.285), stdev = 4034.940
[info]   CI (99.9%): [295539.505, 326613.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:CPI":
[info]   0.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   698.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   7164.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   5745.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.349 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-loads":
[info]   3.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   76.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-stores":
[info]   110.775 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branch-misses":
[info]   2.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branches":
[info]   5657.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:cycles":
[info]   12454.406 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   7296.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   5995.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:instructions":
[info]   37128.647 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:37:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 285686.162 ops/s
[info] # Warmup Iteration   2: 346975.022 ops/s
[info] # Warmup Iteration   3: 360743.650 ops/s
[info] # Warmup Iteration   4: 360727.709 ops/s
[info] # Warmup Iteration   5: 345260.896 ops/s
[info] Iteration   1: 344651.120 ops/s
[info] Iteration   2: 345327.711 ops/s
[info] Iteration   3: 346123.905 ops/s
[info] Iteration   4: 347190.470 ops/s
[info] Iteration   5: 346451.861 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   345949.013 ±(99.9%) 3799.866 ops/s [Average]
[info]   (min, avg, max) = (344651.120, 345949.013, 347190.470), stdev = 986.813
[info]   CI (99.9%): [342149.147, 349748.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   711.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   6763.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   5582.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5283.184 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   10556.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   6828.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   5665.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   35207.549 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:36:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5373.028 ops/s
[info] # Warmup Iteration   2: 13055.379 ops/s
[info] # Warmup Iteration   3: 14445.322 ops/s
[info] # Warmup Iteration   4: 14975.297 ops/s
[info] # Warmup Iteration   5: 17091.010 ops/s
[info] Iteration   1: 16701.970 ops/s
[info] Iteration   2: 16715.368 ops/s
[info] Iteration   3: 15604.412 ops/s
[info] Iteration   4: 16045.697 ops/s
[info] Iteration   5: 16420.938 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   16297.677 ±(99.9%) 1823.700 ops/s [Average]
[info]   (min, avg, max) = (15604.412, 16297.677, 16715.368), stdev = 473.609
[info]   CI (99.9%): [14473.977, 18121.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:CPI":
[info]   0.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   6908.130 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-loads":
[info]   194082.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-stores":
[info]   88606.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   1728.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-load-misses":
[info]   89.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-loads":
[info]   728.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-store-misses":
[info]   237.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-stores":
[info]   604.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:branch-misses":
[info]   1029.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:branches":
[info]   171848.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:cycles":
[info]   371670.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-load-misses":
[info]   41.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-loads":
[info]   194313.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-store-misses":
[info]   2.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-stores":
[info]   87301.895 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-load-misses":
[info]   14.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-loads":
[info]   165.892 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:instructions":
[info]   824491.860 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:36:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1052350.032 ops/s
[info] # Warmup Iteration   2: 1344974.885 ops/s
[info] # Warmup Iteration   3: 1403530.038 ops/s
[info] # Warmup Iteration   4: 1403636.033 ops/s
[info] # Warmup Iteration   5: 1403322.515 ops/s
[info] Iteration   1: 1403996.734 ops/s
[info] Iteration   2: 1403902.490 ops/s
[info] Iteration   3: 1394174.809 ops/s
[info] Iteration   4: 1399268.509 ops/s
[info] Iteration   5: 1401257.908 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1400520.090 ±(99.9%) 15629.666 ops/s [Average]
[info]   (min, avg, max) = (1394174.809, 1400520.090, 1403996.734), stdev = 4058.975
[info]   CI (99.9%): [1384890.424, 1416149.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:CPI":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1011.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1100.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-loads":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:LLC-stores":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:branch-misses":
[info]   3.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:branches":
[info]   3276.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:cycles":
[info]   2748.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-loads":
[info]   1014.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:dTLB-stores":
[info]   1092.611 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:instructions":
[info]   12794.588 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:36:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8684.719 ops/s
[info] # Warmup Iteration   2: 113982.127 ops/s
[info] # Warmup Iteration   3: 119191.235 ops/s
[info] # Warmup Iteration   4: 132006.698 ops/s
[info] # Warmup Iteration   5: 128085.979 ops/s
[info] Iteration   1: 132977.569 ops/s
[info] Iteration   2: 124174.875 ops/s
[info] Iteration   3: 111991.036 ops/s
[info] Iteration   4: 116868.827 ops/s
[info] Iteration   5: 119527.447 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   121107.951 ±(99.9%) 30677.343 ops/s [Average]
[info]   (min, avg, max) = (111991.036, 121107.951, 132977.569), stdev = 7966.809
[info]   CI (99.9%): [90430.608, 151785.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:CPI":
[info]   0.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1302.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-dcache-loads":
[info]   27007.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-dcache-stores":
[info]   20199.490 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:L1-icache-load-misses":
[info]   119.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-load-misses":
[info]   6.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-loads":
[info]   28.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-store-misses":
[info]   84.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:LLC-stores":
[info]   231.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:branch-misses":
[info]   65.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:branches":
[info]   21133.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:cycles":
[info]   35063.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.535 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-loads":
[info]   26099.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:dTLB-stores":
[info]   20361.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:iTLB-loads":
[info]   6.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:instructions":
[info]   112670.000 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:36:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1012885.058 ops/s
[info] # Warmup Iteration   2: 2053123.844 ops/s
[info] # Warmup Iteration   3: 2234690.620 ops/s
[info] # Warmup Iteration   4: 2237211.843 ops/s
[info] # Warmup Iteration   5: 2239274.382 ops/s
[info] Iteration   1: 2239618.967 ops/s
[info] Iteration   2: 2239554.818 ops/s
[info] Iteration   3: 2234800.351 ops/s
[info] Iteration   4: 2242775.416 ops/s
[info] Iteration   5: 2244070.646 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   2240164.040 ±(99.9%) 13819.235 ops/s [Average]
[info]   (min, avg, max) = (2234800.351, 2240164.040, 2244070.646), stdev = 3588.811
[info]   CI (99.9%): [2226344.805, 2253983.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   7.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   558.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   779.449 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-loads":
[info]   0.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:LLC-stores":
[info]   2.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:branch-misses":
[info]   1.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:branches":
[info]   1930.595 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:cycles":
[info]   1712.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-loads":
[info]   559.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:dTLB-stores":
[info]   773.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:instructions":
[info]   7746.390 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:35:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1564121.112 ops/s
[info] # Warmup Iteration   2: 1896954.404 ops/s
[info] # Warmup Iteration   3: 1932974.869 ops/s
[info] # Warmup Iteration   4: 1945685.543 ops/s
[info] # Warmup Iteration   5: 1956013.493 ops/s
[info] Iteration   1: 1947901.362 ops/s
[info] Iteration   2: 1948144.013 ops/s
[info] Iteration   3: 1949095.160 ops/s
[info] Iteration   4: 1948985.185 ops/s
[info] Iteration   5: 1962877.889 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1951400.722 ±(99.9%) 24785.668 ops/s [Average]
[info]   (min, avg, max) = (1947901.362, 1951400.722, 1962877.889), stdev = 6436.759
[info]   CI (99.9%): [1926615.054, 1976186.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:CPI":
[info]   0.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   7.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   743.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   974.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:branch-misses":
[info]   3.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:branches":
[info]   2076.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:cycles":
[info]   1957.645 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-loads":
[info]   742.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:dTLB-stores":
[info]   949.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:instructions":
[info]   8608.456 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:35:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1522299.790 ops/s
[info] # Warmup Iteration   2: 1917087.626 ops/s
[info] # Warmup Iteration   3: 2022836.094 ops/s
[info] # Warmup Iteration   4: 2022201.400 ops/s
[info] # Warmup Iteration   5: 2022415.771 ops/s
[info] Iteration   1: 2022902.914 ops/s
[info] Iteration   2: 2022669.361 ops/s
[info] Iteration   3: 2015637.284 ops/s
[info] Iteration   4: 2015481.669 ops/s
[info] Iteration   5: 1941640.300 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2003666.306 ±(99.9%) 134239.209 ops/s [Average]
[info]   (min, avg, max) = (1941640.300, 2003666.306, 2022902.914), stdev = 34861.496
[info]   CI (99.9%): [1869427.097, 2137905.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.221 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   723.702 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   957.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   3.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2050.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1896.553 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   721.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   957.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   8564.345 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:35:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12011.851 ops/s
[info] # Warmup Iteration   2: 47255.952 ops/s
[info] # Warmup Iteration   3: 51310.558 ops/s
[info] # Warmup Iteration   4: 51316.569 ops/s
[info] # Warmup Iteration   5: 58032.027 ops/s
[info] Iteration   1: 57647.006 ops/s
[info] Iteration   2: 54895.110 ops/s
[info] Iteration   3: 57231.574 ops/s
[info] Iteration   4: 57911.894 ops/s
[info] Iteration   5: 55028.902 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   56542.897 ±(99.9%) 5637.897 ops/s [Average]
[info]   (min, avg, max) = (54895.110, 56542.897, 57911.894), stdev = 1464.144
[info]   CI (99.9%): [50905.000, 62180.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:CPI":
[info]   0.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1181.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-dcache-loads":
[info]   37702.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-dcache-stores":
[info]   24717.597 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:L1-icache-load-misses":
[info]   7.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-load-misses":
[info]   0.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-loads":
[info]   5.192 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-store-misses":
[info]   9.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:LLC-stores":
[info]   72.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:branch-misses":
[info]   98.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:branches":
[info]   42573.992 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:cycles":
[info]   65828.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-loads":
[info]   38737.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:dTLB-stores":
[info]   24354.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:iTLB-loads":
[info]   0.425 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:instructions":
[info]   210360.043 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:35:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 138461.985 ops/s
[info] # Warmup Iteration   2: 943706.569 ops/s
[info] # Warmup Iteration   3: 1230499.526 ops/s
[info] # Warmup Iteration   4: 1250812.484 ops/s
[info] # Warmup Iteration   5: 1260678.688 ops/s
[info] Iteration   1: 1256756.354 ops/s
[info] Iteration   2: 1252839.203 ops/s
[info] Iteration   3: 1215411.028 ops/s
[info] Iteration   4: 1248125.584 ops/s
[info] Iteration   5: 1259745.708 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   1246575.575 ±(99.9%) 69150.028 ops/s [Average]
[info]   (min, avg, max) = (1215411.028, 1246575.575, 1259745.708), stdev = 17958.043
[info]   CI (99.9%): [1177425.547, 1315725.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:CPI":
[info]   0.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-dcache-load-misses":
[info]   69.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-dcache-loads":
[info]   2215.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-dcache-stores":
[info]   1501.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:L1-icache-load-misses":
[info]   4.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-load-misses":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-loads":
[info]   0.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-store-misses":
[info]   6.644 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:LLC-stores":
[info]   19.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:branch-misses":
[info]   1.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:branches":
[info]   2187.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:cycles":
[info]   3065.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-load-misses":
[info]   0.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-loads":
[info]   2236.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:dTLB-stores":
[info]   1550.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:instructions":
[info]   10259.700 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:34:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.742 ops/s
[info] # Warmup Iteration   2: 4726334.732 ops/s
[info] # Warmup Iteration   3: 4702480.104 ops/s
[info] # Warmup Iteration   4: 4913157.713 ops/s
[info] # Warmup Iteration   5: 4893598.879 ops/s
[info] Iteration   1: 4918104.200 ops/s
[info] Iteration   2: 5241653.090 ops/s
[info] Iteration   3: 5375170.848 ops/s
[info] Iteration   4: 5367040.327 ops/s
[info] Iteration   5: 5389098.872 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5258213.467 ±(99.9%) 766756.573 ops/s [Average]
[info]   (min, avg, max) = (4918104.200, 5258213.467, 5389098.872), stdev = 199124.247
[info]   CI (99.9%): [4491456.894, 6024970.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:CPI":
[info]   0.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   1.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   620.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   336.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:branch-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:branches":
[info]   638.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:cycles":
[info]   709.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-loads":
[info]   627.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:dTLB-stores":
[info]   335.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:instructions":
[info]   2691.744 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:34:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 18893.602 ops/s
[info] # Warmup Iteration   2: 794888.689 ops/s
[info] # Warmup Iteration   3: 1035898.072 ops/s
[info] # Warmup Iteration   4: 1052949.723 ops/s
[info] # Warmup Iteration   5: 1109472.225 ops/s
[info] Iteration   1: 1044789.208 ops/s
[info] Iteration   2: 1069147.426 ops/s
[info] Iteration   3: 1098333.607 ops/s
[info] Iteration   4: 1091235.849 ops/s
[info] Iteration   5: 1107380.758 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   1082177.370 ±(99.9%) 97146.658 ops/s [Average]
[info]   (min, avg, max) = (1044789.208, 1082177.370, 1107380.758), stdev = 25228.679
[info]   CI (99.9%): [985030.712, 1179324.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   29.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   2656.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   1677.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   48.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-loads":
[info]   0.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-store-misses":
[info]   1.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:LLC-stores":
[info]   7.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:branch-misses":
[info]   0.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:branches":
[info]   1991.761 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:cycles":
[info]   3478.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-loads":
[info]   2736.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:dTLB-stores":
[info]   1719.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:instructions":
[info]   10437.524 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:34:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8622084.668 ops/s
[info] # Warmup Iteration   2: 9636585.094 ops/s
[info] # Warmup Iteration   3: 10505656.118 ops/s
[info] # Warmup Iteration   4: 10445065.319 ops/s
[info] # Warmup Iteration   5: 10466985.563 ops/s
[info] Iteration   1: 10468398.423 ops/s
[info] Iteration   2: 10464533.215 ops/s
[info] Iteration   3: 10492518.337 ops/s
[info] Iteration   4: 10377151.488 ops/s
[info] Iteration   5: 10467593.632 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   10454039.019 ±(99.9%) 171044.010 ops/s [Average]
[info]   (min, avg, max) = (10377151.488, 10454039.019, 10492518.337), stdev = 44419.586
[info]   CI (99.9%): [10282995.009, 10625083.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:CPI":
[info]   0.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   245.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   109.102 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:branch-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:branches":
[info]   513.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:cycles":
[info]   370.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-loads":
[info]   239.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:dTLB-stores":
[info]   106.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:instructions":
[info]   1751.632 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:34:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4155.139 ops/s
[info] # Warmup Iteration   2: 412342.696 ops/s
[info] # Warmup Iteration   3: 746449.326 ops/s
[info] # Warmup Iteration   4: 793507.265 ops/s
[info] # Warmup Iteration   5: 795184.278 ops/s
[info] Iteration   1: 798543.946 ops/s
[info] Iteration   2: 804261.757 ops/s
[info] Iteration   3: 804658.928 ops/s
[info] Iteration   4: 800820.116 ops/s
[info] Iteration   5: 800953.038 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   801847.557 ±(99.9%) 9911.541 ops/s [Average]
[info]   (min, avg, max) = (798543.946, 801847.557, 804658.928), stdev = 2573.996
[info]   CI (99.9%): [791936.016, 811759.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:CPI":
[info]   0.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   103.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-dcache-loads":
[info]   3378.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-dcache-stores":
[info]   2389.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   82.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-loads":
[info]   1.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-store-misses":
[info]   3.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:LLC-stores":
[info]   22.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:branch-misses":
[info]   2.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:branches":
[info]   2349.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:cycles":
[info]   4759.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-loads":
[info]   3568.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:dTLB-stores":
[info]   2414.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:iTLB-loads":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:instructions":
[info]   13271.021 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:33:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 946.357 ops/s
[info] # Warmup Iteration   2: 3911.799 ops/s
[info] # Warmup Iteration   3: 4908.053 ops/s
[info] # Warmup Iteration   4: 5333.327 ops/s
[info] # Warmup Iteration   5: 5379.252 ops/s
[info] Iteration   1: 5477.017 ops/s
[info] Iteration   2: 5321.318 ops/s
[info] Iteration   3: 5395.912 ops/s
[info] Iteration   4: 5456.209 ops/s
[info] Iteration   5: 5211.256 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   5372.343 ±(99.9%) 417.835 ops/s [Average]
[info]   (min, avg, max) = (5211.256, 5372.343, 5477.017), stdev = 108.511
[info]   CI (99.9%): [4954.507, 5790.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:CPI":
[info]   0.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-dcache-load-misses":
[info]   15405.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-dcache-loads":
[info]   419621.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-dcache-stores":
[info]   254617.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:L1-icache-load-misses":
[info]   1392.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-load-misses":
[info]   45.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-loads":
[info]   500.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-store-misses":
[info]   907.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:LLC-stores":
[info]   2719.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:branch-misses":
[info]   912.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:branches":
[info]   502822.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:cycles":
[info]   693974.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-load-misses":
[info]   31.851 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-loads":
[info]   412678.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-store-misses":
[info]   5.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:dTLB-stores":
[info]   247195.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:iTLB-load-misses":
[info]   5.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:iTLB-loads":
[info]   10.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:instructions":
[info]   2251644.512 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:33:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1374.363 ops/s
[info] # Warmup Iteration   2: 6100.823 ops/s
[info] # Warmup Iteration   3: 7851.620 ops/s
[info] # Warmup Iteration   4: 7931.099 ops/s
[info] # Warmup Iteration   5: 7973.865 ops/s
[info] Iteration   1: 7970.079 ops/s
[info] Iteration   2: 7990.643 ops/s
[info] Iteration   3: 7973.495 ops/s
[info] Iteration   4: 7792.398 ops/s
[info] Iteration   5: 7973.092 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   7939.941 ±(99.9%) 319.120 ops/s [Average]
[info]   (min, avg, max) = (7792.398, 7939.941, 7990.643), stdev = 82.875
[info]   CI (99.9%): [7620.821, 8259.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   10840.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-dcache-loads":
[info]   309596.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-dcache-stores":
[info]   248399.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   589.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-load-misses":
[info]   57.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-loads":
[info]   384.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-store-misses":
[info]   886.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:LLC-stores":
[info]   2150.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:branch-misses":
[info]   1107.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:branches":
[info]   335332.337 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:cycles":
[info]   491105.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-load-misses":
[info]   30.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-loads":
[info]   306235.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.482 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:dTLB-stores":
[info]   253029.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:iTLB-load-misses":
[info]   3.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:iTLB-loads":
[info]   4.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:instructions":
[info]   1611175.442 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:33:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 46457.548 ops/s
[info] # Warmup Iteration   2: 55437.573 ops/s
[info] # Warmup Iteration   3: 55213.345 ops/s
[info] # Warmup Iteration   4: 57272.013 ops/s
[info] # Warmup Iteration   5: 57016.478 ops/s
[info] Iteration   1: 57261.335 ops/s
[info] Iteration   2: 56342.437 ops/s
[info] Iteration   3: 57328.814 ops/s
[info] Iteration   4: 56713.129 ops/s
[info] Iteration   5: 56169.339 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   56763.011 ±(99.9%) 2019.549 ops/s [Average]
[info]   (min, avg, max) = (56169.339, 56763.011, 57328.814), stdev = 524.470
[info]   CI (99.9%): [54743.462, 58782.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   669.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   31283.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   25470.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   42.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-loads":
[info]   5.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-store-misses":
[info]   5.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:LLC-stores":
[info]   66.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:branch-misses":
[info]   162.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:branches":
[info]   65806.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:cycles":
[info]   68650.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-loads":
[info]   31654.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:dTLB-stores":
[info]   25871.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.498 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:instructions":
[info]   287280.786 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:33:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2104.150 ops/s
[info] # Warmup Iteration   2: 4358.224 ops/s
[info] # Warmup Iteration   3: 5467.264 ops/s
[info] # Warmup Iteration   4: 5514.158 ops/s
[info] # Warmup Iteration   5: 5528.518 ops/s
[info] Iteration   1: 5516.185 ops/s
[info] Iteration   2: 5360.628 ops/s
[info] Iteration   3: 5523.999 ops/s
[info] Iteration   4: 5522.736 ops/s
[info] Iteration   5: 5466.901 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   5478.090 ±(99.9%) 268.682 ops/s [Average]
[info]   (min, avg, max) = (5360.628, 5478.090, 5523.999), stdev = 69.776
[info]   CI (99.9%): [5209.408, 5746.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:CPI":
[info]   0.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-dcache-load-misses":
[info]   8684.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-dcache-loads":
[info]   211345.733 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-dcache-stores":
[info]   158732.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:L1-icache-load-misses":
[info]   956.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-load-misses":
[info]   8.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-loads":
[info]   327.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-store-misses":
[info]   1972.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:LLC-stores":
[info]   3357.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:branch-misses":
[info]   731.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:branches":
[info]   243836.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:cycles":
[info]   699787.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-load-misses":
[info]   10.858 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-loads":
[info]   213654.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-store-misses":
[info]   14.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:dTLB-stores":
[info]   159812.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:iTLB-load-misses":
[info]   2.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:iTLB-loads":
[info]   7.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:instructions":
[info]   1319076.316 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:33:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1501.317 ops/s
[info] # Warmup Iteration   2: 4897.647 ops/s
[info] # Warmup Iteration   3: 5307.649 ops/s
[info] # Warmup Iteration   4: 5350.109 ops/s
[info] # Warmup Iteration   5: 5363.990 ops/s
[info] Iteration   1: 5366.206 ops/s
[info] Iteration   2: 5359.189 ops/s
[info] Iteration   3: 5381.162 ops/s
[info] Iteration   4: 5364.888 ops/s
[info] Iteration   5: 5360.286 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5366.346 ±(99.9%) 33.877 ops/s [Average]
[info]   (min, avg, max) = (5359.189, 5366.346, 5381.162), stdev = 8.798
[info]   CI (99.9%): [5332.469, 5400.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:CPI":
[info]   0.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   3851.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   263388.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   179106.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   322.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-load-misses":
[info]   7.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-loads":
[info]   220.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-store-misses":
[info]   274.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:LLC-stores":
[info]   579.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:branch-misses":
[info]   705.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:branches":
[info]   248873.977 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:cycles":
[info]   717155.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   6.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-loads":
[info]   264830.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   2.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:dTLB-stores":
[info]   177270.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   3.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:iTLB-loads":
[info]   5.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:instructions":
[info]   1406908.162 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:32:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5373.527 ops/s
[info] # Warmup Iteration   2: 6510.230 ops/s
[info] # Warmup Iteration   3: 6941.672 ops/s
[info] # Warmup Iteration   4: 6991.545 ops/s
[info] # Warmup Iteration   5: 6963.548 ops/s
[info] Iteration   1: 6990.164 ops/s
[info] Iteration   2: 6955.506 ops/s
[info] Iteration   3: 6936.586 ops/s
[info] Iteration   4: 6976.944 ops/s
[info] Iteration   5: 7009.380 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6973.716 ±(99.9%) 109.982 ops/s [Average]
[info]   (min, avg, max) = (6936.586, 6973.716, 7009.380), stdev = 28.562
[info]   CI (99.9%): [6863.734, 7083.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:CPI":
[info]   0.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   1649.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   131491.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   86893.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   103.392 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   2.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-loads":
[info]   23.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   152.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:LLC-stores":
[info]   263.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:branch-misses":
[info]   515.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:branches":
[info]   152849.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:cycles":
[info]   548960.916 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   3.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-loads":
[info]   132035.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   8.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:dTLB-stores":
[info]   86128.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   2.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:iTLB-loads":
[info]   5.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:instructions":
[info]   936258.661 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:32:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5554.534 ops/s
[info] # Warmup Iteration   2: 6486.525 ops/s
[info] # Warmup Iteration   3: 6855.083 ops/s
[info] # Warmup Iteration   4: 6823.795 ops/s
[info] # Warmup Iteration   5: 6852.706 ops/s
[info] Iteration   1: 6860.370 ops/s
[info] Iteration   2: 6829.834 ops/s
[info] Iteration   3: 6881.821 ops/s
[info] Iteration   4: 6767.664 ops/s
[info] Iteration   5: 6831.186 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6834.175 ±(99.9%) 165.709 ops/s [Average]
[info]   (min, avg, max) = (6767.664, 6834.175, 6881.821), stdev = 43.034
[info]   CI (99.9%): [6668.466, 6999.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1378.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   117731.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   90869.956 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   47.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   7.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   29.721 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   1.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   50.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   560.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   151378.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   549444.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   2.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   115998.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   4.569 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   89687.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   2.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   7.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   936415.018 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:32:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1427.839 ops/s
[info] # Warmup Iteration   2: 5181.604 ops/s
[info] # Warmup Iteration   3: 8228.120 ops/s
[info] # Warmup Iteration   4: 8804.999 ops/s
[info] # Warmup Iteration   5: 8799.648 ops/s
[info] Iteration   1: 8804.352 ops/s
[info] Iteration   2: 8793.953 ops/s
[info] Iteration   3: 8838.910 ops/s
[info] Iteration   4: 8422.189 ops/s
[info] Iteration   5: 9158.883 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   8803.658 ±(99.9%) 1006.044 ops/s [Average]
[info]   (min, avg, max) = (8422.189, 8803.658, 9158.883), stdev = 261.266
[info]   CI (99.9%): [7797.614, 9809.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:CPI":
[info]   0.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-dcache-load-misses":
[info]   12271.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-dcache-loads":
[info]   327812.657 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-dcache-stores":
[info]   252506.509 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:L1-icache-load-misses":
[info]   2164.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-load-misses":
[info]   81.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-loads":
[info]   784.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-store-misses":
[info]   917.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:LLC-stores":
[info]   2098.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:branch-misses":
[info]   561.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:branches":
[info]   305843.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:cycles":
[info]   497516.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-load-misses":
[info]   35.435 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-loads":
[info]   333275.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-store-misses":
[info]   13.523 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:dTLB-stores":
[info]   256800.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:iTLB-load-misses":
[info]   14.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:iTLB-loads":
[info]   145.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:instructions":
[info]   1526668.538 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:32:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.926 ops/s
[info] # Warmup Iteration   2: 15550.395 ops/s
[info] # Warmup Iteration   3: 17932.268 ops/s
[info] # Warmup Iteration   4: 18003.047 ops/s
[info] # Warmup Iteration   5: 17975.250 ops/s
[info] Iteration   1: 18026.366 ops/s
[info] Iteration   2: 17792.804 ops/s
[info] Iteration   3: 17599.721 ops/s
[info] Iteration   4: 18010.650 ops/s
[info] Iteration   5: 18032.038 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   17892.316 ±(99.9%) 738.201 ops/s [Average]
[info]   (min, avg, max) = (17599.721, 17892.316, 18032.038), stdev = 191.709
[info]   CI (99.9%): [17154.115, 18630.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   1478.448 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   159929.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   81088.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   431.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-load-misses":
[info]   8.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-loads":
[info]   90.832 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-store-misses":
[info]   7.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:LLC-stores":
[info]   83.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:branch-misses":
[info]   279.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:branches":
[info]   186848.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:cycles":
[info]   231820.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   6.999 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-loads":
[info]   162214.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-stores":
[info]   78761.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   6.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-loads":
[info]   49.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:instructions":
[info]   772384.891 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:31:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4290.936 ops/s
[info] # Warmup Iteration   2: 14103.965 ops/s
[info] # Warmup Iteration   3: 14848.694 ops/s
[info] # Warmup Iteration   4: 14854.939 ops/s
[info] # Warmup Iteration   5: 14515.902 ops/s
[info] Iteration   1: 14880.645 ops/s
[info] Iteration   2: 14798.371 ops/s
[info] Iteration   3: 14349.431 ops/s
[info] Iteration   4: 14517.662 ops/s
[info] Iteration   5: 14718.367 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   14652.895 ±(99.9%) 834.129 ops/s [Average]
[info]   (min, avg, max) = (14349.431, 14652.895, 14880.645), stdev = 216.621
[info]   CI (99.9%): [13818.766, 15487.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:CPI":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   2594.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-loads":
[info]   214055.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-stores":
[info]   112431.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   715.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-load-misses":
[info]   20.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-loads":
[info]   180.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-store-misses":
[info]   19.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:LLC-stores":
[info]   141.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:branch-misses":
[info]   487.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:branches":
[info]   198094.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:cycles":
[info]   290606.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-load-misses":
[info]   13.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-loads":
[info]   215585.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:dTLB-stores":
[info]   111796.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:iTLB-load-misses":
[info]   12.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:iTLB-loads":
[info]   69.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:instructions":
[info]   916018.793 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:31:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 19555.133 ops/s
[info] # Warmup Iteration   2: 21226.236 ops/s
[info] # Warmup Iteration   3: 23069.104 ops/s
[info] # Warmup Iteration   4: 20801.267 ops/s
[info] # Warmup Iteration   5: 21159.242 ops/s
[info] Iteration   1: 21220.187 ops/s
[info] Iteration   2: 21842.166 ops/s
[info] Iteration   3: 21993.869 ops/s
[info] Iteration   4: 23281.348 ops/s
[info] Iteration   5: 23170.720 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22301.658 ±(99.9%) 3439.009 ops/s [Average]
[info]   (min, avg, max) = (21220.187, 22301.658, 23281.348), stdev = 893.100
[info]   CI (99.9%): [18862.649, 25740.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1373.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   94394.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   28829.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   522.902 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-load-misses":
[info]   13.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-loads":
[info]   105.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-store-misses":
[info]   11.660 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:LLC-stores":
[info]   79.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:branch-misses":
[info]   253.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:branches":
[info]   174213.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:cycles":
[info]   189369.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   8.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-loads":
[info]   93885.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-stores":
[info]   28716.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   3.577 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-loads":
[info]   44.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:instructions":
[info]   632163.130 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:31:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 347.750 ops/s
[info] # Warmup Iteration   2: 3808.919 ops/s
[info] # Warmup Iteration   3: 5559.226 ops/s
[info] # Warmup Iteration   4: 6520.645 ops/s
[info] # Warmup Iteration   5: 6563.124 ops/s
[info] Iteration   1: 6511.063 ops/s
[info] Iteration   2: 6275.354 ops/s
[info] Iteration   3: 6423.002 ops/s
[info] Iteration   4: 6521.486 ops/s
[info] Iteration   5: 6580.470 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   6462.275 ±(99.9%) 456.988 ops/s [Average]
[info]   (min, avg, max) = (6275.354, 6462.275, 6580.470), stdev = 118.678
[info]   CI (99.9%): [6005.287, 6919.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:CPI":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   13185.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-loads":
[info]   448312.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-stores":
[info]   273634.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:L1-icache-load-misses":
[info]   1843.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-load-misses":
[info]   53.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-loads":
[info]   1091.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-store-misses":
[info]   320.546 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:LLC-stores":
[info]   2068.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:branch-misses":
[info]   425.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:branches":
[info]   328434.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:cycles":
[info]   584724.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-load-misses":
[info]   14.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-loads":
[info]   456898.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-store-misses":
[info]   1.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:dTLB-stores":
[info]   279153.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:iTLB-load-misses":
[info]   5.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:iTLB-loads":
[info]   17.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:instructions":
[info]   1788753.190 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:31:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1747.166 ops/s
[info] # Warmup Iteration   2: 7501.731 ops/s
[info] # Warmup Iteration   3: 11059.458 ops/s
[info] # Warmup Iteration   4: 12863.614 ops/s
[info] # Warmup Iteration   5: 12883.697 ops/s
[info] Iteration   1: 12941.975 ops/s
[info] Iteration   2: 12663.619 ops/s
[info] Iteration   3: 12651.168 ops/s
[info] Iteration   4: 12637.729 ops/s
[info] Iteration   5: 11781.257 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   12535.150 ±(99.9%) 1694.228 ops/s [Average]
[info]   (min, avg, max) = (11781.257, 12535.150, 12941.975), stdev = 439.986
[info]   CI (99.9%): [10840.922, 14229.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:CPI":
[info]   0.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-dcache-load-misses":
[info]   10207.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-dcache-loads":
[info]   183735.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-dcache-stores":
[info]   126060.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:L1-icache-load-misses":
[info]   1796.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-load-misses":
[info]   53.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-loads":
[info]   792.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-store-misses":
[info]   1706.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:LLC-stores":
[info]   2994.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:branch-misses":
[info]   452.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:branches":
[info]   215285.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:cycles":
[info]   345170.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-load-misses":
[info]   24.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-loads":
[info]   188316.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-store-misses":
[info]   15.751 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:dTLB-stores":
[info]   126946.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:iTLB-load-misses":
[info]   11.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:iTLB-loads":
[info]   107.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:instructions":
[info]   898128.588 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:30:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.930 ops/s
[info] # Warmup Iteration   2: 50929.630 ops/s
[info] # Warmup Iteration   3: 62484.757 ops/s
[info] # Warmup Iteration   4: 61329.729 ops/s
[info] # Warmup Iteration   5: 61901.565 ops/s
[info] Iteration   1: 62554.134 ops/s
[info] Iteration   2: 63125.800 ops/s
[info] Iteration   3: 63082.624 ops/s
[info] Iteration   4: 63128.872 ops/s
[info] Iteration   5: 63135.346 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   63005.355 ±(99.9%) 974.586 ops/s [Average]
[info]   (min, avg, max) = (62554.134, 63005.355, 63135.346), stdev = 253.097
[info]   CI (99.9%): [62030.769, 63979.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   1067.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   37767.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   18610.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   3.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.725 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-loads":
[info]   3.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   160.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-stores":
[info]   243.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:branch-misses":
[info]   114.394 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:branches":
[info]   48497.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:cycles":
[info]   61056.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   1.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-loads":
[info]   38103.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   1.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-stores":
[info]   18766.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-loads":
[info]   1.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:instructions":
[info]   198973.515 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:30:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11650.373 ops/s
[info] # Warmup Iteration   2: 42399.351 ops/s
[info] # Warmup Iteration   3: 42827.532 ops/s
[info] # Warmup Iteration   4: 39683.320 ops/s
[info] # Warmup Iteration   5: 43069.736 ops/s
[info] Iteration   1: 43169.408 ops/s
[info] Iteration   2: 43020.166 ops/s
[info] Iteration   3: 43348.351 ops/s
[info] Iteration   4: 43198.789 ops/s
[info] Iteration   5: 43328.008 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   43212.944 ±(99.9%) 512.417 ops/s [Average]
[info]   (min, avg, max) = (43020.166, 43212.944, 43348.351), stdev = 133.073
[info]   CI (99.9%): [42700.528, 43725.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:CPI":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   1548.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   70562.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   39117.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   26.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-loads":
[info]   10.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-store-misses":
[info]   287.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:LLC-stores":
[info]   408.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:branch-misses":
[info]   171.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:branches":
[info]   63138.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:cycles":
[info]   87634.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   3.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-loads":
[info]   72139.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   1.968 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-stores":
[info]   39502.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.620 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:instructions":
[info]   286346.935 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:30:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 79228.285 ops/s
[info] # Warmup Iteration   2: 98161.469 ops/s
[info] # Warmup Iteration   3: 104029.893 ops/s
[info] # Warmup Iteration   4: 106199.703 ops/s
[info] # Warmup Iteration   5: 105981.662 ops/s
[info] Iteration   1: 105289.846 ops/s
[info] Iteration   2: 106933.126 ops/s
[info] Iteration   3: 106149.272 ops/s
[info] Iteration   4: 106052.403 ops/s
[info] Iteration   5: 106247.237 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   106134.377 ±(99.9%) 2254.281 ops/s [Average]
[info]   (min, avg, max) = (105289.846, 106134.377, 106933.126), stdev = 585.430
[info]   CI (99.9%): [103880.096, 108388.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:CPI":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   803.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   22227.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   18869.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   7.383 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-loads":
[info]   3.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   160.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-stores":
[info]   241.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:branch-misses":
[info]   68.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:branches":
[info]   32140.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:cycles":
[info]   36913.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-loads":
[info]   22496.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   1.898 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-stores":
[info]   19072.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:instructions":
[info]   146313.783 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:30:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 98988.809 ops/s
[info] # Warmup Iteration   2: 122639.453 ops/s
[info] # Warmup Iteration   3: 132720.800 ops/s
[info] # Warmup Iteration   4: 132237.294 ops/s
[info] # Warmup Iteration   5: 132757.328 ops/s
[info] Iteration   1: 132658.103 ops/s
[info] Iteration   2: 132878.075 ops/s
[info] Iteration   3: 133214.811 ops/s
[info] Iteration   4: 137727.888 ops/s
[info] Iteration   5: 137649.729 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   134825.721 ±(99.9%) 10093.631 ops/s [Average]
[info]   (min, avg, max) = (132658.103, 134825.721, 137727.888), stdev = 2621.284
[info]   CI (99.9%): [124732.091, 144919.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   636.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   14257.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   18808.991 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   1.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   69.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   26218.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   27874.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   14182.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   18800.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.282 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   119891.570 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:30:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 860.418 ops/s
[info] # Warmup Iteration   2: 4895.138 ops/s
[info] # Warmup Iteration   3: 8860.158 ops/s
[info] # Warmup Iteration   4: 8941.338 ops/s
[info] # Warmup Iteration   5: 9410.875 ops/s
[info] Iteration   1: 9016.580 ops/s
[info] Iteration   2: 9408.164 ops/s
[info] Iteration   3: 9495.939 ops/s
[info] Iteration   4: 9473.150 ops/s
[info] Iteration   5: 9481.300 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   9375.027 ±(99.9%) 782.364 ops/s [Average]
[info]   (min, avg, max) = (9016.580, 9375.027, 9495.939), stdev = 203.178
[info]   CI (99.9%): [8592.662, 10157.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:CPI":
[info]   0.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   11053.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-loads":
[info]   268865.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-stores":
[info]   162381.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:L1-icache-load-misses":
[info]   724.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-load-misses":
[info]   41.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-loads":
[info]   1338.432 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-store-misses":
[info]   727.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:LLC-stores":
[info]   2012.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:branch-misses":
[info]   484.168 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:branches":
[info]   223782.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:cycles":
[info]   411990.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-load-misses":
[info]   11.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-loads":
[info]   275416.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-store-misses":
[info]   2.147 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:dTLB-stores":
[info]   169072.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:iTLB-load-misses":
[info]   2.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:iTLB-loads":
[info]   4.766 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:instructions":
[info]   1165921.768 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:29:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2264938.097 ops/s
[info] # Warmup Iteration   2: 10248702.415 ops/s
[info] # Warmup Iteration   3: 13246407.884 ops/s
[info] # Warmup Iteration   4: 13509612.214 ops/s
[info] # Warmup Iteration   5: 13429224.009 ops/s
[info] Iteration   1: 13428926.286 ops/s
[info] Iteration   2: 13476811.879 ops/s
[info] Iteration   3: 13380046.378 ops/s
[info] Iteration   4: 13474733.204 ops/s
[info] Iteration   5: 13216987.975 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   13395501.144 ±(99.9%) 413438.836 ops/s [Average]
[info]   (min, avg, max) = (13216987.975, 13395501.144, 13476811.879), stdev = 107368.753
[info]   CI (99.9%): [12982062.308, 13808939.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:CPI":
[info]   0.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-dcache-load-misses":
[info]   10.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-dcache-loads":
[info]   135.812 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-dcache-stores":
[info]   103.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:L1-icache-load-misses":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-loads":
[info]   0.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-store-misses":
[info]   2.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:LLC-stores":
[info]   4.900 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:branch-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:branches":
[info]   195.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:cycles":
[info]   292.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-load-misses":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-loads":
[info]   141.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:dTLB-stores":
[info]   115.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:instructions":
[info]   978.506 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:29:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.722 ops/s
[info] # Warmup Iteration   2: 37829588.383 ops/s
[info] # Warmup Iteration   3: 40528254.410 ops/s
[info] # Warmup Iteration   4: 41264201.615 ops/s
[info] # Warmup Iteration   5: 41380946.447 ops/s
[info] Iteration   1: 41421980.563 ops/s
[info] Iteration   2: 41035926.906 ops/s
[info] Iteration   3: 41109574.580 ops/s
[info] Iteration   4: 41395076.467 ops/s
[info] Iteration   5: 41470764.006 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   41286664.504 ±(99.9%) 765751.643 ops/s [Average]
[info]   (min, avg, max) = (41035926.906, 41286664.504, 41470764.006), stdev = 198863.270
[info]   CI (99.9%): [40520912.862, 42052416.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:CPI":
[info]   0.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   56.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   18.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:LLC-stores":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:branch-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:branches":
[info]   97.907 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:cycles":
[info]   89.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-loads":
[info]   56.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:dTLB-stores":
[info]   18.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:instructions":
[info]   407.148 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:29:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1803274.435 ops/s
[info] # Warmup Iteration   2: 20570043.259 ops/s
[info] # Warmup Iteration   3: 24218465.966 ops/s
[info] # Warmup Iteration   4: 24218146.568 ops/s
[info] # Warmup Iteration   5: 24226448.248 ops/s
[info] Iteration   1: 24222551.282 ops/s
[info] Iteration   2: 23968832.970 ops/s
[info] Iteration   3: 24216008.528 ops/s
[info] Iteration   4: 24217561.757 ops/s
[info] Iteration   5: 24257843.819 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   24176559.671 ±(99.9%) 451979.764 ops/s [Average]
[info]   (min, avg, max) = (23968832.970, 24176559.671, 24257843.819), stdev = 117377.709
[info]   CI (99.9%): [23724579.907, 24628539.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:CPI":
[info]   0.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-dcache-loads":
[info]   151.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-dcache-stores":
[info]   71.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:branch-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:branches":
[info]   108.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:cycles":
[info]   157.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-loads":
[info]   152.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:dTLB-stores":
[info]   70.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:instructions":
[info]   572.725 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:29:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 40282360.249 ops/s
[info] # Warmup Iteration   2: 43956241.124 ops/s
[info] # Warmup Iteration   3: 46352538.591 ops/s
[info] # Warmup Iteration   4: 48170790.013 ops/s
[info] # Warmup Iteration   5: 48234198.995 ops/s
[info] Iteration   1: 48162713.281 ops/s
[info] Iteration   2: 48176718.899 ops/s
[info] Iteration   3: 47990663.509 ops/s
[info] Iteration   4: 48182482.220 ops/s
[info] Iteration   5: 48186443.783 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   48139804.339 ±(99.9%) 322898.541 ops/s [Average]
[info]   (min, avg, max) = (47990663.509, 48139804.339, 48186443.783), stdev = 83855.726
[info]   CI (99.9%): [47816905.798, 48462702.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:CPI":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   57.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   24.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:LLC-stores":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:branch-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:branches":
[info]   78.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:cycles":
[info]   79.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-loads":
[info]   57.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:dTLB-stores":
[info]   24.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:instructions":
[info]   359.261 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:28:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 22659722.817 ops/s
[info] # Warmup Iteration   2: 30229134.371 ops/s
[info] # Warmup Iteration   3: 30531250.686 ops/s
[info] # Warmup Iteration   4: 31448240.128 ops/s
[info] # Warmup Iteration   5: 31409760.408 ops/s
[info] Iteration   1: 31425280.268 ops/s
[info] Iteration   2: 31348606.245 ops/s
[info] Iteration   3: 31457609.427 ops/s
[info] Iteration   4: 31462465.769 ops/s
[info] Iteration   5: 31460113.283 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31430814.998 ±(99.9%) 186339.087 ops/s [Average]
[info]   (min, avg, max) = (31348606.245, 31430814.998, 31462465.769), stdev = 48391.669
[info]   CI (99.9%): [31244475.912, 31617154.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-dcache-load-misses":
[info]   0.669 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-dcache-loads":
[info]   65.172 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-dcache-stores":
[info]   26.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:L1-icache-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:LLC-stores":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:branch-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:branches":
[info]   107.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:cycles":
[info]   122.386 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-loads":
[info]   65.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:dTLB-stores":
[info]   25.990 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:iTLB-loads":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:instructions":
[info]   531.208 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:28:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8234716.585 ops/s
[info] # Warmup Iteration   2: 22174891.391 ops/s
[info] # Warmup Iteration   3: 25038074.288 ops/s
[info] # Warmup Iteration   4: 25053692.725 ops/s
[info] # Warmup Iteration   5: 25042658.650 ops/s
[info] Iteration   1: 25064164.132 ops/s
[info] Iteration   2: 25050256.596 ops/s
[info] Iteration   3: 25029862.109 ops/s
[info] Iteration   4: 25037328.406 ops/s
[info] Iteration   5: 25044051.126 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   25045132.474 ±(99.9%) 50343.302 ops/s [Average]
[info]   (min, avg, max) = (25029862.109, 25045132.474, 25064164.132), stdev = 13073.996
[info]   CI (99.9%): [24994789.172, 25095475.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:CPI":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-dcache-loads":
[info]   162.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-dcache-stores":
[info]   74.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:L1-icache-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-store-misses":
[info]   ≈ 10⁻⁵ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:LLC-stores":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:branch-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:branches":
[info]   116.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:cycles":
[info]   152.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-loads":
[info]   162.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:dTLB-stores":
[info]   75.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:instructions":
[info]   603.149 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:28:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7955395.987 ops/s
[info] # Warmup Iteration   2: 19907405.636 ops/s
[info] # Warmup Iteration   3: 21314705.710 ops/s
[info] # Warmup Iteration   4: 21714065.480 ops/s
[info] # Warmup Iteration   5: 21714496.653 ops/s
[info] Iteration   1: 21702874.793 ops/s
[info] Iteration   2: 21891900.062 ops/s
[info] Iteration   3: 21932407.331 ops/s
[info] Iteration   4: 21841527.341 ops/s
[info] Iteration   5: 22023886.299 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   21878519.165 ±(99.9%) 457376.136 ops/s [Average]
[info]   (min, avg, max) = (21702874.793, 21878519.165, 22023886.299), stdev = 118779.130
[info]   CI (99.9%): [21421143.029, 22335895.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-dcache-load-misses":
[info]   1.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-dcache-loads":
[info]   103.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-dcache-stores":
[info]   64.940 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:LLC-stores":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:branch-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:branches":
[info]   131.456 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:cycles":
[info]   177.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-loads":
[info]   106.427 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:dTLB-stores":
[info]   64.399 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:instructions":
[info]   734.940 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:28:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.741 ops/s
[info] # Warmup Iteration   2: 57625848.980 ops/s
[info] # Warmup Iteration   3: 58654006.515 ops/s
[info] # Warmup Iteration   4: 60604146.438 ops/s
[info] # Warmup Iteration   5: 60307094.848 ops/s
[info] Iteration   1: 60279721.746 ops/s
[info] Iteration   2: 60287580.967 ops/s
[info] Iteration   3: 60332197.162 ops/s
[info] Iteration   4: 59954735.320 ops/s
[info] Iteration   5: 59822583.902 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   60135363.820 ±(99.9%) 889012.214 ops/s [Average]
[info]   (min, avg, max) = (59822583.902, 60135363.820, 60332197.162), stdev = 230873.649
[info]   CI (99.9%): [59246351.605, 61024376.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:CPI":
[info]   0.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   48.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   28.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:LLC-stores":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:branch-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:branches":
[info]   33.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:cycles":
[info]   65.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-loads":
[info]   48.983 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:dTLB-stores":
[info]   28.618 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:iTLB-loads":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:instructions":
[info]   199.363 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:27:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5870048.103 ops/s
[info] # Warmup Iteration   2: 24987070.568 ops/s
[info] # Warmup Iteration   3: 25540306.371 ops/s
[info] # Warmup Iteration   4: 25443823.561 ops/s
[info] # Warmup Iteration   5: 25480289.759 ops/s
[info] Iteration   1: 25428423.053 ops/s
[info] Iteration   2: 25536990.611 ops/s
[info] Iteration   3: 25486691.029 ops/s
[info] Iteration   4: 25493650.679 ops/s
[info] Iteration   5: 25825559.854 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   25554263.045 ±(99.9%) 602646.798 ops/s [Average]
[info]   (min, avg, max) = (25428423.053, 25554263.045, 25825559.854), stdev = 156505.460
[info]   CI (99.9%): [24951616.248, 26156909.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:CPI":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   0.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   133.428 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   79.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:LLC-stores":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:branch-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:branches":
[info]   83.720 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:cycles":
[info]   143.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-loads":
[info]   132.624 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:dTLB-stores":
[info]   78.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:instructions":
[info]   452.917 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:27:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 29194869.090 ops/s
[info] # Warmup Iteration   2: 47887368.727 ops/s
[info] # Warmup Iteration   3: 50241111.354 ops/s
[info] # Warmup Iteration   4: 50121191.154 ops/s
[info] # Warmup Iteration   5: 50109988.518 ops/s
[info] Iteration   1: 50299789.467 ops/s
[info] Iteration   2: 50120701.763 ops/s
[info] Iteration   3: 50276305.768 ops/s
[info] Iteration   4: 49066432.703 ops/s
[info] Iteration   5: 48437554.839 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   49640156.908 ±(99.9%) 3248112.902 ops/s [Average]
[info]   (min, avg, max) = (48437554.839, 49640156.908, 50299789.467), stdev = 843524.606
[info]   CI (99.9%): [46392044.006, 52888269.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:CPI":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   0.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   56.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   39.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:branch-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:branches":
[info]   54.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:cycles":
[info]   76.963 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-loads":
[info]   56.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:dTLB-stores":
[info]   38.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:instructions":
[info]   306.440 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:27:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 39618853.950 ops/s
[info] # Warmup Iteration   2: 60094320.314 ops/s
[info] # Warmup Iteration   3: 62662487.616 ops/s
[info] # Warmup Iteration   4: 62765321.509 ops/s
[info] # Warmup Iteration   5: 62748507.801 ops/s
[info] Iteration   1: 62810981.073 ops/s
[info] Iteration   2: 62858826.013 ops/s
[info] Iteration   3: 62871899.907 ops/s
[info] Iteration   4: 62801479.165 ops/s
[info] Iteration   5: 62717246.458 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   62812086.523 ±(99.9%) 234783.495 ops/s [Average]
[info]   (min, avg, max) = (62717246.458, 62812086.523, 62871899.907), stdev = 60972.528
[info]   CI (99.9%): [62577303.028, 63046870.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   48.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   36.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   42.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   57.691 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   48.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁵ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   36.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   251.402 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:27:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 23302109.497 ops/s
[info] # Warmup Iteration   2: 25407631.969 ops/s
[info] # Warmup Iteration   3: 26584529.408 ops/s
[info] # Warmup Iteration   4: 26641079.506 ops/s
[info] # Warmup Iteration   5: 26574296.593 ops/s
[info] Iteration   1: 26428404.408 ops/s
[info] Iteration   2: 24488351.244 ops/s
[info] Iteration   3: 24378518.716 ops/s
[info] Iteration   4: 24459371.294 ops/s
[info] Iteration   5: 24491056.335 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   24849140.399 ±(99.9%) 3403995.666 ops/s [Average]
[info]   (min, avg, max) = (24378518.716, 24849140.399, 26428404.408), stdev = 884006.865
[info]   CI (99.9%): [21445144.734, 28253136.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-dcache-load-misses":
[info]   1.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-dcache-loads":
[info]   91.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-dcache-stores":
[info]   56.896 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:L1-icache-load-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:LLC-stores":
[info]   0.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:branch-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:branches":
[info]   116.442 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:cycles":
[info]   141.869 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-loads":
[info]   87.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:dTLB-stores":
[info]   54.541 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:iTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:iTLB-loads":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:instructions":
[info]   616.747 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:26:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 274809.692 ops/s
[info] # Warmup Iteration   2: 1410655.956 ops/s
[info] # Warmup Iteration   3: 2736899.992 ops/s
[info] # Warmup Iteration   4: 3365208.032 ops/s
[info] # Warmup Iteration   5: 3433905.660 ops/s
[info] Iteration   1: 3434143.449 ops/s
[info] Iteration   2: 3436844.041 ops/s
[info] Iteration   3: 3436806.281 ops/s
[info] Iteration   4: 3484521.523 ops/s
[info] Iteration   5: 3504501.649 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   3459363.389 ±(99.9%) 126579.982 ops/s [Average]
[info]   (min, avg, max) = (3434143.449, 3459363.389, 3504501.649), stdev = 32872.419
[info]   CI (99.9%): [3332783.407, 3585943.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:CPI":
[info]   0.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   10.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-dcache-loads":
[info]   552.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-dcache-stores":
[info]   302.166 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-load-misses":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-loads":
[info]   0.129 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-store-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:LLC-stores":
[info]   0.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:branch-misses":
[info]   0.082 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:branches":
[info]   683.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:cycles":
[info]   1043.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-loads":
[info]   538.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:dTLB-stores":
[info]   295.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:instructions":
[info]   3286.654 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:26:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 93859.331 ops/s
[info] # Warmup Iteration   2: 136275.986 ops/s
[info] # Warmup Iteration   3: 171453.632 ops/s
[info] # Warmup Iteration   4: 174316.385 ops/s
[info] # Warmup Iteration   5: 175527.736 ops/s
[info] Iteration   1: 175635.416 ops/s
[info] Iteration   2: 176749.778 ops/s
[info] Iteration   3: 176058.747 ops/s
[info] Iteration   4: 176338.242 ops/s
[info] Iteration   5: 176974.998 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   176351.436 ±(99.9%) 2061.112 ops/s [Average]
[info]   (min, avg, max) = (175635.416, 176351.436, 176974.998), stdev = 535.264
[info]   CI (99.9%): [174290.324, 178412.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   490.912 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   15395.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   14979.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   6.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   1.859 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   6.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   78.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   11.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:branches":
[info]   12899.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   21106.559 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   14772.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   14278.412 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.103 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   77270.252 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:26:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1338.233 ops/s
[info] # Warmup Iteration   2: 13503.007 ops/s
[info] # Warmup Iteration   3: 14070.447 ops/s
[info] # Warmup Iteration   4: 40591.917 ops/s
[info] # Warmup Iteration   5: 41850.334 ops/s
[info] Iteration   1: 35484.813 ops/s
[info] Iteration   2: 44537.201 ops/s
[info] Iteration   3: 44725.796 ops/s
[info] Iteration   4: 44969.905 ops/s
[info] Iteration   5: 45036.679 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   42950.879 ±(99.9%) 16089.508 ops/s [Average]
[info]   (min, avg, max) = (35484.813, 42950.879, 45036.679), stdev = 4178.394
[info]   CI (99.9%): [26861.371, 59040.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   3331.750 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   75123.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   48752.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   986.213 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   18.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   151.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   82.826 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   363.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   215.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:branches":
[info]   50399.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:cycles":
[info]   105673.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   10.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   73985.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   48862.108 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   7.453 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   45.510 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:instructions":
[info]   302093.436 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:26:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 34729.871 ops/s
[info] # Warmup Iteration   2: 174868.892 ops/s
[info] # Warmup Iteration   3: 196300.983 ops/s
[info] # Warmup Iteration   4: 229463.192 ops/s
[info] # Warmup Iteration   5: 219927.167 ops/s
[info] Iteration   1: 220855.781 ops/s
[info] Iteration   2: 222839.578 ops/s
[info] Iteration   3: 228582.991 ops/s
[info] Iteration   4: 229196.657 ops/s
[info] Iteration   5: 228574.941 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   226009.990 ±(99.9%) 14909.942 ops/s [Average]
[info]   (min, avg, max) = (220855.781, 226009.990, 229196.657), stdev = 3872.065
[info]   CI (99.9%): [211100.048, 240919.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   102.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   10346.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   6627.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   2.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.107 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   1.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   15.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   29.658 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   11.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:branches":
[info]   13477.338 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   16675.768 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   10418.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   6636.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   65561.339 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:26:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 263600.109 ops/s
[info] # Warmup Iteration   2: 442960.949 ops/s
[info] # Warmup Iteration   3: 509606.480 ops/s
[info] # Warmup Iteration   4: 524292.595 ops/s
[info] # Warmup Iteration   5: 535048.708 ops/s
[info] Iteration   1: 536651.797 ops/s
[info] Iteration   2: 536815.449 ops/s
[info] Iteration   3: 534262.722 ops/s
[info] Iteration   4: 527512.060 ops/s
[info] Iteration   5: 530302.096 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   533108.825 ±(99.9%) 15738.809 ops/s [Average]
[info]   (min, avg, max) = (527512.060, 533108.825, 536815.449), stdev = 4087.319
[info]   CI (99.9%): [517370.016, 548847.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   47.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   4508.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3337.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.469 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   21.471 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   27.600 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.487 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   5510.539 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   7178.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   4552.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3316.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   23866.172 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:25:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 283376.837 ops/s
[info] # Warmup Iteration   2: 406638.390 ops/s
[info] # Warmup Iteration   3: 564497.350 ops/s
[info] # Warmup Iteration   4: 570770.160 ops/s
[info] # Warmup Iteration   5: 569534.851 ops/s
[info] Iteration   1: 568814.974 ops/s
[info] Iteration   2: 573739.517 ops/s
[info] Iteration   3: 570702.206 ops/s
[info] Iteration   4: 573257.985 ops/s
[info] Iteration   5: 570055.295 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   571313.995 ±(99.9%) 8137.980 ops/s [Average]
[info]   (min, avg, max) = (568814.974, 571313.995, 573739.517), stdev = 2113.408
[info]   CI (99.9%): [563176.015, 579451.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   19.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   4481.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3278.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   2.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.458 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   1.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5566.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   6735.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   4495.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3268.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   24078.272 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:25:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7597.596 ops/s
[info] # Warmup Iteration   2: 36714.166 ops/s
[info] # Warmup Iteration   3: 56897.214 ops/s
[info] # Warmup Iteration   4: 67107.076 ops/s
[info] # Warmup Iteration   5: 66450.507 ops/s
[info] Iteration   1: 68044.891 ops/s
[info] Iteration   2: 72058.572 ops/s
[info] Iteration   3: 79387.065 ops/s
[info] Iteration   4: 78007.215 ops/s
[info] Iteration   5: 79358.655 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   75371.280 ±(99.9%) 19598.969 ops/s [Average]
[info]   (min, avg, max) = (68044.891, 75371.280, 79387.065), stdev = 5089.790
[info]   CI (99.9%): [55772.310, 94970.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1221.227 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   50392.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   27585.676 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   509.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   8.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   48.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   62.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   161.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   69.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:branches":
[info]   38867.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:cycles":
[info]   63832.833 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   5.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   47507.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.231 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   25809.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   1.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   21.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:instructions":
[info]   199568.954 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:25:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 172652.662 ops/s
[info] # Warmup Iteration   2: 333991.189 ops/s
[info] # Warmup Iteration   3: 368616.040 ops/s
[info] # Warmup Iteration   4: 371986.439 ops/s
[info] # Warmup Iteration   5: 365596.230 ops/s
[info] Iteration   1: 381407.546 ops/s
[info] Iteration   2: 379366.456 ops/s
[info] Iteration   3: 387579.990 ops/s
[info] Iteration   4: 387168.367 ops/s
[info] Iteration   5: 387255.119 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   384555.496 ±(99.9%) 14925.697 ops/s [Average]
[info]   (min, avg, max) = (379366.456, 384555.496, 387579.990), stdev = 3876.156
[info]   CI (99.9%): [369629.798, 399481.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:CPI":
[info]   0.287 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   176.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   6340.485 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   5720.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   2.402 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-loads":
[info]   1.616 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   27.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:LLC-stores":
[info]   56.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:branch-misses":
[info]   10.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:branches":
[info]   7425.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:cycles":
[info]   9991.989 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   1.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   6558.782 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   5922.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:instructions":
[info]   34845.684 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:25:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 193340.373 ops/s
[info] # Warmup Iteration   2: 589518.137 ops/s
[info] # Warmup Iteration   3: 798236.344 ops/s
[info] # Warmup Iteration   4: 840725.474 ops/s
[info] # Warmup Iteration   5: 842305.485 ops/s
[info] Iteration   1: 840370.337 ops/s
[info] Iteration   2: 838209.744 ops/s
[info] Iteration   3: 833719.942 ops/s
[info] Iteration   4: 840617.153 ops/s
[info] Iteration   5: 839890.599 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   838561.555 ±(99.9%) 11031.359 ops/s [Average]
[info]   (min, avg, max) = (833719.942, 838561.555, 840617.153), stdev = 2864.809
[info]   CI (99.9%): [827530.196, 849592.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   55.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   3211.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   2554.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   0.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   4.728 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   2.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:branches":
[info]   4745.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:cycles":
[info]   4586.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   3315.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   2604.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:instructions":
[info]   19513.837 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:24:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1402796.482 ops/s
[info] # Warmup Iteration   2: 1539390.259 ops/s
[info] # Warmup Iteration   3: 1656658.673 ops/s
[info] # Warmup Iteration   4: 1670184.800 ops/s
[info] # Warmup Iteration   5: 1670887.076 ops/s
[info] Iteration   1: 1675022.557 ops/s
[info] Iteration   2: 1678893.825 ops/s
[info] Iteration   3: 1649380.424 ops/s
[info] Iteration   4: 1675737.569 ops/s
[info] Iteration   5: 1660261.201 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1667859.115 ±(99.9%) 48491.368 ops/s [Average]
[info]   (min, avg, max) = (1649380.424, 1667859.115, 1678893.825), stdev = 12593.054
[info]   CI (99.9%): [1619367.747, 1716350.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   48.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1576.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1730.380 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   3.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   1.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:branches":
[info]   2462.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   2313.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   1618.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   1802.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   10235.030 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:24:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 51006.580 ops/s
[info] # Warmup Iteration   2: 191966.505 ops/s
[info] # Warmup Iteration   3: 179915.886 ops/s
[info] # Warmup Iteration   4: 190161.944 ops/s
[info] # Warmup Iteration   5: 189969.136 ops/s
[info] Iteration   1: 190719.875 ops/s
[info] Iteration   2: 190206.203 ops/s
[info] Iteration   3: 190385.122 ops/s
[info] Iteration   4: 184748.027 ops/s
[info] Iteration   5: 187802.065 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   188772.259 ±(99.9%) 9738.865 ops/s [Average]
[info]   (min, avg, max) = (184748.027, 188772.259, 190719.875), stdev = 2529.152
[info]   CI (99.9%): [179033.393, 198511.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.302 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   700.828 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   15083.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   13371.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   3.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   0.439 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   2.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   91.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   224.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   28.135 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:branches":
[info]   11692.686 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:cycles":
[info]   20241.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   1.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   15784.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   13822.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.346 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:instructions":
[info]   66937.074 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:24:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 190378.753 ops/s
[info] # Warmup Iteration   2: 402236.236 ops/s
[info] # Warmup Iteration   3: 471132.325 ops/s
[info] # Warmup Iteration   4: 481282.554 ops/s
[info] # Warmup Iteration   5: 480104.753 ops/s
[info] Iteration   1: 456832.837 ops/s
[info] Iteration   2: 480900.555 ops/s
[info] Iteration   3: 458354.288 ops/s
[info] Iteration   4: 454432.439 ops/s
[info] Iteration   5: 455201.568 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   461144.337 ±(99.9%) 42924.217 ops/s [Average]
[info]   (min, avg, max) = (454432.439, 461144.337, 480900.555), stdev = 11147.283
[info]   CI (99.9%): [418220.121, 504068.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:CPI":
[info]   0.290 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   82.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   6600.562 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   6093.995 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.145 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.824 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   54.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   77.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:branch-misses":
[info]   10.369 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:branches":
[info]   5366.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:cycles":
[info]   8132.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.614 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   6800.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6167.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:instructions":
[info]   28046.544 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:24:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 616802.619 ops/s
[info] # Warmup Iteration   2: 1281852.681 ops/s
[info] # Warmup Iteration   3: 1363814.834 ops/s
[info] # Warmup Iteration   4: 1371111.195 ops/s
[info] # Warmup Iteration   5: 1377116.978 ops/s
[info] Iteration   1: 1373914.030 ops/s
[info] Iteration   2: 1362994.070 ops/s
[info] Iteration   3: 1369557.995 ops/s
[info] Iteration   4: 1371689.258 ops/s
[info] Iteration   5: 1377144.156 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   1371059.902 ±(99.9%) 20455.008 ops/s [Average]
[info]   (min, avg, max) = (1362994.070, 1371059.902, 1377144.156), stdev = 5312.101
[info]   CI (99.9%): [1350604.894, 1391514.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   12.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   2924.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1587.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   6.880 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:branches":
[info]   2019.580 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   2797.738 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   2895.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   1544.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   11514.108 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:23:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2187950.966 ops/s
[info] # Warmup Iteration   2: 2635599.533 ops/s
[info] # Warmup Iteration   3: 2723124.323 ops/s
[info] # Warmup Iteration   4: 2716580.351 ops/s
[info] # Warmup Iteration   5: 2736456.596 ops/s
[info] Iteration   1: 2732584.936 ops/s
[info] Iteration   2: 2758073.080 ops/s
[info] Iteration   3: 2686136.124 ops/s
[info] Iteration   4: 2733591.869 ops/s
[info] Iteration   5: 2775912.919 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2737259.786 ±(99.9%) 130243.364 ops/s [Average]
[info]   (min, avg, max) = (2686136.124, 2737259.786, 2775912.919), stdev = 33823.788
[info]   CI (99.9%): [2607016.422, 2867503.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   12.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   994.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1180.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   8.193 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.105 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   1408.764 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   1399.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   983.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1134.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   5832.295 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:23:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2427035.581 ops/s
[info] # Warmup Iteration   2: 2870000.444 ops/s
[info] # Warmup Iteration   3: 2946345.849 ops/s
[info] # Warmup Iteration   4: 2947139.737 ops/s
[info] # Warmup Iteration   5: 2947627.087 ops/s
[info] Iteration   1: 2949069.686 ops/s
[info] Iteration   2: 2943627.782 ops/s
[info] Iteration   3: 2946247.777 ops/s
[info] Iteration   4: 2924376.334 ops/s
[info] Iteration   5: 2888237.411 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2930311.798 ±(99.9%) 97957.329 ops/s [Average]
[info]   (min, avg, max) = (2888237.411, 2930311.798, 2949069.686), stdev = 25439.207
[info]   CI (99.9%): [2832354.469, 3028269.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   953.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1136.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   1383.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1304.757 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   950.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1121.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   5723.554 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:23:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 195604.902 ops/s
[info] # Warmup Iteration   2: 563886.082 ops/s
[info] # Warmup Iteration   3: 465541.453 ops/s
[info] # Warmup Iteration   4: 554708.169 ops/s
[info] # Warmup Iteration   5: 659963.013 ops/s
[info] Iteration   1: 686351.591 ops/s
[info] Iteration   2: 677781.792 ops/s
[info] Iteration   3: 644356.236 ops/s
[info] Iteration   4: 639895.663 ops/s
[info] Iteration   5: 641374.171 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   657951.891 ±(99.9%) 85789.415 ops/s [Average]
[info]   (min, avg, max) = (639895.663, 657951.891, 686351.591), stdev = 22279.239
[info]   CI (99.9%): [572162.475, 743741.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   37.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   5532.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   2860.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   1.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   4.171 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   13.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   5.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:branches":
[info]   3720.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:cycles":
[info]   5745.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.336 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   5583.748 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   3011.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:instructions":
[info]   21331.315 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:23:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 28545.199 ops/s
[info] # Warmup Iteration   2: 70144.738 ops/s
[info] # Warmup Iteration   3: 69432.968 ops/s
[info] # Warmup Iteration   4: 76309.946 ops/s
[info] # Warmup Iteration   5: 76991.041 ops/s
[info] Iteration   1: 77608.978 ops/s
[info] Iteration   2: 76478.343 ops/s
[info] Iteration   3: 73359.131 ops/s
[info] Iteration   4: 77912.358 ops/s
[info] Iteration   5: 78213.063 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   76714.375 ±(99.9%) 7651.772 ops/s [Average]
[info]   (min, avg, max) = (73359.131, 76714.375, 78213.063), stdev = 1987.141
[info]   CI (99.9%): [69062.602, 84366.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:CPI":
[info]   0.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   954.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   30129.617 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   18687.413 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   66.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses":
[info]   2.922 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-loads":
[info]   12.385 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses":
[info]   66.844 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:LLC-stores":
[info]   203.545 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:branch-misses":
[info]   54.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:branches":
[info]   36342.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:cycles":
[info]   49452.416 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   3.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-loads":
[info]   29904.295 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:dTLB-stores":
[info]   18879.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:instructions":
[info]   177031.958 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:23:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 33961.019 ops/s
[info] # Warmup Iteration   2: 92950.633 ops/s
[info] # Warmup Iteration   3: 102347.579 ops/s
[info] # Warmup Iteration   4: 107172.468 ops/s
[info] # Warmup Iteration   5: 103582.500 ops/s
[info] Iteration   1: 104730.982 ops/s
[info] Iteration   2: 108710.025 ops/s
[info] Iteration   3: 106534.418 ops/s
[info] Iteration   4: 109447.466 ops/s
[info] Iteration   5: 103262.896 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   106537.157 ±(99.9%) 10036.510 ops/s [Average]
[info]   (min, avg, max) = (103262.896, 106537.157, 109447.466), stdev = 2606.450
[info]   CI (99.9%): [96500.648, 116573.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:CPI":
[info]   0.301 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   870.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   20640.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   14354.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   320.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   1.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   10.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   12.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   95.196 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses":
[info]   30.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:branches":
[info]   21458.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:cycles":
[info]   34633.429 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   2.672 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   20799.502 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   14164.815 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:instructions":
[info]   115209.023 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:22:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 93994.253 ops/s
[info] # Warmup Iteration   2: 156647.145 ops/s
[info] # Warmup Iteration   3: 156650.764 ops/s
[info] # Warmup Iteration   4: 150137.079 ops/s
[info] # Warmup Iteration   5: 150543.501 ops/s
[info] Iteration   1: 151356.948 ops/s
[info] Iteration   2: 151363.573 ops/s
[info] Iteration   3: 154807.213 ops/s
[info] Iteration   4: 161208.289 ops/s
[info] Iteration   5: 160968.541 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   155940.913 ±(99.9%) 18890.965 ops/s [Average]
[info]   (min, avg, max) = (151356.948, 155940.913, 161208.289), stdev = 4905.924
[info]   CI (99.9%): [137049.948, 174831.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   411.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   12424.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   10214.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   12.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   1.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   3.813 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   9.431 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   85.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   23.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:branches":
[info]   15399.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:cycles":
[info]   23983.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   12170.532 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   10153.797 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:instructions":
[info]   80314.530 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:22:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3079.521 ops/s
[info] # Warmup Iteration   2: 29234.035 ops/s
[info] # Warmup Iteration   3: 44197.787 ops/s
[info] # Warmup Iteration   4: 42368.824 ops/s
[info] # Warmup Iteration   5: 41410.004 ops/s
[info] Iteration   1: 43176.975 ops/s
[info] Iteration   2: 45326.807 ops/s
[info] Iteration   3: 42974.244 ops/s
[info] Iteration   4: 42783.252 ops/s
[info] Iteration   5: 42814.315 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   43415.119 ±(99.9%) 4158.810 ops/s [Average]
[info]   (min, avg, max) = (42783.252, 43415.119, 45326.807), stdev = 1080.030
[info]   CI (99.9%): [39256.309, 47573.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:CPI":
[info]   0.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2671.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   52837.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   35826.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   565.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   2.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads":
[info]   53.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   76.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores":
[info]   330.970 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:branch-misses":
[info]   316.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:branches":
[info]   41721.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:cycles":
[info]   85744.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   9.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   55523.769 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   37560.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   2.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:instructions":
[info]   249368.717 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:22:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 74640.537 ops/s
[info] # Warmup Iteration   2: 205179.008 ops/s
[info] # Warmup Iteration   3: 223279.277 ops/s
[info] # Warmup Iteration   4: 222615.600 ops/s
[info] # Warmup Iteration   5: 221447.275 ops/s
[info] Iteration   1: 221533.468 ops/s
[info] Iteration   2: 235947.787 ops/s
[info] Iteration   3: 222978.423 ops/s
[info] Iteration   4: 235345.093 ops/s
[info] Iteration   5: 236621.663 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   230485.287 ±(99.9%) 29046.198 ops/s [Average]
[info]   (min, avg, max) = (221533.468, 230485.287, 236621.663), stdev = 7543.205
[info]   CI (99.9%): [201439.089, 259531.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   184.566 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   9211.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   7072.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   4.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   2.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   16.637 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   31.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   2.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:branches":
[info]   12323.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:cycles":
[info]   16007.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   9243.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   7073.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:instructions":
[info]   62680.916 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:22:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 331682.100 ops/s
[info] # Warmup Iteration   2: 483521.634 ops/s
[info] # Warmup Iteration   3: 544873.469 ops/s
[info] # Warmup Iteration   4: 564227.013 ops/s
[info] # Warmup Iteration   5: 581053.651 ops/s
[info] Iteration   1: 581203.376 ops/s
[info] Iteration   2: 583354.847 ops/s
[info] Iteration   3: 578865.790 ops/s
[info] Iteration   4: 581417.062 ops/s
[info] Iteration   5: 573345.282 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   579637.272 ±(99.9%) 14866.805 ops/s [Average]
[info]   (min, avg, max) = (573345.282, 579637.272, 583354.847), stdev = 3860.862
[info]   CI (99.9%): [564770.466, 594504.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   31.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   4738.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3271.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.285 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.650 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   22.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   28.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   0.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:branches":
[info]   5294.709 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles":
[info]   6623.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   4752.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3238.573 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions":
[info]   23926.905 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:21:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 423977.371 ops/s
[info] # Warmup Iteration   2: 539535.204 ops/s
[info] # Warmup Iteration   3: 594212.176 ops/s
[info] # Warmup Iteration   4: 594671.323 ops/s
[info] # Warmup Iteration   5: 595360.056 ops/s
[info] Iteration   1: 594944.740 ops/s
[info] Iteration   2: 594567.708 ops/s
[info] Iteration   3: 619502.200 ops/s
[info] Iteration   4: 618639.742 ops/s
[info] Iteration   5: 618816.848 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   609294.248 ±(99.9%) 51120.826 ops/s [Average]
[info]   (min, avg, max) = (594567.708, 609294.248, 619502.200), stdev = 13275.916
[info]   CI (99.9%): [558173.421, 660415.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   4575.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3195.339 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.205 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5137.544 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   6111.542 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   4567.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3147.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   23655.022 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:21:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 9400.202 ops/s
[info] # Warmup Iteration   2: 45343.768 ops/s
[info] # Warmup Iteration   3: 67729.247 ops/s
[info] # Warmup Iteration   4: 72578.265 ops/s
[info] # Warmup Iteration   5: 73265.344 ops/s
[info] Iteration   1: 79762.268 ops/s
[info] Iteration   2: 82830.070 ops/s
[info] Iteration   3: 82786.345 ops/s
[info] Iteration   4: 83222.641 ops/s
[info] Iteration   5: 88264.795 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   83373.224 ±(99.9%) 11810.339 ops/s [Average]
[info]   (min, avg, max) = (79762.268, 83373.224, 88264.795), stdev = 3067.107
[info]   CI (99.9%): [71562.885, 95183.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:CPI":
[info]   0.304 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1002.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   39098.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   22987.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   162.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   2.870 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads":
[info]   19.796 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   52.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores":
[info]   134.993 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:branch-misses":
[info]   36.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:branches":
[info]   32182.512 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:cycles":
[info]   50274.146 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   3.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   39739.359 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   22746.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   10.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:instructions":
[info]   165542.967 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:21:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 517944.402 ops/s
[info] # Warmup Iteration   2: 2910261.760 ops/s
[info] # Warmup Iteration   3: 7433256.576 ops/s
[info] # Warmup Iteration   4: 8355501.614 ops/s
[info] # Warmup Iteration   5: 8239350.895 ops/s
[info] Iteration   1: 8358981.190 ops/s
[info] Iteration   2: 8366023.212 ops/s
[info] Iteration   3: 8444479.884 ops/s
[info] Iteration   4: 8394664.795 ops/s
[info] Iteration   5: 8431404.616 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   8399110.740 ±(99.9%) 146958.771 ops/s [Average]
[info]   (min, avg, max) = (8358981.190, 8399110.740, 8444479.884), stdev = 38164.726
[info]   CI (99.9%): [8252151.968, 8546069.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:CPI":
[info]   0.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-dcache-load-misses":
[info]   21.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-dcache-loads":
[info]   263.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-dcache-stores":
[info]   228.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:L1-icache-load-misses":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-load-misses":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-loads":
[info]   0.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-store-misses":
[info]   6.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:LLC-stores":
[info]   9.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:branch-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:branches":
[info]   180.318 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:cycles":
[info]   463.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-load-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-loads":
[info]   248.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:dTLB-stores":
[info]   221.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:instructions":
[info]   1101.211 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:21:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.652 ops/s
[info] # Warmup Iteration   2: 731090.930 ops/s
[info] # Warmup Iteration   3: 877604.244 ops/s
[info] # Warmup Iteration   4: 977126.249 ops/s
[info] # Warmup Iteration   5: 984781.902 ops/s
[info] Iteration   1: 990677.945 ops/s
[info] Iteration   2: 991482.025 ops/s
[info] Iteration   3: 986224.718 ops/s
[info] Iteration   4: 977611.690 ops/s
[info] Iteration   5: 921008.247 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   973400.925 ±(99.9%) 114756.207 ops/s [Average]
[info]   (min, avg, max) = (921008.247, 973400.925, 991482.025), stdev = 29801.823
[info]   CI (99.9%): [858644.718, 1088157.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:CPI":
[info]   0.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   88.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   3627.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   1750.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   4.667 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-loads":
[info]   0.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.540 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:LLC-stores":
[info]   2.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:branch-misses":
[info]   1.707 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:branches":
[info]   1860.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:cycles":
[info]   3906.187 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-loads":
[info]   3725.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:dTLB-stores":
[info]   1750.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.258 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:instructions":
[info]   10251.861 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:20:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4270.119 ops/s
[info] # Warmup Iteration   2: 198946.921 ops/s
[info] # Warmup Iteration   3: 312891.710 ops/s
[info] # Warmup Iteration   4: 460386.123 ops/s
[info] # Warmup Iteration   5: 461422.675 ops/s
[info] Iteration   1: 459061.585 ops/s
[info] Iteration   2: 458026.855 ops/s
[info] Iteration   3: 458291.571 ops/s
[info] Iteration   4: 449800.887 ops/s
[info] Iteration   5: 442161.512 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   453468.482 ±(99.9%) 28337.088 ops/s [Average]
[info]   (min, avg, max) = (442161.512, 453468.482, 459061.585), stdev = 7359.052
[info]   CI (99.9%): [425131.394, 481805.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:CPI":
[info]   0.421 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   450.200 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-dcache-loads":
[info]   6244.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-dcache-stores":
[info]   3082.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   442.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-loads":
[info]   7.588 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-store-misses":
[info]   6.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:LLC-stores":
[info]   17.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:branch-misses":
[info]   5.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:branches":
[info]   3722.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:cycles":
[info]   8363.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-loads":
[info]   6511.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:dTLB-stores":
[info]   3132.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:iTLB-loads":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:instructions":
[info]   19885.066 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:20:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 525384.035 ops/s
[info] # Warmup Iteration   2: 737131.356 ops/s
[info] # Warmup Iteration   3: 746133.235 ops/s
[info] # Warmup Iteration   4: 857499.763 ops/s
[info] # Warmup Iteration   5: 852425.595 ops/s
[info] Iteration   1: 856370.903 ops/s
[info] Iteration   2: 855554.107 ops/s
[info] Iteration   3: 854797.340 ops/s
[info] Iteration   4: 857616.919 ops/s
[info] Iteration   5: 854048.917 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   855677.637 ±(99.9%) 5337.117 ops/s [Average]
[info]   (min, avg, max) = (854048.917, 855677.637, 857616.919), stdev = 1386.032
[info]   CI (99.9%): [850340.520, 861014.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:CPI":
[info]   0.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   123.752 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   4085.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1967.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.296 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-loads":
[info]   1.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-store-misses":
[info]   6.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:LLC-stores":
[info]   15.623 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:branch-misses":
[info]   1.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:branches":
[info]   2103.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:cycles":
[info]   4507.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-loads":
[info]   3979.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:dTLB-stores":
[info]   1920.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.131 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:instructions":
[info]   11627.684 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:20:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2793931.920 ops/s
[info] # Warmup Iteration   2: 3946896.784 ops/s
[info] # Warmup Iteration   3: 4349390.270 ops/s
[info] # Warmup Iteration   4: 4152458.971 ops/s
[info] # Warmup Iteration   5: 4334451.984 ops/s
[info] Iteration   1: 4319431.340 ops/s
[info] Iteration   2: 4298261.908 ops/s
[info] Iteration   3: 4303994.151 ops/s
[info] Iteration   4: 8755520.843 ops/s
[info] Iteration   5: 9009890.657 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   6137419.780 ±(99.9%) 9656324.682 ops/s [Average]
[info]   (min, avg, max) = (4298261.908, 6137419.780, 9009890.657), stdev = 2507716.855
[info]   CI (99.9%): [≈ 0, 15793744.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:CPI":
[info]   0.333 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-load-misses":
[info]   14.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-loads":
[info]   360.264 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-stores":
[info]   307.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:L1-icache-load-misses":
[info]   0.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-loads":
[info]   0.132 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-store-misses":
[info]   5.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:LLC-stores":
[info]   9.180 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:branch-misses":
[info]   0.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:branches":
[info]   383.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:cycles":
[info]   634.853 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-load-misses":
[info]   0.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-loads":
[info]   373.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:dTLB-stores":
[info]   325.169 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:iTLB-loads":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:instructions":
[info]   1909.008 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:20:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7567281.700 ops/s
[info] # Warmup Iteration   2: 42044888.788 ops/s
[info] # Warmup Iteration   3: 8657503.128 ops/s
[info] # Warmup Iteration   4: 41816098.263 ops/s
[info] # Warmup Iteration   5: 40534128.389 ops/s
[info] Iteration   1: 42101362.269 ops/s
[info] Iteration   2: 40029320.815 ops/s
[info] Iteration   3: 40409652.035 ops/s
[info] Iteration   4: 40543216.785 ops/s
[info] Iteration   5: 42158543.623 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   41048419.106 ±(99.9%) 3871228.279 ops/s [Average]
[info]   (min, avg, max) = (40029320.815, 41048419.106, 42158543.623), stdev = 1005345.690
[info]   CI (99.9%): [37177190.826, 44919647.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:CPI":
[info]   0.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-load-misses":
[info]   2.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-loads":
[info]   76.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-stores":
[info]   60.528 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-icache-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-store-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-stores":
[info]   0.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branch-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branches":
[info]   60.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:cycles":
[info]   91.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-loads":
[info]   78.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-stores":
[info]   62.823 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-load-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-loads":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:instructions":
[info]   312.918 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:20:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 8410.787 ops/s
[info] # Warmup Iteration   2: 138882.263 ops/s
[info] # Warmup Iteration   3: 321745.202 ops/s
[info] # Warmup Iteration   4: 388975.304 ops/s
[info] # Warmup Iteration   5: 388349.818 ops/s
[info] Iteration   1: 400626.993 ops/s
[info] Iteration   2: 408508.580 ops/s
[info] Iteration   3: 407025.000 ops/s
[info] Iteration   4: 410674.598 ops/s
[info] Iteration   5: 409303.049 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   407227.644 ±(99.9%) 15091.288 ops/s [Average]
[info]   (min, avg, max) = (400626.993, 407227.644, 410674.598), stdev = 3919.160
[info]   CI (99.9%): [392136.356, 422318.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:CPI":
[info]   0.468 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   499.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-dcache-loads":
[info]   5997.943 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-dcache-stores":
[info]   3612.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:L1-icache-load-misses":
[info]   636.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-load-misses":
[info]   0.651 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-loads":
[info]   17.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-store-misses":
[info]   29.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:LLC-stores":
[info]   70.122 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:branch-misses":
[info]   2.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:branches":
[info]   3489.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:cycles":
[info]   9324.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.706 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-loads":
[info]   6253.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:dTLB-stores":
[info]   3641.974 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:iTLB-loads":
[info]   7.572 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:instructions":
[info]   19937.273 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:19:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1167585.661 ops/s
[info] # Warmup Iteration   2: 1435291.372 ops/s
[info] # Warmup Iteration   3: 1463606.927 ops/s
[info] # Warmup Iteration   4: 1464785.773 ops/s
[info] # Warmup Iteration   5: 1464293.241 ops/s
[info] Iteration   1: 1463414.493 ops/s
[info] Iteration   2: 1461338.030 ops/s
[info] Iteration   3: 1466528.532 ops/s
[info] Iteration   4: 1461628.625 ops/s
[info] Iteration   5: 1456687.851 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1461919.506 ±(99.9%) 13786.038 ops/s [Average]
[info]   (min, avg, max) = (1456687.851, 1461919.506, 1466528.532), stdev = 3580.190
[info]   CI (99.9%): [1448133.468, 1475705.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:CPI":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1014.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   1090.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-loads":
[info]   0.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:LLC-stores":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:branch-misses":
[info]   2.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:branches":
[info]   3011.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:cycles":
[info]   2623.913 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-loads":
[info]   1010.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:dTLB-stores":
[info]   1095.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:instructions":
[info]   12370.107 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:19:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 16473.406 ops/s
[info] # Warmup Iteration   2: 102370.914 ops/s
[info] # Warmup Iteration   3: 104630.380 ops/s
[info] # Warmup Iteration   4: 121201.640 ops/s
[info] # Warmup Iteration   5: 124560.458 ops/s
[info] Iteration   1: 121992.461 ops/s
[info] Iteration   2: 117824.784 ops/s
[info] Iteration   3: 124086.030 ops/s
[info] Iteration   4: 123264.121 ops/s
[info] Iteration   5: 117365.136 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   120906.506 ±(99.9%) 12005.942 ops/s [Average]
[info]   (min, avg, max) = (117365.136, 120906.506, 124086.030), stdev = 3117.905
[info]   CI (99.9%): [108900.564, 132912.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:CPI":
[info]   0.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1259.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-dcache-loads":
[info]   28484.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-dcache-stores":
[info]   21164.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:L1-icache-load-misses":
[info]   77.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-load-misses":
[info]   5.259 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-loads":
[info]   21.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-store-misses":
[info]   73.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:LLC-stores":
[info]   220.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:branch-misses":
[info]   38.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:branches":
[info]   21008.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:cycles":
[info]   34951.072 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-load-misses":
[info]   3.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-loads":
[info]   26792.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:dTLB-stores":
[info]   20609.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:iTLB-load-misses":
[info]   1.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:iTLB-loads":
[info]   6.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:instructions":
[info]   116661.078 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:19:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1139632.468 ops/s
[info] # Warmup Iteration   2: 2060503.840 ops/s
[info] # Warmup Iteration   3: 2099128.076 ops/s
[info] # Warmup Iteration   4: 2097224.904 ops/s
[info] # Warmup Iteration   5: 2101489.728 ops/s
[info] Iteration   1: 2105884.587 ops/s
[info] Iteration   2: 2104635.678 ops/s
[info] Iteration   3: 2104337.999 ops/s
[info] Iteration   4: 2103357.626 ops/s
[info] Iteration   5: 2103692.556 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   2104381.689 ±(99.9%) 3777.131 ops/s [Average]
[info]   (min, avg, max) = (2103357.626, 2104381.689, 2105884.587), stdev = 980.909
[info]   CI (99.9%): [2100604.558, 2108158.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:CPI":
[info]   0.234 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   7.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   448.759 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   796.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-loads":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.831 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:LLC-stores":
[info]   2.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:branch-misses":
[info]   2.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:branches":
[info]   1931.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:cycles":
[info]   1823.819 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.094 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-loads":
[info]   448.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:dTLB-stores":
[info]   790.857 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:instructions":
[info]   7788.454 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:19:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1586111.897 ops/s
[info] # Warmup Iteration   2: 1871811.092 ops/s
[info] # Warmup Iteration   3: 1999577.808 ops/s
[info] # Warmup Iteration   4: 1993194.424 ops/s
[info] # Warmup Iteration   5: 1987083.067 ops/s
[info] Iteration   1: 2015680.579 ops/s
[info] Iteration   2: 1992738.939 ops/s
[info] Iteration   3: 1919981.449 ops/s
[info] Iteration   4: 1860029.209 ops/s
[info] Iteration   5: 1869472.998 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1931580.635 ±(99.9%) 271768.214 ops/s [Average]
[info]   (min, avg, max) = (1860029.209, 1931580.635, 2015680.579), stdev = 70577.342
[info]   CI (99.9%): [1659812.420, 2203348.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:CPI":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   7.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   757.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   860.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:branch-misses":
[info]   3.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:branches":
[info]   2093.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:cycles":
[info]   1933.417 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.104 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-loads":
[info]   749.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:dTLB-stores":
[info]   836.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:instructions":
[info]   8447.076 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:18:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1556592.452 ops/s
[info] # Warmup Iteration   2: 1875316.402 ops/s
[info] # Warmup Iteration   3: 1959218.360 ops/s
[info] # Warmup Iteration   4: 1960988.327 ops/s
[info] # Warmup Iteration   5: 1959662.524 ops/s
[info] Iteration   1: 1961351.237 ops/s
[info] Iteration   2: 1956879.258 ops/s
[info] Iteration   3: 2039967.385 ops/s
[info] Iteration   4: 2036856.165 ops/s
[info] Iteration   5: 2036612.419 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2006333.293 ±(99.9%) 166167.782 ops/s [Average]
[info]   (min, avg, max) = (1956879.258, 2006333.293, 2039967.385), stdev = 43153.245
[info]   CI (99.9%): [1840165.511, 2172501.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   721.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   823.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   3.070 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2047.680 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   1865.975 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   723.555 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   827.722 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   8394.012 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:18:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 12875.427 ops/s
[info] # Warmup Iteration   2: 44208.738 ops/s
[info] # Warmup Iteration   3: 50453.225 ops/s
[info] # Warmup Iteration   4: 52110.608 ops/s
[info] # Warmup Iteration   5: 56112.240 ops/s
[info] Iteration   1: 54928.146 ops/s
[info] Iteration   2: 54901.071 ops/s
[info] Iteration   3: 56219.451 ops/s
[info] Iteration   4: 56644.143 ops/s
[info] Iteration   5: 53819.103 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   55302.383 ±(99.9%) 4366.092 ops/s [Average]
[info]   (min, avg, max) = (53819.103, 55302.383, 56644.143), stdev = 1133.860
[info]   CI (99.9%): [50936.291, 59668.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:CPI":
[info]   0.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1143.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-dcache-loads":
[info]   38893.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-dcache-stores":
[info]   23994.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:L1-icache-load-misses":
[info]   19.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-load-misses":
[info]   1.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-loads":
[info]   8.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-store-misses":
[info]   9.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:LLC-stores":
[info]   66.445 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:branch-misses":
[info]   94.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:branches":
[info]   45028.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:cycles":
[info]   67892.556 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-load-misses":
[info]   2.491 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-loads":
[info]   39586.934 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:dTLB-stores":
[info]   24828.607 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:iTLB-loads":
[info]   1.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:instructions":
[info]   218260.597 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:18:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 224990.263 ops/s
[info] # Warmup Iteration   2: 247070.195 ops/s
[info] # Warmup Iteration   3: 258279.966 ops/s
[info] # Warmup Iteration   4: 259308.582 ops/s
[info] # Warmup Iteration   5: 261457.106 ops/s
[info] Iteration   1: 271841.794 ops/s
[info] Iteration   2: 276345.992 ops/s
[info] Iteration   3: 274464.788 ops/s
[info] Iteration   4: 274723.743 ops/s
[info] Iteration   5: 263691.815 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   272213.626 ±(99.9%) 19368.815 ops/s [Average]
[info]   (min, avg, max) = (263691.815, 272213.626, 276345.992), stdev = 5030.020
[info]   CI (99.9%): [252844.811, 291582.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   104.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   6162.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   4553.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.116 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   56.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   79.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   7.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:branches":
[info]   12614.918 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   14147.638 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   6244.153 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   4490.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.194 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   57415.765 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:18:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3513.628 ops/s
[info] # Warmup Iteration   2: 29851.567 ops/s
[info] # Warmup Iteration   3: 53333.608 ops/s
[info] # Warmup Iteration   4: 49514.806 ops/s
[info] # Warmup Iteration   5: 53907.596 ops/s
[info] Iteration   1: 53580.958 ops/s
[info] Iteration   2: 53920.686 ops/s
[info] Iteration   3: 53990.457 ops/s
[info] Iteration   4: 54056.425 ops/s
[info] Iteration   5: 54103.591 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   53930.423 ±(99.9%) 797.762 ops/s [Average]
[info]   (min, avg, max) = (53580.958, 53930.423, 54103.591), stdev = 207.176
[info]   CI (99.9%): [53132.661, 54728.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   2228.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   49589.516 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   28938.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   518.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   2.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   23.594 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   95.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   265.804 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   133.188 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:branches":
[info]   41422.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:cycles":
[info]   71851.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   4.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   50550.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   29781.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.493 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:instructions":
[info]   231303.869 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:17:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 79297.195 ops/s
[info] # Warmup Iteration   2: 172776.591 ops/s
[info] # Warmup Iteration   3: 155034.619 ops/s
[info] # Warmup Iteration   4: 162591.631 ops/s
[info] # Warmup Iteration   5: 163358.994 ops/s
[info] Iteration   1: 164239.371 ops/s
[info] Iteration   2: 163154.351 ops/s
[info] Iteration   3: 164440.503 ops/s
[info] Iteration   4: 164625.421 ops/s
[info] Iteration   5: 163823.418 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   164056.613 ±(99.9%) 2255.810 ops/s [Average]
[info]   (min, avg, max) = (163154.351, 164056.613, 164625.421), stdev = 585.827
[info]   CI (99.9%): [161800.803, 166312.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.247 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   276.601 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   14336.800 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   9541.589 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1.717 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   2.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   67.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   110.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   18.694 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:branches":
[info]   18885.821 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   23161.612 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   2.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   14546.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   9484.149 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   93646.765 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:17:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 314113.034 ops/s
[info] # Warmup Iteration   2: 400470.191 ops/s
[info] # Warmup Iteration   3: 425594.423 ops/s
[info] # Warmup Iteration   4: 431201.422 ops/s
[info] # Warmup Iteration   5: 427938.578 ops/s
[info] Iteration   1: 429995.988 ops/s
[info] Iteration   2: 431020.627 ops/s
[info] Iteration   3: 430638.918 ops/s
[info] Iteration   4: 429053.976 ops/s
[info] Iteration   5: 427290.182 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   429599.938 ±(99.9%) 5739.830 ops/s [Average]
[info]   (min, avg, max) = (427290.182, 429599.938, 431020.627), stdev = 1490.616
[info]   CI (99.9%): [423860.108, 435339.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   36.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   6293.390 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   4819.292 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   2.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   29.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   36.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   6745.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   8980.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.565 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   6260.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   4658.571 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   36769.927 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:17:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 471768.237 ops/s
[info] # Warmup Iteration   2: 565605.587 ops/s
[info] # Warmup Iteration   3: 587787.253 ops/s
[info] # Warmup Iteration   4: 588092.874 ops/s
[info] # Warmup Iteration   5: 588546.960 ops/s
[info] Iteration   1: 588264.608 ops/s
[info] Iteration   2: 588020.818 ops/s
[info] Iteration   3: 588166.582 ops/s
[info] Iteration   4: 588494.679 ops/s
[info] Iteration   5: 588074.298 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   588204.197 ±(99.9%) 720.249 ops/s [Average]
[info]   (min, avg, max) = (588020.818, 588204.197, 588494.679), stdev = 187.046
[info]   CI (99.9%): [587483.948, 588924.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3725.980 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3895.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5570.792 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   6419.694 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3745.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   3909.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   29422.481 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:17:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15909.147 ops/s
[info] # Warmup Iteration   2: 57296.966 ops/s
[info] # Warmup Iteration   3: 66775.599 ops/s
[info] # Warmup Iteration   4: 69498.643 ops/s
[info] # Warmup Iteration   5: 74433.801 ops/s
[info] Iteration   1: 75378.530 ops/s
[info] Iteration   2: 79385.363 ops/s
[info] Iteration   3: 79204.842 ops/s
[info] Iteration   4: 76195.192 ops/s
[info] Iteration   5: 74338.407 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   76900.467 ±(99.9%) 8794.045 ops/s [Average]
[info]   (min, avg, max) = (74338.407, 76900.467, 79385.363), stdev = 2283.786
[info]   CI (99.9%): [68106.422, 85694.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   871.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   33311.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   19856.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   9.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   2.158 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   5.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   106.299 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   216.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   42.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:branches":
[info]   33218.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:cycles":
[info]   48642.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   3.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   33583.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   20101.889 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:instructions":
[info]   171129.785 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:16:59
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 25884.815 ops/s
[info] # Warmup Iteration   2: 90238.945 ops/s
[info] # Warmup Iteration   3: 93216.350 ops/s
[info] # Warmup Iteration   4: 103460.958 ops/s
[info] # Warmup Iteration   5: 102956.492 ops/s
[info] Iteration   1: 103588.021 ops/s
[info] Iteration   2: 103322.970 ops/s
[info] Iteration   3: 104304.781 ops/s
[info] Iteration   4: 103823.792 ops/s
[info] Iteration   5: 103454.144 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   103698.741 ±(99.9%) 1486.634 ops/s [Average]
[info]   (min, avg, max) = (103322.970, 103698.741, 104304.781), stdev = 386.074
[info]   CI (99.9%): [102212.108, 105185.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:CPI":
[info]   0.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   482.566 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   26075.756 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   13346.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   9.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses":
[info]   1.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-loads":
[info]   8.354 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses":
[info]   69.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-stores":
[info]   148.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:branch-misses":
[info]   23.791 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:branches":
[info]   32345.410 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:cycles":
[info]   38058.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   1.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-loads":
[info]   27320.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-stores":
[info]   14323.054 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:instructions":
[info]   149060.128 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:16:45
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 29076.494 ops/s
[info] # Warmup Iteration   2: 120878.190 ops/s
[info] # Warmup Iteration   3: 148130.387 ops/s
[info] # Warmup Iteration   4: 140018.564 ops/s
[info] # Warmup Iteration   5: 147535.843 ops/s
[info] Iteration   1: 154798.990 ops/s
[info] Iteration   2: 155145.794 ops/s
[info] Iteration   3: 155229.808 ops/s
[info] Iteration   4: 155865.028 ops/s
[info] Iteration   5: 148132.392 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   153834.402 ±(99.9%) 12363.161 ops/s [Average]
[info]   (min, avg, max) = (148132.392, 153834.402, 155865.028), stdev = 3210.674
[info]   CI (99.9%): [141471.241, 166197.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:CPI":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   332.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   17941.513 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   9746.350 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   27.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   2.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   8.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   33.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses":
[info]   5.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branches":
[info]   18437.125 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:cycles":
[info]   24488.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   18209.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   9714.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:instructions":
[info]   90783.142 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:16:31
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 105194.458 ops/s
[info] # Warmup Iteration   2: 226500.548 ops/s
[info] # Warmup Iteration   3: 290740.762 ops/s
[info] # Warmup Iteration   4: 294297.888 ops/s
[info] # Warmup Iteration   5: 296340.774 ops/s
[info] Iteration   1: 295303.320 ops/s
[info] Iteration   2: 289465.805 ops/s
[info] Iteration   3: 297481.270 ops/s
[info] Iteration   4: 243807.237 ops/s
[info] Iteration   5: 297881.607 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   284787.848 ±(99.9%) 89157.966 ops/s [Average]
[info]   (min, avg, max) = (243807.237, 284787.848, 297881.607), stdev = 23154.041
[info]   CI (99.9%): [195629.882, 373945.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   107.755 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   6922.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   4613.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   2.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.965 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   2.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   9.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   29.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   28.395 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branches":
[info]   11044.704 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:cycles":
[info]   11780.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.534 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   7062.458 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   4920.886 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:instructions":
[info]   47448.912 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:16:17
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 467.721 ops/s
[info] # Warmup Iteration   2: 7511.666 ops/s
[info] # Warmup Iteration   3: 9662.945 ops/s
[info] # Warmup Iteration   4: 9337.273 ops/s
[info] # Warmup Iteration   5: 11858.458 ops/s
[info] Iteration   1: 12192.091 ops/s
[info] Iteration   2: 12464.276 ops/s
[info] Iteration   3: 13272.388 ops/s
[info] Iteration   4: 13131.222 ops/s
[info] Iteration   5: 13159.076 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   12843.811 ±(99.9%) 1861.161 ops/s [Average]
[info]   (min, avg, max) = (12192.091, 12843.811, 13272.388), stdev = 483.338
[info]   CI (99.9%): [10982.649, 14704.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:CPI":
[info]   0.501 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   10142.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   281875.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   152092.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   8352.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   140.353 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads":
[info]   1625.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   218.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores":
[info]   615.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:branch-misses":
[info]   1999.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:branches":
[info]   189191.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:cycles":
[info]   527466.452 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   96.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   279854.403 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   6.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   149923.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   56.864 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   632.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:instructions":
[info]   1053100.311 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:16:03
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 31022.803 ops/s
[info] # Warmup Iteration   2: 171976.532 ops/s
[info] # Warmup Iteration   3: 187609.925 ops/s
[info] # Warmup Iteration   4: 234802.809 ops/s
[info] # Warmup Iteration   5: 242825.952 ops/s
[info] Iteration   1: 245953.545 ops/s
[info] Iteration   2: 246323.782 ops/s
[info] Iteration   3: 246820.442 ops/s
[info] Iteration   4: 246486.958 ops/s
[info] Iteration   5: 247272.918 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   246571.529 ±(99.9%) 1929.495 ops/s [Average]
[info]   (min, avg, max) = (245953.545, 246571.529, 247272.918), stdev = 501.084
[info]   CI (99.9%): [244642.034, 248501.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   99.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   9300.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   6041.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.652 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   1.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   14.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   28.286 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   0.811 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branches":
[info]   12688.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:cycles":
[info]   14834.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   9265.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   5970.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.020 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:instructions":
[info]   61242.111 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:15:49
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 438608.627 ops/s
[info] # Warmup Iteration   2: 597589.262 ops/s
[info] # Warmup Iteration   3: 650929.960 ops/s
[info] # Warmup Iteration   4: 643592.650 ops/s
[info] # Warmup Iteration   5: 644598.819 ops/s
[info] Iteration   1: 645519.686 ops/s
[info] Iteration   2: 647657.923 ops/s
[info] Iteration   3: 647488.143 ops/s
[info] Iteration   4: 647787.796 ops/s
[info] Iteration   5: 650450.402 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   647780.790 ±(99.9%) 6763.392 ops/s [Average]
[info]   (min, avg, max) = (645519.686, 647780.790, 650450.402), stdev = 1756.431
[info]   CI (99.9%): [641017.398, 654544.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   30.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3077.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   3186.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   1.178 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.627 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   21.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   27.356 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   0.952 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branches":
[info]   5659.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles":
[info]   5746.842 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3133.280 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   3269.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions":
[info]   24136.628 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:15:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 485960.813 ops/s
[info] # Warmup Iteration   2: 686550.566 ops/s
[info] # Warmup Iteration   3: 758396.077 ops/s
[info] # Warmup Iteration   4: 758752.676 ops/s
[info] # Warmup Iteration   5: 760934.339 ops/s
[info] Iteration   1: 756110.425 ops/s
[info] Iteration   2: 752173.603 ops/s
[info] Iteration   3: 752007.849 ops/s
[info] Iteration   4: 746502.382 ops/s
[info] Iteration   5: 748804.749 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   751119.801 ±(99.9%) 14080.604 ops/s [Average]
[info]   (min, avg, max) = (746502.382, 751119.801, 756110.425), stdev = 3656.688
[info]   CI (99.9%): [737039.197, 765200.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2926.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   3027.737 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   5681.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   5032.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2886.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   2989.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   23561.135 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6383.604 ops/s
[info] # Warmup Iteration   2: 45355.285 ops/s
[info] # Warmup Iteration   3: 60467.543 ops/s
[info] # Warmup Iteration   4: 66342.089 ops/s
[info] # Warmup Iteration   5: 71139.856 ops/s
[info] Iteration   1: 68984.799 ops/s
[info] Iteration   2: 70308.736 ops/s
[info] Iteration   3: 79318.111 ops/s
[info] Iteration   4: 88511.381 ops/s
[info] Iteration   5: 88428.137 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   79110.233 ±(99.9%) 36288.049 ops/s [Average]
[info]   (min, avg, max) = (68984.799, 79110.233, 88511.381), stdev = 9423.891
[info]   CI (99.9%): [42822.184, 115398.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:CPI":
[info]   0.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1242.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   48308.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   25695.578 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   365.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   11.908 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads":
[info]   72.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   67.603 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores":
[info]   161.843 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:branch-misses":
[info]   94.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:branches":
[info]   39285.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:cycles":
[info]   66518.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   6.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   47695.514 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.384 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   25543.608 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   1.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   35.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:instructions":
[info]   200876.568 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:15:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 27224.000 ops/s
[info] # Warmup Iteration   2: 82885.423 ops/s
[info] # Warmup Iteration   3: 100291.457 ops/s
[info] # Warmup Iteration   4: 106233.467 ops/s
[info] # Warmup Iteration   5: 113024.357 ops/s
[info] Iteration   1: 111599.381 ops/s
[info] Iteration   2: 113996.958 ops/s
[info] Iteration   3: 116912.996 ops/s
[info] Iteration   4: 116888.156 ops/s
[info] Iteration   5: 125087.026 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   116896.903 ±(99.9%) 19592.161 ops/s [Average]
[info]   (min, avg, max) = (111599.381, 116896.903, 125087.026), stdev = 5088.022
[info]   CI (99.9%): [97304.742, 136489.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:CPI":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   976.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-dcache-loads":
[info]   30037.481 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-dcache-stores":
[info]   15987.256 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   297.204 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-load-misses":
[info]   9.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-loads":
[info]   76.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-store-misses":
[info]   78.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:LLC-stores":
[info]   159.888 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:branch-misses":
[info]   82.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:branches":
[info]   30521.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:cycles":
[info]   50987.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-load-misses":
[info]   6.865 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-loads":
[info]   30209.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:dTLB-stores":
[info]   15732.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:iTLB-load-misses":
[info]   2.568 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:iTLB-loads":
[info]   36.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:instructions":
[info]   149802.046 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:14:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13685.553 ops/s
[info] # Warmup Iteration   2: 117508.557 ops/s
[info] # Warmup Iteration   3: 160481.918 ops/s
[info] # Warmup Iteration   4: 199094.512 ops/s
[info] # Warmup Iteration   5: 205576.239 ops/s
[info] Iteration   1: 198920.971 ops/s
[info] Iteration   2: 198964.093 ops/s
[info] Iteration   3: 199078.407 ops/s
[info] Iteration   4: 199333.461 ops/s
[info] Iteration   5: 206485.884 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   200556.563 ±(99.9%) 12778.234 ops/s [Average]
[info]   (min, avg, max) = (198920.971, 200556.563, 206485.884), stdev = 3318.467
[info]   CI (99.9%): [187778.329, 213334.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:CPI":
[info]   0.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   124.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   13036.310 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   8781.388 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   1.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-loads":
[info]   1.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   44.713 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:LLC-stores":
[info]   64.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:branch-misses":
[info]   4.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:branches":
[info]   13742.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:cycles":
[info]   18550.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.742 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   13161.465 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   8738.068 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:instructions":
[info]   67111.037 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:14:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 91980.520 ops/s
[info] # Warmup Iteration   2: 198330.503 ops/s
[info] # Warmup Iteration   3: 238270.383 ops/s
[info] # Warmup Iteration   4: 291929.012 ops/s
[info] # Warmup Iteration   5: 294829.401 ops/s
[info] Iteration   1: 293091.015 ops/s
[info] Iteration   2: 289565.619 ops/s
[info] Iteration   3: 293275.509 ops/s
[info] Iteration   4: 284393.786 ops/s
[info] Iteration   5: 281707.430 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   288406.672 ±(99.9%) 20006.207 ops/s [Average]
[info]   (min, avg, max) = (281707.430, 288406.672, 293275.509), stdev = 5195.548
[info]   CI (99.9%): [268400.465, 308412.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:CPI":
[info]   0.278 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   123.495 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   8416.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   4599.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   19.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   5.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   40.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   57.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:branch-misses":
[info]   7.765 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:branches":
[info]   11465.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:cycles":
[info]   14362.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.941 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   8689.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   4672.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   1.784 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:instructions":
[info]   51660.323 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:14:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 7550.124 ops/s
[info] # Warmup Iteration   2: 36383.618 ops/s
[info] # Warmup Iteration   3: 82630.547 ops/s
[info] # Warmup Iteration   4: 95619.740 ops/s
[info] # Warmup Iteration   5: 98899.811 ops/s
[info] Iteration   1: 91942.131 ops/s
[info] Iteration   2: 100377.803 ops/s
[info] Iteration   3: 102616.524 ops/s
[info] Iteration   4: 101959.373 ops/s
[info] Iteration   5: 103172.562 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   100013.679 ±(99.9%) 17836.167 ops/s [Average]
[info]   (min, avg, max) = (91942.131, 100013.679, 103172.562), stdev = 4631.996
[info]   CI (99.9%): [82177.512, 117849.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:CPI":
[info]   0.326 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1327.492 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   31116.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   21973.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   83.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   4.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-loads":
[info]   30.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   110.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:LLC-stores":
[info]   260.480 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:branch-misses":
[info]   104.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:branches":
[info]   24046.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:cycles":
[info]   44344.632 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-loads":
[info]   30920.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:dTLB-stores":
[info]   22467.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.593 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:iTLB-loads":
[info]   6.900 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:instructions":
[info]   136066.182 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:14:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 123602.352 ops/s
[info] # Warmup Iteration   2: 221523.718 ops/s
[info] # Warmup Iteration   3: 251142.251 ops/s
[info] # Warmup Iteration   4: 249678.228 ops/s
[info] # Warmup Iteration   5: 251404.454 ops/s
[info] Iteration   1: 249705.209 ops/s
[info] Iteration   2: 252524.954 ops/s
[info] Iteration   3: 252276.860 ops/s
[info] Iteration   4: 249667.305 ops/s
[info] Iteration   5: 247173.558 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   250269.577 ±(99.9%) 8476.334 ops/s [Average]
[info]   (min, avg, max) = (247173.558, 250269.577, 252524.954), stdev = 2201.277
[info]   CI (99.9%): [241793.243, 258745.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:CPI":
[info]   0.257 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   180.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-dcache-loads":
[info]   8918.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-dcache-stores":
[info]   6981.198 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.920 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-load-misses":
[info]   0.530 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-loads":
[info]   1.878 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-store-misses":
[info]   70.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:LLC-stores":
[info]   112.460 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:branch-misses":
[info]   7.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:branches":
[info]   11762.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:cycles":
[info]   15239.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.549 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-loads":
[info]   9163.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:dTLB-stores":
[info]   7266.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:iTLB-loads":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:instructions":
[info]   59301.831 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:13:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 297126.735 ops/s
[info] # Warmup Iteration   2: 705469.294 ops/s
[info] # Warmup Iteration   3: 811291.474 ops/s
[info] # Warmup Iteration   4: 866288.094 ops/s
[info] # Warmup Iteration   5: 859234.949 ops/s
[info] Iteration   1: 858473.791 ops/s
[info] Iteration   2: 862690.788 ops/s
[info] Iteration   3: 854901.634 ops/s
[info] Iteration   4: 858626.215 ops/s
[info] Iteration   5: 822484.244 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   851435.335 ±(99.9%) 63217.288 ops/s [Average]
[info]   (min, avg, max) = (822484.244, 851435.335, 862690.788), stdev = 16417.329
[info]   CI (99.9%): [788218.047, 914652.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:CPI":
[info]   0.232 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   15.809 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   3337.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1586.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.551 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   4.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   8.649 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:branch-misses":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:branches":
[info]   4474.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:cycles":
[info]   4405.893 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   3361.567 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   1592.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:instructions":
[info]   18983.669 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:13:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 683150.514 ops/s
[info] # Warmup Iteration   2: 811820.874 ops/s
[info] # Warmup Iteration   3: 850997.887 ops/s
[info] # Warmup Iteration   4: 865338.922 ops/s
[info] # Warmup Iteration   5: 869951.770 ops/s
[info] Iteration   1: 872675.277 ops/s
[info] Iteration   2: 929494.893 ops/s
[info] Iteration   3: 931908.099 ops/s
[info] Iteration   4: 923366.150 ops/s
[info] Iteration   5: 918253.562 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   915139.596 ±(99.9%) 93687.216 ops/s [Average]
[info]   (min, avg, max) = (872675.277, 915139.596, 931908.099), stdev = 24330.272
[info]   CI (99.9%): [821452.380, 1008826.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   14.988 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   2516.816 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1646.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.033 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.183 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   5.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   9.400 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.778 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:branches":
[info]   4595.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:cycles":
[info]   4187.494 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   2523.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1609.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:instructions":
[info]   18597.736 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:13:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 683333.271 ops/s
[info] # Warmup Iteration   2: 889424.208 ops/s
[info] # Warmup Iteration   3: 907721.725 ops/s
[info] # Warmup Iteration   4: 906183.635 ops/s
[info] # Warmup Iteration   5: 908818.502 ops/s
[info] Iteration   1: 909622.044 ops/s
[info] Iteration   2: 909109.702 ops/s
[info] Iteration   3: 910924.867 ops/s
[info] Iteration   4: 911524.485 ops/s
[info] Iteration   5: 912367.419 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   910709.703 ±(99.9%) 5166.609 ops/s [Average]
[info]   (min, avg, max) = (909109.702, 910709.703, 912367.419), stdev = 1341.752
[info]   CI (99.9%): [905543.094, 915876.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.547 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   2484.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1605.099 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.829 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   4628.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4125.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   2488.745 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1602.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.197 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   18619.407 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:13:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 15983.436 ops/s
[info] # Warmup Iteration   2: 35187.965 ops/s
[info] # Warmup Iteration   3: 40233.193 ops/s
[info] # Warmup Iteration   4: 36221.726 ops/s
[info] # Warmup Iteration   5: 37640.643 ops/s
[info] Iteration   1: 37413.389 ops/s
[info] Iteration   2: 39260.283 ops/s
[info] Iteration   3: 39427.655 ops/s
[info] Iteration   4: 39353.205 ops/s
[info] Iteration   5: 38107.240 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   38712.354 ±(99.9%) 3484.804 ops/s [Average]
[info]   (min, avg, max) = (37413.389, 38712.354, 39427.655), stdev = 904.993
[info]   CI (99.9%): [35227.550, 42197.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:CPI":
[info]   0.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1691.586 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-loads":
[info]   54056.856 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-stores":
[info]   34186.647 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   182.381 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-load-misses":
[info]   11.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-loads":
[info]   63.306 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-store-misses":
[info]   23.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:LLC-stores":
[info]   170.246 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:branch-misses":
[info]   209.298 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:branches":
[info]   63629.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:cycles":
[info]   106849.945 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-load-misses":
[info]   5.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-loads":
[info]   53753.466 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.241 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:dTLB-stores":
[info]   34396.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:iTLB-load-misses":
[info]   1.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:iTLB-loads":
[info]   11.271 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:instructions":
[info]   310003.136 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:13:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 45862.442 ops/s
[info] # Warmup Iteration   2: 348182.486 ops/s
[info] # Warmup Iteration   3: 982267.615 ops/s
[info] # Warmup Iteration   4: 1075252.604 ops/s
[info] # Warmup Iteration   5: 1096938.256 ops/s
[info] Iteration   1: 1148762.617 ops/s
[info] Iteration   2: 1155648.432 ops/s
[info] Iteration   3: 1155691.006 ops/s
[info] Iteration   4: 1155454.623 ops/s
[info] Iteration   5: 1114778.017 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   1146066.939 ±(99.9%) 68310.131 ops/s [Average]
[info]   (min, avg, max) = (1114778.017, 1146066.939, 1155691.006), stdev = 17739.924
[info]   CI (99.9%): [1077756.808, 1214377.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:CPI":
[info]   0.327 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-dcache-load-misses":
[info]   57.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-dcache-loads":
[info]   2041.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-dcache-stores":
[info]   1356.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:L1-icache-load-misses":
[info]   50.979 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-load-misses":
[info]   0.030 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-loads":
[info]   0.323 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-store-misses":
[info]   3.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:LLC-stores":
[info]   10.674 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:branch-misses":
[info]   0.443 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:branches":
[info]   2169.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:cycles":
[info]   3339.894 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-load-misses":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-loads":
[info]   2130.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:dTLB-stores":
[info]   1429.472 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:iTLB-load-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:iTLB-loads":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:instructions":
[info]   10198.848 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:12:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 43169.672 ops/s
[info] # Warmup Iteration   2: 1408521.381 ops/s
[info] # Warmup Iteration   3: 1801874.303 ops/s
[info] # Warmup Iteration   4: 1895515.065 ops/s
[info] # Warmup Iteration   5: 1904881.635 ops/s
[info] Iteration   1: 1910002.471 ops/s
[info] Iteration   2: 1903093.438 ops/s
[info] Iteration   3: 1901831.780 ops/s
[info] Iteration   4: 1859968.409 ops/s
[info] Iteration   5: 1873478.166 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1889674.853 ±(99.9%) 83610.126 ops/s [Average]
[info]   (min, avg, max) = (1859968.409, 1889674.853, 1910002.471), stdev = 21713.284
[info]   CI (99.9%): [1806064.727, 1973284.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:CPI":
[info]   0.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   18.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-dcache-loads":
[info]   1729.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-dcache-stores":
[info]   932.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-loads":
[info]   0.195 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:LLC-stores":
[info]   2.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:branch-misses":
[info]   0.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:branches":
[info]   1288.459 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:cycles":
[info]   2030.972 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-loads":
[info]   1734.925 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:dTLB-stores":
[info]   925.613 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:iTLB-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:instructions":
[info]   6430.526 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:12:34
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 6821404.070 ops/s
[info] # Warmup Iteration   2: 9210507.860 ops/s
[info] # Warmup Iteration   3: 9614657.647 ops/s
[info] # Warmup Iteration   4: 9574785.574 ops/s
[info] # Warmup Iteration   5: 9622758.381 ops/s
[info] Iteration   1: 9548379.922 ops/s
[info] Iteration   2: 9547523.867 ops/s
[info] Iteration   3: 9593887.133 ops/s
[info] Iteration   4: 9602471.209 ops/s
[info] Iteration   5: 9562044.353 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   9570861.297 ±(99.9%) 99245.856 ops/s [Average]
[info]   (min, avg, max) = (9547523.867, 9570861.297, 9602471.209), stdev = 25773.834
[info]   CI (99.9%): [9471615.440, 9670107.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:CPI":
[info]   0.222 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   0.911 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   342.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   220.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.056 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-loads":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:LLC-stores":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:branch-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:branches":
[info]   440.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:cycles":
[info]   402.524 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-loads":
[info]   338.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:dTLB-stores":
[info]   220.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:instructions":
[info]   1809.861 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:12:20
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 10210.797 ops/s
[info] # Warmup Iteration   2: 368628.938 ops/s
[info] # Warmup Iteration   3: 455126.052 ops/s
[info] # Warmup Iteration   4: 479241.078 ops/s
[info] # Warmup Iteration   5: 481111.265 ops/s
[info] Iteration   1: 477584.609 ops/s
[info] Iteration   2: 482526.187 ops/s
[info] Iteration   3: 482385.305 ops/s
[info] Iteration   4: 480089.162 ops/s
[info] Iteration   5: 461404.578 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   476797.968 ±(99.9%) 34031.832 ops/s [Average]
[info]   (min, avg, max) = (461404.578, 476797.968, 482526.187), stdev = 8837.959
[info]   CI (99.9%): [442766.136, 510829.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:CPI":
[info]   0.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   218.488 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-dcache-loads":
[info]   5360.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-dcache-stores":
[info]   3163.531 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:L1-icache-load-misses":
[info]   372.980 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-load-misses":
[info]   0.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-loads":
[info]   2.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-store-misses":
[info]   2.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:LLC-stores":
[info]   16.961 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:branch-misses":
[info]   9.190 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:branches":
[info]   3800.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:cycles":
[info]   8039.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.217 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-loads":
[info]   5444.817 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:dTLB-stores":
[info]   3222.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.028 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:iTLB-loads":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:instructions":
[info]   21304.820 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 145805.887 ops/s
[info] # Warmup Iteration   2: 1331539.335 ops/s
[info] # Warmup Iteration   3: 1957548.954 ops/s
[info] # Warmup Iteration   4: 1916615.519 ops/s
[info] # Warmup Iteration   5: 1927834.447 ops/s
[info] Iteration   1: 1920561.117 ops/s
[info] Iteration   2: 1741596.487 ops/s
[info] Iteration   3: 1927115.924 ops/s
[info] Iteration   4: 1927983.074 ops/s
[info] Iteration   5: 1926549.600 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1888761.240 ±(99.9%) 316983.613 ops/s [Average]
[info]   (min, avg, max) = (1741596.487, 1888761.240, 1927983.074), stdev = 82319.638
[info]   CI (99.9%): [1571777.628, 2205744.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:CPI":
[info]   0.315 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-dcache-load-misses":
[info]   25.463 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-dcache-loads":
[info]   1395.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-dcache-stores":
[info]   976.814 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.317 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-load-misses":
[info]   0.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-loads":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-store-misses":
[info]   2.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:LLC-stores":
[info]   7.901 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:branch-misses":
[info]   0.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:branches":
[info]   1332.981 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:cycles":
[info]   2035.924 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-load-misses":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-loads":
[info]   1392.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:dTLB-stores":
[info]   988.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:iTLB-loads":
[info]   0.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:instructions":
[info]   6467.672 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:11:52
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 499689.853 ops/s
[info] # Warmup Iteration   2: 2985713.718 ops/s
[info] # Warmup Iteration   3: 3211753.881 ops/s
[info] # Warmup Iteration   4: 3198476.850 ops/s
[info] # Warmup Iteration   5: 3190282.811 ops/s
[info] Iteration   1: 3195384.080 ops/s
[info] Iteration   2: 3202675.055 ops/s
[info] Iteration   3: 3213092.428 ops/s
[info] Iteration   4: 3175783.364 ops/s
[info] Iteration   5: 3020893.075 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   3161565.600 ±(99.9%) 307326.228 ops/s [Average]
[info]   (min, avg, max) = (3020893.075, 3161565.600, 3213092.428), stdev = 79811.645
[info]   CI (99.9%): [2854239.372, 3468891.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:CPI":
[info]   0.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   10.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   919.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   614.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-loads":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.160 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:LLC-stores":
[info]   1.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:branch-misses":
[info]   0.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:branches":
[info]   699.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:cycles":
[info]   1196.708 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-loads":
[info]   925.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:dTLB-stores":
[info]   612.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:instructions":
[info]   3583.829 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:11:38
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5000113.806 ops/s
[info] # Warmup Iteration   2: 8111475.697 ops/s
[info] # Warmup Iteration   3: 9257621.821 ops/s
[info] # Warmup Iteration   4: 8979959.143 ops/s
[info] # Warmup Iteration   5: 8935846.368 ops/s
[info] Iteration   1: 9303956.526 ops/s
[info] Iteration   2: 9276876.957 ops/s
[info] Iteration   3: 9315266.112 ops/s
[info] Iteration   4: 9298057.100 ops/s
[info] Iteration   5: 8965480.393 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   9231927.418 ±(99.9%) 576057.950 ops/s [Average]
[info]   (min, avg, max) = (8965480.393, 9231927.418, 9315266.112), stdev = 149600.420
[info]   CI (99.9%): [8655869.467, 9807985.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:CPI":
[info]   0.391 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   2.138 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   194.779 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   215.948 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:branch-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:branches":
[info]   161.609 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:cycles":
[info]   412.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-loads":
[info]   193.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:dTLB-stores":
[info]   209.561 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:instructions":
[info]   1056.766 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:11:24
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4256597.258 ops/s
[info] # Warmup Iteration   2: 8358991.032 ops/s
[info] # Warmup Iteration   3: 9131805.324 ops/s
[info] # Warmup Iteration   4: 9169209.850 ops/s
[info] # Warmup Iteration   5: 9131443.917 ops/s
[info] Iteration   1: 9151769.188 ops/s
[info] Iteration   2: 9105118.461 ops/s
[info] Iteration   3: 9152640.611 ops/s
[info] Iteration   4: 9152445.045 ops/s
[info] Iteration   5: 9039630.380 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   9120320.737 ±(99.9%) 190670.977 ops/s [Average]
[info]   (min, avg, max) = (9039630.380, 9120320.737, 9152640.611), stdev = 49516.647
[info]   CI (99.9%): [8929649.760, 9310991.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.374 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.897 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   211.379 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   232.164 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.101 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   172.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   420.950 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   210.735 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   232.061 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   1125.237 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:11:10
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17712.416 ops/s
[info] # Warmup Iteration   2: 313185.401 ops/s
[info] # Warmup Iteration   3: 475162.869 ops/s
[info] # Warmup Iteration   4: 531389.309 ops/s
[info] # Warmup Iteration   5: 532434.307 ops/s
[info] Iteration   1: 514426.830 ops/s
[info] Iteration   2: 529179.496 ops/s
[info] Iteration   3: 515188.721 ops/s
[info] Iteration   4: 521016.455 ops/s
[info] Iteration   5: 529296.149 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   521821.530 ±(99.9%) 27856.254 ops/s [Average]
[info]   (min, avg, max) = (514426.830, 521821.530, 529296.149), stdev = 7234.181
[info]   CI (99.9%): [493965.276, 549677.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:CPI":
[info]   0.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   189.475 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-dcache-loads":
[info]   5130.980 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-dcache-stores":
[info]   3069.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:L1-icache-load-misses":
[info]   190.615 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-load-misses":
[info]   0.382 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-loads":
[info]   1.984 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-store-misses":
[info]   4.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:LLC-stores":
[info]   28.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:branch-misses":
[info]   2.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:branches":
[info]   3701.279 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:cycles":
[info]   7328.557 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-loads":
[info]   5080.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:dTLB-stores":
[info]   3199.274 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:iTLB-loads":
[info]   0.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:instructions":
[info]   20636.156 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:56
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 41008.674 ops/s
[info] # Warmup Iteration   2: 91158.951 ops/s
[info] # Warmup Iteration   3: 89474.432 ops/s
[info] # Warmup Iteration   4: 93389.395 ops/s
[info] # Warmup Iteration   5: 86408.246 ops/s
[info] Iteration   1: 88174.981 ops/s
[info] Iteration   2: 89542.155 ops/s
[info] Iteration   3: 89479.290 ops/s
[info] Iteration   4: 94399.110 ops/s
[info] Iteration   5: 96951.877 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   91709.483 ±(99.9%) 14520.625 ops/s [Average]
[info]   (min, avg, max) = (88174.981, 91709.483, 96951.877), stdev = 3770.960
[info]   CI (99.9%): [77188.858, 106230.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:CPI":
[info]   0.324 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-dcache-load-misses":
[info]   1010.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-dcache-loads":
[info]   25773.841 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-dcache-stores":
[info]   16668.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:L1-icache-load-misses":
[info]   50.211 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-load-misses":
[info]   6.179 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-loads":
[info]   41.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-store-misses":
[info]   50.176 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:LLC-stores":
[info]   181.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:branch-misses":
[info]   47.473 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:branches":
[info]   27187.538 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:cycles":
[info]   46052.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-load-misses":
[info]   4.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-loads":
[info]   25867.462 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-store-misses":
[info]   0.124 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:dTLB-stores":
[info]   16695.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:iTLB-load-misses":
[info]   0.461 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:iTLB-loads":
[info]   2.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:instructions":
[info]   141959.397 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:10:42
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 30496.445 ops/s
[info] # Warmup Iteration   2: 113696.604 ops/s
[info] # Warmup Iteration   3: 133385.127 ops/s
[info] # Warmup Iteration   4: 142439.786 ops/s
[info] # Warmup Iteration   5: 134352.471 ops/s
[info] Iteration   1: 140560.252 ops/s
[info] Iteration   2: 142731.212 ops/s
[info] Iteration   3: 143141.752 ops/s
[info] Iteration   4: 137890.211 ops/s
[info] Iteration   5: 142126.823 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   141290.050 ±(99.9%) 8235.665 ops/s [Average]
[info]   (min, avg, max) = (137890.211, 141290.050, 143141.752), stdev = 2138.776
[info]   CI (99.9%): [133054.385, 149525.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:CPI":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   543.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   16226.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   12325.150 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   171.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-loads":
[info]   6.156 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-store-misses":
[info]   12.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:LLC-stores":
[info]   87.622 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:branch-misses":
[info]   27.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:branches":
[info]   16765.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:cycles":
[info]   27063.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   3.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-loads":
[info]   16637.688 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:dTLB-stores":
[info]   13117.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:instructions":
[info]   90973.066 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 68633.663 ops/s
[info] # Warmup Iteration   2: 165959.394 ops/s
[info] # Warmup Iteration   3: 171268.788 ops/s
[info] # Warmup Iteration   4: 170836.564 ops/s
[info] # Warmup Iteration   5: 175657.152 ops/s
[info] Iteration   1: 176385.658 ops/s
[info] Iteration   2: 174653.977 ops/s
[info] Iteration   3: 175106.636 ops/s
[info] Iteration   4: 168649.207 ops/s
[info] Iteration   5: 179994.715 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   174958.039 ±(99.9%) 15797.276 ops/s [Average]
[info]   (min, avg, max) = (168649.207, 174958.039, 179994.715), stdev = 4102.502
[info]   CI (99.9%): [159160.762, 190755.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:CPI":
[info]   0.307 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   427.162 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   12381.592 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   9977.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   62.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   1.938 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-loads":
[info]   22.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   15.726 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:LLC-stores":
[info]   87.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:branch-misses":
[info]   29.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:branches":
[info]   14488.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:cycles":
[info]   24055.343 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   1.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-loads":
[info]   12677.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.062 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:dTLB-stores":
[info]   10259.347 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:iTLB-loads":
[info]   3.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:instructions":
[info]   78454.498 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:10:14
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 17465.828 ops/s
[info] # Warmup Iteration   2: 59462.383 ops/s
[info] # Warmup Iteration   3: 73169.691 ops/s
[info] # Warmup Iteration   4: 79101.734 ops/s
[info] # Warmup Iteration   5: 82714.209 ops/s
[info] Iteration   1: 86154.943 ops/s
[info] Iteration   2: 85618.008 ops/s
[info] Iteration   3: 87166.372 ops/s
[info] Iteration   4: 82867.291 ops/s
[info] Iteration   5: 85198.018 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   85400.927 ±(99.9%) 6146.858 ops/s [Average]
[info]   (min, avg, max) = (82867.291, 85400.927, 87166.372), stdev = 1596.319
[info]   CI (99.9%): [79254.069, 91547.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:CPI":
[info]   0.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   1419.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-dcache-loads":
[info]   30477.741 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-dcache-stores":
[info]   25012.809 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   142.309 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-load-misses":
[info]   2.047 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-loads":
[info]   7.871 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-store-misses":
[info]   88.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:LLC-stores":
[info]   290.861 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:branch-misses":
[info]   118.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:branches":
[info]   24324.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:cycles":
[info]   44210.025 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-load-misses":
[info]   5.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-loads":
[info]   31436.036 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:dTLB-stores":
[info]   25371.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.322 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:iTLB-loads":
[info]   0.500 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:instructions":
[info]   143307.785 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:10:00
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 119539.627 ops/s
[info] # Warmup Iteration   2: 223227.051 ops/s
[info] # Warmup Iteration   3: 255738.317 ops/s
[info] # Warmup Iteration   4: 256099.855 ops/s
[info] # Warmup Iteration   5: 254487.465 ops/s
[info] Iteration   1: 243058.479 ops/s
[info] Iteration   2: 256393.383 ops/s
[info] Iteration   3: 256717.497 ops/s
[info] Iteration   4: 256916.227 ops/s
[info] Iteration   5: 255760.771 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   253769.272 ±(99.9%) 23117.374 ops/s [Average]
[info]   (min, avg, max) = (243058.479, 253769.272, 256916.227), stdev = 6003.509
[info]   CI (99.9%): [230651.897, 276886.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:CPI":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   182.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-dcache-loads":
[info]   9495.705 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-dcache-stores":
[info]   7657.261 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:L1-icache-load-misses":
[info]   1.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-load-misses":
[info]   0.186 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-loads":
[info]   1.773 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-store-misses":
[info]   70.422 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:LLC-stores":
[info]   112.370 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:branch-misses":
[info]   5.837 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:branches":
[info]   10818.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:cycles":
[info]   14836.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-load-misses":
[info]   1.474 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-loads":
[info]   9768.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:dTLB-stores":
[info]   7768.677 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:iTLB-loads":
[info]   0.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:instructions":
[info]   56681.437 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:09:46
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 278370.390 ops/s
[info] # Warmup Iteration   2: 720541.458 ops/s
[info] # Warmup Iteration   3: 757884.721 ops/s
[info] # Warmup Iteration   4: 759834.199 ops/s
[info] # Warmup Iteration   5: 761294.178 ops/s
[info] Iteration   1: 809444.755 ops/s
[info] Iteration   2: 812273.346 ops/s
[info] Iteration   3: 814020.745 ops/s
[info] Iteration   4: 809027.936 ops/s
[info] Iteration   5: 810050.990 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   810963.554 ±(99.9%) 8156.667 ops/s [Average]
[info]   (min, avg, max) = (809027.936, 810963.554, 814020.745), stdev = 2118.261
[info]   CI (99.9%): [802806.887, 819120.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:CPI":
[info]   0.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   16.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   4010.659 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   2522.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.210 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   4.289 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:LLC-stores":
[info]   8.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:branch-misses":
[info]   0.496 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:branches":
[info]   3918.581 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:cycles":
[info]   4742.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-loads":
[info]   4006.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:dTLB-stores":
[info]   2474.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:instructions":
[info]   19633.070 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:09:32
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 627036.196 ops/s
[info] # Warmup Iteration   2: 754449.658 ops/s
[info] # Warmup Iteration   3: 815547.965 ops/s
[info] # Warmup Iteration   4: 771424.181 ops/s
[info] # Warmup Iteration   5: 768359.556 ops/s
[info] Iteration   1: 767971.261 ops/s
[info] Iteration   2: 762678.489 ops/s
[info] Iteration   3: 762568.774 ops/s
[info] Iteration   4: 767134.845 ops/s
[info] Iteration   5: 768653.870 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   765801.448 ±(99.9%) 11361.912 ops/s [Average]
[info]   (min, avg, max) = (762568.774, 765801.448, 768653.870), stdev = 2950.653
[info]   CI (99.9%): [754439.536, 777163.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:CPI":
[info]   0.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   15.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   3998.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1939.678 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.519 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   4.985 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:LLC-stores":
[info]   8.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:branch-misses":
[info]   0.503 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:branches":
[info]   3968.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:cycles":
[info]   4736.928 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.215 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   3910.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1890.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:instructions":
[info]   18829.582 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:09:18
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 632809.142 ops/s
[info] # Warmup Iteration   2: 774173.241 ops/s
[info] # Warmup Iteration   3: 835978.787 ops/s
[info] # Warmup Iteration   4: 836150.189 ops/s
[info] # Warmup Iteration   5: 836074.239 ops/s
[info] Iteration   1: 808104.303 ops/s
[info] Iteration   2: 803094.937 ops/s
[info] Iteration   3: 804668.476 ops/s
[info] Iteration   4: 801173.410 ops/s
[info] Iteration   5: 806010.008 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   804610.227 ±(99.9%) 10238.507 ops/s [Average]
[info]   (min, avg, max) = (801173.410, 804610.227, 808104.303), stdev = 2658.908
[info]   CI (99.9%): [794371.720, 814848.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.249 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   1.393 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   3850.360 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1859.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.141 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   0.362 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   3826.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   4524.734 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   3874.238 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1856.877 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.046 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   18173.155 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:09:04
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 11997.954 ops/s
[info] # Warmup Iteration   2: 28130.081 ops/s
[info] # Warmup Iteration   3: 28804.530 ops/s
[info] # Warmup Iteration   4: 38427.804 ops/s
[info] # Warmup Iteration   5: 35195.203 ops/s
[info] Iteration   1: 37920.182 ops/s
[info] Iteration   2: 36474.086 ops/s
[info] Iteration   3: 38907.918 ops/s
[info] Iteration   4: 37601.877 ops/s
[info] Iteration   5: 38062.770 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   37793.367 ±(99.9%) 3394.280 ops/s [Average]
[info]   (min, avg, max) = (36474.086, 37793.367, 38907.918), stdev = 881.484
[info]   CI (99.9%): [34399.087, 41187.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:CPI":
[info]   0.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   1910.781 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-dcache-loads":
[info]   58531.570 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-dcache-stores":
[info]   34993.311 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   439.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-load-misses":
[info]   8.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-loads":
[info]   102.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-store-misses":
[info]   28.313 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:LLC-stores":
[info]   180.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:branch-misses":
[info]   261.915 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:branches":
[info]   63521.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:cycles":
[info]   116817.788 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-load-misses":
[info]   7.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-loads":
[info]   59671.724 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:dTLB-stores":
[info]   34951.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:iTLB-load-misses":
[info]   4.314 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:iTLB-loads":
[info]   26.685 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:instructions":
[info]   311378.381 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:50
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1766746.492 ops/s
[info] # Warmup Iteration   2: 4047920.761 ops/s
[info] # Warmup Iteration   3: 4532579.509 ops/s
[info] # Warmup Iteration   4: 4613696.381 ops/s
[info] # Warmup Iteration   5: 4633099.406 ops/s
[info] Iteration   1: 4656098.477 ops/s
[info] Iteration   2: 4646174.481 ops/s
[info] Iteration   3: 4663150.991 ops/s
[info] Iteration   4: 4645564.364 ops/s
[info] Iteration   5: 4554723.433 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   4633142.349 ±(99.9%) 171139.049 ops/s [Average]
[info]   (min, avg, max) = (4554723.433, 4633142.349, 4663150.991), stdev = 44444.267
[info]   CI (99.9%): [4462003.301, 4804281.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-dcache-load-misses":
[info]   18.022 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-dcache-loads":
[info]   467.806 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-dcache-stores":
[info]   246.084 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:L1-icache-load-misses":
[info]   0.163 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-loads":
[info]   0.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-store-misses":
[info]   2.600 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:LLC-stores":
[info]   6.477 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:branch-misses":
[info]   1.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:branches":
[info]   836.684 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:cycles":
[info]   826.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-load-misses":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-loads":
[info]   490.554 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:dTLB-stores":
[info]   255.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:instructions":
[info]   3329.412 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.921 ops/s
[info] # Warmup Iteration   2: 5459571.317 ops/s
[info] # Warmup Iteration   3: 6473240.627 ops/s
[info] # Warmup Iteration   4: 6595501.780 ops/s
[info] # Warmup Iteration   5: 6547320.801 ops/s
[info] Iteration   1: 6576812.154 ops/s
[info] Iteration   2: 6621748.489 ops/s
[info] Iteration   3: 6586233.689 ops/s
[info] Iteration   4: 6556213.871 ops/s
[info] Iteration   5: 6644916.138 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   6597184.868 ±(99.9%) 137431.366 ops/s [Average]
[info]   (min, avg, max) = (6556213.871, 6597184.868, 6644916.138), stdev = 35690.489
[info]   CI (99.9%): [6459753.503, 6734616.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:CPI":
[info]   0.206 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   5.065 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   317.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   295.414 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.270 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:branch-misses":
[info]   1.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:branches":
[info]   695.758 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:cycles":
[info]   593.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-loads":
[info]   319.799 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-stores":
[info]   310.378 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:instructions":
[info]   2872.855 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:08:22
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2023668.278 ops/s
[info] # Warmup Iteration   2: 4413858.816 ops/s
[info] # Warmup Iteration   3: 4878781.205 ops/s
[info] # Warmup Iteration   4: 4875688.172 ops/s
[info] # Warmup Iteration   5: 5034238.659 ops/s
[info] Iteration   1: 5214271.131 ops/s
[info] Iteration   2: 5210635.549 ops/s
[info] Iteration   3: 5186179.802 ops/s
[info] Iteration   4: 5171475.001 ops/s
[info] Iteration   5: 5118440.333 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   5180200.363 ±(99.9%) 149300.056 ops/s [Average]
[info]   (min, avg, max) = (5118440.333, 5180200.363, 5214271.131), stdev = 38772.750
[info]   CI (99.9%): [5030900.307, 5329500.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:CPI":
[info]   0.250 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   5.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   566.729 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   203.932 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.090 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-loads":
[info]   0.039 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:LLC-stores":
[info]   1.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:branch-misses":
[info]   1.035 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:branches":
[info]   645.325 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:cycles":
[info]   735.818 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-loads":
[info]   563.845 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-stores":
[info]   202.926 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:instructions":
[info]   2946.862 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:08:08
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3970074.287 ops/s
[info] # Warmup Iteration   2: 4044544.184 ops/s
[info] # Warmup Iteration   3: 6267091.297 ops/s
[info] # Warmup Iteration   4: 6319108.783 ops/s
[info] # Warmup Iteration   5: 6478521.771 ops/s
[info] Iteration   1: 6720254.446 ops/s
[info] Iteration   2: 6561041.162 ops/s
[info] Iteration   3: 6717201.037 ops/s
[info] Iteration   4: 6727326.204 ops/s
[info] Iteration   5: 6733585.246 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6691881.619 ±(99.9%) 282706.679 ops/s [Average]
[info]   (min, avg, max) = (6561041.162, 6691881.619, 6733585.246), stdev = 73418.027
[info]   CI (99.9%): [6409174.940, 6974588.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:CPI":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   4.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   323.868 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   179.772 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.330 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.793 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:branch-misses":
[info]   1.451 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:branches":
[info]   795.643 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:cycles":
[info]   573.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.053 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-loads":
[info]   324.604 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-stores":
[info]   175.850 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:instructions":
[info]   2623.134 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:54
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2774977.960 ops/s
[info] # Warmup Iteration   2: 4848567.568 ops/s
[info] # Warmup Iteration   3: 5364588.005 ops/s
[info] # Warmup Iteration   4: 5382171.395 ops/s
[info] # Warmup Iteration   5: 5372888.594 ops/s
[info] Iteration   1: 5369572.349 ops/s
[info] Iteration   2: 5380758.872 ops/s
[info] Iteration   3: 5375346.455 ops/s
[info] Iteration   4: 5380169.197 ops/s
[info] Iteration   5: 5100434.756 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   5321256.326 ±(99.9%) 475650.491 ops/s [Average]
[info]   (min, avg, max) = (5100434.756, 5321256.326, 5380758.872), stdev = 123524.922
[info]   CI (99.9%): [4845605.835, 5796906.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:CPI":
[info]   0.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   4.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-loads":
[info]   541.363 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-stores":
[info]   208.967 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   0.112 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-loads":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-store-misses":
[info]   0.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:LLC-stores":
[info]   0.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:branch-misses":
[info]   1.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:branches":
[info]   600.767 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:cycles":
[info]   706.486 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-loads":
[info]   540.123 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:dTLB-stores":
[info]   204.760 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:instructions":
[info]   2784.836 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1712753.952 ops/s
[info] # Warmup Iteration   2: 3163019.515 ops/s
[info] # Warmup Iteration   3: 3363516.804 ops/s
[info] # Warmup Iteration   4: 3682483.610 ops/s
[info] # Warmup Iteration   5: 3657272.645 ops/s
[info] Iteration   1: 3684206.277 ops/s
[info] Iteration   2: 3680006.181 ops/s
[info] Iteration   3: 3681096.842 ops/s
[info] Iteration   4: 3687693.368 ops/s
[info] Iteration   5: 3682169.283 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   3683034.390 ±(99.9%) 11671.954 ops/s [Average]
[info]   (min, avg, max) = (3680006.181, 3683034.390, 3687693.368), stdev = 3031.169
[info]   CI (99.9%): [3671362.437, 3694706.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   13.389 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-loads":
[info]   367.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-stores":
[info]   206.236 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-loads":
[info]   0.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-store-misses":
[info]   2.373 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:LLC-stores":
[info]   4.628 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:branch-misses":
[info]   2.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:branches":
[info]   1693.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:cycles":
[info]   1053.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-load-misses":
[info]   0.136 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-loads":
[info]   377.780 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:dTLB-stores":
[info]   220.625 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:instructions":
[info]   4672.053 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:07:26
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.935 ops/s
[info] # Warmup Iteration   2: 6618628.200 ops/s
[info] # Warmup Iteration   3: 6814836.386 ops/s
[info] # Warmup Iteration   4: 6874887.366 ops/s
[info] # Warmup Iteration   5: 6789575.941 ops/s
[info] Iteration   1: 6645298.186 ops/s
[info] Iteration   2: 6866175.763 ops/s
[info] Iteration   3: 6848706.177 ops/s
[info] Iteration   4: 6867624.647 ops/s
[info] Iteration   5: 6671975.832 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   6779956.121 ±(99.9%) 428956.676 ops/s [Average]
[info]   (min, avg, max) = (6645298.186, 6779956.121, 6867624.647), stdev = 111398.687
[info]   CI (99.9%): [6350999.445, 7208912.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:CPI":
[info]   0.223 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   2.630 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   187.987 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   154.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-stores":
[info]   0.518 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:branch-misses":
[info]   1.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:branches":
[info]   805.997 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:cycles":
[info]   561.387 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   189.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   155.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:instructions":
[info]   2522.811 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:07:12
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3778222.099 ops/s
[info] # Warmup Iteration   2: 6041145.310 ops/s
[info] # Warmup Iteration   3: 6387286.705 ops/s
[info] # Warmup Iteration   4: 6390165.023 ops/s
[info] # Warmup Iteration   5: 6389108.180 ops/s
[info] Iteration   1: 6337122.521 ops/s
[info] Iteration   2: 6066880.720 ops/s
[info] Iteration   3: 6383703.159 ops/s
[info] Iteration   4: 6401355.365 ops/s
[info] Iteration   5: 6067995.812 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   6251411.515 ±(99.9%) 652975.288 ops/s [Average]
[info]   (min, avg, max) = (6066880.720, 6251411.515, 6401355.365), stdev = 169575.609
[info]   CI (99.9%): [5598436.228, 6904386.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:CPI":
[info]   0.248 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   2.639 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   404.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   209.960 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.042 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-stores":
[info]   0.508 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:branch-misses":
[info]   1.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:branches":
[info]   620.265 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:cycles":
[info]   601.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-loads":
[info]   406.596 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-stores":
[info]   210.873 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:instructions":
[info]   2429.647 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:58
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5319407.539 ops/s
[info] # Warmup Iteration   2: 6533539.216 ops/s
[info] # Warmup Iteration   3: 6702823.897 ops/s
[info] # Warmup Iteration   4: 7161708.065 ops/s
[info] # Warmup Iteration   5: 7171333.663 ops/s
[info] Iteration   1: 7163522.238 ops/s
[info] Iteration   2: 7161726.448 ops/s
[info] Iteration   3: 7171869.318 ops/s
[info] Iteration   4: 7156240.614 ops/s
[info] Iteration   5: 7161768.773 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   7163025.478 ±(99.9%) 21762.223 ops/s [Average]
[info]   (min, avg, max) = (7156240.614, 7163025.478, 7171869.318), stdev = 5651.580
[info]   CI (99.9%): [7141263.255, 7184787.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:CPI":
[info]   0.201 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   2.587 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   320.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   163.517 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.052 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-stores":
[info]   0.564 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.041 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:branches":
[info]   696.661 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:cycles":
[info]   543.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   318.953 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   159.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:instructions":
[info]   2698.183 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:44
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 5257943.392 ops/s
[info] # Warmup Iteration   2: 5721449.453 ops/s
[info] # Warmup Iteration   3: 7166592.212 ops/s
[info] # Warmup Iteration   4: 7369527.071 ops/s
[info] # Warmup Iteration   5: 7369921.667 ops/s
[info] Iteration   1: 7374019.947 ops/s
[info] Iteration   2: 7369666.029 ops/s
[info] Iteration   3: 7371095.247 ops/s
[info] Iteration   4: 7371114.043 ops/s
[info] Iteration   5: 7372618.674 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   7371702.788 ±(99.9%) 6406.489 ops/s [Average]
[info]   (min, avg, max) = (7369666.029, 7371702.788, 7374019.947), stdev = 1663.745
[info]   CI (99.9%): [7365296.299, 7378109.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.152 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   306.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   159.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   663.822 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   516.642 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   ≈ 10⁻⁴ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   306.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   158.368 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   2593.515 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:06:30
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4200409.543 ops/s
[info] # Warmup Iteration   2: 5648008.751 ops/s
[info] # Warmup Iteration   3: 5964609.017 ops/s
[info] # Warmup Iteration   4: 5943394.567 ops/s
[info] # Warmup Iteration   5: 5976490.227 ops/s
[info] Iteration   1: 6275065.865 ops/s
[info] Iteration   2: 6319515.284 ops/s
[info] Iteration   3: 6332961.429 ops/s
[info] Iteration   4: 6339418.867 ops/s
[info] Iteration   5: 6307379.850 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   6314868.259 ±(99.9%) 98021.332 ops/s [Average]
[info]   (min, avg, max) = (6275065.865, 6314868.259, 6339418.867), stdev = 25455.829
[info]   CI (99.9%): [6216846.927, 6412889.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:CPI":
[info]   0.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   2.619 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-loads":
[info]   407.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-stores":
[info]   215.252 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.016 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-loads":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:LLC-stores":
[info]   0.411 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:branch-misses":
[info]   1.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:branches":
[info]   619.552 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:cycles":
[info]   604.656 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-loads":
[info]   409.482 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:dTLB-stores":
[info]   214.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:iTLB-loads":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:instructions":
[info]   2409.651 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:06:16
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 610132.581 ops/s
[info] # Warmup Iteration   2: 1512233.775 ops/s
[info] # Warmup Iteration   3: 1762725.805 ops/s
[info] # Warmup Iteration   4: 1753033.011 ops/s
[info] # Warmup Iteration   5: 1762242.149 ops/s
[info] Iteration   1: 1775981.680 ops/s
[info] Iteration   2: 1781026.357 ops/s
[info] Iteration   3: 1752242.537 ops/s
[info] Iteration   4: 1764306.557 ops/s
[info] Iteration   5: 1726758.872 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1760063.201 ±(99.9%) 83506.590 ops/s [Average]
[info]   (min, avg, max) = (1726758.872, 1760063.201, 1781026.357), stdev = 21686.396
[info]   CI (99.9%): [1676556.611, 1843569.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:CPI":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-load-misses":
[info]   31.479 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-loads":
[info]   880.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-stores":
[info]   416.419 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:L1-icache-load-misses":
[info]   0.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-load-misses":
[info]   0.043 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-loads":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-store-misses":
[info]   9.283 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:LLC-stores":
[info]   16.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:branch-misses":
[info]   2.121 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:branches":
[info]   2592.216 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:cycles":
[info]   2172.434 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-load-misses":
[info]   0.361 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-loads":
[info]   902.348 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:dTLB-stores":
[info]   424.377 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:iTLB-loads":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:instructions":
[info]   9622.915 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:06:02
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.750 ops/s
[info] # Warmup Iteration   2: 2863891.902 ops/s
[info] # Warmup Iteration   3: 2971786.368 ops/s
[info] # Warmup Iteration   4: 2997492.806 ops/s
[info] # Warmup Iteration   5: 2997885.956 ops/s
[info] Iteration   1: 2997311.129 ops/s
[info] Iteration   2: 2998664.483 ops/s
[info] Iteration   3: 3001840.189 ops/s
[info] Iteration   4: 3007851.548 ops/s
[info] Iteration   5: 3017442.694 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   3004622.008 ±(99.9%) 31722.826 ops/s [Average]
[info]   (min, avg, max) = (2997311.129, 3004622.008, 3017442.694), stdev = 8238.317
[info]   CI (99.9%): [2972899.182, 3036344.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:CPI":
[info]   0.212 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses":
[info]   5.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads":
[info]   583.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores":
[info]   557.933 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses":
[info]   0.189 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-loads":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses":
[info]   0.218 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-stores":
[info]   0.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:branch-misses":
[info]   1.114 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:branches":
[info]   1320.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:cycles":
[info]   1266.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses":
[info]   0.045 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-loads":
[info]   585.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-stores":
[info]   558.906 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-loads":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:instructions":
[info]   5972.799 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:48
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 456880.827 ops/s
[info] # Warmup Iteration   2: 1801284.954 ops/s
[info] # Warmup Iteration   3: 1802218.466 ops/s
[info] # Warmup Iteration   4: 1857784.376 ops/s
[info] # Warmup Iteration   5: 1817562.744 ops/s
[info] Iteration   1: 1810257.901 ops/s
[info] Iteration   2: 1818758.111 ops/s
[info] Iteration   3: 1914051.315 ops/s
[info] Iteration   4: 1915253.850 ops/s
[info] Iteration   5: 1919177.551 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1875499.745 ±(99.9%) 214830.686 ops/s [Average]
[info]   (min, avg, max) = (1810257.901, 1875499.745, 1919177.551), stdev = 55790.847
[info]   CI (99.9%): [1660669.059, 2090330.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:CPI":
[info]   0.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   5.798 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads":
[info]   1087.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores":
[info]   344.300 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   0.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-loads":
[info]   0.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-stores":
[info]   0.846 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:branch-misses":
[info]   2.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:branches":
[info]   2017.917 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:cycles":
[info]   2008.032 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.015 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-loads":
[info]   1098.426 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses":
[info]   ≈ 10⁻³ #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-stores":
[info]   342.839 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-loads":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:instructions":
[info]   8961.014 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:35
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1813667.607 ops/s
[info] # Warmup Iteration   2: 2118769.680 ops/s
[info] # Warmup Iteration   3: 2202010.705 ops/s
[info] # Warmup Iteration   4: 2251094.436 ops/s
[info] # Warmup Iteration   5: 2294495.928 ops/s
[info] Iteration   1: 2302181.673 ops/s
[info] Iteration   2: 2297335.323 ops/s
[info] Iteration   3: 2262746.454 ops/s
[info] Iteration   4: 2214986.208 ops/s
[info] Iteration   5: 2200632.783 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2255576.488 ±(99.9%) 178895.810 ops/s [Average]
[info]   (min, avg, max) = (2200632.783, 2255576.488, 2302181.673), stdev = 46458.674
[info]   CI (99.9%): [2076680.678, 2434472.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:CPI":
[info]   0.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   5.110 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   596.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   184.148 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.055 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-loads":
[info]   0.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-stores":
[info]   0.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:branch-misses":
[info]   1.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:branches":
[info]   2022.321 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:cycles":
[info]   1679.727 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-loads":
[info]   586.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-stores":
[info]   181.533 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:instructions":
[info]   8025.291 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:05:21
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 791522.134 ops/s
[info] # Warmup Iteration   2: 1900699.533 ops/s
[info] # Warmup Iteration   3: 1978266.937 ops/s
[info] # Warmup Iteration   4: 1972372.590 ops/s
[info] # Warmup Iteration   5: 1973163.527 ops/s
[info] Iteration   1: 1981418.739 ops/s
[info] Iteration   2: 1974920.684 ops/s
[info] Iteration   3: 1976005.962 ops/s
[info] Iteration   4: 1966417.927 ops/s
[info] Iteration   5: 1975128.441 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1974778.351 ±(99.9%) 20704.267 ops/s [Average]
[info]   (min, avg, max) = (1966417.927, 1974778.351, 1981418.739), stdev = 5376.832
[info]   CI (99.9%): [1954074.084, 1995482.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:CPI":
[info]   0.219 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   5.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-loads":
[info]   1071.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-stores":
[info]   344.682 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses":
[info]   0.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-load-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-loads":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-store-misses":
[info]   0.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-stores":
[info]   0.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:branch-misses":
[info]   2.073 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:branches":
[info]   1996.943 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:cycles":
[info]   1934.405 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-load-misses":
[info]   0.051 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-loads":
[info]   1067.668 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-stores":
[info]   343.483 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-loads":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:instructions":
[info]   8848.381 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:05:07
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1101690.063 ops/s
[info] # Warmup Iteration   2: 2425691.879 ops/s
[info] # Warmup Iteration   3: 2587691.281 ops/s
[info] # Warmup Iteration   4: 2574262.355 ops/s
[info] # Warmup Iteration   5: 2573732.732 ops/s
[info] Iteration   1: 2590104.141 ops/s
[info] Iteration   2: 2600844.858 ops/s
[info] Iteration   3: 2594404.482 ops/s
[info] Iteration   4: 2595886.956 ops/s
[info] Iteration   5: 2600295.049 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   2596307.097 ±(99.9%) 17087.508 ops/s [Average]
[info]   (min, avg, max) = (2590104.141, 2596307.097, 2600844.858), stdev = 4437.572
[info]   CI (99.9%): [2579219.590, 2613394.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses":
[info]   17.654 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-loads":
[info]   388.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-stores":
[info]   473.576 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:L1-icache-load-misses":
[info]   0.585 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-load-misses":
[info]   0.014 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-loads":
[info]   0.086 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-store-misses":
[info]   2.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:LLC-stores":
[info]   5.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:branch-misses":
[info]   2.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:branches":
[info]   1449.253 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:cycles":
[info]   1498.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-load-misses":
[info]   0.233 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-loads":
[info]   399.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-stores":
[info]   494.489 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-loads":
[info]   0.010 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:instructions":
[info]   6176.328 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:53
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 0.790 ops/s
[info] # Warmup Iteration   2: 3323901.812 ops/s
[info] # Warmup Iteration   3: 3540923.795 ops/s
[info] # Warmup Iteration   4: 3658526.760 ops/s
[info] # Warmup Iteration   5: 3658623.144 ops/s
[info] Iteration   1: 3607754.266 ops/s
[info] Iteration   2: 3483923.200 ops/s
[info] Iteration   3: 3491078.652 ops/s
[info] Iteration   4: 3664610.060 ops/s
[info] Iteration   5: 3616476.171 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3572768.470 ±(99.9%) 311259.455 ops/s [Average]
[info]   (min, avg, max) = (3483923.200, 3572768.470, 3664610.060), stdev = 80833.092
[info]   CI (99.9%): [3261509.014, 3884027.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:CPI":
[info]   0.225 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses":
[info]   7.064 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads":
[info]   206.574 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores":
[info]   539.876 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses":
[info]   0.071 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-loads":
[info]   0.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses":
[info]   0.789 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-stores":
[info]   2.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branch-misses":
[info]   1.220 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branches":
[info]   836.695 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:cycles":
[info]   1065.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses":
[info]   0.092 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads":
[info]   204.059 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores":
[info]   562.575 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:instructions":
[info]   4741.221 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:39
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1291209.054 ops/s
[info] # Warmup Iteration   2: 3233692.940 ops/s
[info] # Warmup Iteration   3: 3422543.821 ops/s
[info] # Warmup Iteration   4: 3422612.420 ops/s
[info] # Warmup Iteration   5: 3414817.990 ops/s
[info] Iteration   1: 3411010.703 ops/s
[info] Iteration   2: 3418220.930 ops/s
[info] Iteration   3: 3348809.139 ops/s
[info] Iteration   4: 3418186.565 ops/s
[info] Iteration   5: 3410443.161 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   3401334.100 ±(99.9%) 113979.284 ops/s [Average]
[info]   (min, avg, max) = (3348809.139, 3401334.100, 3418220.930), stdev = 29600.058
[info]   CI (99.9%): [3287354.816, 3515313.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:CPI":
[info]   0.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   6.964 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   301.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   626.753 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.277 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-loads":
[info]   0.096 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses":
[info]   0.671 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-stores":
[info]   2.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:branch-misses":
[info]   1.137 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:branches":
[info]   793.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:cycles":
[info]   1130.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.093 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-loads":
[info]   295.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-stores":
[info]   625.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.067 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:instructions":
[info]   4715.017 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:25
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2664719.597 ops/s
[info] # Warmup Iteration   2: 3430175.535 ops/s
[info] # Warmup Iteration   3: 3735522.096 ops/s
[info] # Warmup Iteration   4: 3711712.735 ops/s
[info] # Warmup Iteration   5: 3726539.956 ops/s
[info] Iteration   1: 3710801.019 ops/s
[info] Iteration   2: 3589486.109 ops/s
[info] Iteration   3: 3710478.915 ops/s
[info] Iteration   4: 3726169.807 ops/s
[info] Iteration   5: 3724225.595 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3692232.289 ±(99.9%) 222953.958 ops/s [Average]
[info]   (min, avg, max) = (3589486.109, 3692232.289, 3726169.807), stdev = 57900.435
[info]   CI (99.9%): [3469278.331, 3915186.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:CPI":
[info]   0.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   6.739 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   202.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   567.689 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.031 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   0.754 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-stores":
[info]   2.207 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branch-misses":
[info]   1.111 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branches":
[info]   717.268 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:cycles":
[info]   1033.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.091 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads":
[info]   203.847 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores":
[info]   546.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:instructions":
[info]   4396.078 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:04:11
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2602496.563 ops/s
[info] # Warmup Iteration   2: 3784099.101 ops/s
[info] # Warmup Iteration   3: 3850892.947 ops/s
[info] # Warmup Iteration   4: 3882517.181 ops/s
[info] # Warmup Iteration   5: 3884006.853 ops/s
[info] Iteration   1: 3879980.440 ops/s
[info] Iteration   2: 3882249.941 ops/s
[info] Iteration   3: 3881275.465 ops/s
[info] Iteration   4: 3880172.465 ops/s
[info] Iteration   5: 3881617.363 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3881059.135 ±(99.9%) 3716.522 ops/s [Average]
[info]   (min, avg, max) = (3879980.440, 3881059.135, 3882249.941), stdev = 965.169
[info]   CI (99.9%): [3877342.613, 3884775.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.226 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.312 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   181.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   541.109 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.019 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   692.525 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   973.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   179.284 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   539.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.002 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   4300.993 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:57
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1947927.360 ops/s
[info] # Warmup Iteration   2: 3196554.850 ops/s
[info] # Warmup Iteration   3: 3258019.030 ops/s
[info] # Warmup Iteration   4: 3202150.291 ops/s
[info] # Warmup Iteration   5: 3210987.112 ops/s
[info] Iteration   1: 3245735.669 ops/s
[info] Iteration   2: 3333568.372 ops/s
[info] Iteration   3: 3317885.653 ops/s
[info] Iteration   4: 3335136.283 ops/s
[info] Iteration   5: 3336199.685 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   3313705.132 ±(99.9%) 149099.649 ops/s [Average]
[info]   (min, avg, max) = (3245735.669, 3313705.132, 3336199.685), stdev = 38720.705
[info]   CI (99.9%): [3164605.484, 3462804.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:CPI":
[info]   0.244 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   6.919 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-loads":
[info]   308.693 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-stores":
[info]   636.074 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses":
[info]   0.157 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-loads":
[info]   0.057 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-store-misses":
[info]   0.743 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-stores":
[info]   2.254 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:branch-misses":
[info]   1.199 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:branches":
[info]   789.830 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:cycles":
[info]   1144.251 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-loads":
[info]   306.998 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-stores":
[info]   638.367 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-loads":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:instructions":
[info]   4688.987 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:43
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 2781.601 ops/s
[info] # Warmup Iteration   2: 8152.426 ops/s
[info] # Warmup Iteration   3: 11674.106 ops/s
[info] # Warmup Iteration   4: 12228.499 ops/s
[info] # Warmup Iteration   5: 12182.831 ops/s
[info] Iteration   1: 12220.268 ops/s
[info] Iteration   2: 12125.331 ops/s
[info] Iteration   3: 12646.491 ops/s
[info] Iteration   4: 12646.394 ops/s
[info] Iteration   5: 12254.600 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   12378.617 ±(99.9%) 958.937 ops/s [Average]
[info]   (min, avg, max) = (12125.331, 12378.617, 12646.491), stdev = 249.033
[info]   CI (99.9%): [11419.680, 13337.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:CPI":
[info]   0.364 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-dcache-load-misses":
[info]   8945.165 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-dcache-loads":
[info]   222544.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-dcache-stores":
[info]   126240.899 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:L1-icache-load-misses":
[info]   5508.235 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-load-misses":
[info]   60.228 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-loads":
[info]   713.591 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-store-misses":
[info]   996.255 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:LLC-stores":
[info]   1763.740 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:branch-misses":
[info]   1020.711 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:branches":
[info]   246502.536 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:cycles":
[info]   396231.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-load-misses":
[info]   38.335 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-loads":
[info]   225020.144 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-store-misses":
[info]   14.807 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:dTLB-stores":
[info]   128879.457 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:iTLB-load-misses":
[info]   19.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:iTLB-loads":
[info]   194.653 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:instructions":
[info]   1088642.652 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1981.206 ops/s
[info] # Warmup Iteration   2: 18955.217 ops/s
[info] # Warmup Iteration   3: 22691.128 ops/s
[info] # Warmup Iteration   4: 22483.831 ops/s
[info] # Warmup Iteration   5: 22442.416 ops/s
[info] Iteration   1: 21840.272 ops/s
[info] Iteration   2: 21174.245 ops/s
[info] Iteration   3: 21371.427 ops/s
[info] Iteration   4: 21417.371 ops/s
[info] Iteration   5: 21300.185 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   21420.700 ±(99.9%) 969.842 ops/s [Average]
[info]   (min, avg, max) = (21174.245, 21420.700, 21840.272), stdev = 251.865
[info]   CI (99.9%): [20450.858, 22390.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:CPI":
[info]   0.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   5321.692 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-dcache-loads":
[info]   126797.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-dcache-stores":
[info]   59129.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   2065.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-load-misses":
[info]   13.732 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-loads":
[info]   275.436 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-store-misses":
[info]   17.209 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:LLC-stores":
[info]   114.214 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:branch-misses":
[info]   340.697 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:branches":
[info]   122305.344 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:cycles":
[info]   195787.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-load-misses":
[info]   12.937 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-loads":
[info]   129397.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.641 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:dTLB-stores":
[info]   60820.631 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:iTLB-load-misses":
[info]   11.954 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:iTLB-loads":
[info]   75.776 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:instructions":
[info]   575625.888 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:03:15
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 14736.677 ops/s
[info] # Warmup Iteration   2: 19408.341 ops/s
[info] # Warmup Iteration   3: 20320.914 ops/s
[info] # Warmup Iteration   4: 20468.753 ops/s
[info] # Warmup Iteration   5: 20373.904 ops/s
[info] Iteration   1: 19921.611 ops/s
[info] Iteration   2: 20246.807 ops/s
[info] Iteration   3: 20467.620 ops/s
[info] Iteration   4: 20444.585 ops/s
[info] Iteration   5: 20425.462 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   20301.217 ±(99.9%) 883.851 ops/s [Average]
[info]   (min, avg, max) = (19921.611, 20301.217, 20467.620), stdev = 229.533
[info]   CI (99.9%): [19417.366, 21185.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:CPI":
[info]   0.444 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   1031.077 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   100595.396 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   53292.478 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   6356.044 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-load-misses":
[info]   13.081 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-loads":
[info]   127.700 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-store-misses":
[info]   14.698 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:LLC-stores":
[info]   85.921 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:branch-misses":
[info]   278.319 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:branches":
[info]   120133.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:cycles":
[info]   203426.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   8.371 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-loads":
[info]   98838.505 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   4.050 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:dTLB-stores":
[info]   53213.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   6.060 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:iTLB-loads":
[info]   63.749 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:instructions":
[info]   457943.400 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:03:01
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 455.621 ops/s
[info] # Warmup Iteration   2: 2525.501 ops/s
[info] # Warmup Iteration   3: 6062.764 ops/s
[info] # Warmup Iteration   4: 8361.599 ops/s
[info] # Warmup Iteration   5: 8954.965 ops/s
[info] Iteration   1: 8956.585 ops/s
[info] Iteration   2: 8957.215 ops/s
[info] Iteration   3: 8982.425 ops/s
[info] Iteration   4: 8929.517 ops/s
[info] Iteration   5: 8702.064 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   8905.561 ±(99.9%) 443.931 ops/s [Average]
[info]   (min, avg, max) = (8702.064, 8905.561, 8982.425), stdev = 115.287
[info]   CI (99.9%): [8461.631, 9349.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:CPI":
[info]   0.376 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   11828.134 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-dcache-loads":
[info]   273527.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-dcache-stores":
[info]   164148.034 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:L1-icache-load-misses":
[info]   8957.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-load-misses":
[info]   30.202 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-loads":
[info]   843.100 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-store-misses":
[info]   137.334 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:LLC-stores":
[info]   946.151 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:branch-misses":
[info]   1228.423 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:branches":
[info]   207964.267 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:cycles":
[info]   435191.329 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-load-misses":
[info]   23.662 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-loads":
[info]   278295.275 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.827 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:dTLB-stores":
[info]   164531.063 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:iTLB-load-misses":
[info]   3.976 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:iTLB-loads":
[info]   135.966 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:instructions":
[info]   1155942.479 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:47
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 13650.785 ops/s
[info] # Warmup Iteration   2: 57720.111 ops/s
[info] # Warmup Iteration   3: 62385.842 ops/s
[info] # Warmup Iteration   4: 64356.546 ops/s
[info] # Warmup Iteration   5: 66159.040 ops/s
[info] Iteration   1: 66286.627 ops/s
[info] Iteration   2: 66542.110 ops/s
[info] Iteration   3: 66472.120 ops/s
[info] Iteration   4: 66657.475 ops/s
[info] Iteration   5: 62832.887 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   65758.244 ±(99.9%) 6318.337 ops/s [Average]
[info]   (min, avg, max) = (62832.887, 65758.244, 66657.475), stdev = 1640.852
[info]   CI (99.9%): [59439.907, 72076.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:CPI":
[info]   0.352 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   3041.447 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   39262.320 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   23384.170 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   1267.887 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-load-misses":
[info]   4.303 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-loads":
[info]   78.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-store-misses":
[info]   239.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:LLC-stores":
[info]   374.703 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:branch-misses":
[info]   144.499 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:branches":
[info]   43188.276 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:cycles":
[info]   64727.484 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   5.316 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-loads":
[info]   38192.640 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   1.598 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:dTLB-stores":
[info]   22309.079 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   4.308 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:iTLB-loads":
[info]   14.450 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:instructions":
[info]   183914.432 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 54249.915 ops/s
[info] # Warmup Iteration   2: 102703.762 ops/s
[info] # Warmup Iteration   3: 103785.989 ops/s
[info] # Warmup Iteration   4: 107763.172 ops/s
[info] # Warmup Iteration   5: 107957.581 ops/s
[info] Iteration   1: 107541.442 ops/s
[info] Iteration   2: 107771.270 ops/s
[info] Iteration   3: 107885.766 ops/s
[info] Iteration   4: 107961.135 ops/s
[info] Iteration   5: 103976.248 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   107027.172 ±(99.9%) 6595.673 ops/s [Average]
[info]   (min, avg, max) = (103976.248, 107027.172, 107961.135), stdev = 1712.875
[info]   CI (99.9%): [100431.499, 113622.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:CPI":
[info]   0.288 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   556.331 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   20330.820 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   11981.087 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   521.867 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.182 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-loads":
[info]   2.910 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   135.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:LLC-stores":
[info]   199.730 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:branch-misses":
[info]   36.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:branches":
[info]   29270.687 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:cycles":
[info]   35462.563 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   1.140 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-loads":
[info]   20937.345 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   1.437 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:dTLB-stores":
[info]   12050.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.263 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:instructions":
[info]   123055.119 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:19
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 61274.800 ops/s
[info] # Warmup Iteration   2: 108968.778 ops/s
[info] # Warmup Iteration   3: 119752.328 ops/s
[info] # Warmup Iteration   4: 115317.389 ops/s
[info] # Warmup Iteration   5: 120259.135 ops/s
[info] Iteration   1: 120195.972 ops/s
[info] Iteration   2: 120206.124 ops/s
[info] Iteration   3: 120029.456 ops/s
[info] Iteration   4: 120105.482 ops/s
[info] Iteration   5: 113850.041 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   118877.415 ±(99.9%) 10825.361 ops/s [Average]
[info]   (min, avg, max) = (113850.041, 118877.415, 120206.124), stdev = 2811.312
[info]   CI (99.9%): [108052.054, 129702.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   271.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   17621.154 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   11303.958 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   757.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.407 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.012 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   23.949 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   28315.927 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   31306.731 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.018 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   17650.848 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   11323.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.520 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   116352.910 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:02:05
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 196712.204 ops/s
[info] # Warmup Iteration   2: 345889.428 ops/s
[info] # Warmup Iteration   3: 400424.269 ops/s
[info] # Warmup Iteration   4: 378930.869 ops/s
[info] # Warmup Iteration   5: 387556.836 ops/s
[info] Iteration   1: 388973.703 ops/s
[info] Iteration   2: 388726.712 ops/s
[info] Iteration   3: 389801.409 ops/s
[info] Iteration   4: 390760.590 ops/s
[info] Iteration   5: 376921.381 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   387036.759 ±(99.9%) 21989.062 ops/s [Average]
[info]   (min, avg, max) = (376921.381, 387036.759, 390760.590), stdev = 5710.490
[info]   CI (99.9%): [365047.697, 409025.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:CPI":
[info]   0.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-dcache-load-misses":
[info]   144.891 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-dcache-loads":
[info]   6061.397 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-dcache-stores":
[info]   5311.040 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:L1-icache-load-misses":
[info]   2.511 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-load-misses":
[info]   0.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-loads":
[info]   2.404 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-store-misses":
[info]   24.973 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:LLC-stores":
[info]   53.606 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:branch-misses":
[info]   11.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:branches":
[info]   7557.224 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:cycles":
[info]   9991.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-load-misses":
[info]   1.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-loads":
[info]   6145.076 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-store-misses":
[info]   0.013 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:dTLB-stores":
[info]   5521.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:iTLB-load-misses":
[info]   0.058 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:iTLB-loads":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:instructions":
[info]   32714.213 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:51
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 158676.561 ops/s
[info] # Warmup Iteration   2: 583829.234 ops/s
[info] # Warmup Iteration   3: 993527.633 ops/s
[info] # Warmup Iteration   4: 963162.282 ops/s
[info] # Warmup Iteration   5: 950873.881 ops/s
[info] Iteration   1: 955263.140 ops/s
[info] Iteration   2: 956215.946 ops/s
[info] Iteration   3: 959508.090 ops/s
[info] Iteration   4: 951477.418 ops/s
[info] Iteration   5: 871216.654 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   938736.250 ±(99.9%) 145758.195 ops/s [Average]
[info]   (min, avg, max) = (871216.654, 938736.250, 959508.090), stdev = 37852.940
[info]   CI (99.9%): [792978.054, 1084494.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:CPI":
[info]   0.245 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses":
[info]   25.787 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-loads":
[info]   3004.699 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-stores":
[info]   1720.550 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses":
[info]   9.714 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-load-misses":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-loads":
[info]   2.066 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-store-misses":
[info]   0.835 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:LLC-stores":
[info]   5.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:branch-misses":
[info]   3.761 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:branches":
[info]   4794.969 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:cycles":
[info]   4195.982 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-load-misses":
[info]   0.260 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-loads":
[info]   2953.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-store-misses":
[info]   0.011 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:dTLB-stores":
[info]   1706.048 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:iTLB-load-misses":
[info]   0.098 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:iTLB-loads":
[info]   0.763 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:instructions":
[info]   17105.235 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:37
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1348910.958 ops/s
[info] # Warmup Iteration   2: 1660848.655 ops/s
[info] # Warmup Iteration   3: 1916585.687 ops/s
[info] # Warmup Iteration   4: 1965704.989 ops/s
[info] # Warmup Iteration   5: 1958390.003 ops/s
[info] Iteration   1: 1955958.986 ops/s
[info] Iteration   2: 1966787.476 ops/s
[info] Iteration   3: 1958152.927 ops/s
[info] Iteration   4: 1968706.152 ops/s
[info] Iteration   5: 1960353.086 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1961991.725 ±(99.9%) 21257.003 ops/s [Average]
[info]   (min, avg, max) = (1955958.986, 1961991.725, 1968706.152), stdev = 5520.376
[info]   CI (99.9%): [1940734.723, 1983248.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:CPI":
[info]   0.230 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses":
[info]   13.127 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads":
[info]   1092.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores":
[info]   891.802 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses":
[info]   0.097 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-load-misses":
[info]   0.038 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-loads":
[info]   0.117 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-store-misses":
[info]   0.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:LLC-stores":
[info]   3.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:branch-misses":
[info]   2.675 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:branches":
[info]   2590.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:cycles":
[info]   1978.854 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses":
[info]   0.133 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-loads":
[info]   1106.862 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:dTLB-stores":
[info]   899.340 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses":
[info]   0.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:iTLB-loads":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:instructions":
[info]   8599.297 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:23
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 46600.688 ops/s
[info] # Warmup Iteration   2: 164642.172 ops/s
[info] # Warmup Iteration   3: 167732.625 ops/s
[info] # Warmup Iteration   4: 193344.497 ops/s
[info] # Warmup Iteration   5: 190446.529 ops/s
[info] Iteration   1: 186719.084 ops/s
[info] Iteration   2: 196420.517 ops/s
[info] Iteration   3: 197473.619 ops/s
[info] Iteration   4: 197081.583 ops/s
[info] Iteration   5: 190295.536 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   193598.068 ±(99.9%) 18601.851 ops/s [Average]
[info]   (min, avg, max) = (186719.084, 193598.068, 197473.619), stdev = 4830.842
[info]   CI (99.9%): [174996.217, 212199.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:CPI":
[info]   0.297 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses":
[info]   711.971 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-dcache-loads":
[info]   15659.710 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-dcache-stores":
[info]   13431.185 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:L1-icache-load-misses":
[info]   5.401 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-load-misses":
[info]   1.083 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-loads":
[info]   4.009 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-store-misses":
[info]   83.294 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:LLC-stores":
[info]   203.332 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:branch-misses":
[info]   29.375 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:branches":
[info]   12274.365 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:cycles":
[info]   19862.529 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-load-misses":
[info]   1.584 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-loads":
[info]   14737.281 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-store-misses":
[info]   0.037 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:dTLB-stores":
[info]   12652.341 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:iTLB-load-misses":
[info]   0.139 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:iTLB-loads":
[info]   0.351 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:instructions":
[info]   66853.772 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:09
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 208297.024 ops/s
[info] # Warmup Iteration   2: 393464.597 ops/s
[info] # Warmup Iteration   3: 447385.034 ops/s
[info] # Warmup Iteration   4: 448126.352 ops/s
[info] # Warmup Iteration   5: 446954.346 ops/s
[info] Iteration   1: 449727.738 ops/s
[info] Iteration   2: 449412.194 ops/s
[info] Iteration   3: 450821.595 ops/s
[info] Iteration   4: 451560.376 ops/s
[info] Iteration   5: 452390.084 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   450782.397 ±(99.9%) 4786.742 ops/s [Average]
[info]   (min, avg, max) = (449412.194, 450782.397, 452390.084), stdev = 1243.102
[info]   CI (99.9%): [445995.656, 455569.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:CPI":
[info]   0.291 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-dcache-load-misses":
[info]   82.635 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-dcache-loads":
[info]   6651.085 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-dcache-stores":
[info]   6086.355 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:L1-icache-load-misses":
[info]   2.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-load-misses":
[info]   0.089 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-loads":
[info]   0.914 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-store-misses":
[info]   53.262 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:LLC-stores":
[info]   77.610 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:branch-misses":
[info]   8.931 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:branches":
[info]   5608.305 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:cycles":
[info]   8086.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-load-misses":
[info]   1.167 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-loads":
[info]   6705.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-store-misses":
[info]   0.029 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:dTLB-stores":
[info]   6112.715 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:iTLB-load-misses":
[info]   0.049 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:iTLB-loads":
[info]   0.106 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:instructions":
[info]   27803.240 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:55
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 335642.182 ops/s
[info] # Warmup Iteration   2: 1089936.682 ops/s
[info] # Warmup Iteration   3: 1276567.124 ops/s
[info] # Warmup Iteration   4: 1263050.131 ops/s
[info] # Warmup Iteration   5: 1259864.579 ops/s
[info] Iteration   1: 1259408.309 ops/s
[info] Iteration   2: 1190315.256 ops/s
[info] Iteration   3: 1189029.241 ops/s
[info] Iteration   4: 1270200.515 ops/s
[info] Iteration   5: 1271871.527 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   1236164.970 ±(99.9%) 164472.566 ops/s [Average]
[info]   (min, avg, max) = (1189029.241, 1236164.970, 1271871.527), stdev = 42713.003
[info]   CI (99.9%): [1071692.404, 1400637.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:CPI":
[info]   0.243 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses":
[info]   12.655 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads":
[info]   3099.120 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores":
[info]   1906.923 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses":
[info]   0.903 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-load-misses":
[info]   0.027 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-loads":
[info]   0.208 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-store-misses":
[info]   3.181 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:LLC-stores":
[info]   6.946 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:branch-misses":
[info]   1.266 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:branches":
[info]   2058.930 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:cycles":
[info]   3034.273 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses":
[info]   0.175 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-loads":
[info]   3088.579 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:dTLB-stores":
[info]   1910.128 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:iTLB-loads":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:instructions":
[info]   12510.064 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:41
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1288420.035 ops/s
[info] # Warmup Iteration   2: 1574758.608 ops/s
[info] # Warmup Iteration   3: 1543125.390 ops/s
[info] # Warmup Iteration   4: 1538331.935 ops/s
[info] # Warmup Iteration   5: 1540206.301 ops/s
[info] Iteration   1: 1535407.085 ops/s
[info] Iteration   2: 1528388.307 ops/s
[info] Iteration   3: 1522106.452 ops/s
[info] Iteration   4: 1631001.899 ops/s
[info] Iteration   5: 1641260.191 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1571632.787 ±(99.9%) 227871.523 ops/s [Average]
[info]   (min, avg, max) = (1522106.452, 1571632.787, 1641260.191), stdev = 59177.511
[info]   CI (99.9%): [1343761.264, 1799504.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:CPI":
[info]   0.239 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses":
[info]   12.240 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads":
[info]   1659.470 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores":
[info]   1730.272 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses":
[info]   0.161 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses":
[info]   0.023 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-loads":
[info]   0.095 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses":
[info]   3.358 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:LLC-stores":
[info]   7.174 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:branch-misses":
[info]   1.203 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:branches":
[info]   2383.794 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:cycles":
[info]   2357.142 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses":
[info]   0.173 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-loads":
[info]   1665.088 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses":
[info]   0.003 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-stores":
[info]   1687.113 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses":
[info]   0.007 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:instructions":
[info]   9861.457 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 1575510.707 ops/s
[info] # Warmup Iteration   2: 1654237.303 ops/s
[info] # Warmup Iteration   3: 1697314.403 ops/s
[info] # Warmup Iteration   4: 1699138.745 ops/s
[info] # Warmup Iteration   5: 1695113.559 ops/s
[info] Iteration   1: 1695495.254 ops/s
[info] Iteration   2: 1695246.650 ops/s
[info] Iteration   3: 1695959.904 ops/s
[info] Iteration   4: 1696243.958 ops/s
[info] Iteration   5: 1683006.217 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1693190.397 ±(99.9%) 21973.353 ops/s [Average]
[info]   (min, avg, max) = (1683006.217, 1693190.397, 1696243.958), stdev = 5706.410
[info]   CI (99.9%): [1671217.044, 1715163.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI":
[info]   0.229 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses":
[info]   0.849 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads":
[info]   1651.666 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores":
[info]   1677.543 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses":
[info]   0.078 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses":
[info]   0.017 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads":
[info]   0.080 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses":
[info]   0.004 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores":
[info]   0.026 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses":
[info]   1.119 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches":
[info]   2347.504 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles":
[info]   2262.590 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses":
[info]   0.008 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads":
[info]   1653.747 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses":
[info]   0.001 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores":
[info]   1680.560 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses":
[info]   0.006 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads":
[info]   0.021 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions":
[info]   9882.878 #/op
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_161, GraalVM 1.0.0-rc1, 25.71-b01-internal-jvmci-0.42
[info] # *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:13
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfNormProfiler 
[info] # Profilers consume stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 247171.572 ops/s
[info] # Warmup Iteration   2: 502382.719 ops/s
[info] # Warmup Iteration   3: 544246.757 ops/s
[info] # Warmup Iteration   4: 627699.002 ops/s
[info] # Warmup Iteration   5: 576531.716 ops/s
[info] Iteration   1: 618430.653 ops/s
[info] Iteration   2: 646459.866 ops/s
[info] Iteration   3: 646590.327 ops/s
[info] Iteration   4: 642228.273 ops/s
[info] Iteration   5: 645120.653 ops/s
[info] # Processing profiler results: LinuxPerfNormProfiler 
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   639765.954 ±(99.9%) 46420.284 ops/s [Average]
[info]   (min, avg, max) = (618430.653, 639765.954, 646590.327), stdev = 12055.200
[info]   CI (99.9%): [593345.670, 686186.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:CPI":
[info]   0.269 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses":
[info]   44.118 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-dcache-loads":
[info]   6112.506 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-dcache-stores":
[info]   4023.962 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:L1-icache-load-misses":
[info]   2.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-load-misses":
[info]   0.441 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-loads":
[info]   2.242 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-store-misses":
[info]   4.069 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:LLC-stores":
[info]   13.881 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:branch-misses":
[info]   5.957 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:branches":
[info]   3962.438 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:cycles":
[info]   6419.801 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-load-misses":
[info]   0.408 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-loads":
[info]   6241.905 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-store-misses":
[info]   0.005 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:dTLB-stores":
[info]   4173.605 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:iTLB-load-misses":
[info]   0.024 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:iTLB-loads":
[info]   0.177 #/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:instructions":
[info]   23836.623 #/op
[info] # Run complete. Total time: 01:38:50
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                                                                             (size)   Mode  Cnt         Score         Error  Units
[info] AdtBenchmark.readCirce                                                                   N/A  thrpt    5   1095891.797 ±   56564.068  ops/s
[info] AdtBenchmark.readCirce:CPI                                                               N/A  thrpt              0.329                 #/op
[info] AdtBenchmark.readCirce:L1-dcache-load-misses                                             N/A  thrpt             54.096                 #/op
[info] AdtBenchmark.readCirce:L1-dcache-loads                                                   N/A  thrpt           2603.352                 #/op
[info] AdtBenchmark.readCirce:L1-dcache-stores                                                  N/A  thrpt           1433.078                 #/op
[info] AdtBenchmark.readCirce:L1-icache-load-misses                                             N/A  thrpt             36.441                 #/op
[info] AdtBenchmark.readCirce:LLC-load-misses                                                   N/A  thrpt              0.162                 #/op
[info] AdtBenchmark.readCirce:LLC-loads                                                         N/A  thrpt              0.459                 #/op
[info] AdtBenchmark.readCirce:LLC-store-misses                                                  N/A  thrpt              3.218                 #/op
[info] AdtBenchmark.readCirce:LLC-stores                                                        N/A  thrpt             11.441                 #/op
[info] AdtBenchmark.readCirce:branch-misses                                                     N/A  thrpt              0.221                 #/op
[info] AdtBenchmark.readCirce:branches                                                          N/A  thrpt           2167.918                 #/op
[info] AdtBenchmark.readCirce:cycles                                                            N/A  thrpt           3454.031                 #/op
[info] AdtBenchmark.readCirce:dTLB-load-misses                                                  N/A  thrpt              0.245                 #/op
[info] AdtBenchmark.readCirce:dTLB-loads                                                        N/A  thrpt           2573.961                 #/op
[info] AdtBenchmark.readCirce:dTLB-store-misses                                                 N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.readCirce:dTLB-stores                                                       N/A  thrpt           1427.271                 #/op
[info] AdtBenchmark.readCirce:iTLB-load-misses                                                  N/A  thrpt              0.011                 #/op
[info] AdtBenchmark.readCirce:iTLB-loads                                                        N/A  thrpt              0.015                 #/op
[info] AdtBenchmark.readCirce:instructions                                                      N/A  thrpt          10500.268                 #/op
[info] AdtBenchmark.readJacksonScala                                                            N/A  thrpt    5   2031293.175 ±   91820.416  ops/s
[info] AdtBenchmark.readJacksonScala:CPI                                                        N/A  thrpt              0.318                 #/op
[info] AdtBenchmark.readJacksonScala:L1-dcache-load-misses                                      N/A  thrpt             19.717                 #/op
[info] AdtBenchmark.readJacksonScala:L1-dcache-loads                                            N/A  thrpt           1613.527                 #/op
[info] AdtBenchmark.readJacksonScala:L1-dcache-stores                                           N/A  thrpt            867.822                 #/op
[info] AdtBenchmark.readJacksonScala:L1-icache-load-misses                                      N/A  thrpt              0.215                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-load-misses                                            N/A  thrpt              0.036                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-loads                                                  N/A  thrpt              0.215                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-store-misses                                           N/A  thrpt              0.916                 #/op
[info] AdtBenchmark.readJacksonScala:LLC-stores                                                 N/A  thrpt              2.941                 #/op
[info] AdtBenchmark.readJacksonScala:branch-misses                                              N/A  thrpt              0.081                 #/op
[info] AdtBenchmark.readJacksonScala:branches                                                   N/A  thrpt           1137.014                 #/op
[info] AdtBenchmark.readJacksonScala:cycles                                                     N/A  thrpt           1872.003                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-load-misses                                           N/A  thrpt              0.081                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-loads                                                 N/A  thrpt           1595.464                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-store-misses                                          N/A  thrpt              0.002                 #/op
[info] AdtBenchmark.readJacksonScala:dTLB-stores                                                N/A  thrpt            841.737                 #/op
[info] AdtBenchmark.readJacksonScala:iTLB-load-misses                                           N/A  thrpt              0.007                 #/op
[info] AdtBenchmark.readJacksonScala:iTLB-loads                                                 N/A  thrpt              0.011                 #/op
[info] AdtBenchmark.readJacksonScala:instructions                                               N/A  thrpt           5890.331                 #/op
[info] AdtBenchmark.readJsoniterScala                                                           N/A  thrpt    5   5968469.683 ±   54366.050  ops/s
[info] AdtBenchmark.readJsoniterScala:CPI                                                       N/A  thrpt              0.248                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-dcache-load-misses                                     N/A  thrpt              1.822                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-dcache-loads                                           N/A  thrpt            403.407                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-dcache-stores                                          N/A  thrpt            240.515                 #/op
[info] AdtBenchmark.readJsoniterScala:L1-icache-load-misses                                     N/A  thrpt              0.057                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-load-misses                                           N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-loads                                                 N/A  thrpt              0.011                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-store-misses                                          N/A  thrpt              0.029                 #/op
[info] AdtBenchmark.readJsoniterScala:LLC-stores                                                N/A  thrpt              0.259                 #/op
[info] AdtBenchmark.readJsoniterScala:branch-misses                                             N/A  thrpt              0.049                 #/op
[info] AdtBenchmark.readJsoniterScala:branches                                                  N/A  thrpt            667.847                 #/op
[info] AdtBenchmark.readJsoniterScala:cycles                                                    N/A  thrpt            637.662                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-load-misses                                          N/A  thrpt              0.006                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-loads                                                N/A  thrpt            399.074                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-store-misses                                         N/A  thrpt             ≈ 10⁻³                 #/op
[info] AdtBenchmark.readJsoniterScala:dTLB-stores                                               N/A  thrpt            235.691                 #/op
[info] AdtBenchmark.readJsoniterScala:iTLB-load-misses                                          N/A  thrpt              0.006                 #/op
[info] AdtBenchmark.readJsoniterScala:iTLB-loads                                                N/A  thrpt              0.014                 #/op
[info] AdtBenchmark.readJsoniterScala:instructions                                              N/A  thrpt           2574.294                 #/op
[info] AdtBenchmark.readPlayJson                                                                N/A  thrpt    5    460234.798 ±   38082.923  ops/s
[info] AdtBenchmark.readPlayJson:CPI                                                            N/A  thrpt              0.388                 #/op
[info] AdtBenchmark.readPlayJson:L1-dcache-load-misses                                          N/A  thrpt            192.843                 #/op
[info] AdtBenchmark.readPlayJson:L1-dcache-loads                                                N/A  thrpt           5862.812                 #/op
[info] AdtBenchmark.readPlayJson:L1-dcache-stores                                               N/A  thrpt           3404.948                 #/op
[info] AdtBenchmark.readPlayJson:L1-icache-load-misses                                          N/A  thrpt            129.714                 #/op
[info] AdtBenchmark.readPlayJson:LLC-load-misses                                                N/A  thrpt              0.153                 #/op
[info] AdtBenchmark.readPlayJson:LLC-loads                                                      N/A  thrpt              3.275                 #/op
[info] AdtBenchmark.readPlayJson:LLC-store-misses                                               N/A  thrpt              3.382                 #/op
[info] AdtBenchmark.readPlayJson:LLC-stores                                                     N/A  thrpt             26.889                 #/op
[info] AdtBenchmark.readPlayJson:branch-misses                                                  N/A  thrpt              8.696                 #/op
[info] AdtBenchmark.readPlayJson:branches                                                       N/A  thrpt           3572.897                 #/op
[info] AdtBenchmark.readPlayJson:cycles                                                         N/A  thrpt           8083.420                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-load-misses                                               N/A  thrpt              0.216                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-loads                                                     N/A  thrpt           5996.692                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-store-misses                                              N/A  thrpt              0.007                 #/op
[info] AdtBenchmark.readPlayJson:dTLB-stores                                                    N/A  thrpt           3403.132                 #/op
[info] AdtBenchmark.readPlayJson:iTLB-load-misses                                               N/A  thrpt              0.032                 #/op
[info] AdtBenchmark.readPlayJson:iTLB-loads                                                     N/A  thrpt              0.089                 #/op
[info] AdtBenchmark.readPlayJson:instructions                                                   N/A  thrpt          20836.739                 #/op
[info] AdtBenchmark.writeCirce                                                                  N/A  thrpt    5   1037392.947 ±  109991.828  ops/s
[info] AdtBenchmark.writeCirce:CPI                                                              N/A  thrpt              0.383                 #/op
[info] AdtBenchmark.writeCirce:L1-dcache-load-misses                                            N/A  thrpt             69.328                 #/op
[info] AdtBenchmark.writeCirce:L1-dcache-loads                                                  N/A  thrpt           2319.281                 #/op
[info] AdtBenchmark.writeCirce:L1-dcache-stores                                                 N/A  thrpt           1563.101                 #/op
[info] AdtBenchmark.writeCirce:L1-icache-load-misses                                            N/A  thrpt            151.686                 #/op
[info] AdtBenchmark.writeCirce:LLC-load-misses                                                  N/A  thrpt              0.107                 #/op
[info] AdtBenchmark.writeCirce:LLC-loads                                                        N/A  thrpt              0.673                 #/op
[info] AdtBenchmark.writeCirce:LLC-store-misses                                                 N/A  thrpt              8.981                 #/op
[info] AdtBenchmark.writeCirce:LLC-stores                                                       N/A  thrpt             22.623                 #/op
[info] AdtBenchmark.writeCirce:branch-misses                                                    N/A  thrpt              1.449                 #/op
[info] AdtBenchmark.writeCirce:branches                                                         N/A  thrpt           1956.516                 #/op
[info] AdtBenchmark.writeCirce:cycles                                                           N/A  thrpt           3618.107                 #/op
[info] AdtBenchmark.writeCirce:dTLB-load-misses                                                 N/A  thrpt              0.219                 #/op
[info] AdtBenchmark.writeCirce:dTLB-loads                                                       N/A  thrpt           2319.758                 #/op
[info] AdtBenchmark.writeCirce:dTLB-store-misses                                                N/A  thrpt              0.006                 #/op
[info] AdtBenchmark.writeCirce:dTLB-stores                                                      N/A  thrpt           1540.706                 #/op
[info] AdtBenchmark.writeCirce:iTLB-load-misses                                                 N/A  thrpt              0.022                 #/op
[info] AdtBenchmark.writeCirce:iTLB-loads                                                       N/A  thrpt              0.069                 #/op
[info] AdtBenchmark.writeCirce:instructions                                                     N/A  thrpt           9440.785                 #/op
[info] AdtBenchmark.writeJacksonScala                                                           N/A  thrpt    5   3024750.891 ±  362079.188  ops/s
[info] AdtBenchmark.writeJacksonScala:CPI                                                       N/A  thrpt              0.330                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-dcache-load-misses                                     N/A  thrpt             10.175                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-dcache-loads                                           N/A  thrpt            941.046                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-dcache-stores                                          N/A  thrpt            566.825                 #/op
[info] AdtBenchmark.writeJacksonScala:L1-icache-load-misses                                     N/A  thrpt              0.274                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-load-misses                                           N/A  thrpt              0.024                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-loads                                                 N/A  thrpt              0.096                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-store-misses                                          N/A  thrpt              0.137                 #/op
[info] AdtBenchmark.writeJacksonScala:LLC-stores                                                N/A  thrpt              1.472                 #/op
[info] AdtBenchmark.writeJacksonScala:branch-misses                                             N/A  thrpt              0.102                 #/op
[info] AdtBenchmark.writeJacksonScala:branches                                                  N/A  thrpt            798.663                 #/op
[info] AdtBenchmark.writeJacksonScala:cycles                                                    N/A  thrpt           1247.009                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-load-misses                                          N/A  thrpt              0.035                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-loads                                                N/A  thrpt            916.182                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-store-misses                                         N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJacksonScala:dTLB-stores                                               N/A  thrpt            554.396                 #/op
[info] AdtBenchmark.writeJacksonScala:iTLB-load-misses                                          N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.writeJacksonScala:iTLB-loads                                                N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.writeJacksonScala:instructions                                              N/A  thrpt           3778.869                 #/op
[info] AdtBenchmark.writeJsoniterScala                                                          N/A  thrpt    5  20128434.199 ± 1515420.895  ops/s
[info] AdtBenchmark.writeJsoniterScala:CPI                                                      N/A  thrpt              0.347                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-dcache-load-misses                                    N/A  thrpt              1.335                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-dcache-loads                                          N/A  thrpt            108.191                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-dcache-stores                                         N/A  thrpt            163.360                 #/op
[info] AdtBenchmark.writeJsoniterScala:L1-icache-load-misses                                    N/A  thrpt              0.032                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-load-misses                                          N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-loads                                                N/A  thrpt              0.008                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-store-misses                                         N/A  thrpt              0.007                 #/op
[info] AdtBenchmark.writeJsoniterScala:LLC-stores                                               N/A  thrpt              0.122                 #/op
[info] AdtBenchmark.writeJsoniterScala:branch-misses                                            N/A  thrpt              0.006                 #/op
[info] AdtBenchmark.writeJsoniterScala:branches                                                 N/A  thrpt            103.758                 #/op
[info] AdtBenchmark.writeJsoniterScala:cycles                                                   N/A  thrpt            192.256                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-load-misses                                         N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-loads                                               N/A  thrpt            106.584                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-store-misses                                        N/A  thrpt             ≈ 10⁻³                 #/op
[info] AdtBenchmark.writeJsoniterScala:dTLB-stores                                              N/A  thrpt            154.354                 #/op
[info] AdtBenchmark.writeJsoniterScala:iTLB-load-misses                                         N/A  thrpt             ≈ 10⁻³                 #/op
[info] AdtBenchmark.writeJsoniterScala:iTLB-loads                                               N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScala:instructions                                             N/A  thrpt            553.452                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                  N/A  thrpt    5  18925665.901 ±   55375.203  ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:CPI                                              N/A  thrpt              0.316                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                            N/A  thrpt              0.038                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                                  N/A  thrpt            127.884                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                                 N/A  thrpt            183.950                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                            N/A  thrpt              0.006                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                                  N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                        N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                                 N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                       N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:branch-misses                                    N/A  thrpt              0.004                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:branches                                         N/A  thrpt            105.123                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:cycles                                           N/A  thrpt            198.872                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                                 N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                       N/A  thrpt            126.729                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                                N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                      N/A  thrpt            181.245                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                                 N/A  thrpt              0.001                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                       N/A  thrpt              0.002                 #/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:instructions                                     N/A  thrpt            629.889                 #/op
[info] AdtBenchmark.writePlayJson                                                               N/A  thrpt    5   1050212.418 ±   63762.765  ops/s
[info] AdtBenchmark.writePlayJson:CPI                                                           N/A  thrpt              0.367                 #/op
[info] AdtBenchmark.writePlayJson:L1-dcache-load-misses                                         N/A  thrpt             67.323                 #/op
[info] AdtBenchmark.writePlayJson:L1-dcache-loads                                               N/A  thrpt           2499.259                 #/op
[info] AdtBenchmark.writePlayJson:L1-dcache-stores                                              N/A  thrpt           1422.654                 #/op
[info] AdtBenchmark.writePlayJson:L1-icache-load-misses                                         N/A  thrpt             94.829                 #/op
[info] AdtBenchmark.writePlayJson:LLC-load-misses                                               N/A  thrpt              0.070                 #/op
[info] AdtBenchmark.writePlayJson:LLC-loads                                                     N/A  thrpt              0.705                 #/op
[info] AdtBenchmark.writePlayJson:LLC-store-misses                                              N/A  thrpt              1.508                 #/op
[info] AdtBenchmark.writePlayJson:LLC-stores                                                    N/A  thrpt             15.301                 #/op
[info] AdtBenchmark.writePlayJson:branch-misses                                                 N/A  thrpt              0.466                 #/op
[info] AdtBenchmark.writePlayJson:branches                                                      N/A  thrpt           1801.008                 #/op
[info] AdtBenchmark.writePlayJson:cycles                                                        N/A  thrpt           3655.404                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-load-misses                                              N/A  thrpt              0.082                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-loads                                                    N/A  thrpt           2585.215                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-store-misses                                             N/A  thrpt              0.003                 #/op
[info] AdtBenchmark.writePlayJson:dTLB-stores                                                   N/A  thrpt           1500.794                 #/op
[info] AdtBenchmark.writePlayJson:iTLB-load-misses                                              N/A  thrpt              0.013                 #/op
[info] AdtBenchmark.writePlayJson:iTLB-loads                                                    N/A  thrpt              0.031                 #/op
[info] AdtBenchmark.writePlayJson:instructions                                                  N/A  thrpt           9950.875                 #/op
[info] AnyRefsBenchmark.readCirce                                                               N/A  thrpt    5   3880571.609 ±  282956.526  ops/s
[info] AnyRefsBenchmark.readCirce:CPI                                                           N/A  thrpt              0.313                 #/op
[info] AnyRefsBenchmark.readCirce:L1-dcache-load-misses                                         N/A  thrpt             23.330                 #/op
[info] AnyRefsBenchmark.readCirce:L1-dcache-loads                                               N/A  thrpt            630.553                 #/op
[info] AnyRefsBenchmark.readCirce:L1-dcache-stores                                              N/A  thrpt            427.450                 #/op
[info] AnyRefsBenchmark.readCirce:L1-icache-load-misses                                         N/A  thrpt              0.417                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-load-misses                                               N/A  thrpt              0.052                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-loads                                                     N/A  thrpt              0.165                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-store-misses                                              N/A  thrpt              2.953                 #/op
[info] AnyRefsBenchmark.readCirce:LLC-stores                                                    N/A  thrpt              5.406                 #/op
[info] AnyRefsBenchmark.readCirce:branch-misses                                                 N/A  thrpt              0.120                 #/op
[info] AnyRefsBenchmark.readCirce:branches                                                      N/A  thrpt            634.402                 #/op
[info] AnyRefsBenchmark.readCirce:cycles                                                        N/A  thrpt            981.998                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-load-misses                                              N/A  thrpt              0.097                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-loads                                                    N/A  thrpt            644.042                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-store-misses                                             N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readCirce:dTLB-stores                                                   N/A  thrpt            455.367                 #/op
[info] AnyRefsBenchmark.readCirce:iTLB-load-misses                                              N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.readCirce:iTLB-loads                                                    N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.readCirce:instructions                                                  N/A  thrpt           3138.237                 #/op
[info] AnyRefsBenchmark.readDslJsonJava                                                         N/A  thrpt    5  11374194.363 ± 1505174.774  ops/s
[info] AnyRefsBenchmark.readDslJsonJava:CPI                                                     N/A  thrpt              0.247                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-dcache-load-misses                                   N/A  thrpt              3.214                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-dcache-loads                                         N/A  thrpt            300.189                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-dcache-stores                                        N/A  thrpt            159.726                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:L1-icache-load-misses                                   N/A  thrpt              0.080                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-load-misses                                         N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-loads                                               N/A  thrpt              0.028                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-store-misses                                        N/A  thrpt              0.024                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:LLC-stores                                              N/A  thrpt              0.350                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:branch-misses                                           N/A  thrpt              0.111                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:branches                                                N/A  thrpt            299.481                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:cycles                                                  N/A  thrpt            337.152                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-load-misses                                        N/A  thrpt              0.005                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-loads                                              N/A  thrpt            311.937                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-store-misses                                       N/A  thrpt             ≈ 10⁻³                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:dTLB-stores                                             N/A  thrpt            164.079                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:iTLB-load-misses                                        N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:iTLB-loads                                              N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.readDslJsonJava:instructions                                            N/A  thrpt           1365.384                 #/op
[info] AnyRefsBenchmark.readJacksonScala                                                        N/A  thrpt    5   3839281.974 ±  683531.974  ops/s
[info] AnyRefsBenchmark.readJacksonScala:CPI                                                    N/A  thrpt              0.330                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-dcache-load-misses                                  N/A  thrpt             15.402                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-dcache-loads                                        N/A  thrpt            808.948                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-dcache-stores                                       N/A  thrpt            465.117                 #/op
[info] AnyRefsBenchmark.readJacksonScala:L1-icache-load-misses                                  N/A  thrpt              0.142                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-load-misses                                        N/A  thrpt              0.049                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-loads                                              N/A  thrpt              0.134                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-store-misses                                       N/A  thrpt              1.248                 #/op
[info] AnyRefsBenchmark.readJacksonScala:LLC-stores                                             N/A  thrpt              2.942                 #/op
[info] AnyRefsBenchmark.readJacksonScala:branch-misses                                          N/A  thrpt              0.119                 #/op
[info] AnyRefsBenchmark.readJacksonScala:branches                                               N/A  thrpt            575.178                 #/op
[info] AnyRefsBenchmark.readJacksonScala:cycles                                                 N/A  thrpt            994.654                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-load-misses                                       N/A  thrpt              0.087                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-loads                                             N/A  thrpt            810.750                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-store-misses                                      N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readJacksonScala:dTLB-stores                                            N/A  thrpt            473.711                 #/op
[info] AnyRefsBenchmark.readJacksonScala:iTLB-load-misses                                       N/A  thrpt              0.004                 #/op
[info] AnyRefsBenchmark.readJacksonScala:iTLB-loads                                             N/A  thrpt              0.013                 #/op
[info] AnyRefsBenchmark.readJacksonScala:instructions                                           N/A  thrpt           3017.562                 #/op
[info] AnyRefsBenchmark.readJsoniterScala                                                       N/A  thrpt    5  14788202.800 ± 1454590.515  ops/s
[info] AnyRefsBenchmark.readJsoniterScala:CPI                                                   N/A  thrpt              0.232                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-dcache-load-misses                                 N/A  thrpt              3.226                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-dcache-loads                                       N/A  thrpt            192.571                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-dcache-stores                                      N/A  thrpt            135.739                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:L1-icache-load-misses                                 N/A  thrpt              0.034                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-load-misses                                       N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-loads                                             N/A  thrpt              0.012                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-store-misses                                      N/A  thrpt              0.012                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:LLC-stores                                            N/A  thrpt              0.517                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:branch-misses                                         N/A  thrpt              0.032                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:branches                                              N/A  thrpt            253.991                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:cycles                                                N/A  thrpt            254.632                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-load-misses                                      N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-loads                                            N/A  thrpt            197.256                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-store-misses                                     N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:dTLB-stores                                           N/A  thrpt            133.905                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:iTLB-load-misses                                      N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:iTLB-loads                                            N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.readJsoniterScala:instructions                                          N/A  thrpt           1099.337                 #/op
[info] AnyRefsBenchmark.readPlayJson                                                            N/A  thrpt    5   1805128.290 ±  146230.896  ops/s
[info] AnyRefsBenchmark.readPlayJson:CPI                                                        N/A  thrpt              0.358                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-dcache-load-misses                                      N/A  thrpt             41.786                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-dcache-loads                                            N/A  thrpt           1645.826                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-dcache-stores                                           N/A  thrpt           1008.401                 #/op
[info] AnyRefsBenchmark.readPlayJson:L1-icache-load-misses                                      N/A  thrpt             11.286                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-load-misses                                            N/A  thrpt              0.046                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-loads                                                  N/A  thrpt              0.301                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-store-misses                                           N/A  thrpt              2.044                 #/op
[info] AnyRefsBenchmark.readPlayJson:LLC-stores                                                 N/A  thrpt              8.014                 #/op
[info] AnyRefsBenchmark.readPlayJson:branch-misses                                              N/A  thrpt              0.230                 #/op
[info] AnyRefsBenchmark.readPlayJson:branches                                                   N/A  thrpt           1033.622                 #/op
[info] AnyRefsBenchmark.readPlayJson:cycles                                                     N/A  thrpt           2128.005                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-load-misses                                           N/A  thrpt              0.104                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-loads                                                 N/A  thrpt           1750.808                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-store-misses                                          N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.readPlayJson:dTLB-stores                                                N/A  thrpt           1036.340                 #/op
[info] AnyRefsBenchmark.readPlayJson:iTLB-load-misses                                           N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.readPlayJson:iTLB-loads                                                 N/A  thrpt              0.011                 #/op
[info] AnyRefsBenchmark.readPlayJson:instructions                                               N/A  thrpt           5951.162                 #/op
[info] AnyRefsBenchmark.writeCirce                                                              N/A  thrpt    5   4918507.662 ±  322527.901  ops/s
[info] AnyRefsBenchmark.writeCirce:CPI                                                          N/A  thrpt              0.307                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-dcache-load-misses                                        N/A  thrpt             12.343                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-dcache-loads                                              N/A  thrpt            529.959                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-dcache-stores                                             N/A  thrpt            387.525                 #/op
[info] AnyRefsBenchmark.writeCirce:L1-icache-load-misses                                        N/A  thrpt              0.188                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-load-misses                                              N/A  thrpt              0.023                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-loads                                                    N/A  thrpt              0.081                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-store-misses                                             N/A  thrpt              0.463                 #/op
[info] AnyRefsBenchmark.writeCirce:LLC-stores                                                   N/A  thrpt              2.368                 #/op
[info] AnyRefsBenchmark.writeCirce:branch-misses                                                N/A  thrpt              0.680                 #/op
[info] AnyRefsBenchmark.writeCirce:branches                                                     N/A  thrpt            546.261                 #/op
[info] AnyRefsBenchmark.writeCirce:cycles                                                       N/A  thrpt            800.008                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-load-misses                                             N/A  thrpt              0.031                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-loads                                                   N/A  thrpt            556.992                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-store-misses                                            N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeCirce:dTLB-stores                                                  N/A  thrpt            402.535                 #/op
[info] AnyRefsBenchmark.writeCirce:iTLB-load-misses                                             N/A  thrpt              0.004                 #/op
[info] AnyRefsBenchmark.writeCirce:iTLB-loads                                                   N/A  thrpt              0.016                 #/op
[info] AnyRefsBenchmark.writeCirce:instructions                                                 N/A  thrpt           2602.929                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava                                                        N/A  thrpt    5  24657274.013 ±  151546.983  ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:CPI                                                    N/A  thrpt              0.239                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-dcache-load-misses                                  N/A  thrpt              0.834                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-dcache-loads                                        N/A  thrpt            125.964                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-dcache-stores                                       N/A  thrpt             63.099                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:L1-icache-load-misses                                  N/A  thrpt              0.005                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-load-misses                                        N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-loads                                              N/A  thrpt              0.004                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-store-misses                                       N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:LLC-stores                                             N/A  thrpt              0.048                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:branch-misses                                          N/A  thrpt              0.040                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:branches                                               N/A  thrpt            156.524                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:cycles                                                 N/A  thrpt            157.648                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-load-misses                                       N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-loads                                             N/A  thrpt            129.211                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-store-misses                                      N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:dTLB-stores                                            N/A  thrpt             63.197                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:iTLB-load-misses                                       N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:iTLB-loads                                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeDslJsonJava:instructions                                           N/A  thrpt            659.638                 #/op
[info] AnyRefsBenchmark.writeJacksonScala                                                       N/A  thrpt    5  10518056.192 ± 1545179.366  ops/s
[info] AnyRefsBenchmark.writeJacksonScala:CPI                                                   N/A  thrpt              0.286                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-dcache-load-misses                                 N/A  thrpt              0.837                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-dcache-loads                                       N/A  thrpt            314.714                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-dcache-stores                                      N/A  thrpt            168.709                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:L1-icache-load-misses                                 N/A  thrpt              0.108                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-load-misses                                       N/A  thrpt              0.008                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-loads                                             N/A  thrpt              0.030                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-store-misses                                      N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:LLC-stores                                            N/A  thrpt              0.053                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:branch-misses                                         N/A  thrpt              0.006                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:branches                                              N/A  thrpt            276.224                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:cycles                                                N/A  thrpt            346.697                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-load-misses                                      N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-loads                                            N/A  thrpt            312.472                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-store-misses                                     N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:dTLB-stores                                           N/A  thrpt            168.043                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:iTLB-load-misses                                      N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:iTLB-loads                                            N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJacksonScala:instructions                                          N/A  thrpt           1212.523                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala                                                      N/A  thrpt    5  34583927.936 ±  625324.787  ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:CPI                                                  N/A  thrpt              0.243                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-dcache-load-misses                                N/A  thrpt              0.807                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-dcache-loads                                      N/A  thrpt             89.366                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-dcache-stores                                     N/A  thrpt             86.314                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:L1-icache-load-misses                                N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-load-misses                                      N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-loads                                            N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-store-misses                                     N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:LLC-stores                                           N/A  thrpt              0.049                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:branch-misses                                        N/A  thrpt              0.009                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:branches                                             N/A  thrpt             96.440                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:cycles                                               N/A  thrpt            111.951                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-load-misses                                     N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-loads                                           N/A  thrpt             88.319                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-store-misses                                    N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:dTLB-stores                                          N/A  thrpt             84.202                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:iTLB-load-misses                                     N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:iTLB-loads                                           N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writeJsoniterScala:instructions                                         N/A  thrpt            461.051                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5  36308920.599 ± 1719844.307  ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:CPI                                          N/A  thrpt              0.227                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                        N/A  thrpt              0.025                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                              N/A  thrpt             90.199                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                             N/A  thrpt             77.768                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                        N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                              N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                    N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                   N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:branch-misses                                N/A  thrpt              0.003                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:branches                                     N/A  thrpt             99.607                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:cycles                                       N/A  thrpt            104.768                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                   N/A  thrpt             89.932                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                  N/A  thrpt             77.338                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                             N/A  thrpt             ≈ 10⁻³                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                   N/A  thrpt              0.001                 #/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:instructions                                 N/A  thrpt            460.689                 #/op
[info] AnyRefsBenchmark.writePlayJson                                                           N/A  thrpt    5   2394538.850 ±  122617.926  ops/s
[info] AnyRefsBenchmark.writePlayJson:CPI                                                       N/A  thrpt              0.361                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-dcache-load-misses                                     N/A  thrpt             34.427                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-dcache-loads                                           N/A  thrpt           1158.414                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-dcache-stores                                          N/A  thrpt            775.331                 #/op
[info] AnyRefsBenchmark.writePlayJson:L1-icache-load-misses                                     N/A  thrpt              4.337                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-load-misses                                           N/A  thrpt              0.097                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-loads                                                 N/A  thrpt              0.366                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-store-misses                                          N/A  thrpt              1.717                 #/op
[info] AnyRefsBenchmark.writePlayJson:LLC-stores                                                N/A  thrpt              7.845                 #/op
[info] AnyRefsBenchmark.writePlayJson:branch-misses                                             N/A  thrpt              0.082                 #/op
[info] AnyRefsBenchmark.writePlayJson:branches                                                  N/A  thrpt            812.151                 #/op
[info] AnyRefsBenchmark.writePlayJson:cycles                                                    N/A  thrpt           1616.034                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-load-misses                                          N/A  thrpt              0.017                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-loads                                                N/A  thrpt           1202.170                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-store-misses                                         N/A  thrpt              0.002                 #/op
[info] AnyRefsBenchmark.writePlayJson:dTLB-stores                                               N/A  thrpt            823.891                 #/op
[info] AnyRefsBenchmark.writePlayJson:iTLB-load-misses                                          N/A  thrpt              0.008                 #/op
[info] AnyRefsBenchmark.writePlayJson:iTLB-loads                                                N/A  thrpt              0.023                 #/op
[info] AnyRefsBenchmark.writePlayJson:instructions                                              N/A  thrpt           4479.862                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                 128  thrpt    5    374610.454 ±   28827.312  ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:CPI                                             128  thrpt              0.315                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt            168.179                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-loads                                 128  thrpt           7121.149                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-dcache-stores                                128  thrpt           5481.807                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:L1-icache-load-misses                           128  thrpt             24.813                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-load-misses                                 128  thrpt              0.730                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-loads                                       128  thrpt              5.051                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-store-misses                                128  thrpt             25.499                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:LLC-stores                                      128  thrpt             51.002                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:branch-misses                                   128  thrpt             14.115                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:branches                                        128  thrpt           7985.405                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:cycles                                          128  thrpt          11409.957                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-load-misses                                128  thrpt              1.240                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-loads                                      128  thrpt           7219.358                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-store-misses                               128  thrpt              0.032                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:dTLB-stores                                     128  thrpt           5589.433                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:iTLB-load-misses                                128  thrpt              0.231                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:iTLB-loads                                      128  thrpt              2.864                 #/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:instructions                                    128  thrpt          36244.833                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                          128  thrpt    5    757010.883 ±    3314.980  ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:CPI                                      128  thrpt              0.244                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt             24.511                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt           3642.369                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt           2526.756                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt              0.237                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt              0.015                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-loads                                128  thrpt              0.208                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt              0.918                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:LLC-stores                               128  thrpt              6.899                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:branch-misses                            128  thrpt              2.879                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:branches                                 128  thrpt           4990.433                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:cycles                                   128  thrpt           4699.041                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt              0.147                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-loads                               128  thrpt           3650.427                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt              0.003                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:dTLB-stores                              128  thrpt           2484.427                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt              0.018                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:iTLB-loads                               128  thrpt              0.050                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:instructions                             128  thrpt          19271.909                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                         128  thrpt    5   1693690.792 ±  179568.040  ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.223                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt             17.507                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt           1719.707                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt           1309.805                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              0.308                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.051                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-loads                               128  thrpt              0.176                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt              0.958                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:LLC-stores                              128  thrpt              3.973                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:branch-misses                           128  thrpt              1.223                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:branches                                128  thrpt           2655.022                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:cycles                                  128  thrpt           2247.700                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              0.148                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt           1709.867                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.002                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt           1300.120                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.012                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.014                 #/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:instructions                            128  thrpt          10066.837                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                              128  thrpt    5    223680.479 ±    3825.710  ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:CPI                                          128  thrpt              0.289                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt            501.383                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt          12966.332                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt          10044.459                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt              6.689                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-load-misses                              128  thrpt              1.262                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-loads                                    128  thrpt              4.950                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-store-misses                             128  thrpt             55.867                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:LLC-stores                                   128  thrpt            151.053                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:branch-misses                                128  thrpt             42.307                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:branches                                     128  thrpt          11646.819                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:cycles                                       128  thrpt          17292.722                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt              1.697                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-loads                                   128  thrpt          13045.468                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt              0.024                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:dTLB-stores                                  128  thrpt          10698.237                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt              0.065                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:iTLB-loads                                   128  thrpt              0.071                 #/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:instructions                                 128  thrpt          59934.182                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                128  thrpt    5    467965.035 ±    6997.824  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:CPI                                            128  thrpt              0.286                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt             81.947                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-loads                                128  thrpt           6335.190                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-dcache-stores                               128  thrpt           5731.856                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt              1.043                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-load-misses                                128  thrpt              0.172                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-loads                                      128  thrpt              0.825                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-store-misses                               128  thrpt             50.876                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:LLC-stores                                     128  thrpt             75.292                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:branch-misses                                  128  thrpt             10.520                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:branches                                       128  thrpt           5325.071                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:cycles                                         128  thrpt           7909.673                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-load-misses                               128  thrpt              1.246                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-loads                                     128  thrpt           6508.449                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              0.013                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:dTLB-stores                                    128  thrpt           5902.737                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              0.018                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:iTLB-loads                                     128  thrpt              0.038                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:instructions                                   128  thrpt          27654.091                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                         128  thrpt    5   1443646.760 ±   12051.321  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.231                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt             12.332                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt           2731.064                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt           1336.583                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt              0.537                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt              0.043                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-loads                               128  thrpt              0.191                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt              3.329                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:LLC-stores                              128  thrpt              7.012                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:branch-misses                           128  thrpt              1.177                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:branches                                128  thrpt           2023.417                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:cycles                                  128  thrpt           2573.661                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt              0.170                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt           2756.039                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt           1371.114                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt              0.010                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:instructions                            128  thrpt          11156.233                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                        128  thrpt    5   2739577.535 ±  231424.706  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.211                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt             12.000                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt            598.114                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt           1172.839                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              0.046                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.007                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              0.041                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt              3.573                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt              7.132                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              1.192                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:branches                               128  thrpt           1790.679                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:cycles                                 128  thrpt           1358.946                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              0.177                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt            594.222                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.002                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt           1110.055                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.006                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.007                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:instructions                           128  thrpt           6438.664                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5   2795842.425 ±   19158.175  ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.216                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt              0.143                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt            557.029                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt           1126.042                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.031                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.011                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.009                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.004                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.010                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              1.027                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt           1745.213                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt           1354.933                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.002                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt            555.901                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt           1112.224                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.005                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.010                 #/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt           6270.820                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                             128  thrpt    5    631401.208 ±  270306.505  ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:CPI                                         128  thrpt              0.303                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt             75.669                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt           6318.910                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt           2831.760                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt             22.932                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-load-misses                             128  thrpt              0.477                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-loads                                   128  thrpt              6.602                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-store-misses                            128  thrpt              4.811                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:LLC-stores                                  128  thrpt             14.790                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:branch-misses                               128  thrpt             10.893                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:branches                                    128  thrpt           4815.862                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:cycles                                      128  thrpt           7215.431                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt              0.581                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-loads                                  128  thrpt           6491.861                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.030                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:dTLB-stores                                 128  thrpt           2886.654                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              0.185                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:iTLB-loads                                  128  thrpt              1.963                 #/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:instructions                                128  thrpt          23788.703                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                    128  thrpt    5     21640.021 ±    5627.015  ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:CPI                                                128  thrpt              0.424                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt           4165.142                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-loads                                    128  thrpt         115967.727                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-dcache-stores                                   128  thrpt          60611.801                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:L1-icache-load-misses                              128  thrpt           2275.092                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-load-misses                                    128  thrpt             47.819                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-loads                                          128  thrpt            356.918                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-store-misses                                   128  thrpt            213.207                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:LLC-stores                                         128  thrpt            586.921                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:branch-misses                                      128  thrpt           1346.615                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:branches                                           128  thrpt         138624.447                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:cycles                                             128  thrpt         263522.907                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-load-misses                                   128  thrpt             32.970                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-loads                                         128  thrpt         113787.794                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              2.388                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:dTLB-stores                                        128  thrpt          58465.389                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:iTLB-load-misses                                   128  thrpt             14.717                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:iTLB-loads                                         128  thrpt            159.878                 #/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:instructions                                       128  thrpt         621754.433                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                             128  thrpt    5     41425.584 ±    3903.571  ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:CPI                                         128  thrpt              0.269                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt            940.802                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt          36860.671                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt          37435.769                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt            214.314                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              1.117                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-loads                                   128  thrpt             10.735                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt              5.534                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:LLC-stores                                  128  thrpt            132.434                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:branch-misses                               128  thrpt            117.341                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:branches                                    128  thrpt          69734.648                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:cycles                                      128  thrpt          90827.713                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              0.830                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt          37438.580                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.066                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt          37611.176                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              0.421                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt              1.607                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:instructions                                128  thrpt         337606.368                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                            128  thrpt    5     46888.407 ±    6537.591  ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.315                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt           1047.985                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt          41099.011                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt          27381.548                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt            299.974                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt             14.841                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt            160.768                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt             15.239                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt             96.874                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:branch-misses                              128  thrpt            198.839                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:branches                                   128  thrpt          70253.890                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:cycles                                     128  thrpt         104808.993                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              6.914                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt          42332.728                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.603                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt          28855.498                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              2.907                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt             32.161                 #/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:instructions                               128  thrpt         332546.933                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                 128  thrpt    5     35386.394 ±    4407.588  ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:CPI                                             128  thrpt              0.272                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt           1608.784                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt          53922.687                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt          46618.330                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt            136.026                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt              4.253                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-loads                                       128  thrpt             17.624                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-store-misses                                128  thrpt             72.319                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:LLC-stores                                      128  thrpt            299.297                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:branch-misses                                   128  thrpt            173.467                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:branches                                        128  thrpt          78023.864                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:cycles                                          128  thrpt         106407.099                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              3.839                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-loads                                      128  thrpt          54018.786                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.163                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:dTLB-stores                                     128  thrpt          46341.427                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              0.580                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:iTLB-loads                                      128  thrpt              1.840                 #/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:instructions                                    128  thrpt         391596.681                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                   128  thrpt    5     36023.866 ±    2145.388  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:CPI                                               128  thrpt              0.334                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt           2741.552                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt          54920.150                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt          39143.782                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt            127.939                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              9.186                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-loads                                         128  thrpt             53.557                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-store-misses                                  128  thrpt            267.521                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:LLC-stores                                        128  thrpt            547.510                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:branch-misses                                     128  thrpt            144.136                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:branches                                          128  thrpt          56786.227                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:cycles                                            128  thrpt         107889.408                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt              6.043                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-loads                                        128  thrpt          54912.713                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              1.620                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:dTLB-stores                                       128  thrpt          41242.055                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.534                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:iTLB-loads                                        128  thrpt              0.755                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:instructions                                      128  thrpt         322743.515                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                            128  thrpt    5     34264.455 ±    9098.497  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.369                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt           3076.966                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt          66421.063                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt          41701.834                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt            627.898                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt             22.824                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt            162.488                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt            129.435                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt            330.620                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:branch-misses                              128  thrpt            281.137                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:branches                                   128  thrpt          69500.609                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:cycles                                     128  thrpt         139815.912                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt             10.908                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt          67355.230                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.798                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt          42634.863                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              3.445                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt             38.735                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:instructions                               128  thrpt         379403.857                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                           128  thrpt    5     41048.471 ±    3296.954  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.341                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt           2194.552                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt          43380.082                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt          30745.122                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt            154.828                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              3.662                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt             29.356                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt             57.483                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt            216.586                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branch-misses                             128  thrpt            114.014                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:branches                                  128  thrpt          46013.981                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:cycles                                    128  thrpt          92600.928                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              3.507                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt          42357.964                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.132                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt          30958.910                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.310                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.684                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:instructions                              128  thrpt         271604.960                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5     40185.307 ±    4550.541  ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.351                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt           2279.495                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt          48721.803                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt          35251.885                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt            270.902                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              6.135                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt             58.701                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt             28.476                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt            175.344                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt            153.685                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt          48397.297                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt         100920.258                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              3.640                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt          50164.475                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt              0.212                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt          35768.437                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              1.044                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              8.452                 #/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt         287772.264                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                128  thrpt    5      9561.039 ±      79.145  ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:CPI                                            128  thrpt              0.451                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt           4698.805                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt         131323.208                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt          97703.907                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt           3859.608                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-load-misses                                128  thrpt             11.394                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-loads                                      128  thrpt            235.802                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-store-misses                               128  thrpt            185.404                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:LLC-stores                                     128  thrpt            649.883                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:branch-misses                                  128  thrpt           3801.925                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:branches                                       128  thrpt         163213.202                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:cycles                                         128  thrpt         396004.345                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt             17.217                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-loads                                     128  thrpt         131695.888                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.392                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:dTLB-stores                                    128  thrpt          97848.726                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              3.832                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              7.780                 #/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:instructions                                   128  thrpt         878471.882                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce                                                        128  thrpt    5     21198.640 ±    2383.348  ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:CPI                                                    128  thrpt              0.387                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           4180.850                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-dcache-loads                                        128  thrpt         120327.512                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-dcache-stores                                       128  thrpt          66721.967                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt           2228.006                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-load-misses                                        128  thrpt             41.376                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-loads                                              128  thrpt            308.902                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-store-misses                                       128  thrpt            128.535                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:LLC-stores                                             128  thrpt            478.414                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:branch-misses                                          128  thrpt            725.788                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:branches                                               128  thrpt         141094.574                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:cycles                                                 128  thrpt         271861.861                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-load-misses                                       128  thrpt             31.969                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-loads                                             128  thrpt         122076.027                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              1.779                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:dTLB-stores                                            128  thrpt          67200.948                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:iTLB-load-misses                                       128  thrpt             15.523                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:iTLB-loads                                             128  thrpt            188.008                 #/op
[info] ArrayOfBigIntsBenchmark.readCirce:instructions                                           128  thrpt         701956.937                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                 128  thrpt    5     47809.112 ±     335.516  ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:CPI                                             128  thrpt              0.286                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt            958.765                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt          41832.840                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          23915.151                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt            572.459                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              5.501                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-loads                                       128  thrpt             23.581                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              5.374                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:LLC-stores                                      128  thrpt             98.466                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:branch-misses                                   128  thrpt            167.647                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:branches                                        128  thrpt          65481.579                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:cycles                                          128  thrpt          83288.343                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              1.605                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt          41945.249                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.059                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          24733.270                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.168                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              0.277                 #/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:instructions                                    128  thrpt         291467.397                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                128  thrpt    5     67602.164 ±    2569.225  ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.268                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt            316.593                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          24049.260                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt          14511.007                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt             14.263                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.868                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              4.823                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              2.860                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             48.486                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:branch-misses                                  128  thrpt            124.455                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:branches                                       128  thrpt          46593.451                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:cycles                                         128  thrpt          57024.515                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.498                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          23975.421                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.047                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt          14372.931                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.212                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.438                 #/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:instructions                                   128  thrpt         213057.966                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                     128  thrpt    5     41611.271 ±    4794.998  ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:CPI                                                 128  thrpt              0.305                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           2064.936                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          50091.234                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          34962.554                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt            132.886                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              0.947                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-loads                                           128  thrpt             15.509                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt            109.396                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:LLC-stores                                          128  thrpt            386.067                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:branch-misses                                       128  thrpt            170.308                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:branches                                            128  thrpt          62322.271                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:cycles                                              128  thrpt          91871.467                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              3.757                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          52520.346                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.152                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          35129.468                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              1.528                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              6.078                 #/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:instructions                                        128  thrpt         301336.762                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                128  thrpt    5     42025.351 ±    3867.981  ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.307                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt           1379.349                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt          42256.949                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt          29430.598                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt              5.747                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              1.171                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              6.558                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             86.302                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt            217.538                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:branch-misses                                  128  thrpt            123.832                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:branches                                       128  thrpt          51161.928                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:cycles                                         128  thrpt          86434.928                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              3.724                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt          42540.206                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.122                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt          28781.630                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.420                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              1.090                 #/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:instructions                                   128  thrpt         281542.385                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                               128  thrpt    5     55544.471 ±    5945.362  ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.321                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt            971.741                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt          27160.343                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt          19831.003                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt             12.821                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.954                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              6.098                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             44.838                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt            136.250                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt            102.661                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:branches                                      128  thrpt          36000.865                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:cycles                                        128  thrpt          67693.756                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              1.606                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt          27617.581                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.085                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt          20287.824                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.289                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.606                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:instructions                                  128  thrpt         211154.968                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5     56254.564 ±    2121.738  ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.317                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt            937.419                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt          26972.263                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt          19506.519                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt             10.892                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              1.007                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              6.473                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              6.503                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt             88.753                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt            101.411                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt          36113.583                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt          67930.272                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.962                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt          27479.709                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.075                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt          20050.428                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.328                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              1.044                 #/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt         214025.371                 #/op
[info] ArrayOfBooleansBenchmark.readCirce                                                       128  thrpt    5    408937.133 ±   99476.995  ops/s
[info] ArrayOfBooleansBenchmark.readCirce:CPI                                                   128  thrpt              0.304                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-dcache-load-misses                                 128  thrpt            151.812                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-dcache-loads                                       128  thrpt           6241.566                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-dcache-stores                                      128  thrpt           5093.323                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:L1-icache-load-misses                                 128  thrpt             19.893                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-load-misses                                       128  thrpt              0.822                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-loads                                             128  thrpt              5.502                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-store-misses                                      128  thrpt             23.115                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:LLC-stores                                            128  thrpt             47.722                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:branch-misses                                         128  thrpt             11.901                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:branches                                              128  thrpt           8328.498                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:cycles                                                128  thrpt          10383.114                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-load-misses                                      128  thrpt              1.029                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-loads                                            128  thrpt           6421.369                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-store-misses                                     128  thrpt              0.026                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:dTLB-stores                                           128  thrpt           5298.871                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:iTLB-load-misses                                      128  thrpt              0.169                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:iTLB-loads                                            128  thrpt              2.629                 #/op
[info] ArrayOfBooleansBenchmark.readCirce:instructions                                          128  thrpt          34206.762                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                 128  thrpt    5   1899703.954 ±   71534.166  ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:CPI                                             128  thrpt              0.221                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-load-misses                           128  thrpt              8.753                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-loads                                 128  thrpt           1512.050                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-dcache-stores                                128  thrpt           1180.642                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:L1-icache-load-misses                           128  thrpt              0.430                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-load-misses                                 128  thrpt              0.024                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-loads                                       128  thrpt              0.215                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-store-misses                                128  thrpt              0.027                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:LLC-stores                                      128  thrpt              1.095                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:branch-misses                                   128  thrpt              0.390                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:branches                                        128  thrpt           2213.217                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:cycles                                          128  thrpt           2019.073                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-load-misses                                128  thrpt              0.012                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-loads                                      128  thrpt           1519.775                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:dTLB-stores                                     128  thrpt           1180.507                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-load-misses                                128  thrpt              0.008                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:iTLB-loads                                      128  thrpt              0.013                 #/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:instructions                                    128  thrpt           9137.488                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                128  thrpt    5    751667.617 ±   15755.389  ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:CPI                                            128  thrpt              0.331                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                          128  thrpt             11.168                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                                128  thrpt           2053.000                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                               128  thrpt           2020.713                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                          128  thrpt              0.220                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-load-misses                                128  thrpt              0.026                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-loads                                      128  thrpt              0.132                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-store-misses                               128  thrpt              0.033                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:LLC-stores                                     128  thrpt              1.175                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:branch-misses                                  128  thrpt              2.272                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:branches                                       128  thrpt           4507.296                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:cycles                                         128  thrpt           5103.367                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                               128  thrpt              0.016                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-loads                                     128  thrpt           2063.907                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                              128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:dTLB-stores                                    128  thrpt           2006.431                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                               128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:iTLB-loads                                     128  thrpt              0.010                 #/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:instructions                                   128  thrpt          15424.955                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                               128  thrpt    5   2198702.900 ±   47049.577  ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:CPI                                           128  thrpt              0.211                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                         128  thrpt              5.283                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                               128  thrpt           1203.747                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                              128  thrpt            848.947                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                         128  thrpt              0.135                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                               128  thrpt              0.013                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-loads                                     128  thrpt              0.058                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                              128  thrpt              0.006                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:LLC-stores                                    128  thrpt              0.503                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:branch-misses                                 128  thrpt              0.129                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:branches                                      128  thrpt           2498.545                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:cycles                                        128  thrpt           1726.295                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                              128  thrpt              0.010                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                    128  thrpt           1184.263                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                             128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                   128  thrpt            834.556                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                              128  thrpt              0.007                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                    128  thrpt              0.010                 #/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:instructions                                  128  thrpt           8193.513                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson                                                    128  thrpt    5    176384.141 ±   12131.533  ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:CPI                                                128  thrpt              0.300                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                              128  thrpt            718.996                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                    128  thrpt          16541.424                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                   128  thrpt          13465.015                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                              128  thrpt              8.092                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-load-misses                                    128  thrpt              1.252                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-loads                                          128  thrpt              5.265                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-store-misses                                   128  thrpt             82.231                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:LLC-stores                                         128  thrpt            208.495                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:branch-misses                                      128  thrpt             31.099                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:branches                                           128  thrpt          12785.786                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:cycles                                             128  thrpt          21557.594                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                   128  thrpt              1.218                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-loads                                         128  thrpt          16640.754                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                  128  thrpt              0.035                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:dTLB-stores                                        128  thrpt          13953.678                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                   128  thrpt              0.095                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:iTLB-loads                                         128  thrpt              0.344                 #/op
[info] ArrayOfBooleansBenchmark.readPlayJson:instructions                                       128  thrpt          71754.297                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce                                                      128  thrpt    5    467230.250 ±   29977.672  ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:CPI                                                  128  thrpt              0.301                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                                128  thrpt             82.156                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-dcache-loads                                      128  thrpt           6229.383                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-dcache-stores                                     128  thrpt           6015.061                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:L1-icache-load-misses                                128  thrpt              1.034                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-load-misses                                      128  thrpt              0.110                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-loads                                            128  thrpt              0.621                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-store-misses                                     128  thrpt             51.165                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:LLC-stores                                           128  thrpt             75.587                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:branch-misses                                        128  thrpt              9.780                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:branches                                             128  thrpt           5292.037                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:cycles                                               128  thrpt           8105.684                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-load-misses                                     128  thrpt              1.526                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-loads                                           128  thrpt           6262.036                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-store-misses                                    128  thrpt              0.106                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:dTLB-stores                                          128  thrpt           6038.018                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:iTLB-load-misses                                     128  thrpt              0.047                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:iTLB-loads                                           128  thrpt              0.120                 #/op
[info] ArrayOfBooleansBenchmark.writeCirce:instructions                                         128  thrpt          26938.657                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                128  thrpt    5   2549017.453 ±  242012.081  ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:CPI                                            128  thrpt              0.234                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-load-misses                          128  thrpt             12.358                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-loads                                128  thrpt           1531.486                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-dcache-stores                               128  thrpt            633.399                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:L1-icache-load-misses                          128  thrpt              0.160                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-load-misses                                128  thrpt              0.031                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-loads                                      128  thrpt              0.152                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-store-misses                               128  thrpt              3.028                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:LLC-stores                                     128  thrpt              6.933                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:branch-misses                                  128  thrpt              1.341                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:branches                                       128  thrpt           1135.729                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:cycles                                         128  thrpt           1449.226                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-load-misses                               128  thrpt              0.165                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-loads                                     128  thrpt           1587.277                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-store-misses                              128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:dTLB-stores                                    128  thrpt            647.315                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-load-misses                               128  thrpt              0.006                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:iTLB-loads                                     128  thrpt              0.026                 #/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:instructions                                   128  thrpt           6196.280                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                               128  thrpt    5   1161735.748 ±  128638.919  ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:CPI                                           128  thrpt              0.249                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                         128  thrpt             12.383                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                               128  thrpt           2484.102                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                              128  thrpt           1383.028                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                         128  thrpt              0.344                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                               128  thrpt              0.031                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-loads                                     128  thrpt              0.166                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                              128  thrpt              3.078                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:LLC-stores                                    128  thrpt              6.970                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:branch-misses                                 128  thrpt              1.180                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:branches                                      128  thrpt           2882.725                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:cycles                                        128  thrpt           3207.495                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                              128  thrpt              0.192                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                    128  thrpt           2465.755                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                             128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                   128  thrpt           1368.871                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                              128  thrpt              0.005                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                    128  thrpt              0.020                 #/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:instructions                                  128  thrpt          12859.741                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5   2964380.913 ±  362268.539  ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:CPI                                          128  thrpt              0.229                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                        128  thrpt             11.706                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                              128  thrpt            329.041                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                             128  thrpt           1133.488                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                        128  thrpt              0.116                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                              128  thrpt              0.008                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                    128  thrpt              0.043                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                             128  thrpt              3.343                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                   128  thrpt              6.923                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:branch-misses                                128  thrpt              1.162                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:branches                                     128  thrpt           1370.870                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:cycles                                       128  thrpt           1253.317                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                             128  thrpt              0.175                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                   128  thrpt            326.478                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                            128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                  128  thrpt           1147.889                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                             128  thrpt              0.005                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                   128  thrpt              0.011                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:instructions                                 128  thrpt           5468.877                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   3188525.995 ±    6420.269  ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                  128  thrpt              0.221                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                128  thrpt              0.289                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                      128  thrpt            307.305                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                     128  thrpt           1136.652                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                128  thrpt              0.040                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                      128  thrpt              0.005                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                            128  thrpt              0.014                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                     128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                           128  thrpt              0.002                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                        128  thrpt              1.035                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                             128  thrpt           1374.186                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                               128  thrpt           1205.016                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                     128  thrpt              0.003                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                           128  thrpt            301.877                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                    128  thrpt              0.001                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                          128  thrpt           1139.272                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                     128  thrpt              0.004                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                           128  thrpt              0.015                 #/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                         128  thrpt           5444.803                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson                                                   128  thrpt    5   1035679.382 ±   10805.082  ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:CPI                                               128  thrpt              0.245                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                             128  thrpt             27.474                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                   128  thrpt           3402.702                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                  128  thrpt           2148.668                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                             128  thrpt              0.244                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-load-misses                                   128  thrpt              0.012                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-loads                                         128  thrpt              0.122                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-store-misses                                  128  thrpt              7.042                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:LLC-stores                                        128  thrpt             14.098                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:branch-misses                                     128  thrpt              2.778                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:branches                                          128  thrpt           2747.626                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:cycles                                            128  thrpt           3715.705                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                  128  thrpt              0.329                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-loads                                        128  thrpt           3457.617                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                 128  thrpt              0.005                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:dTLB-stores                                       128  thrpt           2135.289                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                  128  thrpt              0.011                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:iTLB-loads                                        128  thrpt              0.021                 #/op
[info] ArrayOfBooleansBenchmark.writePlayJson:instructions                                      128  thrpt          15148.981                 #/op
[info] ArrayOfBytesBenchmark.readCirce                                                          128  thrpt    5    211750.031 ±   23381.799  ops/s
[info] ArrayOfBytesBenchmark.readCirce:CPI                                                      128  thrpt              0.287                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            380.163                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          10752.499                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-dcache-stores                                         128  thrpt           8791.526                 #/op
[info] ArrayOfBytesBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt             35.264                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-load-misses                                          128  thrpt              1.859                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-loads                                                128  thrpt              8.998                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-store-misses                                         128  thrpt             11.884                 #/op
[info] ArrayOfBytesBenchmark.readCirce:LLC-stores                                               128  thrpt             50.160                 #/op
[info] ArrayOfBytesBenchmark.readCirce:branch-misses                                            128  thrpt             18.591                 #/op
[info] ArrayOfBytesBenchmark.readCirce:branches                                                 128  thrpt          15317.182                 #/op
[info] ArrayOfBytesBenchmark.readCirce:cycles                                                   128  thrpt          19980.109                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              1.235                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-loads                                               128  thrpt          10392.043                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.046                 #/op
[info] ArrayOfBytesBenchmark.readCirce:dTLB-stores                                              128  thrpt           8674.065                 #/op
[info] ArrayOfBytesBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.302                 #/op
[info] ArrayOfBytesBenchmark.readCirce:iTLB-loads                                               128  thrpt              4.145                 #/op
[info] ArrayOfBytesBenchmark.readCirce:instructions                                             128  thrpt          69574.325                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala                                                   128  thrpt    5    434442.896 ±   51713.302  ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:CPI                                               128  thrpt              0.291                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt             19.933                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt           5265.294                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           4812.098                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              1.315                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.018                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              0.271                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              0.717                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:LLC-stores                                        128  thrpt              3.177                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:branch-misses                                     128  thrpt              3.168                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:branches                                          128  thrpt           7137.018                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:cycles                                            128  thrpt           8267.890                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.062                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt           5335.561                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.007                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           4819.919                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.038                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.134                 #/op
[info] ArrayOfBytesBenchmark.readJacksonScala:instructions                                      128  thrpt          28411.024                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                  128  thrpt    5   1241131.350 ±   17272.694  ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.209                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt              5.661                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           1188.850                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           1258.540                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.441                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.030                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.122                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              0.009                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt              0.697                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              3.156                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:branches                                         128  thrpt           3670.201                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:cycles                                           128  thrpt           2911.194                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.008                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           1190.190                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           1246.951                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.011                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.025                 #/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:instructions                                     128  thrpt          13900.399                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson                                                       128  thrpt    5    127347.250 ±   10855.513  ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:CPI                                                   128  thrpt              0.297                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1126.626                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          24040.965                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          18871.554                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt             34.594                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              1.665                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-loads                                             128  thrpt              7.269                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             60.044                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:LLC-stores                                            128  thrpt            203.331                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:branch-misses                                         128  thrpt             40.434                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:branches                                              128  thrpt          17211.012                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:cycles                                                128  thrpt          29494.143                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              2.827                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          24451.629                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.040                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          19614.168                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.260                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.420                 #/op
[info] ArrayOfBytesBenchmark.readPlayJson:instructions                                          128  thrpt          99450.804                 #/op
[info] ArrayOfBytesBenchmark.writeCirce                                                         128  thrpt    5    353306.065 ±   34032.660  ops/s
[info] ArrayOfBytesBenchmark.writeCirce:CPI                                                     128  thrpt              0.285                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            133.985                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt           6979.406                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           6351.564                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              0.833                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.097                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-loads                                               128  thrpt              0.690                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-store-misses                                        128  thrpt             36.242                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:LLC-stores                                              128  thrpt             69.101                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:branch-misses                                           128  thrpt             10.750                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:branches                                                128  thrpt           7090.212                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:cycles                                                  128  thrpt          10553.846                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              0.856                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-loads                                              128  thrpt           7203.250                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.016                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:dTLB-stores                                             128  thrpt           6378.513                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.050                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.160                 #/op
[info] ArrayOfBytesBenchmark.writeCirce:instructions                                            128  thrpt          37083.448                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                  128  thrpt    5   2258263.769 ±  191309.131  ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.234                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt              7.156                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt            548.208                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt            909.845                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.253                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.010                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.076                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              0.833                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt              2.333                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              1.178                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:branches                                         128  thrpt           1645.480                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:cycles                                           128  thrpt           1636.037                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.095                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt            543.766                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt            905.770                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.003                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.004                 #/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:instructions                                     128  thrpt           6998.780                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                 128  thrpt    5   3261512.759 ±  166243.182  ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.219                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt              7.128                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt            585.737                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt            736.857                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.041                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.006                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.030                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              0.681                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt              2.226                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              0.201                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:branches                                        128  thrpt           1484.087                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:cycles                                          128  thrpt           1180.788                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.086                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt            595.030                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt            729.291                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:instructions                                    128  thrpt           5400.344                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3397596.373 ±   23633.272  ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.216                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.382                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt            429.195                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt            699.869                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.032                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.009                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.004                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.012                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              0.054                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           1463.385                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           1113.780                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt            427.883                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt            701.877                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.001                 #/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt           5167.892                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson                                                      128  thrpt    5     56990.591 ±    4634.018  ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:CPI                                                  128  thrpt              0.307                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt           1137.486                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          40866.875                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt          26079.464                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              8.375                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              3.205                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-loads                                            128  thrpt             11.652                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt              8.718                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:LLC-stores                                           128  thrpt             98.237                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:branch-misses                                        128  thrpt             90.731                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:branches                                             128  thrpt          44439.041                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:cycles                                               128  thrpt          67410.552                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              1.729                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          39098.511                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.075                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:dTLB-stores                                          128  thrpt          25272.452                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.399                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.736                 #/op
[info] ArrayOfBytesBenchmark.writePlayJson:instructions                                         128  thrpt         219839.998                 #/op
[info] ArrayOfCharsBenchmark.readCirce                                                          128  thrpt    5    311101.770 ±   23832.553  ops/s
[info] ArrayOfCharsBenchmark.readCirce:CPI                                                      128  thrpt              0.266                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            272.741                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt           8483.759                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt           7137.800                 #/op
[info] ArrayOfCharsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt              1.653                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              0.349                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-loads                                                128  thrpt              1.729                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-store-misses                                         128  thrpt             16.878                 #/op
[info] ArrayOfCharsBenchmark.readCirce:LLC-stores                                               128  thrpt             53.321                 #/op
[info] ArrayOfCharsBenchmark.readCirce:branch-misses                                            128  thrpt              9.063                 #/op
[info] ArrayOfCharsBenchmark.readCirce:branches                                                 128  thrpt           9577.214                 #/op
[info] ArrayOfCharsBenchmark.readCirce:cycles                                                   128  thrpt          11993.915                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              0.716                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-loads                                               128  thrpt           8175.364                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.042                 #/op
[info] ArrayOfCharsBenchmark.readCirce:dTLB-stores                                              128  thrpt           6870.753                 #/op
[info] ArrayOfCharsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.101                 #/op
[info] ArrayOfCharsBenchmark.readCirce:iTLB-loads                                               128  thrpt              0.155                 #/op
[info] ArrayOfCharsBenchmark.readCirce:instructions                                             128  thrpt          45158.070                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala                                                   128  thrpt    5    692087.186 ±    4023.430  ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.249                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt             65.307                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt           4969.334                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           3033.463                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              0.547                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.160                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              0.475                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              0.917                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt              8.534                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:branch-misses                                     128  thrpt              3.477                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:branches                                          128  thrpt           5415.473                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:cycles                                            128  thrpt           5490.915                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.070                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt           5101.641                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.003                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           3048.564                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.021                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.008                 #/op
[info] ArrayOfCharsBenchmark.readJacksonScala:instructions                                      128  thrpt          22095.267                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                  128  thrpt    5   2795340.188 ±  257973.733  ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.204                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt              9.293                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt            877.757                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt            475.755                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.120                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.019                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.075                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              0.035                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt              1.927                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              0.327                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:branches                                         128  thrpt           1849.360                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:cycles                                           128  thrpt           1329.013                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.012                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt            904.720                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt            481.843                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.002                 #/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:instructions                                     128  thrpt           6513.079                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson                                                       128  thrpt    5    136438.619 ±   10846.619  ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.305                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1113.280                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          21902.842                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          17107.183                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt              8.086                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              1.691                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-loads                                             128  thrpt              6.246                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             89.004                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            254.107                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:branch-misses                                         128  thrpt             36.984                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:branches                                              128  thrpt          15614.197                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:cycles                                                128  thrpt          27798.861                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              2.489                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          21467.650                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.041                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          17050.121                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.142                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.135                 #/op
[info] ArrayOfCharsBenchmark.readPlayJson:instructions                                          128  thrpt          91261.179                 #/op
[info] ArrayOfCharsBenchmark.writeCirce                                                         128  thrpt    5    304805.937 ±   26236.159  ops/s
[info] ArrayOfCharsBenchmark.writeCirce:CPI                                                     128  thrpt              0.299                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            196.112                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt           7142.886                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           6893.649                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              2.899                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.487                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-loads                                               128  thrpt              1.753                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt             61.762                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:LLC-stores                                              128  thrpt            110.484                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:branch-misses                                           128  thrpt              9.552                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:branches                                                128  thrpt           8577.012                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:cycles                                                  128  thrpt          12094.718                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              1.074                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-loads                                              128  thrpt           7177.773                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.016                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:dTLB-stores                                             128  thrpt           7159.658                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.062                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.178                 #/op
[info] ArrayOfCharsBenchmark.writeCirce:instructions                                            128  thrpt          40424.622                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                  128  thrpt    5   2094228.725 ±  265802.078  ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.211                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt              8.908                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt            558.194                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt            893.711                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.299                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.010                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.068                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              1.449                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt              3.695                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              1.094                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:branches                                         128  thrpt           2322.184                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:cycles                                           128  thrpt           1781.144                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.129                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt            550.977                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt            873.967                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.007                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.016                 #/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:instructions                                     128  thrpt           8455.473                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                 128  thrpt    5   2709526.575 ±  267476.517  ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.221                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt              9.132                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt            723.594                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           1103.776                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.059                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.009                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.055                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              1.465                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt              3.734                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              1.332                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:branches                                        128  thrpt           1549.502                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           1377.392                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.125                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt            735.530                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           1116.890                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.007                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.011                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:instructions                                    128  thrpt           6228.557                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   2941085.587 ±   11687.056  ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.209                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.205                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt            689.473                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           1064.993                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.051                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.007                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.019                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.010                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.053                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           1556.764                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           1289.737                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt            684.680                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt             ≈ 10⁻⁵                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           1059.486                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.001                 #/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt           6177.858                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson                                                      128  thrpt    5    795866.358 ±   33037.878  ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.345                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt            149.685                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt           2011.130                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt           2846.684                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              0.730                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.246                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              0.691                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             38.291                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:LLC-stores                                           128  thrpt             66.676                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:branch-misses                                        128  thrpt              1.353                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:branches                                             128  thrpt           2699.415                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:cycles                                               128  thrpt           4840.321                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              0.308                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt           2002.133                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.008                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt           2840.212                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.023                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.025                 #/op
[info] ArrayOfCharsBenchmark.writePlayJson:instructions                                         128  thrpt          14031.436                 #/op
[info] ArrayOfDoublesBenchmark.readCirce                                                        128  thrpt    5     28593.370 ±    1927.217  ops/s
[info] ArrayOfDoublesBenchmark.readCirce:CPI                                                    128  thrpt              0.339                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           1976.515                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-dcache-loads                                        128  thrpt          63285.826                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-dcache-stores                                       128  thrpt          36789.546                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt            288.866                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-load-misses                                        128  thrpt              3.245                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-loads                                              128  thrpt             35.964                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-store-misses                                       128  thrpt             71.678                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:LLC-stores                                             128  thrpt            267.073                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:branch-misses                                          128  thrpt            324.336                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:branches                                               128  thrpt          91374.790                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:cycles                                                 128  thrpt         137502.101                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-load-misses                                       128  thrpt              4.318                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-loads                                             128  thrpt          63602.443                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.133                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:dTLB-stores                                            128  thrpt          38258.239                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              0.666                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:iTLB-loads                                             128  thrpt              6.386                 #/op
[info] ArrayOfDoublesBenchmark.readCirce:instructions                                           128  thrpt         405724.450                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                  128  thrpt    5     99183.501 ±    8102.859  ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:CPI                                              128  thrpt              0.349                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-load-misses                            128  thrpt            448.423                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-loads                                  128  thrpt          21374.885                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-dcache-stores                                 128  thrpt          13259.586                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:L1-icache-load-misses                            128  thrpt            108.251                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-load-misses                                  128  thrpt              6.627                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-loads                                        128  thrpt             53.689                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-store-misses                                 128  thrpt             15.057                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:LLC-stores                                       128  thrpt             52.843                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:branch-misses                                    128  thrpt             88.555                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:branches                                         128  thrpt          33267.925                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:cycles                                           128  thrpt          49740.516                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-load-misses                                 128  thrpt              3.891                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-loads                                       128  thrpt          21185.939                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-store-misses                                128  thrpt              0.191                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:dTLB-stores                                      128  thrpt          12862.253                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-load-misses                                 128  thrpt              1.125                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:iTLB-loads                                       128  thrpt             17.340                 #/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:instructions                                     128  thrpt         142344.336                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                 128  thrpt    5     77181.720 ±    7682.083  ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:CPI                                             128  thrpt              0.363                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt           1323.479                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt          44819.104                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          28452.384                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt            723.886                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt             19.614                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-loads                                       128  thrpt            167.975                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt             37.178                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:LLC-stores                                      128  thrpt            108.651                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:branch-misses                                   128  thrpt            188.477                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:branches                                        128  thrpt          54845.246                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:cycles                                          128  thrpt          90604.484                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt             10.421                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt          45496.031                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.674                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          29051.627                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              3.413                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt             75.918                 #/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:instructions                                    128  thrpt         249326.943                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                128  thrpt    5    131887.541 ±   43486.113  ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.361                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt            473.313                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          19521.248                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt          10287.393                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt            141.731                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt             11.338                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt             68.437                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt             15.904                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             41.280                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:branch-misses                                  128  thrpt             82.532                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:branches                                       128  thrpt          26147.229                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:cycles                                         128  thrpt          43235.461                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              4.819                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          19603.288                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.338                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt          10174.471                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              1.433                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt             16.263                 #/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:instructions                                   128  thrpt         119763.807                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson                                                     128  thrpt    5     51207.629 ±    2502.459  ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:CPI                                                 128  thrpt              0.287                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           1665.058                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          40712.553                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          35566.590                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt            159.513                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              2.097                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-loads                                           128  thrpt             11.514                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             71.341                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:LLC-stores                                          128  thrpt            263.802                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:branch-misses                                       128  thrpt            107.223                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:branches                                            128  thrpt          51592.508                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:cycles                                              128  thrpt          74281.945                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              3.991                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          39577.759                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.106                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          34194.133                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.345                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              0.559                 #/op
[info] ArrayOfDoublesBenchmark.readPlayJson:instructions                                        128  thrpt         258532.538                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce                                                       128  thrpt    5     43431.553 ±    4053.042  ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:CPI                                                   128  thrpt              0.413                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt           1321.200                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          59311.967                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt          31149.384                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt            774.195                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-load-misses                                       128  thrpt             11.565                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-loads                                             128  thrpt            147.715                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-store-misses                                      128  thrpt            183.983                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:LLC-stores                                            128  thrpt            303.447                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:branch-misses                                         128  thrpt            198.909                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:branches                                              128  thrpt          57796.023                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:cycles                                                128  thrpt         126794.897                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt             10.719                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-loads                                            128  thrpt          61033.784                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              0.924                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:dTLB-stores                                           128  thrpt          31933.628                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              3.987                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:iTLB-loads                                            128  thrpt             66.678                 #/op
[info] ArrayOfDoublesBenchmark.writeCirce:instructions                                          128  thrpt         307124.367                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                128  thrpt    5     42094.180 ±    2485.878  ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.399                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt           1164.596                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt          56225.177                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt          29748.111                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt            521.561                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt             10.712                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt            161.253                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             34.779                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt             98.155                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:branch-misses                                  128  thrpt            226.320                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:branches                                       128  thrpt          55445.445                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:cycles                                         128  thrpt         119879.124                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt             12.096                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt          56147.948                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.736                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt          28969.874                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              5.356                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt             57.672                 #/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:instructions                                   128  thrpt         300278.171                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                               128  thrpt    5     50168.478 ±    8092.022  ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.416                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt            711.514                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt          44574.507                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt          22663.491                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt            315.660                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              7.815                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt             96.082                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             28.315                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt             75.082                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt            147.697                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:branches                                      128  thrpt          41302.409                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:cycles                                        128  thrpt          96753.248                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              7.486                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt          43116.473                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.476                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt          22453.319                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              3.064                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt             30.871                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:instructions                                  128  thrpt         232430.246                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5     49501.917 ±    3586.750  ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.424                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt            931.292                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt          49900.297                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt          24601.398                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt            502.504                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt             12.072                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt            146.365                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt             18.193                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt             76.811                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt            205.666                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt          45986.798                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt         108179.351                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt             10.442                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt          49367.297                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.624                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt          24669.831                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              4.095                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt             43.135                 #/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt         255386.209                 #/op
[info] ArrayOfDurationsBenchmark.readCirce                                                      128  thrpt    5     16907.944 ±    3253.610  ops/s
[info] ArrayOfDurationsBenchmark.readCirce:CPI                                                  128  thrpt              0.400                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt           5258.816                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-dcache-loads                                      128  thrpt         229132.731                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-dcache-stores                                     128  thrpt         105970.033                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:L1-icache-load-misses                                128  thrpt           2813.516                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-load-misses                                      128  thrpt            105.716                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-loads                                            128  thrpt            738.570                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-store-misses                                     128  thrpt            262.468                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:LLC-stores                                           128  thrpt            760.910                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:branch-misses                                        128  thrpt            819.810                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:branches                                             128  thrpt         189011.940                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:cycles                                               128  thrpt         361637.888                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-load-misses                                     128  thrpt             52.332                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-loads                                           128  thrpt         232276.681                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              3.950                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:dTLB-stores                                          128  thrpt         106000.204                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:iTLB-load-misses                                     128  thrpt             15.058                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:iTLB-loads                                           128  thrpt            182.124                 #/op
[info] ArrayOfDurationsBenchmark.readCirce:instructions                                         128  thrpt         904731.848                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala                                               128  thrpt    5     15638.128 ±    5539.606  ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:CPI                                           128  thrpt              0.392                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt           4766.812                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt         238447.860                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt         109276.186                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt           3158.122                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt             83.180                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-loads                                     128  thrpt            544.456                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt            113.900                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:LLC-stores                                    128  thrpt            419.326                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:branch-misses                                 128  thrpt            575.792                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:branches                                      128  thrpt         190054.666                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:cycles                                        128  thrpt         356040.100                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt             40.060                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt         226941.802                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              2.767                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt         106244.650                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt             11.765                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt            195.724                 #/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:instructions                                  128  thrpt         908506.358                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                              128  thrpt    5    149354.004 ±    1870.077  ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.261                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt             73.738                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt          13117.729                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt           6226.730                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              5.011                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.343                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              1.508                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              2.654                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             13.793                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:branch-misses                                128  thrpt             43.025                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:branches                                     128  thrpt          22873.165                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:cycles                                       128  thrpt          24285.404                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.464                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt          13060.064                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.017                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt           6186.574                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.103                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.344                 #/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:instructions                                 128  thrpt          92937.788                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson                                                   128  thrpt    5     15601.929 ±    4097.893  ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:CPI                                               128  thrpt              0.379                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           4735.344                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt         214389.379                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt         104289.598                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt           2024.012                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt             52.476                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-loads                                         128  thrpt            434.801                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             85.172                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:LLC-stores                                        128  thrpt            567.016                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:branch-misses                                     128  thrpt            693.976                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:branches                                          128  thrpt         170743.529                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:cycles                                            128  thrpt         309616.405                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt             28.721                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-loads                                        128  thrpt         214403.941                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              1.882                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:dTLB-stores                                       128  thrpt         102775.215                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt             15.469                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:iTLB-loads                                        128  thrpt            161.079                 #/op
[info] ArrayOfDurationsBenchmark.readPlayJson:instructions                                      128  thrpt         817903.185                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce                                                     128  thrpt    5     72136.857 ±    5120.175  ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:CPI                                                 128  thrpt              0.266                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt            835.039                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt          22352.189                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt          15365.649                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt             11.089                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.778                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-loads                                           128  thrpt              5.148                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-store-misses                                    128  thrpt            199.631                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:LLC-stores                                          128  thrpt            337.242                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:branch-misses                                       128  thrpt            106.702                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:branches                                            128  thrpt          49829.926                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:cycles                                              128  thrpt          52867.410                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              3.456                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-loads                                          128  thrpt          22950.544                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.838                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:dTLB-stores                                         128  thrpt          15678.418                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.240                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.237                 #/op
[info] ArrayOfDurationsBenchmark.writeCirce:instructions                                        128  thrpt         198584.662                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                              128  thrpt    5    106216.874 ±    9833.570  ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.250                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt            386.525                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt          16773.052                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           9911.896                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              1.918                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.600                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              2.656                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt             72.627                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt            134.381                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:branch-misses                                128  thrpt             59.045                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:branches                                     128  thrpt          27957.864                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:cycles                                       128  thrpt          34874.534                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              1.545                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt          16877.821                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.037                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           9841.228                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.169                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.292                 #/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:instructions                                 128  thrpt         139769.265                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                             128  thrpt    5    233293.792 ±   27671.125  ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.244                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             43.107                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           8085.985                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           5713.633                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              3.222                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.213                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.810                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt             35.539                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt             43.825                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:branch-misses                               128  thrpt             22.537                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:branches                                    128  thrpt          11099.218                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:cycles                                      128  thrpt          15692.700                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.751                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           8029.531                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.020                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           5655.394                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.015                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.176                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:instructions                                128  thrpt          64366.567                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    281329.886 ±     567.377  ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.237                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              4.073                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           5374.404                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           4935.080                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.293                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.026                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.109                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.002                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.021                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt             22.717                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt          10713.874                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt          13613.277                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.011                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           5351.460                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.004                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           4918.490                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.050                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.065                 #/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          57397.565                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson                                                  128  thrpt    5     96734.616 ±   22449.529  ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:CPI                                              128  thrpt              0.317                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt           1143.344                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt          26457.570                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt          14532.975                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt             62.795                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt             15.546                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-loads                                        128  thrpt             84.550                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt            102.484                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:LLC-stores                                       128  thrpt            211.441                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:branch-misses                                    128  thrpt            140.942                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:branches                                         128  thrpt          35309.585                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:cycles                                           128  thrpt          55158.086                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              6.133                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-loads                                       128  thrpt          25824.268                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.397                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:dTLB-stores                                      128  thrpt          13859.393                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.562                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              6.573                 #/op
[info] ArrayOfDurationsBenchmark.writePlayJson:instructions                                     128  thrpt         174025.493                 #/op
[info] ArrayOfEnumsBenchmark.readCirce                                                          128  thrpt    5    128908.087 ±   15002.377  ops/s
[info] ArrayOfEnumsBenchmark.readCirce:CPI                                                      128  thrpt              0.291                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            343.239                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          22232.819                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt           9285.321                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt              6.038                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              0.530                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-loads                                                128  thrpt              3.019                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-store-misses                                         128  thrpt             44.855                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:LLC-stores                                               128  thrpt             78.515                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:branch-misses                                            128  thrpt             16.847                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:branches                                                 128  thrpt          23386.406                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:cycles                                                   128  thrpt          29623.050                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              1.777                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-loads                                               128  thrpt          22415.123                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.037                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:dTLB-stores                                              128  thrpt           9224.205                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.094                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:iTLB-loads                                               128  thrpt              0.149                 #/op
[info] ArrayOfEnumsBenchmark.readCirce:instructions                                             128  thrpt         101950.446                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                   128  thrpt    5    159084.723 ±    4452.609  ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.274                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt            163.768                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          19613.649                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           7631.546                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt            171.481                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.154                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              1.844                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              1.703                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             16.751                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             12.727                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:branches                                          128  thrpt          19929.004                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:cycles                                            128  thrpt          23692.853                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              1.677                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          19912.170                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.017                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           7693.398                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.159                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.413                 #/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:instructions                                      128  thrpt          86556.071                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                  128  thrpt    5    228308.326 ±    5594.057  ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.263                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             21.248                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt          15251.355                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           2605.137                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              4.685                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.152                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.700                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              1.198                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt              4.022                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              9.259                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:branches                                         128  thrpt          16333.496                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:cycles                                           128  thrpt          16674.881                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.248                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt          15206.345                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.006                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           2627.533                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.056                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.032                 #/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:instructions                                     128  thrpt          63356.577                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson                                                       128  thrpt    5     80818.063 ±    8287.524  ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.306                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1165.074                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          37606.293                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          23601.269                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt             15.583                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              0.614                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-loads                                             128  thrpt              3.553                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             94.048                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            245.132                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:branch-misses                                         128  thrpt             34.342                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:branches                                              128  thrpt          27567.248                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:cycles                                                128  thrpt          46308.991                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              2.561                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          39568.383                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.085                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          23616.088                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.424                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.647                 #/op
[info] ArrayOfEnumsBenchmark.readPlayJson:instructions                                          128  thrpt         151542.660                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce                                                         128  thrpt    5    229833.093 ±    9931.756  ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:CPI                                                     128  thrpt              0.278                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            163.547                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt           8675.089                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           7020.579                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              1.025                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.339                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-loads                                               128  thrpt              1.240                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt            104.082                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:LLC-stores                                              128  thrpt            142.707                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:branch-misses                                           128  thrpt             11.575                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:branches                                                128  thrpt          16536.186                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:cycles                                                  128  thrpt          16636.404                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              1.974                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-loads                                              128  thrpt           8850.067                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.064                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:dTLB-stores                                             128  thrpt           6947.658                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.047                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.124                 #/op
[info] ArrayOfEnumsBenchmark.writeCirce:instructions                                            128  thrpt          59848.156                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                  128  thrpt    5    748277.868 ±   75777.273  ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.240                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             19.989                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           2983.887                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           1773.505                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.156                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.025                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.109                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt             12.335                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt             17.383                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              1.501                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:branches                                         128  thrpt           5149.844                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:cycles                                           128  thrpt           4874.430                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.301                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           2971.203                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           1719.962                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.007                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.015                 #/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:instructions                                     128  thrpt          20289.854                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                 128  thrpt    5    684644.223 ±    5117.402  ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.232                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             20.789                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt           3155.830                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           1946.397                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.339                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.015                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.132                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              9.584                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             17.909                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              1.297                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:branches                                        128  thrpt           6053.942                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           5612.187                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.312                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt           3124.528                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.006                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           1884.431                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.018                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.040                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:instructions                                    128  thrpt          24186.655                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    682422.120 ±    1012.923  ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.228                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              1.556                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt           3337.976                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           2137.488                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.308                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.011                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.054                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.016                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.296                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           5955.049                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           5574.645                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.011                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt           3353.986                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           2139.216                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.002                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.007                 #/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt          24419.355                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson                                                      128  thrpt    5    620975.650 ±   55660.599  ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.262                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt             62.219                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt           3656.629                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt           2602.676                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              0.382                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.055                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              0.325                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             18.355                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:LLC-stores                                           128  thrpt             34.550                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:branch-misses                                        128  thrpt              2.884                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:branches                                             128  thrpt           5619.281                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:cycles                                               128  thrpt           6003.823                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              0.461                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt           3727.844                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.006                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt           2598.353                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.031                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.038                 #/op
[info] ArrayOfEnumsBenchmark.writePlayJson:instructions                                         128  thrpt          22913.751                 #/op
[info] ArrayOfFloatsBenchmark.readCirce                                                         128  thrpt    5     40555.837 ±    7516.872  ops/s
[info] ArrayOfFloatsBenchmark.readCirce:CPI                                                     128  thrpt              0.352                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-dcache-load-misses                                   128  thrpt           1658.581                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-dcache-loads                                         128  thrpt          51622.437                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-dcache-stores                                        128  thrpt          30394.878                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:L1-icache-load-misses                                   128  thrpt            688.470                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-load-misses                                         128  thrpt              8.524                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-loads                                               128  thrpt             61.309                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-store-misses                                        128  thrpt             64.168                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:LLC-stores                                              128  thrpt            201.857                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:branch-misses                                           128  thrpt            166.211                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:branches                                                128  thrpt          66807.914                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:cycles                                                  128  thrpt         107247.018                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-load-misses                                        128  thrpt              6.757                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-loads                                              128  thrpt          50108.191                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-store-misses                                       128  thrpt              0.506                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:dTLB-stores                                             128  thrpt          30235.773                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:iTLB-load-misses                                        128  thrpt              1.964                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:iTLB-loads                                              128  thrpt             27.455                 #/op
[info] ArrayOfFloatsBenchmark.readCirce:instructions                                            128  thrpt         304273.346                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                   128  thrpt    5    283245.927 ±    2741.865  ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:CPI                                               128  thrpt              0.237                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-load-misses                             128  thrpt             30.817                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-loads                                   128  thrpt           5238.858                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-dcache-stores                                  128  thrpt           3177.080                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:L1-icache-load-misses                             128  thrpt              1.749                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-load-misses                                   128  thrpt              0.099                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-loads                                         128  thrpt              0.425                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-store-misses                                  128  thrpt              2.192                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:LLC-stores                                        128  thrpt              9.196                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:branch-misses                                     128  thrpt             29.067                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:branches                                          128  thrpt          14404.828                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:cycles                                            128  thrpt          12644.588                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-load-misses                                  128  thrpt              0.222                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-loads                                        128  thrpt           5271.615                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-store-misses                                 128  thrpt              0.010                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:dTLB-stores                                       128  thrpt           3172.228                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-load-misses                                  128  thrpt              0.024                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:iTLB-loads                                        128  thrpt              0.057                 #/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:instructions                                      128  thrpt          53443.913                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                  128  thrpt    5    134692.330 ±   14407.627  ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:CPI                                              128  thrpt              0.268                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-load-misses                            128  thrpt            246.668                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-loads                                  128  thrpt          13462.925                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-dcache-stores                                 128  thrpt          10753.057                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:L1-icache-load-misses                            128  thrpt             17.953                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-load-misses                                  128  thrpt              0.541                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-loads                                        128  thrpt              4.308                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-store-misses                                 128  thrpt              2.203                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:LLC-stores                                       128  thrpt             24.864                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:branch-misses                                    128  thrpt             32.215                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:branches                                         128  thrpt          25887.492                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:cycles                                           128  thrpt          28099.750                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-load-misses                                 128  thrpt              0.300                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-loads                                       128  thrpt          13850.569                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-store-misses                                128  thrpt              0.020                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:dTLB-stores                                      128  thrpt          11062.180                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:iTLB-load-misses                                 128  thrpt              0.076                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:iTLB-loads                                       128  thrpt              0.144                 #/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:instructions                                     128  thrpt         104789.884                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                 128  thrpt    5    554500.981 ±    5060.916  ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:CPI                                             128  thrpt              0.225                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-load-misses                           128  thrpt             18.248                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-loads                                 128  thrpt           3214.724                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-dcache-stores                                128  thrpt           2448.026                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:L1-icache-load-misses                           128  thrpt              0.629                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-load-misses                                 128  thrpt              0.022                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-loads                                       128  thrpt              0.139                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-store-misses                                128  thrpt              0.775                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:LLC-stores                                      128  thrpt              3.211                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:branch-misses                                   128  thrpt              5.687                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:branches                                        128  thrpt           7568.297                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:cycles                                          128  thrpt           6876.151                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-load-misses                                128  thrpt              0.187                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-loads                                      128  thrpt           3124.121                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-store-misses                               128  thrpt              0.005                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:dTLB-stores                                     128  thrpt           2362.850                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-load-misses                                128  thrpt              0.034                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:iTLB-loads                                      128  thrpt              0.188                 #/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:instructions                                    128  thrpt          30556.839                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson                                                      128  thrpt    5     53901.554 ±    4009.609  ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:CPI                                                  128  thrpt              0.305                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-load-misses                                128  thrpt           1529.950                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-loads                                      128  thrpt          37963.161                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-dcache-stores                                     128  thrpt          31621.013                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:L1-icache-load-misses                                128  thrpt            119.576                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-load-misses                                      128  thrpt              4.399                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-loads                                            128  thrpt             10.437                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-store-misses                                     128  thrpt             44.638                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:LLC-stores                                           128  thrpt            210.240                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:branch-misses                                        128  thrpt            121.459                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:branches                                             128  thrpt          44613.302                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:cycles                                               128  thrpt          70931.871                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-load-misses                                     128  thrpt              3.764                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-loads                                           128  thrpt          36884.744                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-store-misses                                    128  thrpt              0.073                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:dTLB-stores                                          128  thrpt          31329.951                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:iTLB-load-misses                                     128  thrpt              0.219                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:iTLB-loads                                           128  thrpt              0.643                 #/op
[info] ArrayOfFloatsBenchmark.readPlayJson:instructions                                         128  thrpt         232680.302                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce                                                        128  thrpt    5     95001.938 ±    5779.591  ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:CPI                                                    128  thrpt              0.382                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-dcache-load-misses                                  128  thrpt            216.590                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-dcache-loads                                        128  thrpt          16847.538                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-dcache-stores                                       128  thrpt          14476.075                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:L1-icache-load-misses                                  128  thrpt              9.752                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-load-misses                                        128  thrpt              0.522                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-loads                                              128  thrpt              3.410                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-store-misses                                       128  thrpt            117.082                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:LLC-stores                                             128  thrpt            166.792                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:branch-misses                                          128  thrpt             31.466                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:branches                                               128  thrpt          19224.128                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:cycles                                                 128  thrpt          40353.675                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-load-misses                                       128  thrpt              2.243                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-loads                                             128  thrpt          17025.463                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-store-misses                                      128  thrpt              0.105                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:dTLB-stores                                            128  thrpt          14318.959                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:iTLB-load-misses                                       128  thrpt              0.224                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:iTLB-loads                                             128  thrpt              0.589                 #/op
[info] ArrayOfFloatsBenchmark.writeCirce:instructions                                           128  thrpt         105594.138                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                  128  thrpt    5    119809.819 ±    7776.625  ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:CPI                                              128  thrpt              0.370                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-load-misses                            128  thrpt            103.189                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-loads                                  128  thrpt          11907.043                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-dcache-stores                                 128  thrpt           9000.698                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:L1-icache-load-misses                            128  thrpt              1.918                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-load-misses                                  128  thrpt              0.318                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-loads                                        128  thrpt              1.551                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-store-misses                                 128  thrpt              6.604                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:LLC-stores                                       128  thrpt             20.141                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:branch-misses                                    128  thrpt             13.825                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:branches                                         128  thrpt          13513.395                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:cycles                                           128  thrpt          31474.349                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-load-misses                                 128  thrpt              1.304                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-loads                                       128  thrpt          12023.922                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-store-misses                                128  thrpt              0.333                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:dTLB-stores                                      128  thrpt           8885.720                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-load-misses                                 128  thrpt              0.135                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:iTLB-loads                                       128  thrpt              0.286                 #/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:instructions                                     128  thrpt          85174.582                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                 128  thrpt    5    103554.213 ±    9292.192  ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:CPI                                             128  thrpt              0.347                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-load-misses                           128  thrpt            103.642                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-loads                                 128  thrpt          14806.644                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-dcache-stores                                128  thrpt          10853.326                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:L1-icache-load-misses                           128  thrpt              4.528                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-load-misses                                 128  thrpt              0.320                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-loads                                       128  thrpt              1.546                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-store-misses                                128  thrpt              6.530                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:LLC-stores                                      128  thrpt             19.795                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:branch-misses                                   128  thrpt             30.885                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:branches                                        128  thrpt          18184.465                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:cycles                                          128  thrpt          36154.452                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-load-misses                                128  thrpt              0.359                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-loads                                      128  thrpt          14808.601                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-store-misses                               128  thrpt              0.032                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:dTLB-stores                                     128  thrpt          10700.820                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-load-misses                                128  thrpt              0.166                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:iTLB-loads                                      128  thrpt              0.531                 #/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:instructions                                    128  thrpt         104073.406                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                128  thrpt    5    120214.998 ±    7213.144  ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:CPI                                            128  thrpt              0.366                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-load-misses                          128  thrpt            100.025                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-loads                                128  thrpt          12128.596                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-dcache-stores                               128  thrpt           8253.554                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:L1-icache-load-misses                          128  thrpt              2.374                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-load-misses                                128  thrpt              0.185                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-loads                                      128  thrpt              1.683                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-store-misses                               128  thrpt              6.281                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:LLC-stores                                     128  thrpt             19.849                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:branch-misses                                  128  thrpt             13.722                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:branches                                       128  thrpt          13494.620                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:cycles                                         128  thrpt          31222.260                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-load-misses                               128  thrpt              1.448                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-loads                                     128  thrpt          12016.909                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-store-misses                              128  thrpt              0.240                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:dTLB-stores                                    128  thrpt           7985.920                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-load-misses                               128  thrpt              0.040                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:iTLB-loads                                     128  thrpt              0.202                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:instructions                                   128  thrpt          85341.067                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    123056.376 ±    1355.695  ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:CPI                                    128  thrpt              0.369                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  128  thrpt             84.066                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        128  thrpt          12138.259                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       128  thrpt           8200.250                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  128  thrpt              2.206                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        128  thrpt              0.408                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              128  thrpt              1.017                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       128  thrpt              0.265                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             128  thrpt              5.469                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branch-misses                          128  thrpt             15.955                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:branches                               128  thrpt          13401.256                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:cycles                                 128  thrpt          31419.364                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       128  thrpt              1.215                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             128  thrpt          11993.985                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      128  thrpt              0.351                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            128  thrpt           8112.249                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       128  thrpt              0.029                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             128  thrpt              0.048                 #/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:instructions                           128  thrpt          85191.401                 #/op
[info] ArrayOfInstantsBenchmark.readCirce                                                       128  thrpt    5     13222.592 ±    1577.756  ops/s
[info] ArrayOfInstantsBenchmark.readCirce:CPI                                                   128  thrpt              0.379                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-dcache-load-misses                                 128  thrpt           5855.134                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-dcache-loads                                       128  thrpt         241818.903                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-dcache-stores                                      128  thrpt         116282.799                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:L1-icache-load-misses                                 128  thrpt           5216.471                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-load-misses                                       128  thrpt             65.127                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-loads                                             128  thrpt            435.115                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-store-misses                                      128  thrpt            378.207                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:LLC-stores                                            128  thrpt           1145.413                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:branch-misses                                         128  thrpt            342.804                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:branches                                              128  thrpt         194296.872                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:cycles                                                128  thrpt         359210.824                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-load-misses                                      128  thrpt             29.796                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-loads                                            128  thrpt         240944.870                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-store-misses                                     128  thrpt              2.374                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:dTLB-stores                                           128  thrpt         115492.953                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:iTLB-load-misses                                      128  thrpt             13.219                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:iTLB-loads                                            128  thrpt            127.822                 #/op
[info] ArrayOfInstantsBenchmark.readCirce:instructions                                          128  thrpt         948532.751                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                128  thrpt    5     12937.570 ±    1508.371  ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:CPI                                            128  thrpt              0.395                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-load-misses                          128  thrpt           5928.594                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-loads                                128  thrpt         249324.402                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-dcache-stores                               128  thrpt         119738.312                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:L1-icache-load-misses                          128  thrpt           6602.035                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-load-misses                                128  thrpt             57.694                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-loads                                      128  thrpt            510.688                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-store-misses                               128  thrpt            355.231                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:LLC-stores                                     128  thrpt            922.999                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:branch-misses                                  128  thrpt            461.945                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:branches                                       128  thrpt         199186.783                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:cycles                                         128  thrpt         385100.183                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-load-misses                               128  thrpt             32.132                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-loads                                     128  thrpt         251122.174                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-store-misses                              128  thrpt              2.150                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:dTLB-stores                                    128  thrpt         121128.515                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:iTLB-load-misses                               128  thrpt             15.358                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:iTLB-loads                                     128  thrpt            202.472                 #/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:instructions                                   128  thrpt         975847.730                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                               128  thrpt    5    203337.400 ±    8586.483  ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:CPI                                           128  thrpt              0.239                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-load-misses                         128  thrpt             69.759                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-loads                               128  thrpt          12137.317                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-dcache-stores                              128  thrpt           6785.955                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:L1-icache-load-misses                         128  thrpt              1.310                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-load-misses                               128  thrpt              0.071                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-loads                                     128  thrpt              0.449                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-store-misses                              128  thrpt              2.436                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:LLC-stores                                    128  thrpt             12.880                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:branch-misses                                 128  thrpt              6.460                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:branches                                      128  thrpt          15072.564                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:cycles                                        128  thrpt          16933.910                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-load-misses                              128  thrpt              0.373                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-loads                                    128  thrpt          12084.380                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-store-misses                             128  thrpt              0.014                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:dTLB-stores                                   128  thrpt           6641.248                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-load-misses                              128  thrpt              0.058                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:iTLB-loads                                    128  thrpt              0.112                 #/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:instructions                                  128  thrpt          70729.578                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson                                                    128  thrpt    5      6121.449 ±      97.401  ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:CPI                                                128  thrpt              0.323                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-load-misses                              128  thrpt           7240.883                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-loads                                    128  thrpt         445169.907                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-dcache-stores                                   128  thrpt         231261.448                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:L1-icache-load-misses                              128  thrpt           7162.521                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-load-misses                                    128  thrpt              9.783                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-loads                                          128  thrpt            289.944                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-store-misses                                   128  thrpt            162.169                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:LLC-stores                                         128  thrpt           1057.823                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:branch-misses                                      128  thrpt            199.572                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:branches                                           128  thrpt         344617.607                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:cycles                                             128  thrpt         565985.499                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-load-misses                                   128  thrpt             13.633                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-loads                                         128  thrpt         443755.109                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-store-misses                                  128  thrpt              0.705                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:dTLB-stores                                        128  thrpt         229973.313                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:iTLB-load-misses                                   128  thrpt              2.941                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:iTLB-loads                                         128  thrpt              6.844                 #/op
[info] ArrayOfInstantsBenchmark.readPlayJson:instructions                                       128  thrpt        1753804.013                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce                                                      128  thrpt    5     28555.351 ±    9724.109  ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:CPI                                                  128  thrpt              0.411                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-dcache-load-misses                                128  thrpt           4375.423                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-dcache-loads                                      128  thrpt          97242.002                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-dcache-stores                                     128  thrpt          51998.500                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:L1-icache-load-misses                                128  thrpt           1110.431                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-load-misses                                      128  thrpt             70.496                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-loads                                            128  thrpt            371.336                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-store-misses                                     128  thrpt            419.257                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:LLC-stores                                           128  thrpt            718.821                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:branch-misses                                        128  thrpt            429.156                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:branches                                             128  thrpt         117780.082                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:cycles                                               128  thrpt         216261.789                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-load-misses                                     128  thrpt             22.895                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-loads                                           128  thrpt          98137.096                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-store-misses                                    128  thrpt              7.034                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:dTLB-stores                                          128  thrpt          51637.920                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:iTLB-load-misses                                     128  thrpt              5.931                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:iTLB-loads                                           128  thrpt            109.519                 #/op
[info] ArrayOfInstantsBenchmark.writeCirce:instructions                                         128  thrpt         526715.015                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                               128  thrpt    5     32959.874 ±    4656.045  ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:CPI                                           128  thrpt              0.417                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-load-misses                         128  thrpt           4326.286                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-loads                               128  thrpt          99163.244                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-dcache-stores                              128  thrpt          50342.496                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:L1-icache-load-misses                         128  thrpt            857.175                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-load-misses                               128  thrpt             78.741                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-loads                                     128  thrpt            492.975                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-store-misses                              128  thrpt            257.500                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:LLC-stores                                    128  thrpt            473.314                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:branch-misses                                 128  thrpt            459.875                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:branches                                      128  thrpt          92931.812                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:cycles                                        128  thrpt         201324.123                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-load-misses                              128  thrpt             34.339                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-loads                                    128  thrpt          96158.999                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-store-misses                             128  thrpt              3.271                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:dTLB-stores                                   128  thrpt          50896.416                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-load-misses                              128  thrpt              5.067                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:iTLB-loads                                    128  thrpt             79.827                 #/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:instructions                                  128  thrpt         482978.818                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                              128  thrpt    5    319257.306 ±    4630.028  ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:CPI                                          128  thrpt              0.369                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-load-misses                        128  thrpt             50.849                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-loads                              128  thrpt           4926.990                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-dcache-stores                             128  thrpt           4512.734                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:L1-icache-load-misses                        128  thrpt              1.524                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-load-misses                              128  thrpt              0.074                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-loads                                    128  thrpt              0.413                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-store-misses                             128  thrpt             37.626                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:LLC-stores                                   128  thrpt             53.785                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:branch-misses                                128  thrpt              3.820                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:branches                                     128  thrpt           2451.148                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:cycles                                       128  thrpt          10222.125                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-load-misses                             128  thrpt              0.749                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-loads                                   128  thrpt           4988.903                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-store-misses                            128  thrpt              0.007                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:dTLB-stores                                  128  thrpt           4456.577                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-load-misses                             128  thrpt              0.048                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:iTLB-loads                                   128  thrpt              0.015                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:instructions                                 128  thrpt          27705.756                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    350616.314 ±    3571.712  ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:CPI                                  128  thrpt              0.332                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                128  thrpt              1.308                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                      128  thrpt           5605.829                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                     128  thrpt           5028.972                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                128  thrpt              0.250                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                      128  thrpt              0.027                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                            128  thrpt              0.091                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                     128  thrpt              0.006                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                           128  thrpt              0.048                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branch-misses                        128  thrpt              1.120                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:branches                             128  thrpt           2739.508                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:cycles                               128  thrpt          10812.842                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                     128  thrpt              0.017                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                           128  thrpt           5613.770                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                    128  thrpt              0.009                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                          128  thrpt           5022.593                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                     128  thrpt              0.031                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                           128  thrpt              0.124                 #/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:instructions                         128  thrpt          32585.487                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson                                                   128  thrpt    5     35310.399 ±    3659.202  ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:CPI                                               128  thrpt              0.434                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-load-misses                             128  thrpt           5310.882                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-loads                                   128  thrpt         101997.479                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-dcache-stores                                  128  thrpt          55073.158                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:L1-icache-load-misses                             128  thrpt            851.741                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-load-misses                                   128  thrpt             80.481                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-loads                                         128  thrpt            658.512                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-store-misses                                  128  thrpt            237.967                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:LLC-stores                                        128  thrpt            470.341                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:branch-misses                                     128  thrpt            493.392                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:branches                                          128  thrpt          90505.956                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:cycles                                            128  thrpt         209390.328                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-load-misses                                  128  thrpt             28.571                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-loads                                        128  thrpt         102729.626                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-store-misses                                 128  thrpt              2.751                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:dTLB-stores                                       128  thrpt          56790.695                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:iTLB-load-misses                                  128  thrpt              8.322                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:iTLB-loads                                        128  thrpt             94.588                 #/op
[info] ArrayOfInstantsBenchmark.writePlayJson:instructions                                      128  thrpt         482480.722                 #/op
[info] ArrayOfIntsBenchmark.readCirce                                                           128  thrpt    5    180870.235 ±   12426.419  ops/s
[info] ArrayOfIntsBenchmark.readCirce:CPI                                                       128  thrpt              0.249                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-dcache-load-misses                                     128  thrpt            371.583                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-dcache-loads                                           128  thrpt          11474.575                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-dcache-stores                                          128  thrpt           7561.262                 #/op
[info] ArrayOfIntsBenchmark.readCirce:L1-icache-load-misses                                     128  thrpt              5.714                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-load-misses                                           128  thrpt              0.739                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-loads                                                 128  thrpt              4.460                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-store-misses                                          128  thrpt             36.201                 #/op
[info] ArrayOfIntsBenchmark.readCirce:LLC-stores                                                128  thrpt             87.509                 #/op
[info] ArrayOfIntsBenchmark.readCirce:branch-misses                                             128  thrpt             27.171                 #/op
[info] ArrayOfIntsBenchmark.readCirce:branches                                                  128  thrpt          18866.002                 #/op
[info] ArrayOfIntsBenchmark.readCirce:cycles                                                    128  thrpt          21061.827                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-load-misses                                          128  thrpt              1.355                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-loads                                                128  thrpt          11664.436                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-store-misses                                         128  thrpt              0.020                 #/op
[info] ArrayOfIntsBenchmark.readCirce:dTLB-stores                                               128  thrpt           7895.438                 #/op
[info] ArrayOfIntsBenchmark.readCirce:iTLB-load-misses                                          128  thrpt              0.035                 #/op
[info] ArrayOfIntsBenchmark.readCirce:iTLB-loads                                                128  thrpt              0.046                 #/op
[info] ArrayOfIntsBenchmark.readCirce:instructions                                              128  thrpt          84679.657                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                     128  thrpt    5    560623.360 ±   55896.507  ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:CPI                                                 128  thrpt              0.221                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-load-misses                               128  thrpt             30.690                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-loads                                     128  thrpt           3225.212                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-dcache-stores                                    128  thrpt           2343.359                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:L1-icache-load-misses                               128  thrpt              0.874                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-load-misses                                     128  thrpt              0.176                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-loads                                           128  thrpt              0.733                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-store-misses                                    128  thrpt              2.079                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:LLC-stores                                          128  thrpt              9.148                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:branch-misses                                       128  thrpt             12.424                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:branches                                            128  thrpt           7735.549                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:cycles                                              128  thrpt           6888.074                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-load-misses                                    128  thrpt              0.279                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-loads                                          128  thrpt           3219.377                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-store-misses                                   128  thrpt              0.003                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:dTLB-stores                                         128  thrpt           2352.213                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:iTLB-load-misses                                    128  thrpt              0.033                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:iTLB-loads                                          128  thrpt              0.150                 #/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:instructions                                        128  thrpt          31132.858                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala                                                    128  thrpt    5    440964.521 ±   49710.164  ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:CPI                                                128  thrpt              0.253                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses                              128  thrpt             26.986                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-loads                                    128  thrpt           4952.826                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-dcache-stores                                   128  thrpt           3833.795                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:L1-icache-load-misses                              128  thrpt              2.258                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-load-misses                                    128  thrpt              0.158                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-loads                                          128  thrpt              0.520                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-store-misses                                   128  thrpt              1.542                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:LLC-stores                                         128  thrpt              6.385                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:branch-misses                                      128  thrpt              0.559                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:branches                                           128  thrpt           8227.994                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:cycles                                             128  thrpt           8543.707                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-load-misses                                   128  thrpt              0.209                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-loads                                         128  thrpt           4953.652                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-store-misses                                  128  thrpt              0.005                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:dTLB-stores                                        128  thrpt           3838.536                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:iTLB-load-misses                                   128  thrpt              0.022                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:iTLB-loads                                         128  thrpt              0.036                 #/op
[info] ArrayOfIntsBenchmark.readJacksonScala:instructions                                       128  thrpt          33734.295                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                   128  thrpt    5    678020.826 ±   52403.904  ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:CPI                                               128  thrpt              0.214                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                             128  thrpt             17.617                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-loads                                   128  thrpt           2028.585                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-dcache-stores                                  128  thrpt           1856.225                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses                             128  thrpt              0.556                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-load-misses                                   128  thrpt              0.044                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-loads                                         128  thrpt              0.196                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-store-misses                                  128  thrpt              0.657                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:LLC-stores                                        128  thrpt              3.330                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:branch-misses                                     128  thrpt              2.935                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:branches                                          128  thrpt           6655.441                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:cycles                                            128  thrpt           5616.209                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-load-misses                                  128  thrpt              0.161                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-loads                                        128  thrpt           2013.088                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-store-misses                                 128  thrpt              0.006                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:dTLB-stores                                       128  thrpt           1816.848                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:iTLB-load-misses                                  128  thrpt              0.010                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:iTLB-loads                                        128  thrpt              0.042                 #/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:instructions                                      128  thrpt          26301.364                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson                                                        128  thrpt    5    106841.472 ±    9932.383  ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:CPI                                                    128  thrpt              0.314                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-dcache-load-misses                                  128  thrpt           1213.449                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-dcache-loads                                        128  thrpt          25062.932                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-dcache-stores                                       128  thrpt          21851.108                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:L1-icache-load-misses                                  128  thrpt             11.341                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-load-misses                                        128  thrpt              0.514                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-loads                                              128  thrpt              3.343                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-store-misses                                       128  thrpt             73.070                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:LLC-stores                                             128  thrpt            229.694                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:branch-misses                                          128  thrpt             71.769                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:branches                                               128  thrpt          19293.491                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:cycles                                                 128  thrpt          35010.884                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-load-misses                                       128  thrpt              3.987                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-loads                                             128  thrpt          26444.667                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-store-misses                                      128  thrpt              0.049                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:dTLB-stores                                            128  thrpt          22335.088                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:iTLB-load-misses                                       128  thrpt              0.301                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:iTLB-loads                                             128  thrpt              0.751                 #/op
[info] ArrayOfIntsBenchmark.readPlayJson:instructions                                           128  thrpt         111394.718                 #/op
[info] ArrayOfIntsBenchmark.writeCirce                                                          128  thrpt    5    251384.008 ±    4784.334  ops/s
[info] ArrayOfIntsBenchmark.writeCirce:CPI                                                      128  thrpt              0.286                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-dcache-load-misses                                    128  thrpt            182.002                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-dcache-loads                                          128  thrpt           8138.034                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-dcache-stores                                         128  thrpt           7334.731                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:L1-icache-load-misses                                    128  thrpt              2.052                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-load-misses                                          128  thrpt              0.173                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-loads                                                128  thrpt              1.176                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-store-misses                                         128  thrpt             82.446                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:LLC-stores                                               128  thrpt            132.308                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:branch-misses                                            128  thrpt             23.857                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:branches                                                 128  thrpt          10122.445                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:cycles                                                   128  thrpt          15348.015                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-load-misses                                         128  thrpt              1.585                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-loads                                               128  thrpt           8333.368                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-store-misses                                        128  thrpt              0.039                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:dTLB-stores                                              128  thrpt           7364.087                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:iTLB-load-misses                                         128  thrpt              0.048                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:iTLB-loads                                               128  thrpt              0.115                 #/op
[info] ArrayOfIntsBenchmark.writeCirce:instructions                                             128  thrpt          53747.048                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                    128  thrpt    5   1218439.249 ±    2442.485  ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:CPI                                                128  thrpt              0.242                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-load-misses                              128  thrpt             14.441                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-loads                                    128  thrpt           1212.411                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-dcache-stores                                   128  thrpt           1685.969                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:L1-icache-load-misses                              128  thrpt              0.121                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-load-misses                                    128  thrpt              0.033                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-loads                                          128  thrpt              0.144                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-store-misses                                   128  thrpt              8.166                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:LLC-stores                                         128  thrpt             11.446                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:branch-misses                                      128  thrpt              0.135                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:branches                                           128  thrpt           2009.385                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:cycles                                             128  thrpt           3145.178                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-load-misses                                   128  thrpt              0.213                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-loads                                         128  thrpt           1200.574                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-store-misses                                  128  thrpt              0.001                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:dTLB-stores                                        128  thrpt           1663.454                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-load-misses                                   128  thrpt              0.007                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:iTLB-loads                                         128  thrpt              0.020                 #/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:instructions                                       128  thrpt          13013.132                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                   128  thrpt    5   1196503.391 ±  147948.306  ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:CPI                                               128  thrpt              0.236                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                             128  thrpt             14.544                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-loads                                   128  thrpt           1758.097                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-dcache-stores                                  128  thrpt           2132.287                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses                             128  thrpt              0.115                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-load-misses                                   128  thrpt              0.014                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-loads                                         128  thrpt              0.080                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-store-misses                                  128  thrpt              4.688                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:LLC-stores                                        128  thrpt              8.481                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:branch-misses                                     128  thrpt              0.297                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:branches                                          128  thrpt           2355.068                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:cycles                                            128  thrpt           3083.554                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-load-misses                                  128  thrpt              0.204                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-loads                                        128  thrpt           1758.351                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-store-misses                                 128  thrpt              0.001                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:dTLB-stores                                       128  thrpt           2108.768                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:iTLB-load-misses                                  128  thrpt              0.007                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:iTLB-loads                                        128  thrpt              0.011                 #/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:instructions                                      128  thrpt          13087.890                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                  128  thrpt    5   1144126.189 ±    4436.474  ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:CPI                                              128  thrpt              0.242                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                            128  thrpt             14.208                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads                                  128  thrpt           1398.289                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores                                 128  thrpt           1302.379                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                            128  thrpt              0.473                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-load-misses                                  128  thrpt              0.009                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-loads                                        128  thrpt              0.089                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-store-misses                                 128  thrpt              4.587                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:LLC-stores                                       128  thrpt              8.884                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:branch-misses                                    128  thrpt              7.644                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:branches                                         128  thrpt           3236.137                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:cycles                                           128  thrpt           3346.035                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses                                 128  thrpt              0.205                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-loads                                       128  thrpt           1404.814                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:dTLB-stores                                      128  thrpt           1273.379                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses                                 128  thrpt              0.008                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:iTLB-loads                                       128  thrpt              0.004                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:instructions                                     128  thrpt          13824.714                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   1152528.031 ±   76640.763  ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                      128  thrpt              0.234                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                    128  thrpt              0.775                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                          128  thrpt           1338.507                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                         128  thrpt           1248.841                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                    128  thrpt              1.055                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                          128  thrpt              0.027                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                128  thrpt              0.164                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                         128  thrpt              0.001                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                               128  thrpt              0.009                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                            128  thrpt              6.692                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:branches                                 128  thrpt           3153.022                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles                                   128  thrpt           3239.238                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                         128  thrpt              0.002                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                               128  thrpt           1347.608                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                        128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                              128  thrpt           1265.280                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                         128  thrpt              0.003                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                               128  thrpt              0.005                 #/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions                             128  thrpt          13817.450                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson                                                       128  thrpt    5     40603.829 ±     139.043  ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:CPI                                                   128  thrpt              0.325                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-dcache-load-misses                                 128  thrpt           1480.069                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-dcache-loads                                       128  thrpt          49360.102                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-dcache-stores                                      128  thrpt          30404.689                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:L1-icache-load-misses                                 128  thrpt             69.814                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-load-misses                                       128  thrpt              5.866                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-loads                                             128  thrpt             21.670                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-store-misses                                      128  thrpt             34.042                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:LLC-stores                                            128  thrpt            199.722                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:branch-misses                                         128  thrpt            129.089                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:branches                                              128  thrpt          59034.414                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:cycles                                                128  thrpt          95330.489                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-load-misses                                      128  thrpt              1.444                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-loads                                            128  thrpt          49656.060                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-store-misses                                     128  thrpt              0.084                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:dTLB-stores                                           128  thrpt          31707.914                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:iTLB-load-misses                                      128  thrpt              0.539                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:iTLB-loads                                            128  thrpt              0.463                 #/op
[info] ArrayOfIntsBenchmark.writePlayJson:instructions                                          128  thrpt         293762.966                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                      128  thrpt    5    155761.603 ±   19397.021  ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:CPI                                                  128  thrpt              0.273                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt            340.127                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-loads                                      128  thrpt          19439.231                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-dcache-stores                                     128  thrpt           8911.678                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:L1-icache-load-misses                                128  thrpt              4.251                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-load-misses                                      128  thrpt              0.352                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-loads                                            128  thrpt              2.649                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-store-misses                                     128  thrpt             43.971                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:LLC-stores                                           128  thrpt             77.607                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:branch-misses                                        128  thrpt             14.950                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:branches                                             128  thrpt          17875.988                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:cycles                                               128  thrpt          23910.010                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-load-misses                                     128  thrpt              1.472                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-loads                                           128  thrpt          19476.921                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.026                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:dTLB-stores                                          128  thrpt           8760.230                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              0.092                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:iTLB-loads                                           128  thrpt              0.145                 #/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:instructions                                         128  thrpt          87449.599                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                               128  thrpt    5    213718.507 ±    1935.033  ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:CPI                                           128  thrpt              0.259                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt            164.520                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt          13713.448                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt           8326.841                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt             57.817                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt              0.962                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-loads                                     128  thrpt              3.735                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt              1.796                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:LLC-stores                                    128  thrpt             19.017                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:branch-misses                                 128  thrpt             12.496                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:branches                                      128  thrpt          14352.592                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:cycles                                        128  thrpt          18570.732                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              0.518                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt          13241.821                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.024                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt           8233.822                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              0.056                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt              0.137                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:instructions                                  128  thrpt          71658.248                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                              128  thrpt    5    232439.570 ±   27007.396  ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.253                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt            136.211                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt          12406.683                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt           5745.219                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              3.899                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.107                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              0.873                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              0.929                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             13.365                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:branch-misses                                128  thrpt             10.180                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:branches                                     128  thrpt          13481.153                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:cycles                                       128  thrpt          15761.901                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.166                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt          12446.135                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.020                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt           5729.587                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.090                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.142                 #/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:instructions                                 128  thrpt          62229.904                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                   128  thrpt    5     99435.706 ±    7602.106  ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:CPI                                               128  thrpt              0.288                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           1238.661                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          30649.321                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          19728.443                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt             60.046                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              1.883                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-loads                                         128  thrpt              5.237                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             90.144                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:LLC-stores                                        128  thrpt            246.366                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:branch-misses                                     128  thrpt             41.001                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:branches                                          128  thrpt          23952.393                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:cycles                                            128  thrpt          37697.007                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              2.719                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          30719.270                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.041                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          19709.289                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.182                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              0.431                 #/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:instructions                                      128  thrpt         130950.550                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                     128  thrpt    5    240472.951 ±    1119.007  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:CPI                                                 128  thrpt              0.270                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt            164.843                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt           9680.838                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt           7351.732                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt              2.042                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.430                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-loads                                           128  thrpt              1.355                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-store-misses                                    128  thrpt            106.481                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:LLC-stores                                          128  thrpt            146.316                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:branch-misses                                       128  thrpt             12.591                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:branches                                            128  thrpt          16334.735                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:cycles                                              128  thrpt          16000.180                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              1.959                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-loads                                          128  thrpt           9849.232                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.075                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:dTLB-stores                                         128  thrpt           7373.493                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.097                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.092                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:instructions                                        128  thrpt          59282.597                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                              128  thrpt    5    848247.288 ±   56920.192  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.284                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt             20.514                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt           3167.057                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           2220.060                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.837                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.017                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              0.203                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt             11.988                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt             17.388                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:branch-misses                                128  thrpt              1.614                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:branches                                     128  thrpt           3512.617                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:cycles                                       128  thrpt           4482.821                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.278                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt           3197.369                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.006                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           2242.448                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.015                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.019                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:instructions                                 128  thrpt          15780.020                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                             128  thrpt    5    678203.315 ±   59366.486  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.231                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             20.701                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           3324.977                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           2078.740                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.229                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.100                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.245                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt              9.836                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt             17.417                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              1.315                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:branches                                    128  thrpt           6064.457                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:cycles                                      128  thrpt           5630.526                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.317                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           3310.131                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.008                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           2038.570                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.017                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.097                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:instructions                                128  thrpt          24356.164                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    679811.987 ±   22293.839  ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.229                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              1.807                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           3231.331                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           2002.785                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              1.816                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.009                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.125                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.002                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.013                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              1.218                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           5983.263                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           5582.425                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.002                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           3246.859                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.001                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           2022.272                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.008                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.039                 #/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          24400.608                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                  128  thrpt    5    611463.274 ±   40105.302  ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:CPI                                              128  thrpt              0.264                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt             62.055                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt           3666.568                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt           2550.055                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt              1.172                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              0.041                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-loads                                        128  thrpt              0.443                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             18.573                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:LLC-stores                                       128  thrpt             33.828                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:branch-misses                                    128  thrpt              2.611                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:branches                                         128  thrpt           5504.524                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:cycles                                           128  thrpt           6151.515                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              0.490                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-loads                                       128  thrpt           3726.512                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.008                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:dTLB-stores                                      128  thrpt           2588.788                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.023                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              0.051                 #/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:instructions                                     128  thrpt          23260.020                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                 128  thrpt    5     12300.131 ±     688.550  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:CPI                                             128  thrpt              0.330                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt           3986.979                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-loads                                 128  thrpt         254551.957                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-dcache-stores                                128  thrpt         121578.254                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:L1-icache-load-misses                           128  thrpt            903.749                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-load-misses                                 128  thrpt             19.990                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-loads                                       128  thrpt            163.970                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-store-misses                                128  thrpt            210.661                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:LLC-stores                                      128  thrpt            598.971                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:branch-misses                                   128  thrpt            154.030                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:branches                                        128  thrpt         195870.462                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:cycles                                          128  thrpt         321357.996                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-load-misses                                128  thrpt             13.184                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-loads                                      128  thrpt         253305.056                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-store-misses                               128  thrpt              1.164                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:dTLB-stores                                     128  thrpt         118958.253                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-load-misses                                128  thrpt              5.959                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:iTLB-loads                                      128  thrpt             60.956                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:instructions                                    128  thrpt         973490.175                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                          128  thrpt    5     11388.230 ±    3795.447  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:CPI                                      128  thrpt              0.388                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt           6103.250                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt         297979.362                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt         142728.390                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt           4429.916                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt             72.821                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-loads                                128  thrpt            588.286                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt            313.326                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:LLC-stores                               128  thrpt            821.121                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:branch-misses                            128  thrpt            606.998                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:branches                                 128  thrpt         229370.794                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:cycles                                   128  thrpt         449014.195                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt             32.928                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-loads                               128  thrpt         313921.359                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt              2.711                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:dTLB-stores                              128  thrpt         148835.586                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt             23.852                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:iTLB-loads                               128  thrpt            257.973                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:instructions                             128  thrpt        1157376.502                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                         128  thrpt    5    341546.117 ±    5827.054  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.235                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt            163.464                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt           6978.833                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt           5081.471                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              5.315                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.099                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-loads                               128  thrpt              1.335                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt              5.000                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:LLC-stores                              128  thrpt             22.401                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branch-misses                           128  thrpt              8.223                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:branches                                128  thrpt          11090.303                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:cycles                                  128  thrpt          11306.456                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              0.336                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt           7297.081                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.010                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt           5257.744                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.044                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.026                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:instructions                            128  thrpt          48208.698                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                              128  thrpt    5      9345.551 ±     905.418  ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:CPI                                          128  thrpt              0.340                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt           5278.061                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt         309308.160                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt         153645.870                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt           6062.401                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-load-misses                              128  thrpt             16.474                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-loads                                    128  thrpt            249.896                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-store-misses                             128  thrpt            296.178                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:LLC-stores                                   128  thrpt            920.312                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:branch-misses                                128  thrpt            400.615                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:branches                                     128  thrpt         233095.066                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:cycles                                       128  thrpt         410918.944                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt            136.576                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-loads                                   128  thrpt         312807.153                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt              0.325                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:dTLB-stores                                  128  thrpt         157883.621                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt              2.319                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:iTLB-loads                                   128  thrpt             12.808                 #/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:instructions                                 128  thrpt        1207645.031                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                128  thrpt    5     27205.871 ±    3752.993  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:CPI                                            128  thrpt              0.353                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt           3782.526                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-loads                                128  thrpt         125327.794                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-dcache-stores                               128  thrpt          65211.770                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt            978.455                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-load-misses                                128  thrpt             41.200                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-loads                                      128  thrpt            403.946                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-store-misses                               128  thrpt            268.892                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:LLC-stores                                     128  thrpt            499.790                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:branch-misses                                  128  thrpt            395.517                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:branches                                       128  thrpt         137654.903                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:cycles                                         128  thrpt         215549.395                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-load-misses                               128  thrpt             19.570                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-loads                                     128  thrpt         125515.049                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              2.550                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:dTLB-stores                                    128  thrpt          65758.122                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              3.919                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:iTLB-loads                                     128  thrpt             92.233                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:instructions                                   128  thrpt         611483.447                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                         128  thrpt    5     31002.244 ±    2812.593  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.335                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt           1845.181                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt          87779.153                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt          45923.659                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt            280.368                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt             16.624                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-loads                               128  thrpt            222.629                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt             86.933                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:LLC-stores                              128  thrpt            187.521                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branch-misses                           128  thrpt            248.802                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:branches                                128  thrpt          89710.022                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:cycles                                  128  thrpt         145315.955                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt              8.893                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt          87544.143                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.581                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt          46819.073                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              2.049                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt             29.242                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:instructions                            128  thrpt         433410.872                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                        128  thrpt    5    810456.134 ±   10422.393  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.261                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt             47.955                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt           3563.364                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt           3795.315                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              0.678                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.155                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              0.490                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt             36.341                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt             48.731                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              2.813                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:branches                               128  thrpt           2364.478                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:cycles                                 128  thrpt           4778.082                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              0.734                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt           3445.979                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.004                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt           3690.418                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.004                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.004                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:instructions                           128  thrpt          18309.805                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    931123.436 ±    1243.446  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.236                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt              1.447                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt           3354.551                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt           3586.437                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.729                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.027                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.120                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.001                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.008                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              1.233                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt           2185.314                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt           4044.969                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt           3394.950                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt           3633.931                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.012                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.004                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt          17168.449                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                             128  thrpt    5     30088.328 ±    3873.483  ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:CPI                                         128  thrpt              0.341                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt           2847.903                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt          93181.313                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt          49526.749                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt            358.115                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-load-misses                             128  thrpt             20.597                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-loads                                   128  thrpt            139.269                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-store-misses                            128  thrpt             89.075                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:LLC-stores                                  128  thrpt            250.378                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:branch-misses                               128  thrpt            273.668                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:branches                                    128  thrpt          95266.686                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:cycles                                      128  thrpt         154872.626                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt             13.683                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-loads                                  128  thrpt          89982.444                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.520                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:dTLB-stores                                 128  thrpt          47204.742                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              2.347                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:iTLB-loads                                  128  thrpt             32.853                 #/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:instructions                                128  thrpt         454543.367                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce                                                     128  thrpt    5     44366.839 ±   12584.505  ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:CPI                                                 128  thrpt              0.359                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-load-misses                               128  thrpt           2302.007                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-loads                                     128  thrpt          94033.950                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-dcache-stores                                    128  thrpt          43308.091                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:L1-icache-load-misses                               128  thrpt            694.746                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-load-misses                                     128  thrpt             32.895                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-loads                                           128  thrpt            196.596                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-store-misses                                    128  thrpt            107.698                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:LLC-stores                                          128  thrpt            263.447                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:branch-misses                                       128  thrpt            227.939                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:branches                                            128  thrpt          75422.856                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:cycles                                              128  thrpt         132014.068                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-load-misses                                    128  thrpt             14.626                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-loads                                          128  thrpt          94321.508                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-store-misses                                   128  thrpt              1.071                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:dTLB-stores                                         128  thrpt          43055.839                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:iTLB-load-misses                                    128  thrpt              4.669                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:iTLB-loads                                          128  thrpt             53.318                 #/op
[info] ArrayOfLocalDatesBenchmark.readCirce:instructions                                        128  thrpt         367542.205                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                              128  thrpt    5     41557.940 ±    4991.490  ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:CPI                                          128  thrpt              0.314                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-load-misses                        128  thrpt           1072.709                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-loads                              128  thrpt          72598.278                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-dcache-stores                             128  thrpt          35660.869                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:L1-icache-load-misses                        128  thrpt            216.875                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-load-misses                              128  thrpt              2.777                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-loads                                    128  thrpt             14.688                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-store-misses                             128  thrpt              7.473                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:LLC-stores                                   128  thrpt            119.590                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:branch-misses                                128  thrpt             41.420                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:branches                                     128  thrpt          59252.730                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:cycles                                       128  thrpt          90724.196                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-load-misses                             128  thrpt              2.065                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-loads                                   128  thrpt          74150.680                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-store-misses                            128  thrpt              0.062                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:dTLB-stores                                  128  thrpt          36040.494                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-load-misses                             128  thrpt              0.785                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:iTLB-loads                                   128  thrpt              0.425                 #/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:instructions                                 128  thrpt         288758.272                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                             128  thrpt    5    509182.715 ±   57351.638  ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:CPI                                         128  thrpt              0.233                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-load-misses                       128  thrpt             66.875                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-loads                             128  thrpt           4009.963                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-dcache-stores                            128  thrpt           3147.807                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:L1-icache-load-misses                       128  thrpt              0.491                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-load-misses                             128  thrpt              0.083                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-loads                                   128  thrpt              0.405                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-store-misses                            128  thrpt              3.167                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:LLC-stores                                  128  thrpt             13.613                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:branch-misses                               128  thrpt              6.448                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:branches                                    128  thrpt           7297.677                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:cycles                                      128  thrpt           7210.021                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-load-misses                            128  thrpt              0.380                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-loads                                  128  thrpt           4102.005                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-store-misses                           128  thrpt              0.004                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:dTLB-stores                                 128  thrpt           3179.610                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-load-misses                            128  thrpt              0.022                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:iTLB-loads                                  128  thrpt              0.043                 #/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:instructions                                128  thrpt          30884.033                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                  128  thrpt    5     21703.986 ±    4947.628  ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:CPI                                              128  thrpt              0.363                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-load-misses                            128  thrpt           3917.114                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-loads                                  128  thrpt         157627.180                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-dcache-stores                                 128  thrpt          84886.369                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:L1-icache-load-misses                            128  thrpt           1214.826                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-load-misses                                  128  thrpt             32.318                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-loads                                        128  thrpt            269.651                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-store-misses                                 128  thrpt             92.120                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:LLC-stores                                       128  thrpt            340.307                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:branch-misses                                    128  thrpt            307.877                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:branches                                         128  thrpt         120127.042                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:cycles                                           128  thrpt         223272.423                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-load-misses                                 128  thrpt             21.175                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-loads                                       128  thrpt         160111.248                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-store-misses                                128  thrpt              1.083                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:dTLB-stores                                      128  thrpt          88655.967                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-load-misses                                 128  thrpt             10.058                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:iTLB-loads                                       128  thrpt            103.904                 #/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:instructions                                     128  thrpt         615565.358                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                    128  thrpt    5     70098.344 ±    8065.394  ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:CPI                                                128  thrpt              0.257                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-load-misses                              128  thrpt           1108.519                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-loads                                    128  thrpt          33738.040                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-dcache-stores                                   128  thrpt          21615.899                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:L1-icache-load-misses                              128  thrpt              8.343                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-load-misses                                    128  thrpt              0.882                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-loads                                          128  thrpt              4.968                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-store-misses                                   128  thrpt            136.919                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:LLC-stores                                         128  thrpt            254.504                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:branch-misses                                      128  thrpt             30.337                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:branches                                           128  thrpt          48856.036                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:cycles                                             128  thrpt          52507.331                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-load-misses                                   128  thrpt              2.646                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-loads                                         128  thrpt          34003.767                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-store-misses                                  128  thrpt              0.270                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:dTLB-stores                                        128  thrpt          21750.336                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:iTLB-load-misses                                   128  thrpt              0.314                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:iTLB-loads                                         128  thrpt              0.725                 #/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:instructions                                       128  thrpt         204318.866                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                             128  thrpt    5    182878.759 ±    1147.460  ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:CPI                                         128  thrpt              0.242                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-load-misses                       128  thrpt            203.774                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-loads                             128  thrpt          12082.669                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-dcache-stores                            128  thrpt           7473.570                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:L1-icache-load-misses                       128  thrpt              2.275                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-load-misses                             128  thrpt              0.637                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-loads                                   128  thrpt              2.529                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-store-misses                            128  thrpt             15.464                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:LLC-stores                                  128  thrpt             42.337                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:branch-misses                               128  thrpt             12.153                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:branches                                    128  thrpt          16536.804                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:cycles                                      128  thrpt          19869.970                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-load-misses                            128  thrpt              0.403                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-loads                                  128  thrpt          12152.876                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-store-misses                           128  thrpt              0.013                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:dTLB-stores                                 128  thrpt           7470.342                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-load-misses                            128  thrpt              0.105                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:iTLB-loads                                  128  thrpt              0.176                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:instructions                                128  thrpt          82007.481                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                            128  thrpt    5    858831.645 ±    7278.642  ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:CPI                                        128  thrpt              0.270                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-load-misses                      128  thrpt             28.314                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-loads                            128  thrpt           3810.527                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-dcache-stores                           128  thrpt           4054.759                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:L1-icache-load-misses                      128  thrpt              0.127                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-load-misses                            128  thrpt              0.035                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-loads                                  128  thrpt              0.166                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-store-misses                           128  thrpt             24.443                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:LLC-stores                                 128  thrpt             28.677                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:branch-misses                              128  thrpt              1.341                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:branches                                   128  thrpt           2188.378                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:cycles                                     128  thrpt           4514.227                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-load-misses                           128  thrpt              0.446                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-loads                                 128  thrpt           3743.906                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-store-misses                          128  thrpt              0.007                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:dTLB-stores                                128  thrpt           3795.990                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-load-misses                           128  thrpt              0.025                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:iTLB-loads                                 128  thrpt              0.068                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:instructions                               128  thrpt          16696.762                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5    905228.848 ±    8667.301  ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:CPI                                128  thrpt              0.254                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses              128  thrpt              1.052                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                    128  thrpt           3693.702                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                   128  thrpt           3916.157                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses              128  thrpt              1.034                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                    128  thrpt              0.057                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                          128  thrpt              0.246                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                   128  thrpt              0.013                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                         128  thrpt              0.054                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branch-misses                      128  thrpt              1.076                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:branches                           128  thrpt           2111.568                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:cycles                             128  thrpt           4143.461                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                   128  thrpt              0.005                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                         128  thrpt           3671.772                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                  128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                        128  thrpt           3939.008                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                   128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                         128  thrpt              0.012                 #/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:instructions                       128  thrpt          16338.621                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                 128  thrpt    5     90629.880 ±    9296.588  ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:CPI                                             128  thrpt              0.255                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-load-misses                           128  thrpt            933.627                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-loads                                 128  thrpt          26964.387                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-dcache-stores                                128  thrpt          16353.577                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:L1-icache-load-misses                           128  thrpt              9.606                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-load-misses                                 128  thrpt              1.582                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-loads                                       128  thrpt              5.640                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-store-misses                                128  thrpt             23.790                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:LLC-stores                                      128  thrpt             96.205                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:branch-misses                                   128  thrpt             14.588                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:branches                                        128  thrpt          34847.351                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:cycles                                          128  thrpt          41368.460                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-load-misses                                128  thrpt              0.961                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-loads                                      128  thrpt          27177.438                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-store-misses                               128  thrpt              0.040                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:dTLB-stores                                     128  thrpt          16414.932                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-load-misses                                128  thrpt              0.140                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:iTLB-loads                                      128  thrpt              0.125                 #/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:instructions                                    128  thrpt         162367.697                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce                                                     128  thrpt    5     16776.559 ±    3187.691  ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:CPI                                                 128  thrpt              0.386                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-load-misses                               128  thrpt           5096.622                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-loads                                     128  thrpt         213424.665                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-dcache-stores                                    128  thrpt         110813.250                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:L1-icache-load-misses                               128  thrpt           2093.166                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-load-misses                                     128  thrpt             60.568                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-loads                                           128  thrpt            509.768                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-store-misses                                    128  thrpt            149.590                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:LLC-stores                                          128  thrpt            455.819                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:branch-misses                                       128  thrpt            450.420                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:branches                                            128  thrpt         157653.597                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:cycles                                              128  thrpt         317003.923                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-load-misses                                    128  thrpt             35.753                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-loads                                          128  thrpt         210936.669                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-store-misses                                   128  thrpt              2.022                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:dTLB-stores                                         128  thrpt         112281.576                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:iTLB-load-misses                                    128  thrpt             11.959                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:iTLB-loads                                          128  thrpt            159.660                 #/op
[info] ArrayOfLocalTimesBenchmark.readCirce:instructions                                        128  thrpt         821967.396                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                              128  thrpt    5     17689.383 ±    4438.172  ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:CPI                                          128  thrpt              0.370                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-load-misses                        128  thrpt           3770.680                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-loads                              128  thrpt         192613.172                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-dcache-stores                             128  thrpt          91899.793                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:L1-icache-load-misses                        128  thrpt           2634.448                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-load-misses                              128  thrpt             33.525                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-loads                                    128  thrpt            315.193                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-store-misses                             128  thrpt             66.632                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:LLC-stores                                   128  thrpt            391.789                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:branch-misses                                128  thrpt            261.186                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:branches                                     128  thrpt         147714.618                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:cycles                                       128  thrpt         272724.398                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-load-misses                             128  thrpt             16.516                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-loads                                   128  thrpt         195186.420                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-store-misses                            128  thrpt              1.489                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:dTLB-stores                                  128  thrpt          94898.130                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-load-misses                             128  thrpt              7.610                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:iTLB-loads                                   128  thrpt            143.792                 #/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:instructions                                 128  thrpt         737307.218                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                             128  thrpt    5    810445.642 ±   59015.460  ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:CPI                                         128  thrpt              0.223                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                       128  thrpt             66.646                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-loads                             128  thrpt           3185.262                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-dcache-stores                            128  thrpt           2750.797                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:L1-icache-load-misses                       128  thrpt              1.197                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-load-misses                             128  thrpt              0.092                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-loads                                   128  thrpt              0.458                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-store-misses                            128  thrpt              3.405                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:LLC-stores                                  128  thrpt             14.159                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:branch-misses                               128  thrpt              0.186                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:branches                                    128  thrpt           4993.227                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:cycles                                      128  thrpt           4656.603                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-load-misses                            128  thrpt              0.316                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-loads                                  128  thrpt           3197.310                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-store-misses                           128  thrpt              0.005                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:dTLB-stores                                 128  thrpt           2722.294                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-load-misses                            128  thrpt              0.024                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:iTLB-loads                                  128  thrpt              0.015                 #/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:instructions                                128  thrpt          20839.063                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                  128  thrpt    5     13549.270 ±    4221.444  ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:CPI                                              128  thrpt              0.366                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-load-misses                            128  thrpt           5567.313                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-loads                                  128  thrpt         241191.133                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-dcache-stores                                 128  thrpt         137344.715                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:L1-icache-load-misses                            128  thrpt           2274.005                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-load-misses                                  128  thrpt             43.763                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-loads                                        128  thrpt            471.454                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-store-misses                                 128  thrpt            143.962                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:LLC-stores                                       128  thrpt            720.291                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:branch-misses                                    128  thrpt            440.049                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:branches                                         128  thrpt         176228.937                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:cycles                                           128  thrpt         345401.163                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-load-misses                                 128  thrpt             32.226                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-loads                                       128  thrpt         241028.380                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-store-misses                                128  thrpt              1.884                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:dTLB-stores                                      128  thrpt         136677.541                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-load-misses                                 128  thrpt             16.012                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:iTLB-loads                                       128  thrpt            165.916                 #/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:instructions                                     128  thrpt         943458.758                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                    128  thrpt    5     44760.330 ±    5640.976  ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:CPI                                                128  thrpt              0.355                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-load-misses                              128  thrpt           2632.927                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-loads                                    128  thrpt          71711.290                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-dcache-stores                                   128  thrpt          38592.367                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:L1-icache-load-misses                              128  thrpt            394.496                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-load-misses                                    128  thrpt             31.829                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-loads                                          128  thrpt            278.281                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-store-misses                                   128  thrpt            150.451                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:LLC-stores                                         128  thrpt            302.914                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:branch-misses                                      128  thrpt            235.824                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:branches                                           128  thrpt          75090.198                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:cycles                                             128  thrpt         122949.584                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-load-misses                                   128  thrpt             13.393                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-loads                                         128  thrpt          72255.983                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-store-misses                                  128  thrpt              0.815                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:dTLB-stores                                        128  thrpt          39401.721                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:iTLB-load-misses                                   128  thrpt              1.349                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:iTLB-loads                                         128  thrpt             37.294                 #/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:instructions                                       128  thrpt         346739.188                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                             128  thrpt    5     54066.793 ±   14517.534  ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:CPI                                         128  thrpt              0.385                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                       128  thrpt           1420.418                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-loads                             128  thrpt          54274.122                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-dcache-stores                            128  thrpt          29448.833                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:L1-icache-load-misses                       128  thrpt            268.125                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-load-misses                             128  thrpt             16.836                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-loads                                   128  thrpt            143.276                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-store-misses                            128  thrpt             36.424                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:LLC-stores                                  128  thrpt            139.269                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:branch-misses                               128  thrpt            219.253                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:branches                                    128  thrpt          51960.964                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:cycles                                      128  thrpt          96985.673                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-load-misses                            128  thrpt              8.874                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-loads                                  128  thrpt          54583.368                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-store-misses                           128  thrpt              0.467                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:dTLB-stores                                 128  thrpt          28932.064                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-load-misses                            128  thrpt              0.972                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:iTLB-loads                                  128  thrpt             19.753                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:instructions                                128  thrpt         251812.693                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                            128  thrpt    5   1038565.978 ±   21685.225  ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:CPI                                        128  thrpt              0.281                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                      128  thrpt             24.488                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-loads                            128  thrpt           3170.176                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-dcache-stores                           128  thrpt           3308.874                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                      128  thrpt              0.219                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-load-misses                            128  thrpt              0.050                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-loads                                  128  thrpt              0.223                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-store-misses                           128  thrpt             16.951                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:LLC-stores                                 128  thrpt             21.746                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:branch-misses                              128  thrpt              1.934                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:branches                                   128  thrpt           2009.032                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:cycles                                     128  thrpt           3762.314                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-load-misses                           128  thrpt              0.352                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-loads                                 128  thrpt           3306.679                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-store-misses                          128  thrpt              0.003                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:dTLB-stores                                128  thrpt           3403.598                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-load-misses                           128  thrpt              0.014                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:iTLB-loads                                 128  thrpt              0.032                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:instructions                               128  thrpt          13369.289                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5   1099873.878 ±    1068.977  ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:CPI                                128  thrpt              0.266                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses              128  thrpt              1.327                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                    128  thrpt           3086.650                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                   128  thrpt           3198.549                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses              128  thrpt              0.241                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                    128  thrpt              0.009                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                          128  thrpt              0.046                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                   128  thrpt              0.001                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                         128  thrpt              0.006                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                      128  thrpt              1.245                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:branches                           128  thrpt           1936.740                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:cycles                             128  thrpt           3434.309                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                   128  thrpt              0.001                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                         128  thrpt           3124.955                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                  128  thrpt              0.001                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                        128  thrpt           3237.003                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                   128  thrpt              0.010                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                         128  thrpt              0.031                 #/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:instructions                       128  thrpt          12916.955                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                 128  thrpt    5      4029.476 ±    1170.466  ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:CPI                                             128  thrpt              0.446                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-load-misses                           128  thrpt          41654.083                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-loads                                 128  thrpt         960192.223                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-dcache-stores                                128  thrpt         420003.855                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:L1-icache-load-misses                           128  thrpt           3896.184                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-load-misses                                 128  thrpt            349.774                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-loads                                       128  thrpt           2295.921                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-store-misses                                128  thrpt            341.219                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:LLC-stores                                      128  thrpt           1007.648                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:branch-misses                                   128  thrpt           1824.756                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:branches                                        128  thrpt         501680.034                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:cycles                                          128  thrpt        1230800.518                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-load-misses                                128  thrpt            139.691                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-loads                                      128  thrpt         950049.767                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-store-misses                               128  thrpt              5.996                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:dTLB-stores                                     128  thrpt         413238.037                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-load-misses                                128  thrpt             18.596                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:iTLB-loads                                      128  thrpt            804.767                 #/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:instructions                                    128  thrpt        2759279.748                 #/op
[info] ArrayOfLongsBenchmark.readCirce                                                          128  thrpt    5    137178.133 ±   23864.547  ops/s
[info] ArrayOfLongsBenchmark.readCirce:CPI                                                      128  thrpt              0.284                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt            487.385                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt          14445.655                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt           8652.664                 #/op
[info] ArrayOfLongsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt             58.933                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-load-misses                                          128  thrpt              2.903                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-loads                                                128  thrpt             14.239                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-store-misses                                         128  thrpt             59.412                 #/op
[info] ArrayOfLongsBenchmark.readCirce:LLC-stores                                               128  thrpt            122.374                 #/op
[info] ArrayOfLongsBenchmark.readCirce:branch-misses                                            128  thrpt             20.612                 #/op
[info] ArrayOfLongsBenchmark.readCirce:branches                                                 128  thrpt          23183.128                 #/op
[info] ArrayOfLongsBenchmark.readCirce:cycles                                                   128  thrpt          30260.429                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt              1.976                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-loads                                               128  thrpt          14499.511                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              0.069                 #/op
[info] ArrayOfLongsBenchmark.readCirce:dTLB-stores                                              128  thrpt           8745.490                 #/op
[info] ArrayOfLongsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt              0.387                 #/op
[info] ArrayOfLongsBenchmark.readCirce:iTLB-loads                                               128  thrpt              4.891                 #/op
[info] ArrayOfLongsBenchmark.readCirce:instructions                                             128  thrpt         106541.193                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                    128  thrpt    5    399963.245 ±   11996.517  ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:CPI                                                128  thrpt              0.216                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-load-misses                              128  thrpt             55.757                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-loads                                    128  thrpt           4300.280                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-dcache-stores                                   128  thrpt           2805.981                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:L1-icache-load-misses                              128  thrpt              0.424                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-load-misses                                    128  thrpt              0.158                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-loads                                          128  thrpt              0.436                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-store-misses                                   128  thrpt             15.634                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:LLC-stores                                         128  thrpt             27.926                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:branch-misses                                      128  thrpt              9.461                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:branches                                           128  thrpt          10770.576                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:cycles                                             128  thrpt           9668.630                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-load-misses                                   128  thrpt              0.591                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-loads                                         128  thrpt           4379.344                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-store-misses                                  128  thrpt              0.003                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:dTLB-stores                                        128  thrpt           2865.973                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:iTLB-load-misses                                   128  thrpt              0.033                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:iTLB-loads                                         128  thrpt              0.042                 #/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:instructions                                       128  thrpt          44687.268                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala                                                   128  thrpt    5    264896.427 ±    3797.276  ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.246                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt             55.291                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          11375.460                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt           7683.747                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              0.839                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.150                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              0.825                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt             13.542                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             24.344                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:branch-misses                                     128  thrpt              7.819                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:branches                                          128  thrpt          12417.921                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:cycles                                            128  thrpt          14449.371                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.631                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          11415.294                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.006                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt           7708.735                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.038                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.083                 #/op
[info] ArrayOfLongsBenchmark.readJacksonScala:instructions                                      128  thrpt          58768.442                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                  128  thrpt    5    490590.189 ±    4368.948  ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.214                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             33.793                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           2894.254                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           2170.571                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.882                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.121                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.320                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              8.276                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             16.280                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              5.675                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:branches                                         128  thrpt           8637.547                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:cycles                                           128  thrpt           7867.973                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.428                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           2864.615                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.006                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           2104.796                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.037                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.021                 #/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:instructions                                     128  thrpt          36749.081                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson                                                       128  thrpt    5    108838.261 ±    5940.710  ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.286                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           1248.110                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          26260.931                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          21620.773                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt             14.766                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt              1.782                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-loads                                             128  thrpt              5.955                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt             84.619                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            243.005                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:branch-misses                                         128  thrpt             50.628                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:branches                                              128  thrpt          21990.840                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:cycles                                                128  thrpt          35199.410                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              3.490                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          26858.468                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.078                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          22336.440                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              0.229                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt              0.162                 #/op
[info] ArrayOfLongsBenchmark.readPlayJson:instructions                                          128  thrpt         122940.317                 #/op
[info] ArrayOfLongsBenchmark.writeCirce                                                         128  thrpt    5    211742.044 ±    6059.655  ops/s
[info] ArrayOfLongsBenchmark.writeCirce:CPI                                                     128  thrpt              0.278                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt            220.636                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt           9479.728                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt           7587.557                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt              1.725                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              0.632                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-loads                                               128  thrpt              1.736                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt            120.558                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:LLC-stores                                              128  thrpt            169.981                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:branch-misses                                           128  thrpt             15.825                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:branches                                                128  thrpt          11868.337                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:cycles                                                  128  thrpt          18041.058                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              2.127                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-loads                                              128  thrpt           9780.561                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              0.067                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:dTLB-stores                                             128  thrpt           7719.685                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.067                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.129                 #/op
[info] ArrayOfLongsBenchmark.writeCirce:instructions                                            128  thrpt          64993.488                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                   128  thrpt    5    933278.766 ±    9963.066  ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:CPI                                               128  thrpt              0.267                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-load-misses                             128  thrpt             21.296                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-loads                                   128  thrpt           2038.275                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-dcache-stores                                  128  thrpt           2507.062                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:L1-icache-load-misses                             128  thrpt              0.540                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-load-misses                                   128  thrpt              0.068                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-loads                                         128  thrpt              0.332                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-store-misses                                  128  thrpt             12.557                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:LLC-stores                                        128  thrpt             18.973                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:branch-misses                                     128  thrpt              1.710                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:branches                                          128  thrpt           2149.260                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:cycles                                            128  thrpt           4122.986                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-load-misses                                  128  thrpt              0.302                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-loads                                        128  thrpt           2068.302                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-store-misses                                 128  thrpt              0.001                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:dTLB-stores                                       128  thrpt           2566.334                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-load-misses                                  128  thrpt              0.009                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:iTLB-loads                                        128  thrpt              0.004                 #/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:instructions                                      128  thrpt          15444.833                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                  128  thrpt    5    606676.201 ±    7958.069  ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.369                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             21.913                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           1959.873                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           2211.542                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              1.932                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.099                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.584                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt             12.926                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt             18.652                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              2.386                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:branches                                         128  thrpt           2756.661                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:cycles                                           128  thrpt           6330.892                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.339                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           1959.867                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.003                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           2202.272                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.007                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.009                 #/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:instructions                                     128  thrpt          17137.405                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                 128  thrpt    5    787933.096 ±    7295.644  ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.243                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             20.723                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt           2394.309                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           2368.040                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.155                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.013                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.095                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt             12.195                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             17.611                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              3.439                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:branches                                        128  thrpt           3482.117                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           4866.393                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.313                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt           2404.400                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.006                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           2316.455                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.022                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.006                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:instructions                                    128  thrpt          19993.996                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    830897.810 ±   21206.001  ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.233                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.887                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt           2358.153                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           2339.091                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.087                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.015                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.041                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.017                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              3.232                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           3430.598                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           4590.634                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt           2356.078                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           2327.018                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.026                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.049                 #/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt          19702.207                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson                                                      128  thrpt    5     35243.997 ±    3644.542  ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.332                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt           1483.486                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          51781.465                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt          29684.054                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt             75.050                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              2.905                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-loads                                            128  thrpt             34.982                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             42.232                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:LLC-stores                                           128  thrpt            184.981                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:branch-misses                                        128  thrpt            154.481                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:branches                                             128  thrpt          68205.498                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:cycles                                               128  thrpt         111444.679                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              2.742                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          52802.206                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.204                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt          30330.329                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.700                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              5.019                 #/op
[info] ArrayOfLongsBenchmark.writePlayJson:instructions                                         128  thrpt         335621.496                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                128  thrpt    5      8929.675 ±     812.200  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:CPI                                            128  thrpt              0.329                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-load-misses                          128  thrpt           4777.934                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-loads                                128  thrpt         324362.804                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-dcache-stores                               128  thrpt         145829.253                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:L1-icache-load-misses                          128  thrpt           5601.294                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-load-misses                                128  thrpt             25.465                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-loads                                      128  thrpt            228.772                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-store-misses                               128  thrpt            206.468                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:LLC-stores                                     128  thrpt            774.105                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:branch-misses                                  128  thrpt            196.055                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:branches                                       128  thrpt         278686.803                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:cycles                                         128  thrpt         443565.812                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-load-misses                               128  thrpt             13.850                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-loads                                     128  thrpt         323778.406                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-store-misses                              128  thrpt              1.418                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:dTLB-stores                                    128  thrpt         147716.569                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-load-misses                               128  thrpt              2.290                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:iTLB-loads                                     128  thrpt             30.503                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:instructions                                   128  thrpt        1348325.746                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                         128  thrpt    5      9216.310 ±      88.412  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:CPI                                     128  thrpt              0.337                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses                   128  thrpt           4154.413                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-loads                         128  thrpt         307589.613                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-dcache-stores                        128  thrpt         133128.621                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:L1-icache-load-misses                   128  thrpt           2532.988                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-load-misses                         128  thrpt             12.393                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-loads                               128  thrpt            129.501                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-store-misses                        128  thrpt            156.967                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:LLC-stores                              128  thrpt            639.771                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branch-misses                           128  thrpt            130.186                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:branches                                128  thrpt         258309.128                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:cycles                                  128  thrpt         416218.356                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-load-misses                        128  thrpt              3.515                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-loads                              128  thrpt         308411.340                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-store-misses                       128  thrpt              0.406                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:dTLB-stores                             128  thrpt         132915.333                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-load-misses                        128  thrpt              3.183                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:iTLB-loads                              128  thrpt              4.818                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:instructions                            128  thrpt        1234031.045                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                        128  thrpt    5    197509.198 ±    7954.713  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:CPI                                    128  thrpt              0.248                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                  128  thrpt            261.419                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-loads                        128  thrpt          12451.529                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-dcache-stores                       128  thrpt           9052.331                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses                  128  thrpt              5.393                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-load-misses                        128  thrpt              0.854                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-loads                              128  thrpt              2.436                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-store-misses                       128  thrpt              6.151                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:LLC-stores                             128  thrpt             60.627                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branch-misses                          128  thrpt             11.145                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:branches                               128  thrpt          17168.232                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:cycles                                 128  thrpt          19273.191                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-load-misses                       128  thrpt              0.550                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-loads                             128  thrpt          12313.841                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-store-misses                      128  thrpt              0.018                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:dTLB-stores                            128  thrpt           9035.139                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-load-misses                       128  thrpt              0.061                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:iTLB-loads                             128  thrpt              0.097                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:instructions                           128  thrpt          77647.925                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                             128  thrpt    5      8782.254 ±     841.250  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:CPI                                         128  thrpt              0.348                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-load-misses                       128  thrpt           5932.297                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-loads                             128  thrpt         332592.151                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-dcache-stores                            128  thrpt         146454.083                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:L1-icache-load-misses                       128  thrpt           5848.782                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-load-misses                             128  thrpt             40.741                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-loads                                   128  thrpt            390.407                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-store-misses                            128  thrpt            259.032                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:LLC-stores                                  128  thrpt            885.394                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:branch-misses                               128  thrpt            382.087                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:branches                                    128  thrpt         273474.829                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:cycles                                      128  thrpt         470675.441                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-load-misses                            128  thrpt             19.450                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-loads                                  128  thrpt         340874.867                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-store-misses                           128  thrpt              1.142                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:dTLB-stores                                 128  thrpt         152969.735                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-load-misses                            128  thrpt             13.785                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:iTLB-loads                                  128  thrpt            100.681                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:instructions                                128  thrpt        1354363.998                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                               128  thrpt    5     22134.243 ±    4435.771  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:CPI                                           128  thrpt              0.371                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-load-misses                         128  thrpt           5779.542                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-loads                               128  thrpt         165558.450                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-dcache-stores                              128  thrpt          80288.262                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:L1-icache-load-misses                         128  thrpt           1486.346                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-load-misses                               128  thrpt             60.594                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-loads                                     128  thrpt            697.031                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-store-misses                              128  thrpt            363.747                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:LLC-stores                                    128  thrpt            714.174                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:branch-misses                                 128  thrpt            548.500                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:branches                                      128  thrpt         172071.594                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:cycles                                        128  thrpt         288357.010                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-load-misses                              128  thrpt             26.725                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-loads                                    128  thrpt         167814.937                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-store-misses                             128  thrpt              4.742                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:dTLB-stores                                   128  thrpt          82727.251                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-load-misses                              128  thrpt              6.520                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:iTLB-loads                                    128  thrpt            189.261                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:instructions                                  128  thrpt         776216.125                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                        128  thrpt    5     24684.236 ±    4128.782  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:CPI                                    128  thrpt              0.354                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                  128  thrpt           2920.902                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-loads                        128  thrpt         122527.816                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-dcache-stores                       128  thrpt          62816.790                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses                  128  thrpt            711.063                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-load-misses                        128  thrpt             31.956                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-loads                              128  thrpt            260.293                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-store-misses                       128  thrpt            127.243                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:LLC-stores                             128  thrpt            331.274                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branch-misses                          128  thrpt            377.970                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:branches                               128  thrpt         117591.949                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:cycles                                 128  thrpt         204467.813                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-load-misses                       128  thrpt             17.637                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-loads                             128  thrpt         125184.012                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-store-misses                      128  thrpt              0.913                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:dTLB-stores                            128  thrpt          65219.729                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-load-misses                       128  thrpt              7.406                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:iTLB-loads                             128  thrpt             75.070                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:instructions                           128  thrpt         578037.528                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                       128  thrpt    5    524628.357 ±   35901.283  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:CPI                                   128  thrpt              0.275                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                 128  thrpt             73.427                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads                       128  thrpt           4812.432                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores                      128  thrpt           5364.028                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                 128  thrpt              5.227                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-load-misses                       128  thrpt              0.245                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-loads                             128  thrpt              1.315                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-store-misses                      128  thrpt             47.080                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:LLC-stores                            128  thrpt             66.431                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branch-misses                         128  thrpt              3.470                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:branches                              128  thrpt           3328.307                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:cycles                                128  thrpt           7184.327                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses                      128  thrpt              0.908                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-loads                            128  thrpt           4957.711                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses                     128  thrpt              0.003                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:dTLB-stores                           128  thrpt           5555.593                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses                      128  thrpt              0.007                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:iTLB-loads                            128  thrpt              0.011                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:instructions                          128  thrpt          26080.378                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                               128  thrpt    5    612094.508 ±    2279.589  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI                           128  thrpt              0.242                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses         128  thrpt             24.410                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads               128  thrpt           4644.973                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores              128  thrpt           5202.501                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses         128  thrpt              0.355                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses               128  thrpt              0.011                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                     128  thrpt              0.050                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses              128  thrpt              0.001                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                    128  thrpt              0.011                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                 128  thrpt              1.109                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:branches                      128  thrpt           3195.317                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles                        128  thrpt           6173.709                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses              128  thrpt              0.021                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                    128  thrpt           4628.488                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses             128  thrpt              0.005                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                   128  thrpt           5177.173                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses              128  thrpt              0.009                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                    128  thrpt              0.082                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions                  128  thrpt          25520.196                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                            128  thrpt    5     24750.587 ±    3499.749  ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:CPI                                        128  thrpt              0.380                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-load-misses                      128  thrpt           3986.664                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-loads                            128  thrpt         130221.102                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-dcache-stores                           128  thrpt          64920.257                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:L1-icache-load-misses                      128  thrpt            954.750                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-load-misses                            128  thrpt             44.266                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-loads                                  128  thrpt            413.363                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-store-misses                           128  thrpt            145.168                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:LLC-stores                                 128  thrpt            357.268                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:branch-misses                              128  thrpt            458.446                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:branches                                   128  thrpt         121711.279                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:cycles                                     128  thrpt         226896.282                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-load-misses                           128  thrpt             22.045                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-loads                                 128  thrpt         131742.059                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-store-misses                          128  thrpt              1.498                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:dTLB-stores                                128  thrpt          65013.481                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-load-misses                           128  thrpt              7.356                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:iTLB-loads                                 128  thrpt             95.351                 #/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:instructions                               128  thrpt         596800.769                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                    128  thrpt    5     12986.662 ±    1634.688  ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:CPI                                                128  thrpt              0.383                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt           5274.526                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-loads                                    128  thrpt         249470.338                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-dcache-stores                                   128  thrpt         126995.329                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:L1-icache-load-misses                              128  thrpt           3487.951                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-load-misses                                    128  thrpt             47.909                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-loads                                          128  thrpt            506.447                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-store-misses                                   128  thrpt            142.830                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:LLC-stores                                         128  thrpt            586.723                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:branch-misses                                      128  thrpt            435.715                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:branches                                           128  thrpt         191507.754                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:cycles                                             128  thrpt         369559.570                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-load-misses                                   128  thrpt             35.627                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-loads                                         128  thrpt         253088.404                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              1.910                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:dTLB-stores                                        128  thrpt         125894.865                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:iTLB-load-misses                                   128  thrpt             19.630                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:iTLB-loads                                         128  thrpt            201.002                 #/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:instructions                                       128  thrpt         965123.658                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                             128  thrpt    5     13627.596 ±    1496.503  ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:CPI                                         128  thrpt              0.371                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt           4410.553                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt         238342.220                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt         120374.040                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt           6058.196                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt             37.025                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-loads                                   128  thrpt            347.272                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt            125.853                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:LLC-stores                                  128  thrpt            620.738                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:branch-misses                               128  thrpt            316.153                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:branches                                    128  thrpt         183225.426                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:cycles                                      128  thrpt         344995.621                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt             17.895                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt         245314.811                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              1.431                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt         120577.061                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              9.910                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt            139.730                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:instructions                                128  thrpt         930087.105                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                            128  thrpt    5    326840.422 ±    4276.236  ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.246                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt            118.970                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt           7525.843                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt           4921.621                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              2.045                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.189                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              0.946                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              5.001                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt             21.862                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:branch-misses                              128  thrpt              3.756                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:branches                                   128  thrpt           9980.189                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:cycles                                     128  thrpt          11071.957                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              0.425                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt           7811.331                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.008                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt           5159.573                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.020                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.061                 #/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:instructions                               128  thrpt          44952.358                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                 128  thrpt    5     12805.900 ±    1534.973  ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:CPI                                             128  thrpt              0.350                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt           4774.396                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt         228803.507                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt         112469.384                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt           1964.874                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt             31.139                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-loads                                       128  thrpt            287.193                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-store-misses                                128  thrpt            135.026                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:LLC-stores                                      128  thrpt            645.638                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:branch-misses                                   128  thrpt            217.122                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:branches                                        128  thrpt         179496.986                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:cycles                                          128  thrpt         317860.550                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt             13.100                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-loads                                      128  thrpt         235254.969                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.751                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:dTLB-stores                                     128  thrpt         118078.661                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              8.634                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:iTLB-loads                                      128  thrpt             66.134                 #/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:instructions                                    128  thrpt         908202.422                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                   128  thrpt    5     34592.471 ±    5192.694  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:CPI                                               128  thrpt              0.369                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt           3146.938                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt          97076.183                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt          51325.019                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt            783.525                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-load-misses                                   128  thrpt             32.621                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-loads                                         128  thrpt            192.580                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-store-misses                                  128  thrpt            223.739                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:LLC-stores                                        128  thrpt            467.546                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:branch-misses                                     128  thrpt            303.676                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:branches                                          128  thrpt          98884.432                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:cycles                                            128  thrpt         169903.302                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt             17.217                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-loads                                        128  thrpt          99945.572                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              1.387                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:dTLB-stores                                       128  thrpt          51679.771                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              2.403                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:iTLB-loads                                        128  thrpt             57.738                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:instructions                                      128  thrpt         460825.776                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                            128  thrpt    5    122857.828 ±    9827.885  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.274                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt            598.226                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt          19318.893                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt          12661.788                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt              4.907                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              0.443                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt              2.439                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt             69.199                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt            134.678                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:branch-misses                              128  thrpt             97.689                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:branches                                   128  thrpt          22350.195                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:cycles                                     128  thrpt          30510.963                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              1.639                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt          19279.650                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.071                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt          12410.753                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              0.221                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              0.681                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:instructions                               128  thrpt         111260.533                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    881873.529 ±    4211.851  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.252                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt             35.505                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt           2820.964                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt           3399.015                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt              1.350                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              0.015                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt              0.289                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt             29.223                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt             36.342                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branch-misses                             128  thrpt              1.747                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:branches                                  128  thrpt           2610.069                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:cycles                                    128  thrpt           4318.631                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              0.536                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt           2820.263                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.006                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt           3325.594                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.014                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.006                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:instructions                              128  thrpt          17170.545                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    951859.812 ±   55276.412  ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.233                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt              1.272                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt           2760.240                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt           3343.184                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt              0.414                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              0.035                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt              0.165                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt              0.018                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt              1.135                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt           2565.799                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt           3999.241                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              0.008                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt           2765.500                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt              0.001                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt           3364.622                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.009                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              0.025                 #/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt          17144.969                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                128  thrpt    5    124051.774 ±     843.194  ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:CPI                                            128  thrpt              0.273                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt           1184.824                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt          19268.287                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt          13776.563                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt              2.643                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              1.930                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-loads                                      128  thrpt              5.219                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-store-misses                               128  thrpt             70.319                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:LLC-stores                                     128  thrpt            160.601                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:branch-misses                                  128  thrpt             94.230                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:branches                                       128  thrpt          22777.550                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:cycles                                         128  thrpt          31608.674                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt              1.937                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-loads                                     128  thrpt          18798.074                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.066                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:dTLB-stores                                    128  thrpt          13490.657                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              0.070                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              0.066                 #/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:instructions                                   128  thrpt         115704.890                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce                                                        128  thrpt    5     18094.133 ±    3809.151  ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:CPI                                                    128  thrpt              0.354                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           4153.689                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-dcache-loads                                        128  thrpt         226525.576                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-dcache-stores                                       128  thrpt         102874.030                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt           2532.354                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-load-misses                                        128  thrpt             81.448                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-loads                                              128  thrpt            528.527                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-store-misses                                       128  thrpt            162.673                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:LLC-stores                                             128  thrpt            483.188                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:branch-misses                                          128  thrpt            607.022                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:branches                                               128  thrpt         194246.712                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:cycles                                                 128  thrpt         317344.468                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-load-misses                                       128  thrpt             37.201                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-loads                                             128  thrpt         226407.258                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              2.745                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:dTLB-stores                                            128  thrpt         105016.914                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:iTLB-load-misses                                       128  thrpt             15.019                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:iTLB-loads                                             128  thrpt            212.764                 #/op
[info] ArrayOfPeriodsBenchmark.readCirce:instructions                                           128  thrpt         897541.994                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                 128  thrpt    5     18748.098 ±    2320.319  ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:CPI                                             128  thrpt              0.378                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt           4267.297                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt         216877.018                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt         104571.772                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt           2275.915                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt             87.842                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-loads                                       128  thrpt            488.467                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt            113.481                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:LLC-stores                                      128  thrpt            380.607                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:branch-misses                                   128  thrpt            506.189                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:branches                                        128  thrpt         180586.080                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:cycles                                          128  thrpt         324260.731                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt             39.219                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt         216978.933                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              2.615                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt         106089.515                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt             10.570                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt            200.161                 #/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:instructions                                    128  thrpt         857908.068                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                128  thrpt    5    168982.980 ±    1553.904  ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.243                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt             69.723                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt           7980.320                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt           5418.870                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              2.965                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.210                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              1.057                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              2.410                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             11.479                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:branch-misses                                  128  thrpt             28.261                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:branches                                       128  thrpt          27552.861                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:cycles                                         128  thrpt          22806.202                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.420                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt           7919.239                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.022                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt           5276.641                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.092                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.047                 #/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:instructions                                   128  thrpt          93676.532                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                     128  thrpt    5     17071.803 ±    2572.359  ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:CPI                                                 128  thrpt              0.339                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           3625.847                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt         204787.975                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          98991.758                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt           1290.082                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt             26.391                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-loads                                           128  thrpt            270.603                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             70.071                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:LLC-stores                                          128  thrpt            377.369                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:branch-misses                                       128  thrpt            462.132                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:branches                                            128  thrpt         170295.951                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:cycles                                              128  thrpt         269662.197                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt             27.902                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-loads                                          128  thrpt         208123.512                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              1.248                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:dTLB-stores                                         128  thrpt         101269.660                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt             10.668                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:iTLB-loads                                          128  thrpt             89.177                 #/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:instructions                                        128  thrpt         796361.366                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce                                                       128  thrpt    5     65627.993 ±    3732.900  ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:CPI                                                   128  thrpt              0.285                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt           1156.280                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          24863.098                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt          17253.748                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt             14.434                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              1.195                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-loads                                             128  thrpt              6.145                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-store-misses                                      128  thrpt            239.855                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:LLC-stores                                            128  thrpt            417.792                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:branch-misses                                         128  thrpt             96.968                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:branches                                              128  thrpt          54778.321                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:cycles                                                128  thrpt          58010.144                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              3.658                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-loads                                            128  thrpt          25163.289                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              1.472                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:dTLB-stores                                           128  thrpt          17360.500                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.154                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:iTLB-loads                                            128  thrpt              0.173                 #/op
[info] ArrayOfPeriodsBenchmark.writeCirce:instructions                                          128  thrpt         203193.609                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                128  thrpt    5    101054.143 ±    6295.993  ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.267                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt            563.357                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt          19033.499                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt          11817.670                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt             12.318                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              1.353                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              6.651                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             79.662                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt            161.201                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:branch-misses                                  128  thrpt             53.596                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:branches                                       128  thrpt          29218.305                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:cycles                                         128  thrpt          37492.595                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              2.380                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt          18989.266                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.063                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt          11989.513                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.137                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              0.376                 #/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:instructions                                   128  thrpt         140381.305                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                               128  thrpt    5    305113.710 ±    6970.181  ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.244                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt             53.006                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt           6976.024                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt           5800.637                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt              0.408                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.040                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              0.306                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             41.598                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt             54.793                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt             14.540                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:branches                                      128  thrpt          10480.295                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:cycles                                        128  thrpt          12545.580                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              0.831                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt           6931.041                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.014                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt           5567.842                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.033                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.107                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:instructions                                  128  thrpt          51407.623                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    386336.108 ±   25567.414  ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.226                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt              4.454                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt           3880.462                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt           4823.923                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              2.313                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              0.057                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              0.441                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              0.038                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt              0.118                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt             15.309                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt          10032.485                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt           9835.992                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.057                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt           3856.884                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.008                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt           4803.335                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.069                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.423                 #/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt          43454.624                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                    128  thrpt    5     86499.882 ±   10163.790  ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:CPI                                                128  thrpt              0.281                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-load-misses                              128  thrpt            960.556                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-loads                                    128  thrpt          22349.391                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-dcache-stores                                   128  thrpt          13879.212                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:L1-icache-load-misses                              128  thrpt             14.756                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-load-misses                                    128  thrpt              1.560                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-loads                                          128  thrpt              5.394                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-store-misses                                   128  thrpt             82.050                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:LLC-stores                                         128  thrpt            180.654                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:branch-misses                                      128  thrpt             98.179                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:branches                                           128  thrpt          31920.958                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:cycles                                             128  thrpt          43353.957                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-load-misses                                   128  thrpt              2.474                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-loads                                         128  thrpt          22464.622                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-store-misses                                  128  thrpt              0.071                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:dTLB-stores                                        128  thrpt          14148.591                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:iTLB-load-misses                                   128  thrpt              0.082                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:iTLB-loads                                         128  thrpt              0.242                 #/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:instructions                                       128  thrpt         154272.702                 #/op
[info] ArrayOfShortsBenchmark.readCirce                                                         128  thrpt    5    215962.979 ±    8017.208  ops/s
[info] ArrayOfShortsBenchmark.readCirce:CPI                                                     128  thrpt              0.264                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-dcache-load-misses                                   128  thrpt            342.314                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-dcache-loads                                         128  thrpt           9927.598                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-dcache-stores                                        128  thrpt           6966.975                 #/op
[info] ArrayOfShortsBenchmark.readCirce:L1-icache-load-misses                                   128  thrpt              7.869                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-load-misses                                         128  thrpt              0.753                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-loads                                               128  thrpt              3.336                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-store-misses                                        128  thrpt             17.952                 #/op
[info] ArrayOfShortsBenchmark.readCirce:LLC-stores                                              128  thrpt             69.075                 #/op
[info] ArrayOfShortsBenchmark.readCirce:branch-misses                                           128  thrpt             23.837                 #/op
[info] ArrayOfShortsBenchmark.readCirce:branches                                                128  thrpt          15349.294                 #/op
[info] ArrayOfShortsBenchmark.readCirce:cycles                                                  128  thrpt          17868.883                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-load-misses                                        128  thrpt              0.837                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-loads                                              128  thrpt          10086.327                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-store-misses                                       128  thrpt              0.021                 #/op
[info] ArrayOfShortsBenchmark.readCirce:dTLB-stores                                             128  thrpt           7371.378                 #/op
[info] ArrayOfShortsBenchmark.readCirce:iTLB-load-misses                                        128  thrpt              0.088                 #/op
[info] ArrayOfShortsBenchmark.readCirce:iTLB-loads                                              128  thrpt              0.093                 #/op
[info] ArrayOfShortsBenchmark.readCirce:instructions                                            128  thrpt          67721.372                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                   128  thrpt    5    826208.124 ±    5172.763  ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:CPI                                               128  thrpt              0.220                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-load-misses                             128  thrpt             15.160                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-loads                                   128  thrpt           2213.259                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-dcache-stores                                  128  thrpt           1858.560                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:L1-icache-load-misses                             128  thrpt              1.424                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-load-misses                                   128  thrpt              0.051                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-loads                                         128  thrpt              0.280                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-store-misses                                  128  thrpt              0.122                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:LLC-stores                                        128  thrpt              2.672                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:branch-misses                                     128  thrpt              8.201                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:branches                                          128  thrpt           5304.490                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:cycles                                            128  thrpt           4681.591                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-load-misses                                  128  thrpt              0.059                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-loads                                        128  thrpt           2212.989                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-store-misses                                 128  thrpt              0.005                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:dTLB-stores                                       128  thrpt           1832.519                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:iTLB-load-misses                                  128  thrpt              0.022                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:iTLB-loads                                        128  thrpt              0.037                 #/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:instructions                                      128  thrpt          21300.633                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala                                                  128  thrpt    5    435939.760 ±   19127.659  ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:CPI                                              128  thrpt              0.238                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-load-misses                            128  thrpt             23.087                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-loads                                  128  thrpt           7644.738                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-dcache-stores                                 128  thrpt           5719.907                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:L1-icache-load-misses                            128  thrpt              1.165                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-load-misses                                  128  thrpt              0.081                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-loads                                        128  thrpt              0.340                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-store-misses                                 128  thrpt              0.624                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:LLC-stores                                       128  thrpt              5.738                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:branch-misses                                    128  thrpt              2.379                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:branches                                         128  thrpt           8516.265                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:cycles                                           128  thrpt           8700.770                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-load-misses                                 128  thrpt              0.074                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-loads                                       128  thrpt           7711.844                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-store-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:dTLB-stores                                      128  thrpt           5748.820                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:iTLB-load-misses                                 128  thrpt              0.038                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:iTLB-loads                                       128  thrpt              0.046                 #/op
[info] ArrayOfShortsBenchmark.readJacksonScala:instructions                                     128  thrpt          36519.969                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                 128  thrpt    5   1074393.817 ±   10364.279  ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:CPI                                             128  thrpt              0.215                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-load-misses                           128  thrpt              9.447                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-loads                                 128  thrpt           1360.101                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-dcache-stores                                128  thrpt           1508.073                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:L1-icache-load-misses                           128  thrpt              0.096                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-load-misses                                 128  thrpt              0.018                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-loads                                       128  thrpt              0.083                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-store-misses                                128  thrpt              0.044                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:LLC-stores                                      128  thrpt              1.941                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:branch-misses                                   128  thrpt              3.302                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:branches                                        128  thrpt           4145.858                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:cycles                                          128  thrpt           3528.489                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-load-misses                                128  thrpt              0.038                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-loads                                      128  thrpt           1338.913                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-store-misses                               128  thrpt              0.004                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:dTLB-stores                                     128  thrpt           1466.239                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:iTLB-load-misses                                128  thrpt              0.010                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:iTLB-loads                                      128  thrpt              0.033                 #/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:instructions                                    128  thrpt          16416.811                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson                                                      128  thrpt    5    104919.070 ±    8294.942  ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:CPI                                                  128  thrpt              0.354                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-dcache-load-misses                                128  thrpt           1170.723                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-dcache-loads                                      128  thrpt          26331.652                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-dcache-stores                                     128  thrpt          22798.648                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:L1-icache-load-misses                                128  thrpt             17.075                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-load-misses                                      128  thrpt              1.423                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-loads                                            128  thrpt              5.680                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-store-misses                                     128  thrpt             69.795                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:LLC-stores                                           128  thrpt            233.818                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:branch-misses                                        128  thrpt             66.787                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:branches                                             128  thrpt          17296.350                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:cycles                                               128  thrpt          35798.735                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-load-misses                                     128  thrpt              3.961                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-loads                                           128  thrpt          26480.422                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-store-misses                                    128  thrpt              0.052                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:dTLB-stores                                          128  thrpt          22258.780                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:iTLB-load-misses                                     128  thrpt              0.222                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:iTLB-loads                                           128  thrpt              0.538                 #/op
[info] ArrayOfShortsBenchmark.readPlayJson:instructions                                         128  thrpt         101134.900                 #/op
[info] ArrayOfShortsBenchmark.writeCirce                                                        128  thrpt    5    307283.723 ±   17955.909  ops/s
[info] ArrayOfShortsBenchmark.writeCirce:CPI                                                    128  thrpt              0.300                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-dcache-load-misses                                  128  thrpt            147.897                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-dcache-loads                                        128  thrpt           7342.813                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-dcache-stores                                       128  thrpt           6498.988                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:L1-icache-load-misses                                  128  thrpt              0.602                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-load-misses                                        128  thrpt              0.435                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-loads                                              128  thrpt              1.111                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-store-misses                                       128  thrpt             49.865                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:LLC-stores                                             128  thrpt             90.084                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:branch-misses                                          128  thrpt             24.190                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:branches                                               128  thrpt           7661.144                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:cycles                                                 128  thrpt          12217.448                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-load-misses                                       128  thrpt              1.092                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-loads                                             128  thrpt           7480.804                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-store-misses                                      128  thrpt              0.041                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:dTLB-stores                                            128  thrpt           6555.136                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:iTLB-load-misses                                       128  thrpt              0.047                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:iTLB-loads                                             128  thrpt              0.055                 #/op
[info] ArrayOfShortsBenchmark.writeCirce:instructions                                           128  thrpt          40746.274                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                  128  thrpt    5   1999245.524 ±  209920.390  ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:CPI                                              128  thrpt              0.230                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-load-misses                            128  thrpt              9.081                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-loads                                  128  thrpt            700.951                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-dcache-stores                                 128  thrpt           1063.008                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:L1-icache-load-misses                            128  thrpt              0.057                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-load-misses                                  128  thrpt              0.017                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-loads                                        128  thrpt              0.063                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-store-misses                                 128  thrpt              1.307                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:LLC-stores                                       128  thrpt              3.624                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:branch-misses                                    128  thrpt              0.228                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:branches                                         128  thrpt           1628.414                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:cycles                                           128  thrpt           1902.531                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-load-misses                                 128  thrpt              0.126                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-loads                                       128  thrpt            689.138                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-store-misses                                128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:dTLB-stores                                      128  thrpt           1043.436                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-load-misses                                 128  thrpt              0.008                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:iTLB-loads                                       128  thrpt              0.022                 #/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:instructions                                     128  thrpt           8278.455                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                 128  thrpt    5   1849188.490 ±   80175.044  ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:CPI                                             128  thrpt              0.223                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-load-misses                           128  thrpt              9.078                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-loads                                 128  thrpt            906.702                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-dcache-stores                                128  thrpt           1254.543                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:L1-icache-load-misses                           128  thrpt              0.093                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-load-misses                                 128  thrpt              0.023                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-loads                                       128  thrpt              0.096                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-store-misses                                128  thrpt              1.287                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:LLC-stores                                      128  thrpt              3.553                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:branch-misses                                   128  thrpt              1.559                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:branches                                        128  thrpt           1921.654                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:cycles                                          128  thrpt           1953.876                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-load-misses                                128  thrpt              0.125                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-loads                                      128  thrpt            901.142                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:dTLB-stores                                     128  thrpt           1228.475                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:iTLB-load-misses                                128  thrpt              0.007                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:iTLB-loads                                      128  thrpt              0.015                 #/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:instructions                                    128  thrpt           8751.525                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                128  thrpt    5   2219019.239 ±   17429.610  ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:CPI                                            128  thrpt              0.219                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-load-misses                          128  thrpt              9.075                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-loads                                128  thrpt            979.046                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-dcache-stores                               128  thrpt           1115.740                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:L1-icache-load-misses                          128  thrpt              0.418                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-load-misses                                128  thrpt              0.053                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-loads                                      128  thrpt              0.156                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-store-misses                               128  thrpt              1.468                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:LLC-stores                                     128  thrpt              3.705                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:branch-misses                                  128  thrpt              0.037                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:branches                                       128  thrpt           1843.179                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:cycles                                         128  thrpt           1751.652                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-load-misses                               128  thrpt              0.138                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-loads                                     128  thrpt            953.100                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-store-misses                              128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:dTLB-stores                                    128  thrpt           1065.645                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-load-misses                               128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:iTLB-loads                                     128  thrpt              0.002                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:instructions                                   128  thrpt           8015.620                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   2353522.664 ±    5932.447  ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:CPI                                    128  thrpt              0.215                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  128  thrpt              0.622                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        128  thrpt            921.194                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       128  thrpt           1056.579                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  128  thrpt              0.385                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        128  thrpt              0.010                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              128  thrpt              0.076                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             128  thrpt              0.003                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branch-misses                          128  thrpt              0.058                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:branches                               128  thrpt           1747.613                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:cycles                                 128  thrpt           1601.345                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             128  thrpt            924.527                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      128  thrpt             ≈ 10⁻⁴                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            128  thrpt           1067.653                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       128  thrpt              0.004                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             128  thrpt              0.005                 #/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:instructions                           128  thrpt           7433.206                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson                                                     128  thrpt    5     47420.714 ±    4248.606  ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:CPI                                                 128  thrpt              0.347                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-dcache-load-misses                               128  thrpt           1200.668                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-dcache-loads                                     128  thrpt          39918.597                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-dcache-stores                                    128  thrpt          26409.675                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:L1-icache-load-misses                               128  thrpt             35.257                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-load-misses                                     128  thrpt              2.547                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-loads                                           128  thrpt             15.013                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-store-misses                                    128  thrpt             15.556                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:LLC-stores                                          128  thrpt            129.938                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:branch-misses                                       128  thrpt            151.472                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:branches                                            128  thrpt          45945.413                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:cycles                                              128  thrpt          80785.917                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-load-misses                                    128  thrpt              0.769                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-loads                                          128  thrpt          41415.789                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-store-misses                                   128  thrpt              0.046                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:dTLB-stores                                         128  thrpt          27370.733                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:iTLB-load-misses                                    128  thrpt              0.093                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:iTLB-loads                                          128  thrpt              0.223                 #/op
[info] ArrayOfShortsBenchmark.writePlayJson:instructions                                        128  thrpt         232830.712                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce                                                          128  thrpt    5     17279.591 ±    1474.050  ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:CPI                                                      128  thrpt              0.389                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-dcache-load-misses                                    128  thrpt           6080.105                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-dcache-loads                                          128  thrpt         173672.007                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-dcache-stores                                         128  thrpt          86988.655                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:L1-icache-load-misses                                    128  thrpt           3097.945                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-load-misses                                          128  thrpt             83.049                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-loads                                                128  thrpt            493.487                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-store-misses                                         128  thrpt            237.435                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:LLC-stores                                               128  thrpt            512.575                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:branch-misses                                            128  thrpt           1287.283                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:branches                                                 128  thrpt         194173.339                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:cycles                                                   128  thrpt         354596.342                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-load-misses                                         128  thrpt             41.354                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-loads                                               128  thrpt         171381.804                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-store-misses                                        128  thrpt              3.617                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:dTLB-stores                                              128  thrpt          87669.404                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:iTLB-load-misses                                         128  thrpt             13.762                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:iTLB-loads                                               128  thrpt            189.026                 #/op
[info] ArrayOfUUIDsBenchmark.readCirce:instructions                                             128  thrpt         911514.452                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                   128  thrpt    5    108541.753 ±    1212.572  ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.241                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt            366.084                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          29838.613                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt          10392.648                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt              4.340                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.665                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              3.792                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              1.862                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt             33.807                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             15.531                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:branches                                          128  thrpt          31464.185                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:cycles                                            128  thrpt          35352.061                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.298                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          30783.302                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.023                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt          10542.457                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.068                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              0.112                 #/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:instructions                                      128  thrpt         146415.860                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                  128  thrpt    5    262541.091 ±   11897.566  ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.238                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             87.962                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt          17002.396                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           8450.057                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              1.830                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.068                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.415                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              3.318                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             16.175                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              3.871                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:branches                                         128  thrpt           9948.209                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:cycles                                           128  thrpt          13830.628                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.348                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt          17683.214                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.011                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           8546.507                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.062                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.232                 #/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:instructions                                     128  thrpt          58203.872                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                       128  thrpt    5     13193.029 ±    7000.346  ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.369                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           5174.478                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt         141318.883                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          77721.451                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt           1277.135                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt             49.471                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-loads                                             128  thrpt            257.798                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt            146.738                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            420.351                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:branch-misses                                         128  thrpt           1010.792                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:branches                                              128  thrpt         156521.304                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:cycles                                                128  thrpt         279086.333                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt             17.114                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt         141680.714                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              1.128                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          77537.431                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              4.372                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt             48.517                 #/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:instructions                                          128  thrpt         755380.713                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce                                                         128  thrpt    5     39664.621 ±    1483.752  ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:CPI                                                     128  thrpt              0.288                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-load-misses                                   128  thrpt           2792.187                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-loads                                         128  thrpt          42711.518                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-dcache-stores                                        128  thrpt          34490.525                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:L1-icache-load-misses                                   128  thrpt             28.671                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-load-misses                                         128  thrpt              6.121                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-loads                                               128  thrpt             14.999                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-store-misses                                        128  thrpt            549.610                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:LLC-stores                                              128  thrpt            901.273                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:branch-misses                                           128  thrpt             29.517                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:branches                                                128  thrpt          82505.162                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:cycles                                                  128  thrpt          86837.682                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-load-misses                                        128  thrpt              8.497                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-loads                                              128  thrpt          43540.538                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-store-misses                                       128  thrpt              4.278                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:dTLB-stores                                             128  thrpt          35496.561                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:iTLB-load-misses                                        128  thrpt              0.146                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:iTLB-loads                                              128  thrpt              0.369                 #/op
[info] ArrayOfUUIDsBenchmark.writeCirce:instructions                                            128  thrpt         301662.737                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                  128  thrpt    5    137629.015 ±    4650.391  ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.252                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt            469.448                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt          16010.915                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt          11825.817                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt             10.295                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.339                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              2.451                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt            118.305                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt            191.376                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              7.818                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:branches                                         128  thrpt          21099.376                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:cycles                                           128  thrpt          26358.917                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              2.464                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt          15634.029                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.248                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt          11663.402                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.070                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.079                 #/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:instructions                                     128  thrpt         104427.931                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                 128  thrpt    5    252108.200 ±    2844.861  ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.312                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             89.082                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt           9709.278                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           9420.373                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              4.362                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.220                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              1.898                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt             64.012                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             94.129                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              3.849                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:branches                                        128  thrpt           5386.553                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:cycles                                          128  thrpt          15404.815                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              1.088                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt           9951.695                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.164                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           9998.415                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.007                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.012                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:instructions                                    128  thrpt          49390.830                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    276902.979 ±     384.116  ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.292                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              2.880                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt           9454.828                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           9566.946                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.265                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.079                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.204                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.036                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.050                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.567                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           5044.403                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt          13695.823                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.016                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt           9390.624                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           9466.637                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.017                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.014                 #/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt          46964.858                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                      128  thrpt    5     60426.219 ±    1507.449  ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.312                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt           2386.941                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt          35780.279                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt          30198.345                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt             15.853                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              2.038                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              9.769                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt            282.793                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:LLC-stores                                           128  thrpt            471.002                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:branch-misses                                        128  thrpt            148.899                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:branches                                             128  thrpt          38558.854                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:cycles                                               128  thrpt          63383.147                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              6.543                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt          36548.342                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.373                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt          30368.245                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.550                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              2.232                 #/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:instructions                                         128  thrpt         203238.753                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce                                                     128  thrpt    5     35587.384 ±   16074.182  ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:CPI                                                 128  thrpt              0.378                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-load-misses                               128  thrpt           2624.469                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-loads                                     128  thrpt         108475.832                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-dcache-stores                                    128  thrpt          44974.321                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:L1-icache-load-misses                               128  thrpt           1193.190                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-load-misses                                     128  thrpt             44.955                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-loads                                           128  thrpt            308.389                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-store-misses                                    128  thrpt            103.130                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:LLC-stores                                          128  thrpt            253.134                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:branch-misses                                       128  thrpt            311.366                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:branches                                            128  thrpt          92634.480                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:cycles                                              128  thrpt         167020.907                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-load-misses                                    128  thrpt             21.791                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-loads                                          128  thrpt         110242.731                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-store-misses                                   128  thrpt              1.160                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:dTLB-stores                                         128  thrpt          45345.309                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:iTLB-load-misses                                    128  thrpt              7.408                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:iTLB-loads                                          128  thrpt             89.849                 #/op
[info] ArrayOfYearMonthsBenchmark.readCirce:instructions                                        128  thrpt         442427.993                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                              128  thrpt    5     40950.255 ±    5911.723  ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:CPI                                          128  thrpt              0.322                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-load-misses                        128  thrpt           1246.264                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-loads                              128  thrpt          81283.653                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-dcache-stores                             128  thrpt          30603.669                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:L1-icache-load-misses                        128  thrpt            494.825                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-load-misses                              128  thrpt              8.845                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-loads                                    128  thrpt             47.397                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-store-misses                             128  thrpt              9.576                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:LLC-stores                                   128  thrpt            113.185                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:branch-misses                                128  thrpt             75.712                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:branches                                     128  thrpt          70889.688                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:cycles                                       128  thrpt         104934.378                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-load-misses                             128  thrpt              4.813                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-loads                                   128  thrpt          81614.975                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-store-misses                            128  thrpt              0.301                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:dTLB-stores                                  128  thrpt          29930.894                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-load-misses                             128  thrpt              0.888                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:iTLB-loads                                   128  thrpt             11.187                 #/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:instructions                                 128  thrpt         325994.640                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                             128  thrpt    5    651312.092 ±    4557.740  ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:CPI                                         128  thrpt              0.234                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-load-misses                       128  thrpt             66.925                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-loads                             128  thrpt           3386.482                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-dcache-stores                            128  thrpt           2416.834                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:L1-icache-load-misses                       128  thrpt              1.978                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-load-misses                             128  thrpt              0.108                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-loads                                   128  thrpt              0.530                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-store-misses                            128  thrpt              3.587                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:LLC-stores                                  128  thrpt             13.092                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:branch-misses                               128  thrpt              5.049                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:branches                                    128  thrpt           5895.117                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:cycles                                      128  thrpt           5903.047                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-load-misses                            128  thrpt              0.374                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-loads                                  128  thrpt           3452.058                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-store-misses                           128  thrpt              0.010                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:dTLB-stores                                 128  thrpt           2432.244                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-load-misses                            128  thrpt              0.018                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:iTLB-loads                                  128  thrpt              0.009                 #/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:instructions                                128  thrpt          25257.289                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                  128  thrpt    5     34752.835 ±    5511.366  ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:CPI                                              128  thrpt              0.348                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-load-misses                            128  thrpt           2860.721                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-loads                                  128  thrpt         102594.791                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-dcache-stores                                 128  thrpt          46382.485                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:L1-icache-load-misses                            128  thrpt            875.420                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-load-misses                                  128  thrpt             20.820                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-loads                                        128  thrpt            185.373                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-store-misses                                 128  thrpt            119.855                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:LLC-stores                                       128  thrpt            426.337                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:branch-misses                                    128  thrpt            206.148                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:branches                                         128  thrpt          86955.228                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:cycles                                           128  thrpt         146031.198                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-load-misses                                 128  thrpt             13.794                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-loads                                       128  thrpt         106619.566                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-store-misses                                128  thrpt              0.785                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:dTLB-stores                                      128  thrpt          48564.555                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-load-misses                                 128  thrpt              5.522                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:iTLB-loads                                       128  thrpt             69.218                 #/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:instructions                                     128  thrpt         419853.086                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                    128  thrpt    5     95393.945 ±     368.557  ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:CPI                                                128  thrpt              0.265                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-load-misses                              128  thrpt            808.815                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-loads                                    128  thrpt          23316.815                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-dcache-stores                                   128  thrpt          16611.092                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:L1-icache-load-misses                              128  thrpt              4.388                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-load-misses                                    128  thrpt              0.551                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-loads                                          128  thrpt              3.163                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-store-misses                                   128  thrpt            114.781                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:LLC-stores                                         128  thrpt            221.821                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:branch-misses                                      128  thrpt             43.771                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:branches                                           128  thrpt          33940.800                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:cycles                                             128  thrpt          40219.518                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-load-misses                                   128  thrpt              2.318                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-loads                                         128  thrpt          24308.529                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-store-misses                                  128  thrpt              0.060                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:dTLB-stores                                        128  thrpt          16620.790                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:iTLB-load-misses                                   128  thrpt              0.164                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:iTLB-loads                                         128  thrpt              0.229                 #/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:instructions                                       128  thrpt         151711.197                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                             128  thrpt    5    242775.872 ±   29001.719  ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:CPI                                         128  thrpt              0.248                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-load-misses                       128  thrpt            178.113                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-loads                             128  thrpt           9502.963                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-dcache-stores                            128  thrpt           6208.170                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:L1-icache-load-misses                       128  thrpt              0.755                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-load-misses                             128  thrpt              0.191                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-loads                                   128  thrpt              0.802                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-store-misses                            128  thrpt              7.851                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:LLC-stores                                  128  thrpt             27.817                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:branch-misses                               128  thrpt             22.756                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:branches                                    128  thrpt          12035.213                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:cycles                                      128  thrpt          15312.586                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-load-misses                            128  thrpt              0.350                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-loads                                  128  thrpt           9491.278                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-store-misses                           128  thrpt              0.011                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:dTLB-stores                                 128  thrpt           6117.175                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-load-misses                            128  thrpt              0.079                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:iTLB-loads                                  128  thrpt              0.082                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:instructions                                128  thrpt          61865.048                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                            128  thrpt    5   1110261.203 ±   17358.982  ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:CPI                                        128  thrpt              0.258                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-load-misses                      128  thrpt             22.149                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-loads                            128  thrpt           2865.552                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-dcache-stores                           128  thrpt           3101.414                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:L1-icache-load-misses                      128  thrpt              1.214                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-load-misses                            128  thrpt              0.066                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-loads                                  128  thrpt              0.276                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-store-misses                           128  thrpt             15.045                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:LLC-stores                                 128  thrpt             21.278                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:branch-misses                              128  thrpt              1.238                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:branches                                   128  thrpt           2039.633                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:cycles                                     128  thrpt           3499.040                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-load-misses                           128  thrpt              0.333                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-loads                                 128  thrpt           2837.400                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-store-misses                          128  thrpt              0.005                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:dTLB-stores                                128  thrpt           2951.981                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-load-misses                           128  thrpt              0.008                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:iTLB-loads                                 128  thrpt              0.004                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:instructions                               128  thrpt          13581.537                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5   1150304.324 ±   10712.783  ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:CPI                                128  thrpt              0.253                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses              128  thrpt              0.987                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                    128  thrpt           2751.321                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                   128  thrpt           3004.708                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses              128  thrpt              0.101                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                    128  thrpt              0.013                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                          128  thrpt              0.042                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                   128  thrpt              0.005                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                         128  thrpt              0.035                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branch-misses                      128  thrpt              1.240                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:branches                           128  thrpt           1947.582                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:cycles                             128  thrpt           3316.930                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                   128  thrpt              0.010                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                         128  thrpt           2759.693                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                  128  thrpt              0.001                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                        128  thrpt           3000.393                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                   128  thrpt              0.005                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                         128  thrpt              0.022                 #/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:instructions                       128  thrpt          13119.589                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                 128  thrpt    5    237395.318 ±   13528.498  ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:CPI                                             128  thrpt              0.254                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-load-misses                           128  thrpt            329.114                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-loads                                 128  thrpt           9947.622                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-dcache-stores                                128  thrpt           7087.676                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:L1-icache-load-misses                           128  thrpt              1.221                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-load-misses                                 128  thrpt              0.495                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-loads                                       128  thrpt              1.835                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-store-misses                                128  thrpt             16.471                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:LLC-stores                                      128  thrpt             54.611                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:branch-misses                                   128  thrpt             13.423                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:branches                                        128  thrpt          12003.705                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:cycles                                          128  thrpt          16016.414                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-load-misses                                128  thrpt              0.513                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-loads                                      128  thrpt          10343.146                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-store-misses                               128  thrpt              0.021                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:dTLB-stores                                     128  thrpt           7105.119                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-load-misses                                128  thrpt              0.062                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:iTLB-loads                                      128  thrpt              0.023                 #/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:instructions                                    128  thrpt          63041.198                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala                                                   128  thrpt    5     52955.992 ±    1930.433  ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:CPI                                               128  thrpt              0.297                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-load-misses                             128  thrpt            858.809                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-loads                                   128  thrpt          55346.851                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-dcache-stores                                  128  thrpt          21986.480                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:L1-icache-load-misses                             128  thrpt            201.772                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-load-misses                                   128  thrpt              0.796                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-loads                                         128  thrpt              4.988                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-store-misses                                  128  thrpt              6.482                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:LLC-stores                                        128  thrpt            112.180                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:branch-misses                                     128  thrpt             27.343                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:branches                                          128  thrpt          53865.848                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:cycles                                            128  thrpt          71661.720                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-load-misses                                  128  thrpt              0.847                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-loads                                        128  thrpt          55948.101                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-store-misses                                 128  thrpt              0.099                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:dTLB-stores                                       128  thrpt          21784.798                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:iTLB-load-misses                                  128  thrpt              0.422                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:iTLB-loads                                        128  thrpt              1.084                 #/op
[info] ArrayOfYearsBenchmark.readJacksonScala:instructions                                      128  thrpt         241211.449                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                  128  thrpt    5    777082.756 ±   25027.092  ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:CPI                                              128  thrpt              0.234                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-load-misses                            128  thrpt             49.951                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-loads                                  128  thrpt           2950.332                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-dcache-stores                                 128  thrpt           2140.067                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:L1-icache-load-misses                            128  thrpt              0.162                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-load-misses                                  128  thrpt              0.026                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-loads                                        128  thrpt              0.152                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-store-misses                                 128  thrpt              4.251                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:LLC-stores                                       128  thrpt             14.210                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:branch-misses                                    128  thrpt              5.270                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:branches                                         128  thrpt           4609.423                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:cycles                                           128  thrpt           4935.093                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-load-misses                                 128  thrpt              0.351                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-loads                                       128  thrpt           3016.725                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-store-misses                                128  thrpt              0.006                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:dTLB-stores                                      128  thrpt           2138.578                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:iTLB-load-misses                                 128  thrpt              0.016                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:iTLB-loads                                       128  thrpt              0.027                 #/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:instructions                                     128  thrpt          21066.900                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson                                                       128  thrpt    5     44193.152 ±    3235.167  ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:CPI                                                   128  thrpt              0.320                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-dcache-load-misses                                 128  thrpt           2363.692                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-dcache-loads                                       128  thrpt          76821.213                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-dcache-stores                                      128  thrpt          36565.227                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:L1-icache-load-misses                                 128  thrpt            621.259                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-load-misses                                       128  thrpt             16.390                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-loads                                             128  thrpt            120.092                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-store-misses                                      128  thrpt            105.763                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:LLC-stores                                            128  thrpt            385.067                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:branch-misses                                         128  thrpt            143.039                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:branches                                              128  thrpt          65890.314                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:cycles                                                128  thrpt         102788.227                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-load-misses                                      128  thrpt              9.150                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-loads                                            128  thrpt          77670.007                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-store-misses                                     128  thrpt              0.488                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:dTLB-stores                                           128  thrpt          38100.865                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:iTLB-load-misses                                      128  thrpt              3.209                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:iTLB-loads                                            128  thrpt             35.896                 #/op
[info] ArrayOfYearsBenchmark.readPlayJson:instructions                                          128  thrpt         321715.234                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                  128  thrpt    5    417144.727 ±    1622.368  ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:CPI                                              128  thrpt              0.247                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-load-misses                            128  thrpt             65.663                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-loads                                  128  thrpt           5797.310                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-dcache-stores                                 128  thrpt           3165.317                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:L1-icache-load-misses                            128  thrpt              0.549                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-load-misses                                  128  thrpt              0.136                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-loads                                        128  thrpt              0.539                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-store-misses                                 128  thrpt              2.571                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:LLC-stores                                       128  thrpt             12.166                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:branch-misses                                    128  thrpt              1.876                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:branches                                         128  thrpt           7551.749                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:cycles                                           128  thrpt           9089.915                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-load-misses                                 128  thrpt              0.178                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-loads                                       128  thrpt           5730.622                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-store-misses                                128  thrpt              0.008                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:dTLB-stores                                      128  thrpt           3115.569                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:iTLB-load-misses                                 128  thrpt              0.064                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:iTLB-loads                                       128  thrpt              0.105                 #/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:instructions                                     128  thrpt          36847.105                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                 128  thrpt    5   1640159.080 ±   29783.093  ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:CPI                                             128  thrpt              0.238                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-load-misses                           128  thrpt             15.347                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-loads                                 128  thrpt           1767.846                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-dcache-stores                                128  thrpt           1907.638                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:L1-icache-load-misses                           128  thrpt              0.059                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-load-misses                                 128  thrpt              0.009                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-loads                                       128  thrpt              0.061                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-store-misses                                128  thrpt              6.433                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:LLC-stores                                      128  thrpt             11.127                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:branch-misses                                   128  thrpt              1.446                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:branches                                        128  thrpt           1813.415                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:cycles                                          128  thrpt           2346.239                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-load-misses                                128  thrpt              0.229                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-loads                                      128  thrpt           1802.091                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-store-misses                               128  thrpt              0.003                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:dTLB-stores                                     128  thrpt           1891.515                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-load-misses                                128  thrpt              0.007                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:iTLB-loads                                      128  thrpt              0.018                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:instructions                                    128  thrpt           9840.916                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   1591535.247 ±    1847.076  ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:CPI                                     128  thrpt              0.241                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                   128  thrpt              0.423                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                         128  thrpt           1724.886                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                        128  thrpt           1829.363                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                   128  thrpt              0.070                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                         128  thrpt              0.004                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                               128  thrpt              0.019                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                        128  thrpt              0.001                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                              128  thrpt              0.007                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branch-misses                           128  thrpt              1.061                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:branches                                128  thrpt           1818.359                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:cycles                                  128  thrpt           2393.082                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                        128  thrpt              0.003                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                              128  thrpt           1723.392                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                             128  thrpt           1831.816                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                        128  thrpt              0.009                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                              128  thrpt              0.019                 #/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:instructions                            128  thrpt           9910.053                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson                                                      128  thrpt    5    361678.994 ±   33116.649  ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:CPI                                                  128  thrpt              0.251                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-dcache-load-misses                                128  thrpt            163.624                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-dcache-loads                                      128  thrpt           6089.052                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-dcache-stores                                     128  thrpt           4196.044                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:L1-icache-load-misses                                128  thrpt              0.576                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-load-misses                                      128  thrpt              0.083                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-loads                                            128  thrpt              0.695                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-store-misses                                     128  thrpt             11.065                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:LLC-stores                                           128  thrpt             28.772                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:branch-misses                                        128  thrpt              4.783                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:branches                                             128  thrpt           8159.595                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:cycles                                               128  thrpt          10345.794                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-load-misses                                     128  thrpt              0.407                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-loads                                           128  thrpt           6277.318                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-store-misses                                    128  thrpt              0.017                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:dTLB-stores                                          128  thrpt           4194.380                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:iTLB-load-misses                                     128  thrpt              0.040                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:iTLB-loads                                           128  thrpt              0.112                 #/op
[info] ArrayOfYearsBenchmark.writePlayJson:instructions                                         128  thrpt          41278.218                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce                                                        128  thrpt    5     83330.393 ±     485.988  ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:CPI                                                    128  thrpt              0.288                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt           1190.469                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-loads                                        128  thrpt          29034.573                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-dcache-stores                                       128  thrpt          13228.136                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt             56.414                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-load-misses                                        128  thrpt              1.764                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-loads                                              128  thrpt             11.904                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-store-misses                                       128  thrpt             56.053                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:LLC-stores                                             128  thrpt            141.753                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:branch-misses                                          128  thrpt             67.667                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:branches                                               128  thrpt          36406.588                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:cycles                                                 128  thrpt          45833.776                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-load-misses                                       128  thrpt              2.698                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-loads                                             128  thrpt          28923.888                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.065                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:dTLB-stores                                            128  thrpt          13321.332                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              0.208                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:iTLB-loads                                             128  thrpt              0.394                 #/op
[info] ArrayOfZoneIdsBenchmark.readCirce:instructions                                           128  thrpt         158895.850                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                 128  thrpt    5     91571.396 ±    7220.425  ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:CPI                                             128  thrpt              0.309                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt            992.253                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt          24209.565                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt          10905.239                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt             73.837                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              1.371                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-loads                                       128  thrpt              8.971                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              4.091                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:LLC-stores                                      128  thrpt             49.179                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:branch-misses                                   128  thrpt             55.404                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:branches                                        128  thrpt          29978.155                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:cycles                                          128  thrpt          40611.840                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              0.437                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt          24769.248                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.021                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt          11132.111                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.210                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              0.842                 #/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:instructions                                    128  thrpt         131568.987                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                128  thrpt    5    100300.362 ±    4006.391  ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.309                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt            740.750                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt          20110.352                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt           8319.880                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt             70.216                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.629                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              9.895                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              3.187                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt             49.867                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:branch-misses                                  128  thrpt             85.551                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:branches                                       128  thrpt          30157.277                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:cycles                                         128  thrpt          38403.659                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.498                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt          20818.422                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.027                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt           8500.619                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.097                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.158                 #/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:instructions                                   128  thrpt         124101.981                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                     128  thrpt    5     60272.523 ±    4506.376  ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:CPI                                                 128  thrpt              0.328                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt           2046.845                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          39242.187                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          22607.988                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt             94.300                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              2.326                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-loads                                           128  thrpt             35.308                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             30.987                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:LLC-stores                                          128  thrpt            259.963                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:branch-misses                                       128  thrpt            180.140                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:branches                                            128  thrpt          39015.748                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:cycles                                              128  thrpt          62109.981                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              3.210                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          40418.640                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.093                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          23636.684                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.430                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              1.066                 #/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:instructions                                        128  thrpt         189176.814                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                       128  thrpt    5    156563.138 ±    8978.034  ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:CPI                                                   128  thrpt              0.284                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt            821.450                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt          11543.768                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt           8242.229                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt              2.779                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              0.786                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-loads                                             128  thrpt              4.384                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-store-misses                                      128  thrpt            157.856                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:LLC-stores                                            128  thrpt            229.754                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:branch-misses                                         128  thrpt             28.510                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:branches                                              128  thrpt          26083.546                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:cycles                                                128  thrpt          24177.047                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              2.822                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-loads                                            128  thrpt          11826.873                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              0.384                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:dTLB-stores                                           128  thrpt           8375.268                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.035                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:iTLB-loads                                            128  thrpt              0.105                 #/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:instructions                                          128  thrpt          85165.564                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                128  thrpt    5    379283.673 ±   12594.848  ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.304                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt            457.486                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt           5108.242                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt           2881.605                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt              0.446                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.091                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              0.993                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt             26.287                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt             33.816                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:branch-misses                                  128  thrpt             14.634                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:branches                                       128  thrpt           8486.129                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:cycles                                         128  thrpt          10051.234                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              0.459                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt           5067.690                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.024                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt           2876.385                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.018                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              0.065                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:instructions                                   128  thrpt          33094.409                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                               128  thrpt    5    944286.595 ±  100484.922  ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.330                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt            126.022                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt           2078.859                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt           1394.314                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt              0.151                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.049                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              0.393                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt             26.848                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt             33.074                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt              1.036                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:branches                                      128  thrpt           2476.219                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:cycles                                        128  thrpt           4071.372                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              0.533                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt           2107.127                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.005                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt           1383.899                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.008                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.022                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:instructions                                  128  thrpt          12327.417                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    985582.456 ±   52923.288  ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.317                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt             90.361                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt           1857.618                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt           1666.205                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              0.092                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              0.024                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              0.065                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              0.023                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt              0.078                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt              0.128                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt           2426.045                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt           3844.251                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.008                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt           1849.579                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.001                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt           1650.422                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.012                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.016                 #/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt          12144.379                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                    128  thrpt    5    290982.568 ±   25918.685  ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:CPI                                                128  thrpt              0.302                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-load-misses                              128  thrpt            565.867                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-loads                                    128  thrpt           9265.335                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-dcache-stores                                   128  thrpt           4157.638                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:L1-icache-load-misses                              128  thrpt              3.390                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-load-misses                                    128  thrpt              0.585                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-loads                                          128  thrpt              2.151                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-store-misses                                   128  thrpt             25.678                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:LLC-stores                                         128  thrpt             40.142                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:branch-misses                                      128  thrpt             22.783                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:branches                                           128  thrpt          10422.774                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:cycles                                             128  thrpt          12987.372                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-load-misses                                   128  thrpt              0.634                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-loads                                         128  thrpt           9311.179                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-store-misses                                  128  thrpt              0.013                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:dTLB-stores                                        128  thrpt           4163.412                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-load-misses                                   128  thrpt              0.028                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:iTLB-loads                                         128  thrpt              0.035                 #/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:instructions                                       128  thrpt          43067.440                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                    128  thrpt    5    142553.639 ±   24846.507  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:CPI                                                128  thrpt              0.328                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt            548.886                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-loads                                    128  thrpt          21907.835                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-dcache-stores                                   128  thrpt          11251.005                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:L1-icache-load-misses                              128  thrpt            158.750                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-load-misses                                    128  thrpt              3.122                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-loads                                          128  thrpt             27.366                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-store-misses                                   128  thrpt             46.503                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:LLC-stores                                         128  thrpt             85.814                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:branch-misses                                      128  thrpt             57.845                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:branches                                           128  thrpt          20729.334                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:cycles                                             128  thrpt          32999.290                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-load-misses                                   128  thrpt              2.930                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-loads                                         128  thrpt          22338.005                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              0.129                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:dTLB-stores                                        128  thrpt          11413.846                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-load-misses                                   128  thrpt              0.658                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:iTLB-loads                                         128  thrpt             15.373                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:instructions                                       128  thrpt         100711.539                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                             128  thrpt    5    222306.070 ±   26499.636  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:CPI                                         128  thrpt              0.278                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt            109.158                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt          11265.007                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt           5323.430                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt              2.407                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              0.254                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-loads                                   128  thrpt              1.540                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt              0.622                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:LLC-stores                                  128  thrpt             11.169                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:branch-misses                               128  thrpt             30.481                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:branches                                    128  thrpt          13019.918                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:cycles                                      128  thrpt          16854.787                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              0.124                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt          11335.634                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.014                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt           5186.759                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              0.047                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt              0.124                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:instructions                                128  thrpt          60591.496                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                            128  thrpt    5    445517.768 ±   42289.623  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.283                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt             56.351                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt           5396.164                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt           2676.922                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              1.002                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.169                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              1.126                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              1.543                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt             10.369                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branch-misses                              128  thrpt              3.501                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:branches                                   128  thrpt           6559.485                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:cycles                                     128  thrpt           8602.743                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              0.134                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt           5570.618                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.007                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt           2798.203                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.048                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.125                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:instructions                               128  thrpt          30388.092                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                 128  thrpt    5     99128.848 ±    3755.992  ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:CPI                                             128  thrpt              0.302                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt           1371.105                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt          28971.752                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt          19364.422                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt             14.742                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt              1.224                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-loads                                       128  thrpt              4.958                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-store-misses                                128  thrpt             95.456                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:LLC-stores                                      128  thrpt            252.236                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:branch-misses                                   128  thrpt             68.048                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:branches                                        128  thrpt          23219.514                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:cycles                                          128  thrpt          38865.039                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              2.612                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-loads                                      128  thrpt          29926.073                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.049                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:dTLB-stores                                     128  thrpt          20075.683                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              0.166                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:iTLB-loads                                      128  thrpt              0.372                 #/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:instructions                                    128  thrpt         128887.357                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                   128  thrpt    5    242161.780 ±   15237.110  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:CPI                                               128  thrpt              0.262                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt            162.161                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt           9820.993                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt           7286.627                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt              3.151                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              0.428                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-loads                                         128  thrpt              1.959                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-store-misses                                  128  thrpt            101.041                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:LLC-stores                                        128  thrpt            140.186                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:branch-misses                                     128  thrpt             12.218                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:branches                                          128  thrpt          16072.766                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:cycles                                            128  thrpt          15577.060                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt              1.977                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-loads                                        128  thrpt           9804.655                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              0.060                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:dTLB-stores                                       128  thrpt           7108.279                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.028                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:iTLB-loads                                        128  thrpt              0.056                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:instructions                                      128  thrpt          59480.191                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                            128  thrpt    5    767599.359 ±   70209.147  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.247                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt             20.410                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt           2954.620                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt           1749.812                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt              0.806                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              0.048                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt              0.282                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt             12.889                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt             17.715                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branch-misses                              128  thrpt              2.252                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:branches                                   128  thrpt           5059.427                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:cycles                                     128  thrpt           4907.876                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              0.306                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt           2931.501                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt              0.003                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt           1718.349                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              0.025                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              0.103                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:instructions                               128  thrpt          19900.077                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                           128  thrpt    5   1388429.873 ±  185100.111  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.220                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt             19.720                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt           1563.417                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt           2064.629                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt              0.092                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              0.068                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt              0.151                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt              9.344                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt             14.561                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branch-misses                             128  thrpt              0.243                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:branches                                  128  thrpt           2310.893                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:cycles                                    128  thrpt           2742.948                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              0.301                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt           1496.122                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.006                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt           1921.157                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.014                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.026                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:instructions                              128  thrpt          12473.811                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   1502650.569 ±  122793.404  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.212                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt              0.601                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt           1451.570                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt           1943.920                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt              0.058                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              0.008                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt              0.036                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt              0.008                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt              0.175                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt           2155.991                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt           2475.625                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt              0.001                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt           1459.891                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt             ≈ 10⁻³                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt           1946.977                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.004                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              0.005                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt          11698.333                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                128  thrpt    5    626374.197 ±   31704.768  ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:CPI                                            128  thrpt              0.275                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt             68.304                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt           3622.421                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt           2567.860                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt              0.662                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              0.033                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-loads                                      128  thrpt              0.527                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-store-misses                               128  thrpt             17.922                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:LLC-stores                                     128  thrpt             34.460                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:branch-misses                                  128  thrpt              3.737                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:branches                                       128  thrpt           5254.212                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:cycles                                         128  thrpt           6080.465                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt              0.467                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-loads                                     128  thrpt           3687.397                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt              0.010                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:dTLB-stores                                    128  thrpt           2550.820                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              0.023                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              0.045                 #/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:instructions                                   128  thrpt          22137.623                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                 128  thrpt    5       756.024 ±     208.610  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:CPI                                             128  thrpt              0.338                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt         295011.044                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-loads                                 128  thrpt        4954130.542                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-dcache-stores                                128  thrpt        2734354.952                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:L1-icache-load-misses                           128  thrpt          75852.350                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-load-misses                                 128  thrpt           1715.352                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-loads                                       128  thrpt          30079.376                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-store-misses                                128  thrpt           8301.148                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:LLC-stores                                      128  thrpt          17333.110                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:branch-misses                                   128  thrpt          13242.423                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:branches                                        128  thrpt        3691062.250                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:cycles                                          128  thrpt        6510442.993                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-load-misses                                128  thrpt            838.678                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-loads                                      128  thrpt        5004516.024                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-store-misses                               128  thrpt             37.225                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:dTLB-stores                                     128  thrpt        2740633.536                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-load-misses                                128  thrpt            343.637                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:iTLB-loads                                      128  thrpt           3671.315                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:instructions                                    128  thrpt       19277363.649                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                          128  thrpt    5       763.097 ±      59.622  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:CPI                                      128  thrpt              0.307                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt         231815.848                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt        4338666.437                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt        2391401.912                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt          51017.579                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt            522.248                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-loads                                128  thrpt          13357.322                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt           7129.152                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:LLC-stores                               128  thrpt          15256.729                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:branch-misses                            128  thrpt          13706.675                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:branches                                 128  thrpt        3237042.404                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:cycles                                   128  thrpt        5239096.393                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt            452.225                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-loads                               128  thrpt        4552937.476                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt             14.507                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:dTLB-stores                              128  thrpt        2526346.927                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt            178.147                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:iTLB-loads                               128  thrpt            933.759                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:instructions                             128  thrpt       17067105.390                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                         128  thrpt    5     37726.138 ±    2334.859  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.405                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt           3862.103                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt          43924.578                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt          21258.496                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt            280.253                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              3.051                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-loads                               128  thrpt           1398.720                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt             24.932                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:LLC-stores                              128  thrpt             98.875                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branch-misses                           128  thrpt            194.682                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:branches                                128  thrpt          60085.316                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:cycles                                  128  thrpt         102170.773                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              1.280                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt          43839.663                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.078                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt          21423.061                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              4.547                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              1.191                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:instructions                            128  thrpt         252254.408                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                              128  thrpt    5       742.256 ±      96.423  ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:CPI                                          128  thrpt              0.319                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt         258537.083                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt        4692172.137                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt        2546015.764                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt          61504.834                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-load-misses                              128  thrpt           1193.951                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-loads                                    128  thrpt          21457.118                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-store-misses                             128  thrpt           7722.459                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:LLC-stores                                   128  thrpt          16181.319                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:branch-misses                                128  thrpt          13549.029                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:branches                                     128  thrpt        3528505.210                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:cycles                                       128  thrpt        5947935.110                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt            756.011                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-loads                                   128  thrpt        4705765.326                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt             27.297                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:dTLB-stores                                  128  thrpt        2670590.115                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt            329.796                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:iTLB-loads                                   128  thrpt           2351.508                 #/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:instructions                                 128  thrpt       18660465.159                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                128  thrpt    5     16506.954 ±    2734.687  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:CPI                                            128  thrpt              0.386                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt           6421.353                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-loads                                128  thrpt         191029.102                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-dcache-stores                               128  thrpt          89520.087                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt           1916.007                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-load-misses                                128  thrpt             62.123                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-loads                                      128  thrpt            724.569                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-store-misses                               128  thrpt            543.706                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:LLC-stores                                     128  thrpt           1069.082                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:branch-misses                                  128  thrpt            950.455                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:branches                                       128  thrpt         215314.573                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:cycles                                         128  thrpt         349235.479                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-load-misses                               128  thrpt             31.225                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-loads                                     128  thrpt         189621.261                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              6.850                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:dTLB-stores                                    128  thrpt          89633.479                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              9.942                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:iTLB-loads                                     128  thrpt            174.400                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:instructions                                   128  thrpt         905334.504                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                         128  thrpt    5     19200.947 ±    2591.455  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.384                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt           4511.836                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt         159614.951                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt          76625.640                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt            941.149                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt             40.158                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-loads                               128  thrpt            475.964                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt            180.661                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:LLC-stores                              128  thrpt            487.775                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branch-misses                           128  thrpt            735.882                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:branches                                128  thrpt         152116.399                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:cycles                                  128  thrpt         276955.484                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt             26.453                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt         160525.199                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              1.826                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt          77036.483                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              8.401                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt            124.669                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:instructions                            128  thrpt         720517.825                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                        128  thrpt    5    311076.624 ±   15537.119  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.335                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt            698.704                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt           7164.637                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt           5745.531                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              1.286                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.349                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              3.218                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt             76.579                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt            110.775                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              2.767                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:branches                               128  thrpt           5657.187                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:cycles                                 128  thrpt          12454.406                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              1.147                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt           7296.451                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.345                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt           5995.286                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.041                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.127                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:instructions                           128  thrpt          37128.647                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    345949.013 ±    3799.866  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.300                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt            711.442                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt           6763.822                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt           5582.269                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              1.545                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.032                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.283                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.003                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.048                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              0.370                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt           5283.184                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt          10556.253                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.019                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt           6828.419                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt              0.002                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt           5665.892                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.001                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.018                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt          35207.549                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                             128  thrpt    5     16297.677 ±    1823.700  ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:CPI                                         128  thrpt              0.451                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt           6908.130                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt         194082.071                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt          88606.752                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt           1728.972                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-load-misses                             128  thrpt             89.954                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-loads                                   128  thrpt            728.423                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-store-misses                            128  thrpt            237.027                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:LLC-stores                                  128  thrpt            604.753                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:branch-misses                               128  thrpt           1029.041                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:branches                                    128  thrpt         171848.413                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:cycles                                      128  thrpt         371670.015                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt             41.703                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-loads                                  128  thrpt         194313.026                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              2.997                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:dTLB-stores                                 128  thrpt          87301.895                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt             14.167                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:iTLB-loads                                  128  thrpt            165.892                 #/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:instructions                                128  thrpt         824491.860                 #/op
[info] BitSetBenchmark.readJsoniterScala                                                        128  thrpt    5   1400520.090 ±   15629.666  ops/s
[info] BitSetBenchmark.readJsoniterScala:CPI                                                    128  thrpt              0.215                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-dcache-load-misses                                  128  thrpt              1.711                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-dcache-loads                                        128  thrpt           1011.831                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-dcache-stores                                       128  thrpt           1100.822                 #/op
[info] BitSetBenchmark.readJsoniterScala:L1-icache-load-misses                                  128  thrpt              0.323                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-load-misses                                        128  thrpt              0.039                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-loads                                              128  thrpt              0.109                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-store-misses                                       128  thrpt              0.003                 #/op
[info] BitSetBenchmark.readJsoniterScala:LLC-stores                                             128  thrpt              0.094                 #/op
[info] BitSetBenchmark.readJsoniterScala:branch-misses                                          128  thrpt              3.138                 #/op
[info] BitSetBenchmark.readJsoniterScala:branches                                               128  thrpt           3276.048                 #/op
[info] BitSetBenchmark.readJsoniterScala:cycles                                                 128  thrpt           2748.276                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-load-misses                                       128  thrpt              0.005                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-loads                                             128  thrpt           1014.645                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-store-misses                                      128  thrpt              0.001                 #/op
[info] BitSetBenchmark.readJsoniterScala:dTLB-stores                                            128  thrpt           1092.611                 #/op
[info] BitSetBenchmark.readJsoniterScala:iTLB-load-misses                                       128  thrpt              0.004                 #/op
[info] BitSetBenchmark.readJsoniterScala:iTLB-loads                                             128  thrpt              0.006                 #/op
[info] BitSetBenchmark.readJsoniterScala:instructions                                           128  thrpt          12794.588                 #/op
[info] BitSetBenchmark.readPlayJson                                                             128  thrpt    5    121107.951 ±   30677.343  ops/s
[info] BitSetBenchmark.readPlayJson:CPI                                                         128  thrpt              0.311                 #/op
[info] BitSetBenchmark.readPlayJson:L1-dcache-load-misses                                       128  thrpt           1302.215                 #/op
[info] BitSetBenchmark.readPlayJson:L1-dcache-loads                                             128  thrpt          27007.187                 #/op
[info] BitSetBenchmark.readPlayJson:L1-dcache-stores                                            128  thrpt          20199.490                 #/op
[info] BitSetBenchmark.readPlayJson:L1-icache-load-misses                                       128  thrpt            119.324                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-load-misses                                             128  thrpt              6.223                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-loads                                                   128  thrpt             28.335                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-store-misses                                            128  thrpt             84.419                 #/op
[info] BitSetBenchmark.readPlayJson:LLC-stores                                                  128  thrpt            231.689                 #/op
[info] BitSetBenchmark.readPlayJson:branch-misses                                               128  thrpt             65.754                 #/op
[info] BitSetBenchmark.readPlayJson:branches                                                    128  thrpt          21133.324                 #/op
[info] BitSetBenchmark.readPlayJson:cycles                                                      128  thrpt          35063.668                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-load-misses                                            128  thrpt              4.535                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-loads                                                  128  thrpt          26099.576                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-store-misses                                           128  thrpt              0.137                 #/op
[info] BitSetBenchmark.readPlayJson:dTLB-stores                                                 128  thrpt          20361.797                 #/op
[info] BitSetBenchmark.readPlayJson:iTLB-load-misses                                            128  thrpt              0.782                 #/op
[info] BitSetBenchmark.readPlayJson:iTLB-loads                                                  128  thrpt              6.848                 #/op
[info] BitSetBenchmark.readPlayJson:instructions                                                128  thrpt         112670.000                 #/op
[info] BitSetBenchmark.writeJacksonScala                                                        128  thrpt    5   2240164.040 ±   13819.235  ops/s
[info] BitSetBenchmark.writeJacksonScala:CPI                                                    128  thrpt              0.221                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-dcache-load-misses                                  128  thrpt              7.228                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-dcache-loads                                        128  thrpt            558.136                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-dcache-stores                                       128  thrpt            779.449                 #/op
[info] BitSetBenchmark.writeJacksonScala:L1-icache-load-misses                                  128  thrpt              0.346                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-load-misses                                        128  thrpt              0.020                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-loads                                              128  thrpt              0.108                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-store-misses                                       128  thrpt              0.697                 #/op
[info] BitSetBenchmark.writeJacksonScala:LLC-stores                                             128  thrpt              2.181                 #/op
[info] BitSetBenchmark.writeJacksonScala:branch-misses                                          128  thrpt              1.091                 #/op
[info] BitSetBenchmark.writeJacksonScala:branches                                               128  thrpt           1930.595                 #/op
[info] BitSetBenchmark.writeJacksonScala:cycles                                                 128  thrpt           1712.642                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-load-misses                                       128  thrpt              0.096                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-loads                                             128  thrpt            559.283                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-store-misses                                      128  thrpt              0.001                 #/op
[info] BitSetBenchmark.writeJacksonScala:dTLB-stores                                            128  thrpt            773.688                 #/op
[info] BitSetBenchmark.writeJacksonScala:iTLB-load-misses                                       128  thrpt              0.006                 #/op
[info] BitSetBenchmark.writeJacksonScala:iTLB-loads                                             128  thrpt              0.002                 #/op
[info] BitSetBenchmark.writeJacksonScala:instructions                                           128  thrpt           7746.390                 #/op
[info] BitSetBenchmark.writeJsoniterScala                                                       128  thrpt    5   1951400.722 ±   24785.668  ops/s
[info] BitSetBenchmark.writeJsoniterScala:CPI                                                   128  thrpt              0.227                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses                                 128  thrpt              7.120                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-dcache-loads                                       128  thrpt            743.113                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-dcache-stores                                      128  thrpt            974.297                 #/op
[info] BitSetBenchmark.writeJsoniterScala:L1-icache-load-misses                                 128  thrpt              0.261                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-load-misses                                       128  thrpt              0.014                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-loads                                             128  thrpt              0.062                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-store-misses                                      128  thrpt              0.755                 #/op
[info] BitSetBenchmark.writeJsoniterScala:LLC-stores                                            128  thrpt              2.148                 #/op
[info] BitSetBenchmark.writeJsoniterScala:branch-misses                                         128  thrpt              3.151                 #/op
[info] BitSetBenchmark.writeJsoniterScala:branches                                              128  thrpt           2076.270                 #/op
[info] BitSetBenchmark.writeJsoniterScala:cycles                                                128  thrpt           1957.645                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-load-misses                                      128  thrpt              0.100                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-loads                                            128  thrpt            742.625                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-store-misses                                     128  thrpt              0.002                 #/op
[info] BitSetBenchmark.writeJsoniterScala:dTLB-stores                                           128  thrpt            949.207                 #/op
[info] BitSetBenchmark.writeJsoniterScala:iTLB-load-misses                                      128  thrpt              0.006                 #/op
[info] BitSetBenchmark.writeJsoniterScala:iTLB-loads                                            128  thrpt              0.026                 #/op
[info] BitSetBenchmark.writeJsoniterScala:instructions                                          128  thrpt           8608.456                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   2003666.306 ±  134239.209  ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:CPI                                           128  thrpt              0.221                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                         128  thrpt              0.502                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                               128  thrpt            723.702                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                              128  thrpt            957.806                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                         128  thrpt              0.190                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                               128  thrpt              0.027                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                     128  thrpt              0.080                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                              128  thrpt              0.003                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                    128  thrpt              0.039                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses                                 128  thrpt              3.169                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:branches                                      128  thrpt           2050.764                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:cycles                                        128  thrpt           1896.553                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                              128  thrpt              0.005                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                    128  thrpt            721.925                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                             128  thrpt             ≈ 10⁻³                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                   128  thrpt            957.222                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                              128  thrpt             ≈ 10⁻³                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                    128  thrpt              0.002                 #/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:instructions                                  128  thrpt           8564.345                 #/op
[info] BitSetBenchmark.writePlayJson                                                            128  thrpt    5     56542.897 ±    5637.897  ops/s
[info] BitSetBenchmark.writePlayJson:CPI                                                        128  thrpt              0.313                 #/op
[info] BitSetBenchmark.writePlayJson:L1-dcache-load-misses                                      128  thrpt           1181.047                 #/op
[info] BitSetBenchmark.writePlayJson:L1-dcache-loads                                            128  thrpt          37702.850                 #/op
[info] BitSetBenchmark.writePlayJson:L1-dcache-stores                                           128  thrpt          24717.597                 #/op
[info] BitSetBenchmark.writePlayJson:L1-icache-load-misses                                      128  thrpt              7.043                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-load-misses                                            128  thrpt              0.623                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-loads                                                  128  thrpt              5.192                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-store-misses                                           128  thrpt              9.111                 #/op
[info] BitSetBenchmark.writePlayJson:LLC-stores                                                 128  thrpt             72.590                 #/op
[info] BitSetBenchmark.writePlayJson:branch-misses                                              128  thrpt             98.784                 #/op
[info] BitSetBenchmark.writePlayJson:branches                                                   128  thrpt          42573.992                 #/op
[info] BitSetBenchmark.writePlayJson:cycles                                                     128  thrpt          65828.509                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-load-misses                                           128  thrpt              2.910                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-loads                                                 128  thrpt          38737.657                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-store-misses                                          128  thrpt              0.119                 #/op
[info] BitSetBenchmark.writePlayJson:dTLB-stores                                                128  thrpt          24354.047                 #/op
[info] BitSetBenchmark.writePlayJson:iTLB-load-misses                                           128  thrpt              0.280                 #/op
[info] BitSetBenchmark.writePlayJson:iTLB-loads                                                 128  thrpt              0.425                 #/op
[info] BitSetBenchmark.writePlayJson:instructions                                               128  thrpt         210360.043                 #/op
[info] ExtractFieldsBenchmark.readCirce                                                         N/A  thrpt    5   1246575.575 ±   69150.028  ops/s
[info] ExtractFieldsBenchmark.readCirce:CPI                                                     N/A  thrpt              0.299                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-dcache-load-misses                                   N/A  thrpt             69.812                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-dcache-loads                                         N/A  thrpt           2215.302                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-dcache-stores                                        N/A  thrpt           1501.382                 #/op
[info] ExtractFieldsBenchmark.readCirce:L1-icache-load-misses                                   N/A  thrpt              4.397                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-load-misses                                         N/A  thrpt              0.193                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-loads                                               N/A  thrpt              0.733                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-store-misses                                        N/A  thrpt              6.644                 #/op
[info] ExtractFieldsBenchmark.readCirce:LLC-stores                                              N/A  thrpt             19.544                 #/op
[info] ExtractFieldsBenchmark.readCirce:branch-misses                                           N/A  thrpt              1.065                 #/op
[info] ExtractFieldsBenchmark.readCirce:branches                                                N/A  thrpt           2187.547                 #/op
[info] ExtractFieldsBenchmark.readCirce:cycles                                                  N/A  thrpt           3065.413                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-load-misses                                        N/A  thrpt              0.261                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-loads                                              N/A  thrpt           2236.310                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-store-misses                                       N/A  thrpt              0.004                 #/op
[info] ExtractFieldsBenchmark.readCirce:dTLB-stores                                             N/A  thrpt           1550.275                 #/op
[info] ExtractFieldsBenchmark.readCirce:iTLB-load-misses                                        N/A  thrpt              0.014                 #/op
[info] ExtractFieldsBenchmark.readCirce:iTLB-loads                                              N/A  thrpt              0.009                 #/op
[info] ExtractFieldsBenchmark.readCirce:instructions                                            N/A  thrpt          10259.700                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava                                                   N/A  thrpt    5   5258213.467 ±  766756.573  ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:CPI                                               N/A  thrpt              0.264                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-load-misses                             N/A  thrpt              1.782                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-loads                                   N/A  thrpt            620.461                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-dcache-stores                                  N/A  thrpt            336.754                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:L1-icache-load-misses                             N/A  thrpt              0.085                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-load-misses                                   N/A  thrpt              0.003                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-loads                                         N/A  thrpt              0.026                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-store-misses                                  N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:LLC-stores                                        N/A  thrpt              0.137                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:branch-misses                                     N/A  thrpt              0.056                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:branches                                          N/A  thrpt            638.207                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:cycles                                            N/A  thrpt            709.605                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-load-misses                                  N/A  thrpt              0.001                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-loads                                        N/A  thrpt            627.932                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-store-misses                                 N/A  thrpt             ≈ 10⁻³                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:dTLB-stores                                       N/A  thrpt            335.333                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:iTLB-load-misses                                  N/A  thrpt              0.002                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:iTLB-loads                                        N/A  thrpt              0.003                 #/op
[info] ExtractFieldsBenchmark.readDslJsonJava:instructions                                      N/A  thrpt           2691.744                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala                                                  N/A  thrpt    5   1082177.370 ±   97146.658  ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:CPI                                              N/A  thrpt              0.333                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-dcache-load-misses                            N/A  thrpt             29.443                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-dcache-loads                                  N/A  thrpt           2656.963                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-dcache-stores                                 N/A  thrpt           1677.079                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:L1-icache-load-misses                            N/A  thrpt             48.389                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-load-misses                                  N/A  thrpt              0.146                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-loads                                        N/A  thrpt              0.588                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-store-misses                                 N/A  thrpt              1.572                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:LLC-stores                                       N/A  thrpt              7.355                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:branch-misses                                    N/A  thrpt              0.710                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:branches                                         N/A  thrpt           1991.761                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:cycles                                           N/A  thrpt           3478.987                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-load-misses                                 N/A  thrpt              0.067                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-loads                                       N/A  thrpt           2736.327                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-store-misses                                N/A  thrpt              0.002                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:dTLB-stores                                      N/A  thrpt           1719.394                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:iTLB-load-misses                                 N/A  thrpt              0.016                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:iTLB-loads                                       N/A  thrpt              0.047                 #/op
[info] ExtractFieldsBenchmark.readJacksonScala:instructions                                     N/A  thrpt          10437.524                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala                                                 N/A  thrpt    5  10454039.019 ±  171044.010  ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:CPI                                             N/A  thrpt              0.211                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-load-misses                           N/A  thrpt              1.257                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-loads                                 N/A  thrpt            245.804                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-dcache-stores                                N/A  thrpt            109.102                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:L1-icache-load-misses                           N/A  thrpt              0.054                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-load-misses                                 N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-loads                                       N/A  thrpt              0.015                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-store-misses                                N/A  thrpt              0.005                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:LLC-stores                                      N/A  thrpt              0.089                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:branch-misses                                   N/A  thrpt              0.017                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:branches                                        N/A  thrpt            513.316                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:cycles                                          N/A  thrpt            370.014                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-load-misses                                N/A  thrpt              0.004                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-loads                                      N/A  thrpt            239.766                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-store-misses                               N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:dTLB-stores                                     N/A  thrpt            106.913                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:iTLB-load-misses                                N/A  thrpt              0.001                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:iTLB-loads                                      N/A  thrpt              0.003                 #/op
[info] ExtractFieldsBenchmark.readJsoniterScala:instructions                                    N/A  thrpt           1751.632                 #/op
[info] ExtractFieldsBenchmark.readPlayJson                                                      N/A  thrpt    5    801847.557 ±    9911.541  ops/s
[info] ExtractFieldsBenchmark.readPlayJson:CPI                                                  N/A  thrpt              0.359                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-dcache-load-misses                                N/A  thrpt            103.576                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-dcache-loads                                      N/A  thrpt           3378.813                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-dcache-stores                                     N/A  thrpt           2389.113                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:L1-icache-load-misses                                N/A  thrpt             82.352                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-load-misses                                      N/A  thrpt              0.065                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-loads                                            N/A  thrpt              1.035                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-store-misses                                     N/A  thrpt              3.469                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:LLC-stores                                           N/A  thrpt             22.794                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:branch-misses                                        N/A  thrpt              2.370                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:branches                                             N/A  thrpt           2349.662                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:cycles                                               N/A  thrpt           4759.181                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-load-misses                                     N/A  thrpt              0.110                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-loads                                           N/A  thrpt           3568.233                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-store-misses                                    N/A  thrpt              0.008                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:dTLB-stores                                          N/A  thrpt           2414.280                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:iTLB-load-misses                                     N/A  thrpt              0.029                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:iTLB-loads                                           N/A  thrpt              0.057                 #/op
[info] ExtractFieldsBenchmark.readPlayJson:instructions                                         N/A  thrpt          13271.021                 #/op
[info] GeoJSONBenchmark.readCirce                                                               N/A  thrpt    5      5372.343 ±     417.835  ops/s
[info] GeoJSONBenchmark.readCirce:CPI                                                           N/A  thrpt              0.308                 #/op
[info] GeoJSONBenchmark.readCirce:L1-dcache-load-misses                                         N/A  thrpt          15405.091                 #/op
[info] GeoJSONBenchmark.readCirce:L1-dcache-loads                                               N/A  thrpt         419621.806                 #/op
[info] GeoJSONBenchmark.readCirce:L1-dcache-stores                                              N/A  thrpt         254617.110                 #/op
[info] GeoJSONBenchmark.readCirce:L1-icache-load-misses                                         N/A  thrpt           1392.045                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-load-misses                                               N/A  thrpt             45.333                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-loads                                                     N/A  thrpt            500.352                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-store-misses                                              N/A  thrpt            907.812                 #/op
[info] GeoJSONBenchmark.readCirce:LLC-stores                                                    N/A  thrpt           2719.518                 #/op
[info] GeoJSONBenchmark.readCirce:branch-misses                                                 N/A  thrpt            912.253                 #/op
[info] GeoJSONBenchmark.readCirce:branches                                                      N/A  thrpt         502822.735                 #/op
[info] GeoJSONBenchmark.readCirce:cycles                                                        N/A  thrpt         693974.962                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-load-misses                                              N/A  thrpt             31.851                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-loads                                                    N/A  thrpt         412678.615                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-store-misses                                             N/A  thrpt              5.226                 #/op
[info] GeoJSONBenchmark.readCirce:dTLB-stores                                                   N/A  thrpt         247195.630                 #/op
[info] GeoJSONBenchmark.readCirce:iTLB-load-misses                                              N/A  thrpt              5.444                 #/op
[info] GeoJSONBenchmark.readCirce:iTLB-loads                                                    N/A  thrpt             10.294                 #/op
[info] GeoJSONBenchmark.readCirce:instructions                                                  N/A  thrpt        2251644.512                 #/op
[info] GeoJSONBenchmark.readJacksonScala                                                        N/A  thrpt    5      7939.941 ±     319.120  ops/s
[info] GeoJSONBenchmark.readJacksonScala:CPI                                                    N/A  thrpt              0.305                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-dcache-load-misses                                  N/A  thrpt          10840.982                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-dcache-loads                                        N/A  thrpt         309596.312                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-dcache-stores                                       N/A  thrpt         248399.594                 #/op
[info] GeoJSONBenchmark.readJacksonScala:L1-icache-load-misses                                  N/A  thrpt            589.540                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-load-misses                                        N/A  thrpt             57.560                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-loads                                              N/A  thrpt            384.212                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-store-misses                                       N/A  thrpt            886.386                 #/op
[info] GeoJSONBenchmark.readJacksonScala:LLC-stores                                             N/A  thrpt           2150.799                 #/op
[info] GeoJSONBenchmark.readJacksonScala:branch-misses                                          N/A  thrpt           1107.110                 #/op
[info] GeoJSONBenchmark.readJacksonScala:branches                                               N/A  thrpt         335332.337                 #/op
[info] GeoJSONBenchmark.readJacksonScala:cycles                                                 N/A  thrpt         491105.034                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-load-misses                                       N/A  thrpt             30.831                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-loads                                             N/A  thrpt         306235.214                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-store-misses                                      N/A  thrpt              0.482                 #/op
[info] GeoJSONBenchmark.readJacksonScala:dTLB-stores                                            N/A  thrpt         253029.108                 #/op
[info] GeoJSONBenchmark.readJacksonScala:iTLB-load-misses                                       N/A  thrpt              3.642                 #/op
[info] GeoJSONBenchmark.readJacksonScala:iTLB-loads                                             N/A  thrpt              4.763                 #/op
[info] GeoJSONBenchmark.readJacksonScala:instructions                                           N/A  thrpt        1611175.442                 #/op
[info] GeoJSONBenchmark.readJsoniterScala                                                       N/A  thrpt    5     56763.011 ±    2019.549  ops/s
[info] GeoJSONBenchmark.readJsoniterScala:CPI                                                   N/A  thrpt              0.239                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-dcache-load-misses                                 N/A  thrpt            669.148                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-dcache-loads                                       N/A  thrpt          31283.133                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-dcache-stores                                      N/A  thrpt          25470.359                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:L1-icache-load-misses                                 N/A  thrpt             42.739                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-load-misses                                       N/A  thrpt              0.508                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-loads                                             N/A  thrpt              5.379                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-store-misses                                      N/A  thrpt              5.044                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:LLC-stores                                            N/A  thrpt             66.199                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:branch-misses                                         N/A  thrpt            162.129                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:branches                                              N/A  thrpt          65806.394                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:cycles                                                N/A  thrpt          68650.399                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-load-misses                                      N/A  thrpt              1.386                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-loads                                            N/A  thrpt          31654.587                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-store-misses                                     N/A  thrpt              0.076                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:dTLB-stores                                           N/A  thrpt          25871.206                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:iTLB-load-misses                                      N/A  thrpt              0.498                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:iTLB-loads                                            N/A  thrpt              0.990                 #/op
[info] GeoJSONBenchmark.readJsoniterScala:instructions                                          N/A  thrpt         287280.786                 #/op
[info] GeoJSONBenchmark.writeCirce                                                              N/A  thrpt    5      5478.090 ±     268.682  ops/s
[info] GeoJSONBenchmark.writeCirce:CPI                                                          N/A  thrpt              0.531                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-dcache-load-misses                                        N/A  thrpt           8684.297                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-dcache-loads                                              N/A  thrpt         211345.733                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-dcache-stores                                             N/A  thrpt         158732.091                 #/op
[info] GeoJSONBenchmark.writeCirce:L1-icache-load-misses                                        N/A  thrpt            956.747                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-load-misses                                              N/A  thrpt              8.514                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-loads                                                    N/A  thrpt            327.336                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-store-misses                                             N/A  thrpt           1972.368                 #/op
[info] GeoJSONBenchmark.writeCirce:LLC-stores                                                   N/A  thrpt           3357.982                 #/op
[info] GeoJSONBenchmark.writeCirce:branch-misses                                                N/A  thrpt            731.504                 #/op
[info] GeoJSONBenchmark.writeCirce:branches                                                     N/A  thrpt         243836.625                 #/op
[info] GeoJSONBenchmark.writeCirce:cycles                                                       N/A  thrpt         699787.457                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-load-misses                                             N/A  thrpt             10.858                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-loads                                                   N/A  thrpt         213654.443                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-store-misses                                            N/A  thrpt             14.024                 #/op
[info] GeoJSONBenchmark.writeCirce:dTLB-stores                                                  N/A  thrpt         159812.041                 #/op
[info] GeoJSONBenchmark.writeCirce:iTLB-load-misses                                             N/A  thrpt              2.322                 #/op
[info] GeoJSONBenchmark.writeCirce:iTLB-loads                                                   N/A  thrpt              7.234                 #/op
[info] GeoJSONBenchmark.writeCirce:instructions                                                 N/A  thrpt        1319076.316                 #/op
[info] GeoJSONBenchmark.writeJacksonScala                                                       N/A  thrpt    5      5366.346 ±      33.877  ops/s
[info] GeoJSONBenchmark.writeJacksonScala:CPI                                                   N/A  thrpt              0.510                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-dcache-load-misses                                 N/A  thrpt           3851.035                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-dcache-loads                                       N/A  thrpt         263388.788                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-dcache-stores                                      N/A  thrpt         179106.913                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:L1-icache-load-misses                                 N/A  thrpt            322.638                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-load-misses                                       N/A  thrpt              7.628                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-loads                                             N/A  thrpt            220.173                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-store-misses                                      N/A  thrpt            274.704                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:LLC-stores                                            N/A  thrpt            579.877                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:branch-misses                                         N/A  thrpt            705.538                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:branches                                              N/A  thrpt         248873.977                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:cycles                                                N/A  thrpt         717155.442                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-load-misses                                      N/A  thrpt              6.176                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-loads                                            N/A  thrpt         264830.907                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-store-misses                                     N/A  thrpt              2.240                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:dTLB-stores                                           N/A  thrpt         177270.620                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:iTLB-load-misses                                      N/A  thrpt              3.032                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:iTLB-loads                                            N/A  thrpt              5.970                 #/op
[info] GeoJSONBenchmark.writeJacksonScala:instructions                                          N/A  thrpt        1406908.162                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala                                                      N/A  thrpt    5      6973.716 ±     109.982  ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:CPI                                                  N/A  thrpt              0.586                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-dcache-load-misses                                N/A  thrpt           1649.954                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-dcache-loads                                      N/A  thrpt         131491.246                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-dcache-stores                                     N/A  thrpt          86893.637                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:L1-icache-load-misses                                N/A  thrpt            103.392                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-load-misses                                      N/A  thrpt              2.480                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-loads                                            N/A  thrpt             23.376                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-store-misses                                     N/A  thrpt            152.362                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:LLC-stores                                           N/A  thrpt            263.704                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:branch-misses                                        N/A  thrpt            515.660                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:branches                                             N/A  thrpt         152849.240                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:cycles                                               N/A  thrpt         548960.916                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-load-misses                                     N/A  thrpt              3.956                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-loads                                           N/A  thrpt         132035.223                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-store-misses                                    N/A  thrpt              8.934                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:dTLB-stores                                          N/A  thrpt          86128.489                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:iTLB-load-misses                                     N/A  thrpt              2.706                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:iTLB-loads                                           N/A  thrpt              5.511                 #/op
[info] GeoJSONBenchmark.writeJsoniterScala:instructions                                         N/A  thrpt         936258.661                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5      6834.175 ±     165.709  ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:CPI                                          N/A  thrpt              0.587                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                        N/A  thrpt           1378.170                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                              N/A  thrpt         117731.528                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                             N/A  thrpt          90869.956                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                        N/A  thrpt             47.291                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                              N/A  thrpt              7.183                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                    N/A  thrpt             29.721                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                             N/A  thrpt              1.272                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                   N/A  thrpt             50.967                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:branch-misses                                N/A  thrpt            560.589                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:branches                                     N/A  thrpt         151378.570                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:cycles                                       N/A  thrpt         549444.259                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                             N/A  thrpt              2.258                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                   N/A  thrpt         115998.896                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                            N/A  thrpt              4.569                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                  N/A  thrpt          89687.064                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                             N/A  thrpt              2.588                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                   N/A  thrpt              7.693                 #/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:instructions                                 N/A  thrpt         936415.018                 #/op
[info] GoogleMapsAPIBenchmark.readCirce                                                         N/A  thrpt    5      8803.658 ±    1006.044  ops/s
[info] GoogleMapsAPIBenchmark.readCirce:CPI                                                     N/A  thrpt              0.326                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-dcache-load-misses                                   N/A  thrpt          12271.381                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-dcache-loads                                         N/A  thrpt         327812.657                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-dcache-stores                                        N/A  thrpt         252506.509                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:L1-icache-load-misses                                   N/A  thrpt           2164.154                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-load-misses                                         N/A  thrpt             81.832                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-loads                                               N/A  thrpt            784.417                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-store-misses                                        N/A  thrpt            917.028                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:LLC-stores                                              N/A  thrpt           2098.552                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:branch-misses                                           N/A  thrpt            561.077                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:branches                                                N/A  thrpt         305843.915                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:cycles                                                  N/A  thrpt         497516.534                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-load-misses                                        N/A  thrpt             35.435                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-loads                                              N/A  thrpt         333275.421                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-store-misses                                       N/A  thrpt             13.523                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:dTLB-stores                                             N/A  thrpt         256800.768                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:iTLB-load-misses                                        N/A  thrpt             14.144                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:iTLB-loads                                              N/A  thrpt            145.103                 #/op
[info] GoogleMapsAPIBenchmark.readCirce:instructions                                            N/A  thrpt        1526668.538                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                   N/A  thrpt    5     17892.316 ±     738.201  ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:CPI                                               N/A  thrpt              0.300                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-load-misses                             N/A  thrpt           1478.448                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-loads                                   N/A  thrpt         159929.612                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-dcache-stores                                  N/A  thrpt          81088.567                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:L1-icache-load-misses                             N/A  thrpt            431.620                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-load-misses                                   N/A  thrpt              8.318                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-loads                                         N/A  thrpt             90.832                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-store-misses                                  N/A  thrpt              7.787                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:LLC-stores                                        N/A  thrpt             83.958                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:branch-misses                                     N/A  thrpt            279.054                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:branches                                          N/A  thrpt         186848.370                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:cycles                                            N/A  thrpt         231820.563                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-load-misses                                  N/A  thrpt              6.999                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-loads                                        N/A  thrpt         162214.139                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-store-misses                                 N/A  thrpt              0.732                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:dTLB-stores                                       N/A  thrpt          78761.363                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-load-misses                                  N/A  thrpt              6.886                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:iTLB-loads                                        N/A  thrpt             49.264                 #/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:instructions                                      N/A  thrpt         772384.891                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                  N/A  thrpt    5     14652.895 ±     834.129  ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:CPI                                              N/A  thrpt              0.317                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-load-misses                            N/A  thrpt           2594.340                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-loads                                  N/A  thrpt         214055.196                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-dcache-stores                                 N/A  thrpt         112431.940                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:L1-icache-load-misses                            N/A  thrpt            715.801                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-load-misses                                  N/A  thrpt             20.541                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-loads                                        N/A  thrpt            180.182                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-store-misses                                 N/A  thrpt             19.960                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:LLC-stores                                       N/A  thrpt            141.413                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:branch-misses                                    N/A  thrpt            487.823                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:branches                                         N/A  thrpt         198094.404                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:cycles                                           N/A  thrpt         290606.348                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-load-misses                                 N/A  thrpt             13.946                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-loads                                       N/A  thrpt         215585.538                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-store-misses                                N/A  thrpt              0.678                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:dTLB-stores                                      N/A  thrpt         111796.524                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:iTLB-load-misses                                 N/A  thrpt             12.524                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:iTLB-loads                                       N/A  thrpt             69.208                 #/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:instructions                                     N/A  thrpt         916018.793                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                 N/A  thrpt    5     22301.658 ±    3439.009  ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:CPI                                             N/A  thrpt              0.300                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-load-misses                           N/A  thrpt           1373.408                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-loads                                 N/A  thrpt          94394.974                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-dcache-stores                                N/A  thrpt          28829.854                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:L1-icache-load-misses                           N/A  thrpt            522.902                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-load-misses                                 N/A  thrpt             13.056                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-loads                                       N/A  thrpt            105.743                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-store-misses                                N/A  thrpt             11.660                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:LLC-stores                                      N/A  thrpt             79.028                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:branch-misses                                   N/A  thrpt            253.444                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:branches                                        N/A  thrpt         174213.320                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:cycles                                          N/A  thrpt         189369.823                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-load-misses                                N/A  thrpt              8.109                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-loads                                      N/A  thrpt          93885.139                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-store-misses                               N/A  thrpt              0.488                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:dTLB-stores                                     N/A  thrpt          28716.073                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-load-misses                                N/A  thrpt              3.577                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:iTLB-loads                                      N/A  thrpt             44.667                 #/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:instructions                                    N/A  thrpt         632163.130                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson                                                      N/A  thrpt    5      6462.275 ±     456.988  ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:CPI                                                  N/A  thrpt              0.327                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-load-misses                                N/A  thrpt          13185.546                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-loads                                      N/A  thrpt         448312.319                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-dcache-stores                                     N/A  thrpt         273634.843                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:L1-icache-load-misses                                N/A  thrpt           1843.541                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-load-misses                                      N/A  thrpt             53.218                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-loads                                            N/A  thrpt           1091.284                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-store-misses                                     N/A  thrpt            320.546                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:LLC-stores                                           N/A  thrpt           2068.773                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:branch-misses                                        N/A  thrpt            425.250                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:branches                                             N/A  thrpt         328434.562                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:cycles                                               N/A  thrpt         584724.427                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-load-misses                                     N/A  thrpt             14.710                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-loads                                           N/A  thrpt         456898.441                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-store-misses                                    N/A  thrpt              1.109                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:dTLB-stores                                          N/A  thrpt         279153.493                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:iTLB-load-misses                                     N/A  thrpt              5.668                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:iTLB-loads                                           N/A  thrpt             17.871                 #/op
[info] GoogleMapsAPIBenchmark.readPlayJson:instructions                                         N/A  thrpt        1788753.190                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce                                                        N/A  thrpt    5     12535.150 ±    1694.228  ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:CPI                                                    N/A  thrpt              0.384                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-dcache-load-misses                                  N/A  thrpt          10207.207                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-dcache-loads                                        N/A  thrpt         183735.717                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-dcache-stores                                       N/A  thrpt         126060.598                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:L1-icache-load-misses                                  N/A  thrpt           1796.608                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-load-misses                                        N/A  thrpt             53.416                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-loads                                              N/A  thrpt            792.593                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-store-misses                                       N/A  thrpt           1706.513                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:LLC-stores                                             N/A  thrpt           2994.050                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:branch-misses                                          N/A  thrpt            452.170                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:branches                                               N/A  thrpt         215285.389                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:cycles                                                 N/A  thrpt         345170.807                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-load-misses                                       N/A  thrpt             24.501                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-loads                                             N/A  thrpt         188316.318                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-store-misses                                      N/A  thrpt             15.751                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:dTLB-stores                                            N/A  thrpt         126946.628                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:iTLB-load-misses                                       N/A  thrpt             11.213                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:iTLB-loads                                             N/A  thrpt            107.018                 #/op
[info] GoogleMapsAPIBenchmark.writeCirce:instructions                                           N/A  thrpt         898128.588                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                  N/A  thrpt    5     63005.355 ±     974.586  ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:CPI                                              N/A  thrpt              0.307                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-load-misses                            N/A  thrpt           1067.211                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-loads                                  N/A  thrpt          37767.314                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-dcache-stores                                 N/A  thrpt          18610.975                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:L1-icache-load-misses                            N/A  thrpt              3.896                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-load-misses                                  N/A  thrpt              0.725                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-loads                                        N/A  thrpt              3.685                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-store-misses                                 N/A  thrpt            160.574                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:LLC-stores                                       N/A  thrpt            243.100                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:branch-misses                                    N/A  thrpt            114.394                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:branches                                         N/A  thrpt          48497.250                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:cycles                                           N/A  thrpt          61056.773                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-load-misses                                 N/A  thrpt              1.514                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-loads                                       N/A  thrpt          38103.776                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-store-misses                                N/A  thrpt              1.763                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:dTLB-stores                                      N/A  thrpt          18766.216                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-load-misses                                 N/A  thrpt              0.286                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:iTLB-loads                                       N/A  thrpt              1.292                 #/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:instructions                                     N/A  thrpt         198973.515                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                 N/A  thrpt    5     43212.944 ±     512.417  ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:CPI                                             N/A  thrpt              0.306                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-load-misses                           N/A  thrpt           1548.469                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-loads                                 N/A  thrpt          70562.948                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-dcache-stores                                N/A  thrpt          39117.405                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:L1-icache-load-misses                           N/A  thrpt             26.080                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-load-misses                                 N/A  thrpt              0.957                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-loads                                       N/A  thrpt             10.678                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-store-misses                                N/A  thrpt            287.054                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:LLC-stores                                      N/A  thrpt            408.371                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:branch-misses                                   N/A  thrpt            171.552                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:branches                                        N/A  thrpt          63138.995                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:cycles                                          N/A  thrpt          87634.388                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-load-misses                                N/A  thrpt              3.460                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-loads                                      N/A  thrpt          72139.817                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-store-misses                               N/A  thrpt              1.968                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:dTLB-stores                                     N/A  thrpt          39502.540                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-load-misses                                N/A  thrpt              0.620                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:iTLB-loads                                      N/A  thrpt              0.963                 #/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:instructions                                    N/A  thrpt         286346.935                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                N/A  thrpt    5    106134.377 ±    2254.281  ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:CPI                                            N/A  thrpt              0.252                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses                          N/A  thrpt            803.114                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-loads                                N/A  thrpt          22227.239                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-dcache-stores                               N/A  thrpt          18869.918                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:L1-icache-load-misses                          N/A  thrpt              7.383                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-load-misses                                N/A  thrpt              0.495                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-loads                                      N/A  thrpt              3.335                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-store-misses                               N/A  thrpt            160.206                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:LLC-stores                                     N/A  thrpt            241.024                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:branch-misses                                  N/A  thrpt             68.187                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:branches                                       N/A  thrpt          32140.438                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:cycles                                         N/A  thrpt          36913.846                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-load-misses                               N/A  thrpt              1.281                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-loads                                     N/A  thrpt          22496.054                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-store-misses                              N/A  thrpt              1.898                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:dTLB-stores                                    N/A  thrpt          19072.564                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-load-misses                               N/A  thrpt              0.173                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:iTLB-loads                                     N/A  thrpt              0.477                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:instructions                                   N/A  thrpt         146313.783                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                        N/A  thrpt    5    134825.721 ±   10093.631  ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:CPI                                    N/A  thrpt              0.232                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  N/A  thrpt            636.596                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        N/A  thrpt          14257.017                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       N/A  thrpt          18808.991                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  N/A  thrpt              1.109                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        N/A  thrpt              0.277                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              N/A  thrpt              0.924                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       N/A  thrpt              0.036                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             N/A  thrpt              0.095                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses                          N/A  thrpt             69.035                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:branches                               N/A  thrpt          26218.891                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:cycles                                 N/A  thrpt          27874.092                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       N/A  thrpt              0.041                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             N/A  thrpt          14182.627                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      N/A  thrpt              0.011                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            N/A  thrpt          18800.631                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       N/A  thrpt              0.101                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             N/A  thrpt              0.282                 #/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:instructions                           N/A  thrpt         119891.570                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson                                                     N/A  thrpt    5      9375.027 ±     782.364  ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:CPI                                                 N/A  thrpt              0.353                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-load-misses                               N/A  thrpt          11053.813                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-loads                                     N/A  thrpt         268865.351                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-dcache-stores                                    N/A  thrpt         162381.085                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:L1-icache-load-misses                               N/A  thrpt            724.097                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-load-misses                                     N/A  thrpt             41.057                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-loads                                           N/A  thrpt           1338.432                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-store-misses                                    N/A  thrpt            727.103                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:LLC-stores                                          N/A  thrpt           2012.313                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:branch-misses                                       N/A  thrpt            484.168                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:branches                                            N/A  thrpt         223782.473                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:cycles                                              N/A  thrpt         411990.125                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-load-misses                                    N/A  thrpt             11.759                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-loads                                          N/A  thrpt         275416.946                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-store-misses                                   N/A  thrpt              2.147                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:dTLB-stores                                         N/A  thrpt         169072.704                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:iTLB-load-misses                                    N/A  thrpt              2.095                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:iTLB-loads                                          N/A  thrpt              4.766                 #/op
[info] GoogleMapsAPIBenchmark.writePlayJson:instructions                                        N/A  thrpt        1165921.768                 #/op
[info] IntBenchmark.readCirce                                                                   N/A  thrpt    5  13395501.144 ±  413438.836  ops/s
[info] IntBenchmark.readCirce:CPI                                                               N/A  thrpt              0.299                 #/op
[info] IntBenchmark.readCirce:L1-dcache-load-misses                                             N/A  thrpt             10.374                 #/op
[info] IntBenchmark.readCirce:L1-dcache-loads                                                   N/A  thrpt            135.812                 #/op
[info] IntBenchmark.readCirce:L1-dcache-stores                                                  N/A  thrpt            103.639                 #/op
[info] IntBenchmark.readCirce:L1-icache-load-misses                                             N/A  thrpt              0.225                 #/op
[info] IntBenchmark.readCirce:LLC-load-misses                                                   N/A  thrpt              0.056                 #/op
[info] IntBenchmark.readCirce:LLC-loads                                                         N/A  thrpt              0.109                 #/op
[info] IntBenchmark.readCirce:LLC-store-misses                                                  N/A  thrpt              2.740                 #/op
[info] IntBenchmark.readCirce:LLC-stores                                                        N/A  thrpt              4.900                 #/op
[info] IntBenchmark.readCirce:branch-misses                                                     N/A  thrpt              0.032                 #/op
[info] IntBenchmark.readCirce:branches                                                          N/A  thrpt            195.605                 #/op
[info] IntBenchmark.readCirce:cycles                                                            N/A  thrpt            292.974                 #/op
[info] IntBenchmark.readCirce:dTLB-load-misses                                                  N/A  thrpt              0.093                 #/op
[info] IntBenchmark.readCirce:dTLB-loads                                                        N/A  thrpt            141.480                 #/op
[info] IntBenchmark.readCirce:dTLB-store-misses                                                 N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readCirce:dTLB-stores                                                       N/A  thrpt            115.322                 #/op
[info] IntBenchmark.readCirce:iTLB-load-misses                                                  N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readCirce:iTLB-loads                                                        N/A  thrpt              0.005                 #/op
[info] IntBenchmark.readCirce:instructions                                                      N/A  thrpt            978.506                 #/op
[info] IntBenchmark.readDslJsonJava                                                             N/A  thrpt    5  41286664.504 ±  765751.643  ops/s
[info] IntBenchmark.readDslJsonJava:CPI                                                         N/A  thrpt              0.220                 #/op
[info] IntBenchmark.readDslJsonJava:L1-dcache-load-misses                                       N/A  thrpt              0.024                 #/op
[info] IntBenchmark.readDslJsonJava:L1-dcache-loads                                             N/A  thrpt             56.722                 #/op
[info] IntBenchmark.readDslJsonJava:L1-dcache-stores                                            N/A  thrpt             18.429                 #/op
[info] IntBenchmark.readDslJsonJava:L1-icache-load-misses                                       N/A  thrpt              0.002                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-load-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-loads                                                   N/A  thrpt              0.002                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-store-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:LLC-stores                                                  N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readDslJsonJava:branch-misses                                               N/A  thrpt              0.004                 #/op
[info] IntBenchmark.readDslJsonJava:branches                                                    N/A  thrpt             97.907                 #/op
[info] IntBenchmark.readDslJsonJava:cycles                                                      N/A  thrpt             89.391                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-load-misses                                            N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-loads                                                  N/A  thrpt             56.022                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-store-misses                                           N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:dTLB-stores                                                 N/A  thrpt             18.109                 #/op
[info] IntBenchmark.readDslJsonJava:iTLB-load-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readDslJsonJava:iTLB-loads                                                  N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readDslJsonJava:instructions                                                N/A  thrpt            407.148                 #/op
[info] IntBenchmark.readJacksonScala                                                            N/A  thrpt    5  24176559.671 ±  451979.764  ops/s
[info] IntBenchmark.readJacksonScala:CPI                                                        N/A  thrpt              0.274                 #/op
[info] IntBenchmark.readJacksonScala:L1-dcache-load-misses                                      N/A  thrpt              0.082                 #/op
[info] IntBenchmark.readJacksonScala:L1-dcache-loads                                            N/A  thrpt            151.073                 #/op
[info] IntBenchmark.readJacksonScala:L1-dcache-stores                                           N/A  thrpt             71.360                 #/op
[info] IntBenchmark.readJacksonScala:L1-icache-load-misses                                      N/A  thrpt              0.027                 #/op
[info] IntBenchmark.readJacksonScala:LLC-load-misses                                            N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readJacksonScala:LLC-loads                                                  N/A  thrpt              0.003                 #/op
[info] IntBenchmark.readJacksonScala:LLC-store-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJacksonScala:LLC-stores                                                 N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJacksonScala:branch-misses                                              N/A  thrpt              0.018                 #/op
[info] IntBenchmark.readJacksonScala:branches                                                   N/A  thrpt            108.096                 #/op
[info] IntBenchmark.readJacksonScala:cycles                                                     N/A  thrpt            157.157                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-load-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-loads                                                 N/A  thrpt            152.205                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-store-misses                                          N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readJacksonScala:dTLB-stores                                                N/A  thrpt             70.989                 #/op
[info] IntBenchmark.readJacksonScala:iTLB-load-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJacksonScala:iTLB-loads                                                 N/A  thrpt              0.007                 #/op
[info] IntBenchmark.readJacksonScala:instructions                                               N/A  thrpt            572.725                 #/op
[info] IntBenchmark.readJsoniterScala                                                           N/A  thrpt    5  48139804.339 ±  322898.541  ops/s
[info] IntBenchmark.readJsoniterScala:CPI                                                       N/A  thrpt              0.222                 #/op
[info] IntBenchmark.readJsoniterScala:L1-dcache-load-misses                                     N/A  thrpt              0.041                 #/op
[info] IntBenchmark.readJsoniterScala:L1-dcache-loads                                           N/A  thrpt             57.370                 #/op
[info] IntBenchmark.readJsoniterScala:L1-dcache-stores                                          N/A  thrpt             24.276                 #/op
[info] IntBenchmark.readJsoniterScala:L1-icache-load-misses                                     N/A  thrpt              0.026                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-load-misses                                           N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-loads                                                 N/A  thrpt              0.004                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-store-misses                                          N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readJsoniterScala:LLC-stores                                                N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readJsoniterScala:branch-misses                                             N/A  thrpt              0.012                 #/op
[info] IntBenchmark.readJsoniterScala:branches                                                  N/A  thrpt             78.330                 #/op
[info] IntBenchmark.readJsoniterScala:cycles                                                    N/A  thrpt             79.601                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-load-misses                                          N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-loads                                                N/A  thrpt             57.606                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-store-misses                                         N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readJsoniterScala:dTLB-stores                                               N/A  thrpt             24.122                 #/op
[info] IntBenchmark.readJsoniterScala:iTLB-load-misses                                          N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readJsoniterScala:iTLB-loads                                                N/A  thrpt              0.006                 #/op
[info] IntBenchmark.readJsoniterScala:instructions                                              N/A  thrpt            359.261                 #/op
[info] IntBenchmark.readNaiveScala                                                              N/A  thrpt    5  31430814.998 ±  186339.087  ops/s
[info] IntBenchmark.readNaiveScala:CPI                                                          N/A  thrpt              0.230                 #/op
[info] IntBenchmark.readNaiveScala:L1-dcache-load-misses                                        N/A  thrpt              0.669                 #/op
[info] IntBenchmark.readNaiveScala:L1-dcache-loads                                              N/A  thrpt             65.172                 #/op
[info] IntBenchmark.readNaiveScala:L1-dcache-stores                                             N/A  thrpt             26.070                 #/op
[info] IntBenchmark.readNaiveScala:L1-icache-load-misses                                        N/A  thrpt              0.014                 #/op
[info] IntBenchmark.readNaiveScala:LLC-load-misses                                              N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readNaiveScala:LLC-loads                                                    N/A  thrpt              0.005                 #/op
[info] IntBenchmark.readNaiveScala:LLC-store-misses                                             N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readNaiveScala:LLC-stores                                                   N/A  thrpt              0.039                 #/op
[info] IntBenchmark.readNaiveScala:branch-misses                                                N/A  thrpt              0.012                 #/op
[info] IntBenchmark.readNaiveScala:branches                                                     N/A  thrpt            107.190                 #/op
[info] IntBenchmark.readNaiveScala:cycles                                                       N/A  thrpt            122.386                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-load-misses                                             N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-loads                                                   N/A  thrpt             65.325                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-store-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readNaiveScala:dTLB-stores                                                  N/A  thrpt             25.990                 #/op
[info] IntBenchmark.readNaiveScala:iTLB-load-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readNaiveScala:iTLB-loads                                                   N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readNaiveScala:instructions                                                 N/A  thrpt            531.208                 #/op
[info] IntBenchmark.readPlayJson                                                                N/A  thrpt    5  25045132.474 ±   50343.302  ops/s
[info] IntBenchmark.readPlayJson:CPI                                                            N/A  thrpt              0.252                 #/op
[info] IntBenchmark.readPlayJson:L1-dcache-load-misses                                          N/A  thrpt              0.035                 #/op
[info] IntBenchmark.readPlayJson:L1-dcache-loads                                                N/A  thrpt            162.713                 #/op
[info] IntBenchmark.readPlayJson:L1-dcache-stores                                               N/A  thrpt             74.824                 #/op
[info] IntBenchmark.readPlayJson:L1-icache-load-misses                                          N/A  thrpt              0.017                 #/op
[info] IntBenchmark.readPlayJson:LLC-load-misses                                                N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readPlayJson:LLC-loads                                                      N/A  thrpt              0.003                 #/op
[info] IntBenchmark.readPlayJson:LLC-store-misses                                               N/A  thrpt             ≈ 10⁻⁵                 #/op
[info] IntBenchmark.readPlayJson:LLC-stores                                                     N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readPlayJson:branch-misses                                                  N/A  thrpt              0.002                 #/op
[info] IntBenchmark.readPlayJson:branches                                                       N/A  thrpt            116.643                 #/op
[info] IntBenchmark.readPlayJson:cycles                                                         N/A  thrpt            152.092                 #/op
[info] IntBenchmark.readPlayJson:dTLB-load-misses                                               N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.readPlayJson:dTLB-loads                                                     N/A  thrpt            162.495                 #/op
[info] IntBenchmark.readPlayJson:dTLB-store-misses                                              N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readPlayJson:dTLB-stores                                                    N/A  thrpt             75.158                 #/op
[info] IntBenchmark.readPlayJson:iTLB-load-misses                                               N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.readPlayJson:iTLB-loads                                                     N/A  thrpt              0.001                 #/op
[info] IntBenchmark.readPlayJson:instructions                                                   N/A  thrpt            603.149                 #/op
[info] IntBenchmark.writeCirce                                                                  N/A  thrpt    5  21878519.165 ±  457376.136  ops/s
[info] IntBenchmark.writeCirce:CPI                                                              N/A  thrpt              0.242                 #/op
[info] IntBenchmark.writeCirce:L1-dcache-load-misses                                            N/A  thrpt              1.957                 #/op
[info] IntBenchmark.writeCirce:L1-dcache-loads                                                  N/A  thrpt            103.695                 #/op
[info] IntBenchmark.writeCirce:L1-dcache-stores                                                 N/A  thrpt             64.940                 #/op
[info] IntBenchmark.writeCirce:L1-icache-load-misses                                            N/A  thrpt              0.010                 #/op
[info] IntBenchmark.writeCirce:LLC-load-misses                                                  N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeCirce:LLC-loads                                                        N/A  thrpt              0.007                 #/op
[info] IntBenchmark.writeCirce:LLC-store-misses                                                 N/A  thrpt              0.010                 #/op
[info] IntBenchmark.writeCirce:LLC-stores                                                       N/A  thrpt              0.160                 #/op
[info] IntBenchmark.writeCirce:branch-misses                                                    N/A  thrpt              0.031                 #/op
[info] IntBenchmark.writeCirce:branches                                                         N/A  thrpt            131.456                 #/op
[info] IntBenchmark.writeCirce:cycles                                                           N/A  thrpt            177.837                 #/op
[info] IntBenchmark.writeCirce:dTLB-load-misses                                                 N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeCirce:dTLB-loads                                                       N/A  thrpt            106.427                 #/op
[info] IntBenchmark.writeCirce:dTLB-store-misses                                                N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeCirce:dTLB-stores                                                      N/A  thrpt             64.399                 #/op
[info] IntBenchmark.writeCirce:iTLB-load-misses                                                 N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeCirce:iTLB-loads                                                       N/A  thrpt              0.004                 #/op
[info] IntBenchmark.writeCirce:instructions                                                     N/A  thrpt            734.940                 #/op
[info] IntBenchmark.writeDslJsonJava                                                            N/A  thrpt    5  60135363.820 ±  889012.214  ops/s
[info] IntBenchmark.writeDslJsonJava:CPI                                                        N/A  thrpt              0.326                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-dcache-load-misses                                      N/A  thrpt              0.541                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-dcache-loads                                            N/A  thrpt             48.693                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-dcache-stores                                           N/A  thrpt             28.914                 #/op
[info] IntBenchmark.writeDslJsonJava:L1-icache-load-misses                                      N/A  thrpt              0.009                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-load-misses                                            N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-loads                                                  N/A  thrpt              0.006                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-store-misses                                           N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeDslJsonJava:LLC-stores                                                 N/A  thrpt              0.036                 #/op
[info] IntBenchmark.writeDslJsonJava:branch-misses                                              N/A  thrpt              0.015                 #/op
[info] IntBenchmark.writeDslJsonJava:branches                                                   N/A  thrpt             33.278                 #/op
[info] IntBenchmark.writeDslJsonJava:cycles                                                     N/A  thrpt             65.006                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-load-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-loads                                                 N/A  thrpt             48.983                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-store-misses                                          N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeDslJsonJava:dTLB-stores                                                N/A  thrpt             28.618                 #/op
[info] IntBenchmark.writeDslJsonJava:iTLB-load-misses                                           N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeDslJsonJava:iTLB-loads                                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeDslJsonJava:instructions                                               N/A  thrpt            199.363                 #/op
[info] IntBenchmark.writeJacksonScala                                                           N/A  thrpt    5  25554263.045 ±  602646.798  ops/s
[info] IntBenchmark.writeJacksonScala:CPI                                                       N/A  thrpt              0.316                 #/op
[info] IntBenchmark.writeJacksonScala:L1-dcache-load-misses                                     N/A  thrpt              0.555                 #/op
[info] IntBenchmark.writeJacksonScala:L1-dcache-loads                                           N/A  thrpt            133.428                 #/op
[info] IntBenchmark.writeJacksonScala:L1-dcache-stores                                          N/A  thrpt             79.525                 #/op
[info] IntBenchmark.writeJacksonScala:L1-icache-load-misses                                     N/A  thrpt              0.030                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-load-misses                                           N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-loads                                                 N/A  thrpt              0.007                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-store-misses                                          N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJacksonScala:LLC-stores                                                N/A  thrpt              0.034                 #/op
[info] IntBenchmark.writeJacksonScala:branch-misses                                             N/A  thrpt              0.010                 #/op
[info] IntBenchmark.writeJacksonScala:branches                                                  N/A  thrpt             83.720                 #/op
[info] IntBenchmark.writeJacksonScala:cycles                                                    N/A  thrpt            143.174                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-load-misses                                          N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-loads                                                N/A  thrpt            132.624                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-store-misses                                         N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJacksonScala:dTLB-stores                                               N/A  thrpt             78.506                 #/op
[info] IntBenchmark.writeJacksonScala:iTLB-load-misses                                          N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJacksonScala:iTLB-loads                                                N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJacksonScala:instructions                                              N/A  thrpt            452.917                 #/op
[info] IntBenchmark.writeJsoniterScala                                                          N/A  thrpt    5  49640156.908 ± 3248112.902  ops/s
[info] IntBenchmark.writeJsoniterScala:CPI                                                      N/A  thrpt              0.251                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-dcache-load-misses                                    N/A  thrpt              0.541                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-dcache-loads                                          N/A  thrpt             56.511                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-dcache-stores                                         N/A  thrpt             39.032                 #/op
[info] IntBenchmark.writeJsoniterScala:L1-icache-load-misses                                    N/A  thrpt              0.017                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-load-misses                                          N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-loads                                                N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-store-misses                                         N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:LLC-stores                                               N/A  thrpt              0.033                 #/op
[info] IntBenchmark.writeJsoniterScala:branch-misses                                            N/A  thrpt              0.012                 #/op
[info] IntBenchmark.writeJsoniterScala:branches                                                 N/A  thrpt             54.580                 #/op
[info] IntBenchmark.writeJsoniterScala:cycles                                                   N/A  thrpt             76.963                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-load-misses                                         N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-loads                                               N/A  thrpt             56.997                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-store-misses                                        N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScala:dTLB-stores                                              N/A  thrpt             38.160                 #/op
[info] IntBenchmark.writeJsoniterScala:iTLB-load-misses                                         N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:iTLB-loads                                               N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScala:instructions                                             N/A  thrpt            306.440                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                  N/A  thrpt    5  62812086.523 ±  234783.495  ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:CPI                                              N/A  thrpt              0.229                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                            N/A  thrpt              0.013                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                                  N/A  thrpt             48.470                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                                 N/A  thrpt             36.380                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                            N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                                  N/A  thrpt             ≈ 10⁻³                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                        N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                       N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:branch-misses                                    N/A  thrpt              0.002                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:branches                                         N/A  thrpt             42.087                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:cycles                                           N/A  thrpt             57.691                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                       N/A  thrpt             48.254                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                                N/A  thrpt             ≈ 10⁻⁵                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                      N/A  thrpt             36.210                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                                 N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                       N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:instructions                                     N/A  thrpt            251.402                 #/op
[info] IntBenchmark.writeNaiveScala                                                             N/A  thrpt    5  24849140.399 ± 3403995.666  ops/s
[info] IntBenchmark.writeNaiveScala:CPI                                                         N/A  thrpt              0.230                 #/op
[info] IntBenchmark.writeNaiveScala:L1-dcache-load-misses                                       N/A  thrpt              1.934                 #/op
[info] IntBenchmark.writeNaiveScala:L1-dcache-loads                                             N/A  thrpt             91.285                 #/op
[info] IntBenchmark.writeNaiveScala:L1-dcache-stores                                            N/A  thrpt             56.896                 #/op
[info] IntBenchmark.writeNaiveScala:L1-icache-load-misses                                       N/A  thrpt              0.012                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-load-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-loads                                                   N/A  thrpt              0.005                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-store-misses                                            N/A  thrpt              0.011                 #/op
[info] IntBenchmark.writeNaiveScala:LLC-stores                                                  N/A  thrpt              0.145                 #/op
[info] IntBenchmark.writeNaiveScala:branch-misses                                               N/A  thrpt              0.012                 #/op
[info] IntBenchmark.writeNaiveScala:branches                                                    N/A  thrpt            116.442                 #/op
[info] IntBenchmark.writeNaiveScala:cycles                                                      N/A  thrpt            141.869                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-load-misses                                            N/A  thrpt              0.003                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-loads                                                  N/A  thrpt             87.343                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-store-misses                                           N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeNaiveScala:dTLB-stores                                                 N/A  thrpt             54.541                 #/op
[info] IntBenchmark.writeNaiveScala:iTLB-load-misses                                            N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeNaiveScala:iTLB-loads                                                  N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] IntBenchmark.writeNaiveScala:instructions                                                N/A  thrpt            616.747                 #/op
[info] IntBenchmark.writePlayJson                                                               N/A  thrpt    5   3459363.389 ±  126579.982  ops/s
[info] IntBenchmark.writePlayJson:CPI                                                           N/A  thrpt              0.318                 #/op
[info] IntBenchmark.writePlayJson:L1-dcache-load-misses                                         N/A  thrpt             10.528                 #/op
[info] IntBenchmark.writePlayJson:L1-dcache-loads                                               N/A  thrpt            552.666                 #/op
[info] IntBenchmark.writePlayJson:L1-dcache-stores                                              N/A  thrpt            302.166                 #/op
[info] IntBenchmark.writePlayJson:L1-icache-load-misses                                         N/A  thrpt              0.223                 #/op
[info] IntBenchmark.writePlayJson:LLC-load-misses                                               N/A  thrpt              0.063                 #/op
[info] IntBenchmark.writePlayJson:LLC-loads                                                     N/A  thrpt              0.129                 #/op
[info] IntBenchmark.writePlayJson:LLC-store-misses                                              N/A  thrpt              0.048                 #/op
[info] IntBenchmark.writePlayJson:LLC-stores                                                    N/A  thrpt              0.837                 #/op
[info] IntBenchmark.writePlayJson:branch-misses                                                 N/A  thrpt              0.082                 #/op
[info] IntBenchmark.writePlayJson:branches                                                      N/A  thrpt            683.139                 #/op
[info] IntBenchmark.writePlayJson:cycles                                                        N/A  thrpt           1043.686                 #/op
[info] IntBenchmark.writePlayJson:dTLB-load-misses                                              N/A  thrpt              0.027                 #/op
[info] IntBenchmark.writePlayJson:dTLB-loads                                                    N/A  thrpt            538.199                 #/op
[info] IntBenchmark.writePlayJson:dTLB-store-misses                                             N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writePlayJson:dTLB-stores                                                   N/A  thrpt            295.065                 #/op
[info] IntBenchmark.writePlayJson:iTLB-load-misses                                              N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writePlayJson:iTLB-loads                                                    N/A  thrpt              0.001                 #/op
[info] IntBenchmark.writePlayJson:instructions                                                  N/A  thrpt           3286.654                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                              128  thrpt    5    176351.436 ±    2061.112  ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.273                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt            490.912                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt          15395.412                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt          14979.572                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              6.238                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.314                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              1.859                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              6.729                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             78.554                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:branch-misses                                128  thrpt             11.397                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:branches                                     128  thrpt          12899.380                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:cycles                                       128  thrpt          21106.559                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.551                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt          14772.864                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.024                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt          14278.412                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.103                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.064                 #/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:instructions                                 128  thrpt          77270.252                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson                                                   128  thrpt    5     42950.879 ±   16089.508  ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:CPI                                               128  thrpt              0.350                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           3331.750                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          75123.274                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          48752.765                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt            986.213                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt             18.752                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-loads                                         128  thrpt            151.748                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             82.826                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:LLC-stores                                        128  thrpt            363.321                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:branch-misses                                     128  thrpt            215.100                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:branches                                          128  thrpt          50399.391                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:cycles                                            128  thrpt         105673.312                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt             10.099                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          73985.441                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.499                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          48862.108                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              7.453                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:iTLB-loads                                        128  thrpt             45.510                 #/op
[info] IntMapOfBooleansBenchmark.readPlayJson:instructions                                      128  thrpt         302093.436                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    226009.990 ±   14909.942  ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.254                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt            102.218                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt          10346.920                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           6627.284                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              2.483                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.107                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              1.062                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt             15.960                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt             29.658                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:branch-misses                                128  thrpt             11.247                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:branches                                     128  thrpt          13477.338                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:cycles                                       128  thrpt          16675.768                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.470                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt          10418.562                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.009                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           6636.662                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.076                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.154                 #/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:instructions                                 128  thrpt          65561.339                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5    533108.825 ±   15738.809  ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.301                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             47.603                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           4508.474                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           3337.760                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.469                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.285                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.591                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt             21.471                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt             27.600                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              1.487                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:branches                                    128  thrpt           5510.539                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:cycles                                      128  thrpt           7178.675                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.587                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           4552.925                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.006                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           3316.662                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.017                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.010                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:instructions                                128  thrpt          23866.172                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    571313.995 ±    8137.980  ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.280                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt             19.724                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           4481.182                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           3278.492                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              2.086                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.073                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.458                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.038                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              1.173                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              0.589                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           5566.513                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           6735.554                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.178                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           4495.924                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.005                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           3268.112                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.020                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.044                 #/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          24078.272                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson                                                  128  thrpt    5     75371.280 ±   19598.969  ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:CPI                                              128  thrpt              0.320                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt           1221.227                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt          50392.364                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt          27585.676                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt            509.711                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              8.072                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-loads                                        128  thrpt             48.087                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             62.030                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:LLC-stores                                       128  thrpt            161.321                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:branch-misses                                    128  thrpt             69.001                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:branches                                         128  thrpt          38867.697                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:cycles                                           128  thrpt          63832.833                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              5.820                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-loads                                       128  thrpt          47507.653                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.231                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:dTLB-stores                                      128  thrpt          25809.886                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              1.217                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:iTLB-loads                                       128  thrpt             21.788                 #/op
[info] IntMapOfBooleansBenchmark.writePlayJson:instructions                                     128  thrpt         199568.954                 #/op
[info] ListOfBooleansBenchmark.readCirce                                                        128  thrpt    5    384555.496 ±   14925.697  ops/s
[info] ListOfBooleansBenchmark.readCirce:CPI                                                    128  thrpt              0.287                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-dcache-load-misses                                  128  thrpt            176.494                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-dcache-loads                                        128  thrpt           6340.485                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-dcache-stores                                       128  thrpt           5720.088                 #/op
[info] ListOfBooleansBenchmark.readCirce:L1-icache-load-misses                                  128  thrpt              2.402                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-load-misses                                        128  thrpt              0.252                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-loads                                              128  thrpt              1.616                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-store-misses                                       128  thrpt             27.607                 #/op
[info] ListOfBooleansBenchmark.readCirce:LLC-stores                                             128  thrpt             56.607                 #/op
[info] ListOfBooleansBenchmark.readCirce:branch-misses                                          128  thrpt             10.067                 #/op
[info] ListOfBooleansBenchmark.readCirce:branches                                               128  thrpt           7425.382                 #/op
[info] ListOfBooleansBenchmark.readCirce:cycles                                                 128  thrpt           9991.989                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-load-misses                                       128  thrpt              1.027                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-loads                                             128  thrpt           6558.782                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-store-misses                                      128  thrpt              0.012                 #/op
[info] ListOfBooleansBenchmark.readCirce:dTLB-stores                                            128  thrpt           5922.190                 #/op
[info] ListOfBooleansBenchmark.readCirce:iTLB-load-misses                                       128  thrpt              0.042                 #/op
[info] ListOfBooleansBenchmark.readCirce:iTLB-loads                                             128  thrpt              0.090                 #/op
[info] ListOfBooleansBenchmark.readCirce:instructions                                           128  thrpt          34845.684                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala                                                 128  thrpt    5    838561.555 ±   11031.359  ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:CPI                                             128  thrpt              0.235                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                           128  thrpt             55.403                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                                 128  thrpt           3211.114                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                                128  thrpt           2554.047                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                           128  thrpt              0.570                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-load-misses                                 128  thrpt              0.035                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-loads                                       128  thrpt              0.370                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-store-misses                                128  thrpt              0.316                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:LLC-stores                                      128  thrpt              4.728                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:branch-misses                                   128  thrpt              2.878                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:branches                                        128  thrpt           4745.711                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:cycles                                          128  thrpt           4586.801                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                                128  thrpt              0.034                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-loads                                      128  thrpt           3315.798                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                               128  thrpt              0.003                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:dTLB-stores                                     128  thrpt           2604.685                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                                128  thrpt              0.023                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:iTLB-loads                                      128  thrpt              0.063                 #/op
[info] ListOfBooleansBenchmark.readJacksonScala:instructions                                    128  thrpt          19513.837                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala                                                128  thrpt    5   1667859.115 ±   48491.368  ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:CPI                                            128  thrpt              0.226                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                          128  thrpt             48.263                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                                128  thrpt           1576.229                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                               128  thrpt           1730.380                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                          128  thrpt              0.504                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                                128  thrpt              0.018                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-loads                                      128  thrpt              0.150                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                               128  thrpt              0.344                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:LLC-stores                                     128  thrpt              3.693                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:branch-misses                                  128  thrpt              1.288                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:branches                                       128  thrpt           2462.562                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:cycles                                         128  thrpt           2313.461                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                               128  thrpt              0.027                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                     128  thrpt           1618.927                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                              128  thrpt              0.004                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                    128  thrpt           1802.823                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                               128  thrpt              0.024                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                     128  thrpt              0.069                 #/op
[info] ListOfBooleansBenchmark.readJsoniterScala:instructions                                   128  thrpt          10235.030                 #/op
[info] ListOfBooleansBenchmark.readPlayJson                                                     128  thrpt    5    188772.259 ±    9738.865  ops/s
[info] ListOfBooleansBenchmark.readPlayJson:CPI                                                 128  thrpt              0.302                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                               128  thrpt            700.828                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                     128  thrpt          15083.056                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                    128  thrpt          13371.370                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                               128  thrpt              3.466                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-load-misses                                     128  thrpt              0.439                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-loads                                           128  thrpt              2.474                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-store-misses                                    128  thrpt             91.295                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:LLC-stores                                          128  thrpt            224.153                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:branch-misses                                       128  thrpt             28.135                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:branches                                            128  thrpt          11692.686                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:cycles                                              128  thrpt          20241.619                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                    128  thrpt              1.321                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-loads                                          128  thrpt          15784.630                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                   128  thrpt              0.061                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:dTLB-stores                                         128  thrpt          13822.206                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                    128  thrpt              0.141                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:iTLB-loads                                          128  thrpt              0.346                 #/op
[info] ListOfBooleansBenchmark.readPlayJson:instructions                                        128  thrpt          66937.074                 #/op
[info] ListOfBooleansBenchmark.writeCirce                                                       128  thrpt    5    461144.337 ±   42924.217  ops/s
[info] ListOfBooleansBenchmark.writeCirce:CPI                                                   128  thrpt              0.290                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                                 128  thrpt             82.283                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-dcache-loads                                       128  thrpt           6600.562                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-dcache-stores                                      128  thrpt           6093.995                 #/op
[info] ListOfBooleansBenchmark.writeCirce:L1-icache-load-misses                                 128  thrpt              1.478                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-load-misses                                       128  thrpt              0.145                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-loads                                             128  thrpt              0.824                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-store-misses                                      128  thrpt             54.160                 #/op
[info] ListOfBooleansBenchmark.writeCirce:LLC-stores                                            128  thrpt             77.853                 #/op
[info] ListOfBooleansBenchmark.writeCirce:branch-misses                                         128  thrpt             10.369                 #/op
[info] ListOfBooleansBenchmark.writeCirce:branches                                              128  thrpt           5366.323                 #/op
[info] ListOfBooleansBenchmark.writeCirce:cycles                                                128  thrpt           8132.651                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-load-misses                                      128  thrpt              1.614                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-loads                                            128  thrpt           6800.042                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-store-misses                                     128  thrpt              0.020                 #/op
[info] ListOfBooleansBenchmark.writeCirce:dTLB-stores                                           128  thrpt           6167.661                 #/op
[info] ListOfBooleansBenchmark.writeCirce:iTLB-load-misses                                      128  thrpt              0.021                 #/op
[info] ListOfBooleansBenchmark.writeCirce:iTLB-loads                                            128  thrpt              0.030                 #/op
[info] ListOfBooleansBenchmark.writeCirce:instructions                                          128  thrpt          28046.544                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala                                                128  thrpt    5   1371059.902 ±   20455.008  ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:CPI                                            128  thrpt              0.243                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                          128  thrpt             12.444                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                                128  thrpt           2924.871                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                               128  thrpt           1587.315                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                          128  thrpt              0.524                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                                128  thrpt              0.027                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-loads                                      128  thrpt              0.134                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                               128  thrpt              3.152                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:LLC-stores                                     128  thrpt              6.880                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:branch-misses                                  128  thrpt              1.170                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:branches                                       128  thrpt           2019.580                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:cycles                                         128  thrpt           2797.738                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                               128  thrpt              0.193                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                     128  thrpt           2895.233                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                              128  thrpt              0.001                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                    128  thrpt           1544.612                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                               128  thrpt              0.016                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                     128  thrpt              0.015                 #/op
[info] ListOfBooleansBenchmark.writeJacksonScala:instructions                                   128  thrpt          11514.108                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala                                               128  thrpt    5   2737259.786 ±  130243.364  ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:CPI                                           128  thrpt              0.240                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                         128  thrpt             12.073                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                               128  thrpt            994.262                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                              128  thrpt           1180.088                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                         128  thrpt              0.050                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                               128  thrpt              0.015                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                     128  thrpt              0.062                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                              128  thrpt              4.643                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                    128  thrpt              8.193                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:branch-misses                                 128  thrpt              1.105                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:branches                                      128  thrpt           1408.764                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:cycles                                        128  thrpt           1399.114                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                              128  thrpt              0.183                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                    128  thrpt            983.937                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                             128  thrpt              0.002                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                   128  thrpt           1134.012                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                              128  thrpt              0.004                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                    128  thrpt              0.007                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:instructions                                  128  thrpt           5832.295                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   2930311.798 ±   97957.329  ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                   128  thrpt              0.228                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                 128  thrpt              0.243                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                       128  thrpt            953.373                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                      128  thrpt           1136.330                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                 128  thrpt              0.038                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                       128  thrpt              0.018                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                             128  thrpt              0.046                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                      128  thrpt              0.001                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                            128  thrpt              0.011                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                         128  thrpt              1.029                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                              128  thrpt           1383.567                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                                128  thrpt           1304.757                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                      128  thrpt              0.002                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                            128  thrpt            950.486                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                     128  thrpt              0.001                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                           128  thrpt           1121.814                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                      128  thrpt              0.005                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                            128  thrpt              0.021                 #/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                          128  thrpt           5723.554                 #/op
[info] ListOfBooleansBenchmark.writePlayJson                                                    128  thrpt    5    657951.891 ±   85789.415  ops/s
[info] ListOfBooleansBenchmark.writePlayJson:CPI                                                128  thrpt              0.269                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                              128  thrpt             37.441                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                    128  thrpt           5532.258                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                   128  thrpt           2860.043                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                              128  thrpt              0.536                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-load-misses                                    128  thrpt              0.405                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-loads                                          128  thrpt              1.494                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-store-misses                                   128  thrpt              4.171                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:LLC-stores                                         128  thrpt             13.792                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:branch-misses                                      128  thrpt              5.257                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:branches                                           128  thrpt           3720.584                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:cycles                                             128  thrpt           5745.654                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                   128  thrpt              0.336                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-loads                                         128  thrpt           5583.748                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                  128  thrpt              0.003                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:dTLB-stores                                        128  thrpt           3011.215                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                   128  thrpt              0.027                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:iTLB-loads                                         128  thrpt              0.065                 #/op
[info] ListOfBooleansBenchmark.writePlayJson:instructions                                       128  thrpt          21331.315                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce                                                   128  thrpt    5     76714.375 ±    7651.772  ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:CPI                                               128  thrpt              0.279                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses                             128  thrpt            954.100                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads                                   128  thrpt          30129.617                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores                                  128  thrpt          18687.413                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses                             128  thrpt             66.758                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses                                   128  thrpt              2.922                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-loads                                         128  thrpt             12.385                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses                                  128  thrpt             66.844                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:LLC-stores                                        128  thrpt            203.545                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:branch-misses                                     128  thrpt             54.340                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:branches                                          128  thrpt          36342.459                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:cycles                                            128  thrpt          49452.416                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses                                  128  thrpt              3.927                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-loads                                        128  thrpt          29904.295                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses                                 128  thrpt              0.065                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:dTLB-stores                                       128  thrpt          18879.734                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses                                  128  thrpt              0.266                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:iTLB-loads                                        128  thrpt              0.492                 #/op
[info] MapOfIntsToBooleansBenchmark.readCirce:instructions                                      128  thrpt         177031.958                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                            128  thrpt    5    106537.157 ±   10036.510  ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:CPI                                        128  thrpt              0.301                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                      128  thrpt            870.917                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads                            128  thrpt          20640.173                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores                           128  thrpt          14354.917                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses                      128  thrpt            320.230                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses                            128  thrpt              1.086                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads                                  128  thrpt             10.763                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses                           128  thrpt             12.257                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores                                 128  thrpt             95.196                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses                              128  thrpt             30.272                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:branches                                   128  thrpt          21458.478                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:cycles                                     128  thrpt          34633.429                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses                           128  thrpt              2.672                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads                                 128  thrpt          20799.502                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses                          128  thrpt              0.035                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores                                128  thrpt          14164.815                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses                           128  thrpt              0.195                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads                                 128  thrpt              0.452                 #/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:instructions                               128  thrpt         115209.023                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                           128  thrpt    5    155940.913 ±   18890.965  ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:CPI                                       128  thrpt              0.299                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                     128  thrpt            411.173                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads                           128  thrpt          12424.060                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores                          128  thrpt          10214.961                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                     128  thrpt             12.100                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses                           128  thrpt              1.205                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads                                 128  thrpt              3.813                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses                          128  thrpt              9.431                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores                                128  thrpt             85.958                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses                             128  thrpt             23.969                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:branches                                  128  thrpt          15399.680                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:cycles                                    128  thrpt          23983.945                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses                          128  thrpt              1.142                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads                                128  thrpt          12170.532                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses                         128  thrpt              0.027                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores                               128  thrpt          10153.797                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses                          128  thrpt              0.120                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads                                128  thrpt              0.362                 #/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:instructions                              128  thrpt          80314.530                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                128  thrpt    5     43415.119 ±    4158.810  ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:CPI                                            128  thrpt              0.344                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses                          128  thrpt           2671.202                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads                                128  thrpt          52837.500                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores                               128  thrpt          35826.915                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses                          128  thrpt            565.793                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses                                128  thrpt              2.083                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads                                      128  thrpt             53.713                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses                               128  thrpt             76.281                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores                                     128  thrpt            330.970                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:branch-misses                                  128  thrpt            316.758                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:branches                                       128  thrpt          41721.705                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:cycles                                         128  thrpt          85744.422                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses                               128  thrpt              9.239                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads                                     128  thrpt          55523.769                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses                              128  thrpt              0.058                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores                                    128  thrpt          37560.070                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses                               128  thrpt              0.422                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads                                     128  thrpt              2.224                 #/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:instructions                                   128  thrpt         249368.717                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                           128  thrpt    5    230485.287 ±   29046.198  ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:CPI                                       128  thrpt              0.255                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                     128  thrpt            184.566                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads                           128  thrpt           9211.252                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores                          128  thrpt           7072.239                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                     128  thrpt              4.457                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses                           128  thrpt              0.089                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads                                 128  thrpt              2.740                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses                          128  thrpt             16.637                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores                                128  thrpt             31.587                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses                             128  thrpt              2.018                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:branches                                  128  thrpt          12323.395                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:cycles                                    128  thrpt          16007.258                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses                          128  thrpt              0.436                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads                                128  thrpt           9243.668                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses                         128  thrpt              0.020                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores                               128  thrpt           7073.752                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses                          128  thrpt              0.062                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads                                128  thrpt              0.163                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:instructions                              128  thrpt          62680.916                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                          128  thrpt    5    579637.272 ±   14866.805  ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI                                      128  thrpt              0.277                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                    128  thrpt             31.149                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                          128  thrpt           4738.504                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                         128  thrpt           3271.830                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                    128  thrpt              1.538                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses                          128  thrpt              0.285                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads                                128  thrpt              0.650                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses                         128  thrpt             22.272                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores                               128  thrpt             28.116                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses                            128  thrpt              0.623                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:branches                                 128  thrpt           5294.709                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles                                   128  thrpt           6623.160                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                         128  thrpt              0.434                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads                               128  thrpt           4752.321                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                        128  thrpt              0.010                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores                              128  thrpt           3238.573                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                         128  thrpt              0.028                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads                               128  thrpt              0.060                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions                             128  thrpt          23926.905                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                  128  thrpt    5    609294.248 ±   51120.826  ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                              128  thrpt              0.258                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses            128  thrpt              1.760                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                  128  thrpt           4575.104                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                 128  thrpt           3195.339                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses            128  thrpt              0.190                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                  128  thrpt              0.039                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                        128  thrpt              0.104                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                 128  thrpt              0.003                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                       128  thrpt              0.146                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                    128  thrpt              0.205                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches                         128  thrpt           5137.544                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                           128  thrpt           6111.542                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                 128  thrpt              0.040                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                       128  thrpt           4567.324                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                128  thrpt              0.006                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                      128  thrpt           3147.139                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                 128  thrpt              0.034                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                       128  thrpt              0.127                 #/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                     128  thrpt          23655.022                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                               128  thrpt    5     83373.224 ±   11810.339  ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:CPI                                           128  thrpt              0.304                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses                         128  thrpt           1002.925                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads                               128  thrpt          39098.565                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores                              128  thrpt          22987.334                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses                         128  thrpt            162.223                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses                               128  thrpt              2.870                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads                                     128  thrpt             19.796                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses                              128  thrpt             52.500                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores                                    128  thrpt            134.993                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:branch-misses                                 128  thrpt             36.638                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:branches                                      128  thrpt          32182.512                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:cycles                                        128  thrpt          50274.146                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses                              128  thrpt              3.113                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads                                    128  thrpt          39739.359                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses                             128  thrpt              0.132                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores                                   128  thrpt          22746.245                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses                              128  thrpt              0.662                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads                                    128  thrpt             10.593                 #/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:instructions                                  128  thrpt         165542.967                 #/op
[info] MissingReqFieldBenchmark.readCirce                                                       N/A  thrpt    5   8399110.740 ±  146958.771  ops/s
[info] MissingReqFieldBenchmark.readCirce:CPI                                                   N/A  thrpt              0.421                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-dcache-load-misses                                 N/A  thrpt             21.854                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-dcache-loads                                       N/A  thrpt            263.209                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-dcache-stores                                      N/A  thrpt            228.474                 #/op
[info] MissingReqFieldBenchmark.readCirce:L1-icache-load-misses                                 N/A  thrpt              0.210                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-load-misses                                       N/A  thrpt              0.217                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-loads                                             N/A  thrpt              0.319                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-store-misses                                      N/A  thrpt              6.300                 #/op
[info] MissingReqFieldBenchmark.readCirce:LLC-stores                                            N/A  thrpt              9.422                 #/op
[info] MissingReqFieldBenchmark.readCirce:branch-misses                                         N/A  thrpt              0.021                 #/op
[info] MissingReqFieldBenchmark.readCirce:branches                                              N/A  thrpt            180.318                 #/op
[info] MissingReqFieldBenchmark.readCirce:cycles                                                N/A  thrpt            463.845                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-load-misses                                      N/A  thrpt              0.065                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-loads                                            N/A  thrpt            248.376                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-store-misses                                     N/A  thrpt              0.001                 #/op
[info] MissingReqFieldBenchmark.readCirce:dTLB-stores                                           N/A  thrpt            221.946                 #/op
[info] MissingReqFieldBenchmark.readCirce:iTLB-load-misses                                      N/A  thrpt              0.004                 #/op
[info] MissingReqFieldBenchmark.readCirce:iTLB-loads                                            N/A  thrpt              0.007                 #/op
[info] MissingReqFieldBenchmark.readCirce:instructions                                          N/A  thrpt           1101.211                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava                                                 N/A  thrpt    5    973400.925 ±  114756.207  ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:CPI                                             N/A  thrpt              0.381                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-load-misses                           N/A  thrpt             88.020                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-loads                                 N/A  thrpt           3627.041                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-dcache-stores                                N/A  thrpt           1750.320                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:L1-icache-load-misses                           N/A  thrpt              4.667                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-load-misses                                 N/A  thrpt              0.028                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-loads                                       N/A  thrpt              0.390                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-store-misses                                N/A  thrpt              0.540                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:LLC-stores                                      N/A  thrpt              2.726                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:branch-misses                                   N/A  thrpt              1.707                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:branches                                        N/A  thrpt           1860.138                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:cycles                                          N/A  thrpt           3906.187                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-load-misses                                N/A  thrpt              0.076                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-loads                                      N/A  thrpt           3725.110                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-store-misses                               N/A  thrpt              0.004                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:dTLB-stores                                     N/A  thrpt           1750.106                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:iTLB-load-misses                                N/A  thrpt              0.022                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:iTLB-loads                                      N/A  thrpt              0.258                 #/op
[info] MissingReqFieldBenchmark.readDslJsonJava:instructions                                    N/A  thrpt          10251.861                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala                                                N/A  thrpt    5    453468.482 ±   28337.088  ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:CPI                                            N/A  thrpt              0.421                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-dcache-load-misses                          N/A  thrpt            450.200                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-dcache-loads                                N/A  thrpt           6244.975                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-dcache-stores                               N/A  thrpt           3082.662                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:L1-icache-load-misses                          N/A  thrpt            442.211                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-load-misses                                N/A  thrpt              0.152                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-loads                                      N/A  thrpt              7.588                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-store-misses                               N/A  thrpt              6.888                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:LLC-stores                                     N/A  thrpt             17.705                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:branch-misses                                  N/A  thrpt              5.013                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:branches                                       N/A  thrpt           3722.122                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:cycles                                         N/A  thrpt           8363.289                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-load-misses                               N/A  thrpt              0.377                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-loads                                     N/A  thrpt           6511.915                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-store-misses                              N/A  thrpt              0.007                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:dTLB-stores                                    N/A  thrpt           3132.008                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:iTLB-load-misses                               N/A  thrpt              0.028                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:iTLB-loads                                     N/A  thrpt              0.217                 #/op
[info] MissingReqFieldBenchmark.readJacksonScala:instructions                                   N/A  thrpt          19885.066                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala                                               N/A  thrpt    5    855677.637 ±    5337.117  ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:CPI                                           N/A  thrpt              0.388                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-load-misses                         N/A  thrpt            123.752                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-loads                               N/A  thrpt           4085.655                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-dcache-stores                              N/A  thrpt           1967.549                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:L1-icache-load-misses                         N/A  thrpt              0.341                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-load-misses                               N/A  thrpt              0.296                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-loads                                     N/A  thrpt              1.068                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-store-misses                              N/A  thrpt              6.886                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:LLC-stores                                    N/A  thrpt             15.623                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:branch-misses                                 N/A  thrpt              1.292                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:branches                                      N/A  thrpt           2103.889                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:cycles                                        N/A  thrpt           4507.162                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-load-misses                              N/A  thrpt              0.347                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-loads                                    N/A  thrpt           3979.823                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-store-misses                             N/A  thrpt              0.036                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:dTLB-stores                                   N/A  thrpt           1920.687                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:iTLB-load-misses                              N/A  thrpt              0.011                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:iTLB-loads                                    N/A  thrpt              0.131                 #/op
[info] MissingReqFieldBenchmark.readJsoniterScala:instructions                                  N/A  thrpt          11627.684                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless                                           N/A  thrpt    5   6137419.780 ± 9656324.682  ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:CPI                                       N/A  thrpt              0.333                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-load-misses                     N/A  thrpt             14.388                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-loads                           N/A  thrpt            360.264                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-dcache-stores                          N/A  thrpt            307.534                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:L1-icache-load-misses                     N/A  thrpt              0.519                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-load-misses                           N/A  thrpt              0.033                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-loads                                 N/A  thrpt              0.132                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-store-misses                          N/A  thrpt              5.329                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:LLC-stores                                N/A  thrpt              9.180                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:branch-misses                             N/A  thrpt              0.528                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:branches                                  N/A  thrpt            383.570                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:cycles                                    N/A  thrpt            634.853                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-load-misses                          N/A  thrpt              0.204                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-loads                                N/A  thrpt            373.046                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-store-misses                         N/A  thrpt              0.001                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:dTLB-stores                               N/A  thrpt            325.169                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:iTLB-load-misses                          N/A  thrpt              0.005                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:iTLB-loads                                N/A  thrpt              0.030                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:instructions                              N/A  thrpt           1909.008                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                     N/A  thrpt    5  41048419.106 ± 3871228.279  ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:CPI                                 N/A  thrpt              0.294                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-load-misses               N/A  thrpt              2.121                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-loads                     N/A  thrpt             76.019                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-dcache-stores                    N/A  thrpt             60.528                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:L1-icache-load-misses               N/A  thrpt              0.015                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-load-misses                     N/A  thrpt              0.001                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-loads                           N/A  thrpt              0.006                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-store-misses                    N/A  thrpt              0.043                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:LLC-stores                          N/A  thrpt              0.360                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branch-misses                       N/A  thrpt              0.013                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:branches                            N/A  thrpt             60.724                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:cycles                              N/A  thrpt             91.967                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-load-misses                    N/A  thrpt              0.002                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-loads                          N/A  thrpt             78.643                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-store-misses                   N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:dTLB-stores                         N/A  thrpt             62.823                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-load-misses                    N/A  thrpt             ≈ 10⁻³                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:iTLB-loads                          N/A  thrpt             ≈ 10⁻³                 #/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:instructions                        N/A  thrpt            312.918                 #/op
[info] MissingReqFieldBenchmark.readPlayJson                                                    N/A  thrpt    5    407227.644 ±   15091.288  ops/s
[info] MissingReqFieldBenchmark.readPlayJson:CPI                                                N/A  thrpt              0.468                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-dcache-load-misses                              N/A  thrpt            499.603                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-dcache-loads                                    N/A  thrpt           5997.943                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-dcache-stores                                   N/A  thrpt           3612.919                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:L1-icache-load-misses                              N/A  thrpt            636.242                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-load-misses                                    N/A  thrpt              0.651                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-loads                                          N/A  thrpt             17.352                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-store-misses                                   N/A  thrpt             29.074                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:LLC-stores                                         N/A  thrpt             70.122                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:branch-misses                                      N/A  thrpt              2.753                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:branches                                           N/A  thrpt           3489.643                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:cycles                                             N/A  thrpt           9324.503                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-load-misses                                   N/A  thrpt              0.706                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-loads                                         N/A  thrpt           6253.215                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-store-misses                                  N/A  thrpt              0.044                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:dTLB-stores                                        N/A  thrpt           3641.974                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:iTLB-load-misses                                   N/A  thrpt              0.099                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:iTLB-loads                                         N/A  thrpt              7.572                 #/op
[info] MissingReqFieldBenchmark.readPlayJson:instructions                                       N/A  thrpt          19937.273                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala                                                 128  thrpt    5   1461919.506 ±   13786.038  ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:CPI                                             128  thrpt              0.212                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-dcache-load-misses                           128  thrpt              1.899                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-dcache-loads                                 128  thrpt           1014.592                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-dcache-stores                                128  thrpt           1090.164                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:L1-icache-load-misses                           128  thrpt              0.563                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-load-misses                                 128  thrpt              0.036                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-loads                                       128  thrpt              0.118                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-store-misses                                128  thrpt              0.010                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:LLC-stores                                      128  thrpt              0.104                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:branch-misses                                   128  thrpt              2.152                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:branches                                        128  thrpt           3011.316                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:cycles                                          128  thrpt           2623.913                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-load-misses                                128  thrpt              0.018                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-loads                                      128  thrpt           1010.018                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-store-misses                               128  thrpt              0.002                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:dTLB-stores                                     128  thrpt           1095.708                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:iTLB-load-misses                                128  thrpt              0.011                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:iTLB-loads                                      128  thrpt              0.043                 #/op
[info] MutableBitSetBenchmark.readJsoniterScala:instructions                                    128  thrpt          12370.107                 #/op
[info] MutableBitSetBenchmark.readPlayJson                                                      128  thrpt    5    120906.506 ±   12005.942  ops/s
[info] MutableBitSetBenchmark.readPlayJson:CPI                                                  128  thrpt              0.300                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-dcache-load-misses                                128  thrpt           1259.917                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-dcache-loads                                      128  thrpt          28484.306                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-dcache-stores                                     128  thrpt          21164.924                 #/op
[info] MutableBitSetBenchmark.readPlayJson:L1-icache-load-misses                                128  thrpt             77.591                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-load-misses                                      128  thrpt              5.259                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-loads                                            128  thrpt             21.514                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-store-misses                                     128  thrpt             73.508                 #/op
[info] MutableBitSetBenchmark.readPlayJson:LLC-stores                                           128  thrpt            220.730                 #/op
[info] MutableBitSetBenchmark.readPlayJson:branch-misses                                        128  thrpt             38.534                 #/op
[info] MutableBitSetBenchmark.readPlayJson:branches                                             128  thrpt          21008.114                 #/op
[info] MutableBitSetBenchmark.readPlayJson:cycles                                               128  thrpt          34951.072                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-load-misses                                     128  thrpt              3.594                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-loads                                           128  thrpt          26792.207                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-store-misses                                    128  thrpt              0.116                 #/op
[info] MutableBitSetBenchmark.readPlayJson:dTLB-stores                                          128  thrpt          20609.030                 #/op
[info] MutableBitSetBenchmark.readPlayJson:iTLB-load-misses                                     128  thrpt              1.007                 #/op
[info] MutableBitSetBenchmark.readPlayJson:iTLB-loads                                           128  thrpt              6.450                 #/op
[info] MutableBitSetBenchmark.readPlayJson:instructions                                         128  thrpt         116661.078                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala                                                 128  thrpt    5   2104381.689 ±    3777.131  ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:CPI                                             128  thrpt              0.234                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-dcache-load-misses                           128  thrpt              7.360                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-dcache-loads                                 128  thrpt            448.759                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-dcache-stores                                128  thrpt            796.235                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:L1-icache-load-misses                           128  thrpt              0.048                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-load-misses                                 128  thrpt              0.016                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-loads                                       128  thrpt              0.062                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-store-misses                                128  thrpt              0.831                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:LLC-stores                                      128  thrpt              2.241                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:branch-misses                                   128  thrpt              2.163                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:branches                                        128  thrpt           1931.195                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:cycles                                          128  thrpt           1823.819                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-load-misses                                128  thrpt              0.094                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-loads                                      128  thrpt            448.250                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:dTLB-stores                                     128  thrpt            790.857                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:iTLB-load-misses                                128  thrpt              0.008                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:iTLB-loads                                      128  thrpt              0.006                 #/op
[info] MutableBitSetBenchmark.writeJacksonScala:instructions                                    128  thrpt           7788.454                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala                                                128  thrpt    5   1931580.635 ±  271768.214  ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:CPI                                            128  thrpt              0.229                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-load-misses                          128  thrpt              7.162                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-loads                                128  thrpt            757.473                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-dcache-stores                               128  thrpt            860.655                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:L1-icache-load-misses                          128  thrpt              0.067                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-load-misses                                128  thrpt              0.037                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-loads                                      128  thrpt              0.091                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-store-misses                               128  thrpt              0.700                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:LLC-stores                                     128  thrpt              2.167                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:branch-misses                                  128  thrpt              3.119                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:branches                                       128  thrpt           2093.045                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:cycles                                         128  thrpt           1933.417                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-load-misses                               128  thrpt              0.104                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-loads                                     128  thrpt            749.194                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-store-misses                              128  thrpt              0.002                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:dTLB-stores                                    128  thrpt            836.699                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:iTLB-load-misses                               128  thrpt              0.005                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:iTLB-loads                                     128  thrpt              0.026                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScala:instructions                                   128  thrpt           8447.076                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   2006333.293 ±  166167.782  ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:CPI                                    128  thrpt              0.222                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                  128  thrpt              0.388                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                        128  thrpt            721.975                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                       128  thrpt            823.001                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                  128  thrpt              0.121                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                        128  thrpt              0.009                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-loads                              128  thrpt              0.034                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                       128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:LLC-stores                             128  thrpt              0.007                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branch-misses                          128  thrpt              3.070                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:branches                               128  thrpt           2047.680                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:cycles                                 128  thrpt           1865.975                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                       128  thrpt              0.004                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                             128  thrpt            723.555                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                      128  thrpt              0.001                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                            128  thrpt            827.722                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                       128  thrpt              0.004                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                             128  thrpt              0.016                 #/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:instructions                           128  thrpt           8394.012                 #/op
[info] MutableBitSetBenchmark.writePlayJson                                                     128  thrpt    5     55302.383 ±    4366.092  ops/s
[info] MutableBitSetBenchmark.writePlayJson:CPI                                                 128  thrpt              0.311                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-dcache-load-misses                               128  thrpt           1143.363                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-dcache-loads                                     128  thrpt          38893.953                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-dcache-stores                                    128  thrpt          23994.267                 #/op
[info] MutableBitSetBenchmark.writePlayJson:L1-icache-load-misses                               128  thrpt             19.058                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-load-misses                                     128  thrpt              1.792                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-loads                                           128  thrpt              8.352                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-store-misses                                    128  thrpt              9.987                 #/op
[info] MutableBitSetBenchmark.writePlayJson:LLC-stores                                          128  thrpt             66.445                 #/op
[info] MutableBitSetBenchmark.writePlayJson:branch-misses                                       128  thrpt             94.948                 #/op
[info] MutableBitSetBenchmark.writePlayJson:branches                                            128  thrpt          45028.749                 #/op
[info] MutableBitSetBenchmark.writePlayJson:cycles                                              128  thrpt          67892.556                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-load-misses                                    128  thrpt              2.491                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-loads                                          128  thrpt          39586.934                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-store-misses                                   128  thrpt              0.195                 #/op
[info] MutableBitSetBenchmark.writePlayJson:dTLB-stores                                         128  thrpt          24828.607                 #/op
[info] MutableBitSetBenchmark.writePlayJson:iTLB-load-misses                                    128  thrpt              0.560                 #/op
[info] MutableBitSetBenchmark.writePlayJson:iTLB-loads                                          128  thrpt              1.043                 #/op
[info] MutableBitSetBenchmark.writePlayJson:instructions                                        128  thrpt         218260.597                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                      128  thrpt    5    272213.626 ±   19368.815  ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:CPI                                  128  thrpt              0.246                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                128  thrpt            104.319                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                      128  thrpt           6162.100                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                     128  thrpt           4553.207                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                128  thrpt              0.671                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                      128  thrpt              0.116                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-loads                            128  thrpt              0.652                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                     128  thrpt             56.841                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:LLC-stores                           128  thrpt             79.687                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:branch-misses                        128  thrpt              7.110                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:branches                             128  thrpt          12614.918                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:cycles                               128  thrpt          14147.638                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                     128  thrpt              1.347                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-loads                           128  thrpt           6244.153                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                    128  thrpt              0.038                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:dTLB-stores                          128  thrpt           4490.173                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                     128  thrpt              0.076                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:iTLB-loads                           128  thrpt              0.194                 #/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:instructions                         128  thrpt          57415.765                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                           128  thrpt    5     53930.423 ±     797.762  ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:CPI                                       128  thrpt              0.311                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                     128  thrpt           2228.253                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-loads                           128  thrpt          49589.516                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-dcache-stores                          128  thrpt          28938.789                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                     128  thrpt            518.967                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-load-misses                           128  thrpt              2.508                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-loads                                 128  thrpt             23.594                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-store-misses                          128  thrpt             95.641                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:LLC-stores                                128  thrpt            265.804                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:branch-misses                             128  thrpt            133.188                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:branches                                  128  thrpt          41422.298                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:cycles                                    128  thrpt          71851.478                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-load-misses                          128  thrpt              4.631                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-loads                                128  thrpt          50550.536                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-store-misses                         128  thrpt              0.065                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:dTLB-stores                               128  thrpt          29781.113                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-load-misses                          128  thrpt              0.518                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:iTLB-loads                                128  thrpt              0.493                 #/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:instructions                              128  thrpt         231303.869                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                      128  thrpt    5    164056.613 ±    2255.810  ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:CPI                                  128  thrpt              0.247                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                128  thrpt            276.601                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                      128  thrpt          14336.800                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                     128  thrpt           9541.589                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                128  thrpt              1.717                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                      128  thrpt              0.197                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-loads                            128  thrpt              2.095                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                     128  thrpt             67.780                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:LLC-stores                           128  thrpt            110.518                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:branch-misses                        128  thrpt             18.694                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:branches                             128  thrpt          18885.821                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:cycles                               128  thrpt          23161.612                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                     128  thrpt              2.332                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-loads                           128  thrpt          14546.407                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                    128  thrpt              0.027                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:dTLB-stores                          128  thrpt           9484.149                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                     128  thrpt              0.283                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:iTLB-loads                           128  thrpt              0.095                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:instructions                         128  thrpt          93646.765                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                     128  thrpt    5    429599.938 ±    5739.830  ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:CPI                                 128  thrpt              0.244                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses               128  thrpt             36.319                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                     128  thrpt           6293.390                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                    128  thrpt           4819.292                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses               128  thrpt              2.059                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                     128  thrpt              0.065                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-loads                           128  thrpt              0.470                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                    128  thrpt             29.071                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:LLC-stores                          128  thrpt             36.016                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branch-misses                       128  thrpt              1.321                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:branches                            128  thrpt           6745.085                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:cycles                              128  thrpt           8980.511                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                    128  thrpt              0.565                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                          128  thrpt           6260.581                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                   128  thrpt              0.007                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                         128  thrpt           4658.571                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                    128  thrpt              0.015                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                          128  thrpt              0.014                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:instructions                        128  thrpt          36769.927                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                             128  thrpt    5    588204.197 ±     720.249  ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                         128  thrpt              0.218                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses       128  thrpt              1.820                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads             128  thrpt           3725.980                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores            128  thrpt           3895.606                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses       128  thrpt              0.888                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses             128  thrpt              0.061                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                   128  thrpt              0.222                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses            128  thrpt              0.003                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                  128  thrpt              0.026                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses               128  thrpt              0.388                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                    128  thrpt           5570.792                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                      128  thrpt           6419.694                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses            128  thrpt              0.004                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                  128  thrpt           3745.048                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses           128  thrpt              0.001                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                 128  thrpt           3909.320                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses            128  thrpt              0.014                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                  128  thrpt              0.006                 #/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                128  thrpt          29422.481                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                          128  thrpt    5     76900.467 ±    8794.045  ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:CPI                                      128  thrpt              0.284                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                    128  thrpt            871.745                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-loads                          128  thrpt          33311.152                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-dcache-stores                         128  thrpt          19856.098                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                    128  thrpt              9.186                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-load-misses                          128  thrpt              2.158                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-loads                                128  thrpt              5.854                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-store-misses                         128  thrpt            106.299                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:LLC-stores                               128  thrpt            216.354                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:branch-misses                            128  thrpt             42.053                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:branches                                 128  thrpt          33218.477                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:cycles                                   128  thrpt          48642.078                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-load-misses                         128  thrpt              3.004                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-loads                               128  thrpt          33583.508                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-store-misses                        128  thrpt              0.064                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:dTLB-stores                              128  thrpt          20101.889                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-load-misses                         128  thrpt              0.140                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:iTLB-loads                               128  thrpt              0.353                 #/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:instructions                             128  thrpt         171129.785                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                            128  thrpt    5    103698.741 ±    1486.634  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:CPI                                        128  thrpt              0.255                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-load-misses                      128  thrpt            482.566                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-loads                            128  thrpt          26075.756                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-dcache-stores                           128  thrpt          13346.758                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:L1-icache-load-misses                      128  thrpt              9.472                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-load-misses                            128  thrpt              1.741                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-loads                                  128  thrpt              8.354                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-store-misses                           128  thrpt             69.564                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:LLC-stores                                 128  thrpt            148.871                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:branch-misses                              128  thrpt             23.791                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:branches                                   128  thrpt          32345.410                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:cycles                                     128  thrpt          38058.021                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-load-misses                           128  thrpt              1.734                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-loads                                 128  thrpt          27320.767                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-store-misses                          128  thrpt              0.027                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:dTLB-stores                                128  thrpt          14323.054                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-load-misses                           128  thrpt              0.125                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:iTLB-loads                                 128  thrpt              0.136                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:instructions                               128  thrpt         149060.128                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                     128  thrpt    5    153834.402 ±   12363.161  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:CPI                                 128  thrpt              0.270                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-load-misses               128  thrpt            332.451                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-loads                     128  thrpt          17941.513                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-dcache-stores                    128  thrpt           9746.350                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:L1-icache-load-misses               128  thrpt             27.068                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-load-misses                     128  thrpt              0.289                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-loads                           128  thrpt              2.241                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-store-misses                    128  thrpt              8.300                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:LLC-stores                          128  thrpt             33.183                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branch-misses                       128  thrpt              5.298                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:branches                            128  thrpt          18437.125                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:cycles                              128  thrpt          24488.035                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-load-misses                    128  thrpt              0.437                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-loads                          128  thrpt          18209.273                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-store-misses                   128  thrpt              0.012                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:dTLB-stores                         128  thrpt           9714.564                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-load-misses                    128  thrpt              0.062                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:iTLB-loads                          128  thrpt              0.347                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:instructions                        128  thrpt          90783.142                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                    128  thrpt    5    284787.848 ±   89157.966  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:CPI                                128  thrpt              0.248                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses              128  thrpt            107.755                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-loads                    128  thrpt           6922.305                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-dcache-stores                   128  thrpt           4613.335                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:L1-icache-load-misses              128  thrpt              2.044                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-load-misses                    128  thrpt              0.965                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-loads                          128  thrpt              2.551                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-store-misses                   128  thrpt              9.267                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:LLC-stores                         128  thrpt             29.224                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branch-misses                      128  thrpt             28.395                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:branches                           128  thrpt          11044.704                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:cycles                             128  thrpt          11780.083                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-load-misses                   128  thrpt              0.534                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-loads                         128  thrpt           7062.458                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-store-misses                  128  thrpt              0.014                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:dTLB-stores                        128  thrpt           4920.886                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-load-misses                   128  thrpt              0.017                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:iTLB-loads                         128  thrpt              0.009                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:instructions                       128  thrpt          47448.912                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                         128  thrpt    5     12843.811 ±    1861.161  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:CPI                                     128  thrpt              0.501                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-load-misses                   128  thrpt          10142.162                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-loads                         128  thrpt         281875.754                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-dcache-stores                        128  thrpt         152092.613                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:L1-icache-load-misses                   128  thrpt           8352.982                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-load-misses                         128  thrpt            140.353                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-loads                               128  thrpt           1625.314                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-store-misses                        128  thrpt            218.610                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:LLC-stores                              128  thrpt            615.843                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:branch-misses                           128  thrpt           1999.517                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:branches                                128  thrpt         189191.899                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:cycles                                  128  thrpt         527466.452                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-load-misses                        128  thrpt             96.798                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-loads                              128  thrpt         279854.403                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-store-misses                       128  thrpt              6.043                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:dTLB-stores                             128  thrpt         149923.861                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-load-misses                        128  thrpt             56.864                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:iTLB-loads                              128  thrpt            632.997                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:instructions                            128  thrpt        1053100.311                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                    128  thrpt    5    246571.529 ±    1929.495  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:CPI                                128  thrpt              0.242                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses              128  thrpt             99.329                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-loads                    128  thrpt           9300.604                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-dcache-stores                   128  thrpt           6041.087                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:L1-icache-load-misses              128  thrpt              0.652                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-load-misses                    128  thrpt              0.460                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-loads                          128  thrpt              1.093                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-store-misses                   128  thrpt             14.981                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:LLC-stores                         128  thrpt             28.286                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branch-misses                      128  thrpt              0.811                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:branches                           128  thrpt          12688.654                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:cycles                             128  thrpt          14834.243                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-load-misses                   128  thrpt              0.422                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-loads                         128  thrpt           9265.056                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-store-misses                  128  thrpt              0.013                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:dTLB-stores                        128  thrpt           5970.324                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-load-misses                   128  thrpt              0.020                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:iTLB-loads                         128  thrpt              0.057                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:instructions                       128  thrpt          61242.111                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                   128  thrpt    5    647780.790 ±    6763.392  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:CPI                               128  thrpt              0.238                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses             128  thrpt             30.219                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                   128  thrpt           3077.570                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                  128  thrpt           3186.008                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses             128  thrpt              1.178                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-load-misses                   128  thrpt              0.164                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-loads                         128  thrpt              0.627                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-store-misses                  128  thrpt             21.793                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:LLC-stores                        128  thrpt             27.356                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branch-misses                     128  thrpt              0.952                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:branches                          128  thrpt           5659.964                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:cycles                            128  thrpt           5746.842                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                  128  thrpt              0.419                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-loads                        128  thrpt           3133.280                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                 128  thrpt              0.001                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:dTLB-stores                       128  thrpt           3269.488                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                  128  thrpt              0.004                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:iTLB-loads                        128  thrpt              0.005                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:instructions                      128  thrpt          24136.628                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                           128  thrpt    5    751119.801 ±   14080.604  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                       128  thrpt              0.214                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses     128  thrpt              1.463                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads           128  thrpt           2926.848                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores          128  thrpt           3027.737                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses     128  thrpt              0.306                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses           128  thrpt              0.034                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                 128  thrpt              0.127                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses          128  thrpt              0.029                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                128  thrpt              0.071                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses             128  thrpt              0.593                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:branches                  128  thrpt           5681.211                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                    128  thrpt           5032.185                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses          128  thrpt              0.053                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                128  thrpt           2886.235                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses         128  thrpt              0.005                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores               128  thrpt           2989.239                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses          128  thrpt              0.007                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                128  thrpt              0.079                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:instructions              128  thrpt          23561.135                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                        128  thrpt    5     79110.233 ±   36288.049  ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:CPI                                    128  thrpt              0.331                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-load-misses                  128  thrpt           1242.391                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-loads                        128  thrpt          48308.937                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-dcache-stores                       128  thrpt          25695.578                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:L1-icache-load-misses                  128  thrpt            365.914                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-load-misses                        128  thrpt             11.908                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-loads                              128  thrpt             72.827                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-store-misses                       128  thrpt             67.603                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:LLC-stores                             128  thrpt            161.843                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:branch-misses                          128  thrpt             94.568                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:branches                               128  thrpt          39285.257                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:cycles                                 128  thrpt          66518.023                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-load-misses                       128  thrpt              6.123                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-loads                             128  thrpt          47695.514                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-store-misses                      128  thrpt              0.384                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:dTLB-stores                            128  thrpt          25543.608                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-load-misses                       128  thrpt              1.675                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:iTLB-loads                             128  thrpt             35.700                 #/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:instructions                           128  thrpt         200876.568                 #/op
[info] MutableSetOfIntsBenchmark.readCirce                                                      128  thrpt    5    116896.903 ±   19592.161  ops/s
[info] MutableSetOfIntsBenchmark.readCirce:CPI                                                  128  thrpt              0.340                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt            976.687                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-dcache-loads                                      128  thrpt          30037.481                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-dcache-stores                                     128  thrpt          15987.256                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:L1-icache-load-misses                                128  thrpt            297.204                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-load-misses                                      128  thrpt              9.370                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-loads                                            128  thrpt             76.928                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-store-misses                                     128  thrpt             78.710                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:LLC-stores                                           128  thrpt            159.888                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:branch-misses                                        128  thrpt             82.575                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:branches                                             128  thrpt          30521.666                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:cycles                                               128  thrpt          50987.325                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-load-misses                                     128  thrpt              6.865                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-loads                                           128  thrpt          30209.625                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.311                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:dTLB-stores                                          128  thrpt          15732.167                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              2.568                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:iTLB-loads                                           128  thrpt             36.026                 #/op
[info] MutableSetOfIntsBenchmark.readCirce:instructions                                         128  thrpt         149802.046                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala                                               128  thrpt    5    200556.563 ±   12778.234  ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:CPI                                           128  thrpt              0.276                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt            124.745                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt          13036.310                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt           8781.388                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt              1.423                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt              0.208                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-loads                                     128  thrpt              1.619                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt             44.713                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:LLC-stores                                    128  thrpt             64.585                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:branch-misses                                 128  thrpt              4.715                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:branches                                      128  thrpt          13742.905                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:cycles                                        128  thrpt          18550.590                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              0.742                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt          13161.465                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.027                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt           8738.068                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              0.059                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt              0.128                 #/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:instructions                                  128  thrpt          67111.037                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                              128  thrpt    5    288406.672 ±   20006.207  ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.278                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt            123.495                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt           8416.150                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt           4599.084                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt             19.754                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.407                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              5.324                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt             40.019                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt             57.794                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:branch-misses                                128  thrpt              7.765                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:branches                                     128  thrpt          11465.199                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:cycles                                       128  thrpt          14362.763                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.941                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt           8689.034                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.042                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt           4672.021                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.176                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              1.784                 #/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:instructions                                 128  thrpt          51660.323                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson                                                   128  thrpt    5    100013.679 ±   17836.167  ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:CPI                                               128  thrpt              0.326                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt           1327.492                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          31116.730                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          21973.533                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt             83.225                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              4.211                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-loads                                         128  thrpt             30.038                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt            110.160                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:LLC-stores                                        128  thrpt            260.480                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:branch-misses                                     128  thrpt            104.404                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:branches                                          128  thrpt          24046.078                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:cycles                                            128  thrpt          44344.632                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              5.183                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          30920.315                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.163                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          22467.113                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.593                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              6.900                 #/op
[info] MutableSetOfIntsBenchmark.readPlayJson:instructions                                      128  thrpt         136066.182                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce                                                     128  thrpt    5    250269.577 ±    8476.334  ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:CPI                                                 128  thrpt              0.257                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt            180.028                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt           8918.741                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt           6981.198                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt              1.920                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.530                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-loads                                           128  thrpt              1.878                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-store-misses                                    128  thrpt             70.584                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:LLC-stores                                          128  thrpt            112.460                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:branch-misses                                       128  thrpt              7.009                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:branches                                            128  thrpt          11762.092                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:cycles                                              128  thrpt          15239.190                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              1.549                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-loads                                          128  thrpt           9163.466                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.090                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:dTLB-stores                                         128  thrpt           7266.120                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.062                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.243                 #/op
[info] MutableSetOfIntsBenchmark.writeCirce:instructions                                        128  thrpt          59301.831                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                              128  thrpt    5    851435.335 ±   63217.288  ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.232                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt             15.809                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt           3337.779                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           1586.474                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.551                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.030                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              0.174                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt              4.367                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt              8.649                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:branch-misses                                128  thrpt              0.269                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:branches                                     128  thrpt           4474.818                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:cycles                                       128  thrpt           4405.893                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.189                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt           3361.567                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.003                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           1592.065                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.017                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.043                 #/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:instructions                                 128  thrpt          18983.669                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                             128  thrpt    5    915139.596 ±   93687.216  ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.225                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             14.988                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           2516.816                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           1646.252                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.459                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.033                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.183                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt              5.407                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt              9.400                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              0.778                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:branches                                    128  thrpt           4595.051                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:cycles                                      128  thrpt           4187.494                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.222                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           2523.899                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.004                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           1609.496                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.008                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.021                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:instructions                                128  thrpt          18597.736                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    910709.703 ±    5166.609  ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.222                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              1.547                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           2484.226                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           1605.099                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.862                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.044                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.206                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.021                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.114                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              0.829                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           4628.294                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           4125.739                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.017                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           2488.745                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.002                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           1602.300                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.023                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.197                 #/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt          18619.407                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson                                                  128  thrpt    5     38712.354 ±    3484.804  ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:CPI                                              128  thrpt              0.345                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt           1691.586                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt          54056.856                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt          34186.647                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt            182.381                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt             11.484                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-loads                                        128  thrpt             63.306                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt             23.932                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:LLC-stores                                       128  thrpt            170.246                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:branch-misses                                    128  thrpt            209.298                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:branches                                         128  thrpt          63629.018                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:cycles                                           128  thrpt         106849.945                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              5.119                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-loads                                       128  thrpt          53753.466                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.241                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:dTLB-stores                                      128  thrpt          34396.662                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              1.585                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:iTLB-loads                                       128  thrpt             11.271                 #/op
[info] MutableSetOfIntsBenchmark.writePlayJson:instructions                                     128  thrpt         310003.136                 #/op
[info] PrimitivesBenchmark.readCirce                                                            N/A  thrpt    5   1146066.939 ±   68310.131  ops/s
[info] PrimitivesBenchmark.readCirce:CPI                                                        N/A  thrpt              0.327                 #/op
[info] PrimitivesBenchmark.readCirce:L1-dcache-load-misses                                      N/A  thrpt             57.165                 #/op
[info] PrimitivesBenchmark.readCirce:L1-dcache-loads                                            N/A  thrpt           2041.671                 #/op
[info] PrimitivesBenchmark.readCirce:L1-dcache-stores                                           N/A  thrpt           1356.048                 #/op
[info] PrimitivesBenchmark.readCirce:L1-icache-load-misses                                      N/A  thrpt             50.979                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-load-misses                                            N/A  thrpt              0.030                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-loads                                                  N/A  thrpt              0.323                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-store-misses                                           N/A  thrpt              3.008                 #/op
[info] PrimitivesBenchmark.readCirce:LLC-stores                                                 N/A  thrpt             10.674                 #/op
[info] PrimitivesBenchmark.readCirce:branch-misses                                              N/A  thrpt              0.443                 #/op
[info] PrimitivesBenchmark.readCirce:branches                                                   N/A  thrpt           2169.294                 #/op
[info] PrimitivesBenchmark.readCirce:cycles                                                     N/A  thrpt           3339.894                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-load-misses                                           N/A  thrpt              0.195                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-loads                                                 N/A  thrpt           2130.067                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-store-misses                                          N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.readCirce:dTLB-stores                                                N/A  thrpt           1429.472                 #/op
[info] PrimitivesBenchmark.readCirce:iTLB-load-misses                                           N/A  thrpt              0.022                 #/op
[info] PrimitivesBenchmark.readCirce:iTLB-loads                                                 N/A  thrpt              0.074                 #/op
[info] PrimitivesBenchmark.readCirce:instructions                                               N/A  thrpt          10198.848                 #/op
[info] PrimitivesBenchmark.readJacksonScala                                                     N/A  thrpt    5   1889674.853 ±   83610.126  ops/s
[info] PrimitivesBenchmark.readJacksonScala:CPI                                                 N/A  thrpt              0.316                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-dcache-load-misses                               N/A  thrpt             18.006                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-dcache-loads                                     N/A  thrpt           1729.598                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-dcache-stores                                    N/A  thrpt            932.463                 #/op
[info] PrimitivesBenchmark.readJacksonScala:L1-icache-load-misses                               N/A  thrpt              0.592                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-load-misses                                     N/A  thrpt              0.047                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-loads                                           N/A  thrpt              0.195                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-store-misses                                    N/A  thrpt              0.779                 #/op
[info] PrimitivesBenchmark.readJacksonScala:LLC-stores                                          N/A  thrpt              2.238                 #/op
[info] PrimitivesBenchmark.readJacksonScala:branch-misses                                       N/A  thrpt              0.214                 #/op
[info] PrimitivesBenchmark.readJacksonScala:branches                                            N/A  thrpt           1288.459                 #/op
[info] PrimitivesBenchmark.readJacksonScala:cycles                                              N/A  thrpt           2030.972                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-load-misses                                    N/A  thrpt              0.041                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-loads                                          N/A  thrpt           1734.925                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-store-misses                                   N/A  thrpt              0.002                 #/op
[info] PrimitivesBenchmark.readJacksonScala:dTLB-stores                                         N/A  thrpt            925.613                 #/op
[info] PrimitivesBenchmark.readJacksonScala:iTLB-load-misses                                    N/A  thrpt              0.010                 #/op
[info] PrimitivesBenchmark.readJacksonScala:iTLB-loads                                          N/A  thrpt              0.022                 #/op
[info] PrimitivesBenchmark.readJacksonScala:instructions                                        N/A  thrpt           6430.526                 #/op
[info] PrimitivesBenchmark.readJsoniterScala                                                    N/A  thrpt    5   9570861.297 ±   99245.856  ops/s
[info] PrimitivesBenchmark.readJsoniterScala:CPI                                                N/A  thrpt              0.222                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-dcache-load-misses                              N/A  thrpt              0.911                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-dcache-loads                                    N/A  thrpt            342.899                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-dcache-stores                                   N/A  thrpt            220.061                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:L1-icache-load-misses                              N/A  thrpt              0.056                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-load-misses                                    N/A  thrpt              0.010                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-loads                                          N/A  thrpt              0.022                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-store-misses                                   N/A  thrpt              0.002                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:LLC-stores                                         N/A  thrpt              0.055                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:branch-misses                                      N/A  thrpt              0.023                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:branches                                           N/A  thrpt            440.127                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:cycles                                             N/A  thrpt            402.524                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-load-misses                                   N/A  thrpt              0.003                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-loads                                         N/A  thrpt            338.089                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-store-misses                                  N/A  thrpt              0.008                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:dTLB-stores                                        N/A  thrpt            220.314                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:iTLB-load-misses                                   N/A  thrpt              0.001                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:iTLB-loads                                         N/A  thrpt              0.003                 #/op
[info] PrimitivesBenchmark.readJsoniterScala:instructions                                       N/A  thrpt           1809.861                 #/op
[info] PrimitivesBenchmark.readPlayJson                                                         N/A  thrpt    5    476797.968 ±   34031.832  ops/s
[info] PrimitivesBenchmark.readPlayJson:CPI                                                     N/A  thrpt              0.377                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-dcache-load-misses                                   N/A  thrpt            218.488                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-dcache-loads                                         N/A  thrpt           5360.877                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-dcache-stores                                        N/A  thrpt           3163.531                 #/op
[info] PrimitivesBenchmark.readPlayJson:L1-icache-load-misses                                   N/A  thrpt            372.980                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-load-misses                                         N/A  thrpt              0.185                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-loads                                               N/A  thrpt              2.827                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-store-misses                                        N/A  thrpt              2.235                 #/op
[info] PrimitivesBenchmark.readPlayJson:LLC-stores                                              N/A  thrpt             16.961                 #/op
[info] PrimitivesBenchmark.readPlayJson:branch-misses                                           N/A  thrpt              9.190                 #/op
[info] PrimitivesBenchmark.readPlayJson:branches                                                N/A  thrpt           3800.314                 #/op
[info] PrimitivesBenchmark.readPlayJson:cycles                                                  N/A  thrpt           8039.087                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-load-misses                                        N/A  thrpt              0.217                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-loads                                              N/A  thrpt           5444.817                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-store-misses                                       N/A  thrpt              0.012                 #/op
[info] PrimitivesBenchmark.readPlayJson:dTLB-stores                                             N/A  thrpt           3222.444                 #/op
[info] PrimitivesBenchmark.readPlayJson:iTLB-load-misses                                        N/A  thrpt              0.028                 #/op
[info] PrimitivesBenchmark.readPlayJson:iTLB-loads                                              N/A  thrpt              0.097                 #/op
[info] PrimitivesBenchmark.readPlayJson:instructions                                            N/A  thrpt          21304.820                 #/op
[info] PrimitivesBenchmark.writeCirce                                                           N/A  thrpt    5   1888761.240 ±  316983.613  ops/s
[info] PrimitivesBenchmark.writeCirce:CPI                                                       N/A  thrpt              0.315                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-dcache-load-misses                                     N/A  thrpt             25.463                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-dcache-loads                                           N/A  thrpt           1395.035                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-dcache-stores                                          N/A  thrpt            976.814                 #/op
[info] PrimitivesBenchmark.writeCirce:L1-icache-load-misses                                     N/A  thrpt              0.317                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-load-misses                                           N/A  thrpt              0.066                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-loads                                                 N/A  thrpt              0.235                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-store-misses                                          N/A  thrpt              2.091                 #/op
[info] PrimitivesBenchmark.writeCirce:LLC-stores                                                N/A  thrpt              7.901                 #/op
[info] PrimitivesBenchmark.writeCirce:branch-misses                                             N/A  thrpt              0.444                 #/op
[info] PrimitivesBenchmark.writeCirce:branches                                                  N/A  thrpt           1332.981                 #/op
[info] PrimitivesBenchmark.writeCirce:cycles                                                    N/A  thrpt           2035.924                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-load-misses                                          N/A  thrpt              0.112                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-loads                                                N/A  thrpt           1392.585                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-store-misses                                         N/A  thrpt              0.002                 #/op
[info] PrimitivesBenchmark.writeCirce:dTLB-stores                                               N/A  thrpt            988.277                 #/op
[info] PrimitivesBenchmark.writeCirce:iTLB-load-misses                                          N/A  thrpt              0.009                 #/op
[info] PrimitivesBenchmark.writeCirce:iTLB-loads                                                N/A  thrpt              0.025                 #/op
[info] PrimitivesBenchmark.writeCirce:instructions                                              N/A  thrpt           6467.672                 #/op
[info] PrimitivesBenchmark.writeJacksonScala                                                    N/A  thrpt    5   3161565.600 ±  307326.228  ops/s
[info] PrimitivesBenchmark.writeJacksonScala:CPI                                                N/A  thrpt              0.334                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-dcache-load-misses                              N/A  thrpt             10.091                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-dcache-loads                                    N/A  thrpt            919.363                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-dcache-stores                                   N/A  thrpt            614.998                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:L1-icache-load-misses                              N/A  thrpt              0.081                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-load-misses                                    N/A  thrpt              0.010                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-loads                                          N/A  thrpt              0.071                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-store-misses                                   N/A  thrpt              0.160                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:LLC-stores                                         N/A  thrpt              1.598                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:branch-misses                                      N/A  thrpt              0.137                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:branches                                           N/A  thrpt            699.671                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:cycles                                             N/A  thrpt           1196.708                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-load-misses                                   N/A  thrpt              0.027                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-loads                                         N/A  thrpt            925.655                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-store-misses                                  N/A  thrpt              0.001                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:dTLB-stores                                        N/A  thrpt            612.167                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:iTLB-load-misses                                   N/A  thrpt              0.008                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:iTLB-loads                                         N/A  thrpt              0.012                 #/op
[info] PrimitivesBenchmark.writeJacksonScala:instructions                                       N/A  thrpt           3583.829                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala                                                   N/A  thrpt    5   9231927.418 ±  576057.950  ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:CPI                                               N/A  thrpt              0.391                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-dcache-load-misses                             N/A  thrpt              2.138                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-dcache-loads                                   N/A  thrpt            194.779                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-dcache-stores                                  N/A  thrpt            215.948                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:L1-icache-load-misses                             N/A  thrpt              0.046                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-load-misses                                   N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-loads                                         N/A  thrpt              0.015                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-store-misses                                  N/A  thrpt              0.008                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:LLC-stores                                        N/A  thrpt              0.233                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:branch-misses                                     N/A  thrpt              0.037                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:branches                                          N/A  thrpt            161.609                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:cycles                                            N/A  thrpt            412.820                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-load-misses                                  N/A  thrpt              0.005                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-loads                                        N/A  thrpt            193.518                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-store-misses                                 N/A  thrpt             ≈ 10⁻³                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:dTLB-stores                                       N/A  thrpt            209.561                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:iTLB-load-misses                                  N/A  thrpt              0.002                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:iTLB-loads                                        N/A  thrpt              0.009                 #/op
[info] PrimitivesBenchmark.writeJsoniterScala:instructions                                      N/A  thrpt           1056.766                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5   9120320.737 ±  190670.977  ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:CPI                                       N/A  thrpt              0.374                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                     N/A  thrpt              0.897                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                           N/A  thrpt            211.379                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                          N/A  thrpt            232.164                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                     N/A  thrpt              0.101                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                           N/A  thrpt              0.004                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                 N/A  thrpt              0.026                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                          N/A  thrpt              0.001                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                N/A  thrpt              0.052                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:branch-misses                             N/A  thrpt              0.022                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:branches                                  N/A  thrpt            172.891                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:cycles                                    N/A  thrpt            420.950                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                          N/A  thrpt              0.002                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                N/A  thrpt            210.735                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                         N/A  thrpt             ≈ 10⁻⁴                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                               N/A  thrpt            232.061                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                          N/A  thrpt              0.001                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                N/A  thrpt              0.004                 #/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:instructions                              N/A  thrpt           1125.237                 #/op
[info] PrimitivesBenchmark.writePlayJson                                                        N/A  thrpt    5    521821.530 ±   27856.254  ops/s
[info] PrimitivesBenchmark.writePlayJson:CPI                                                    N/A  thrpt              0.355                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-dcache-load-misses                                  N/A  thrpt            189.475                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-dcache-loads                                        N/A  thrpt           5130.980                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-dcache-stores                                       N/A  thrpt           3069.976                 #/op
[info] PrimitivesBenchmark.writePlayJson:L1-icache-load-misses                                  N/A  thrpt            190.615                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-load-misses                                        N/A  thrpt              0.382                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-loads                                              N/A  thrpt              1.984                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-store-misses                                       N/A  thrpt              4.052                 #/op
[info] PrimitivesBenchmark.writePlayJson:LLC-stores                                             N/A  thrpt             28.189                 #/op
[info] PrimitivesBenchmark.writePlayJson:branch-misses                                          N/A  thrpt              2.938                 #/op
[info] PrimitivesBenchmark.writePlayJson:branches                                               N/A  thrpt           3701.279                 #/op
[info] PrimitivesBenchmark.writePlayJson:cycles                                                 N/A  thrpt           7328.557                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-load-misses                                       N/A  thrpt              0.150                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-loads                                             N/A  thrpt           5080.478                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-store-misses                                      N/A  thrpt              0.010                 #/op
[info] PrimitivesBenchmark.writePlayJson:dTLB-stores                                            N/A  thrpt           3199.274                 #/op
[info] PrimitivesBenchmark.writePlayJson:iTLB-load-misses                                       N/A  thrpt              0.032                 #/op
[info] PrimitivesBenchmark.writePlayJson:iTLB-loads                                             N/A  thrpt              0.121                 #/op
[info] PrimitivesBenchmark.writePlayJson:instructions                                           N/A  thrpt          20636.156                 #/op
[info] SetOfIntsBenchmark.readCirce                                                             128  thrpt    5     91709.483 ±   14520.625  ops/s
[info] SetOfIntsBenchmark.readCirce:CPI                                                         128  thrpt              0.324                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-dcache-load-misses                                       128  thrpt           1010.610                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-dcache-loads                                             128  thrpt          25773.841                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-dcache-stores                                            128  thrpt          16668.090                 #/op
[info] SetOfIntsBenchmark.readCirce:L1-icache-load-misses                                       128  thrpt             50.211                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-load-misses                                             128  thrpt              6.179                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-loads                                                   128  thrpt             41.533                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-store-misses                                            128  thrpt             50.176                 #/op
[info] SetOfIntsBenchmark.readCirce:LLC-stores                                                  128  thrpt            181.414                 #/op
[info] SetOfIntsBenchmark.readCirce:branch-misses                                               128  thrpt             47.473                 #/op
[info] SetOfIntsBenchmark.readCirce:branches                                                    128  thrpt          27187.538                 #/op
[info] SetOfIntsBenchmark.readCirce:cycles                                                      128  thrpt          46052.397                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-load-misses                                            128  thrpt              4.081                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-loads                                                  128  thrpt          25867.462                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-store-misses                                           128  thrpt              0.124                 #/op
[info] SetOfIntsBenchmark.readCirce:dTLB-stores                                                 128  thrpt          16695.314                 #/op
[info] SetOfIntsBenchmark.readCirce:iTLB-load-misses                                            128  thrpt              0.461                 #/op
[info] SetOfIntsBenchmark.readCirce:iTLB-loads                                                  128  thrpt              2.479                 #/op
[info] SetOfIntsBenchmark.readCirce:instructions                                                128  thrpt         141959.397                 #/op
[info] SetOfIntsBenchmark.readJacksonScala                                                      128  thrpt    5    141290.050 ±    8235.665  ops/s
[info] SetOfIntsBenchmark.readJacksonScala:CPI                                                  128  thrpt              0.297                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-dcache-load-misses                                128  thrpt            543.334                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-dcache-loads                                      128  thrpt          16226.692                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-dcache-stores                                     128  thrpt          12325.150                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:L1-icache-load-misses                                128  thrpt            171.320                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-load-misses                                      128  thrpt              0.781                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-loads                                            128  thrpt              6.156                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-store-misses                                     128  thrpt             12.684                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:LLC-stores                                           128  thrpt             87.622                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:branch-misses                                        128  thrpt             27.017                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:branches                                             128  thrpt          16765.503                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:cycles                                               128  thrpt          27063.396                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-load-misses                                     128  thrpt              3.013                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-loads                                           128  thrpt          16637.688                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-store-misses                                    128  thrpt              0.019                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:dTLB-stores                                          128  thrpt          13117.347                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:iTLB-load-misses                                     128  thrpt              0.098                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:iTLB-loads                                           128  thrpt              0.202                 #/op
[info] SetOfIntsBenchmark.readJacksonScala:instructions                                         128  thrpt          90973.066                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala                                                     128  thrpt    5    174958.039 ±   15797.276  ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:CPI                                                 128  thrpt              0.307                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-dcache-load-misses                               128  thrpt            427.162                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-dcache-loads                                     128  thrpt          12381.592                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-dcache-stores                                    128  thrpt           9977.370                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:L1-icache-load-misses                               128  thrpt             62.376                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-load-misses                                     128  thrpt              1.938                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-loads                                           128  thrpt             22.341                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-store-misses                                    128  thrpt             15.726                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:LLC-stores                                          128  thrpt             87.543                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:branch-misses                                       128  thrpt             29.639                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:branches                                            128  thrpt          14488.276                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:cycles                                              128  thrpt          24055.343                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-load-misses                                    128  thrpt              1.976                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-loads                                          128  thrpt          12677.871                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-store-misses                                   128  thrpt              0.062                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:dTLB-stores                                         128  thrpt          10259.347                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:iTLB-load-misses                                    128  thrpt              0.332                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:iTLB-loads                                          128  thrpt              3.260                 #/op
[info] SetOfIntsBenchmark.readJsoniterScala:instructions                                        128  thrpt          78454.498                 #/op
[info] SetOfIntsBenchmark.readPlayJson                                                          128  thrpt    5     85400.927 ±    6146.858  ops/s
[info] SetOfIntsBenchmark.readPlayJson:CPI                                                      128  thrpt              0.308                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-dcache-load-misses                                    128  thrpt           1419.484                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-dcache-loads                                          128  thrpt          30477.741                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-dcache-stores                                         128  thrpt          25012.809                 #/op
[info] SetOfIntsBenchmark.readPlayJson:L1-icache-load-misses                                    128  thrpt            142.309                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-load-misses                                          128  thrpt              2.047                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-loads                                                128  thrpt              7.871                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-store-misses                                         128  thrpt             88.697                 #/op
[info] SetOfIntsBenchmark.readPlayJson:LLC-stores                                               128  thrpt            290.861                 #/op
[info] SetOfIntsBenchmark.readPlayJson:branch-misses                                            128  thrpt            118.987                 #/op
[info] SetOfIntsBenchmark.readPlayJson:branches                                                 128  thrpt          24324.850                 #/op
[info] SetOfIntsBenchmark.readPlayJson:cycles                                                   128  thrpt          44210.025                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-load-misses                                         128  thrpt              5.181                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-loads                                               128  thrpt          31436.036                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-store-misses                                        128  thrpt              0.059                 #/op
[info] SetOfIntsBenchmark.readPlayJson:dTLB-stores                                              128  thrpt          25371.631                 #/op
[info] SetOfIntsBenchmark.readPlayJson:iTLB-load-misses                                         128  thrpt              0.322                 #/op
[info] SetOfIntsBenchmark.readPlayJson:iTLB-loads                                               128  thrpt              0.500                 #/op
[info] SetOfIntsBenchmark.readPlayJson:instructions                                             128  thrpt         143307.785                 #/op
[info] SetOfIntsBenchmark.writeCirce                                                            128  thrpt    5    253769.272 ±   23117.374  ops/s
[info] SetOfIntsBenchmark.writeCirce:CPI                                                        128  thrpt              0.262                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-dcache-load-misses                                      128  thrpt            182.355                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-dcache-loads                                            128  thrpt           9495.705                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-dcache-stores                                           128  thrpt           7657.261                 #/op
[info] SetOfIntsBenchmark.writeCirce:L1-icache-load-misses                                      128  thrpt              1.173                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-load-misses                                            128  thrpt              0.186                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-loads                                                  128  thrpt              1.773                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-store-misses                                           128  thrpt             70.422                 #/op
[info] SetOfIntsBenchmark.writeCirce:LLC-stores                                                 128  thrpt            112.370                 #/op
[info] SetOfIntsBenchmark.writeCirce:branch-misses                                              128  thrpt              5.837                 #/op
[info] SetOfIntsBenchmark.writeCirce:branches                                                   128  thrpt          10818.017                 #/op
[info] SetOfIntsBenchmark.writeCirce:cycles                                                     128  thrpt          14836.483                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-load-misses                                           128  thrpt              1.474                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-loads                                                 128  thrpt           9768.376                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-store-misses                                          128  thrpt              0.031                 #/op
[info] SetOfIntsBenchmark.writeCirce:dTLB-stores                                                128  thrpt           7768.677                 #/op
[info] SetOfIntsBenchmark.writeCirce:iTLB-load-misses                                           128  thrpt              0.064                 #/op
[info] SetOfIntsBenchmark.writeCirce:iTLB-loads                                                 128  thrpt              0.032                 #/op
[info] SetOfIntsBenchmark.writeCirce:instructions                                               128  thrpt          56681.437                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala                                                     128  thrpt    5    810963.554 ±    8156.667  ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:CPI                                                 128  thrpt              0.242                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-dcache-load-misses                               128  thrpt             16.605                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-dcache-loads                                     128  thrpt           4010.659                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-dcache-stores                                    128  thrpt           2522.426                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:L1-icache-load-misses                               128  thrpt              0.210                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-load-misses                                     128  thrpt              0.043                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-loads                                           128  thrpt              0.251                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-store-misses                                    128  thrpt              4.289                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:LLC-stores                                          128  thrpt              8.574                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:branch-misses                                       128  thrpt              0.496                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:branches                                            128  thrpt           3918.581                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:cycles                                              128  thrpt           4742.639                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-load-misses                                    128  thrpt              0.182                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-loads                                          128  thrpt           4006.802                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-store-misses                                   128  thrpt              0.005                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:dTLB-stores                                         128  thrpt           2474.732                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:iTLB-load-misses                                    128  thrpt              0.010                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:iTLB-loads                                          128  thrpt              0.006                 #/op
[info] SetOfIntsBenchmark.writeJacksonScala:instructions                                        128  thrpt          19633.070                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala                                                    128  thrpt    5    765801.448 ±   11361.912  ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:CPI                                                128  thrpt              0.252                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-load-misses                              128  thrpt             15.042                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-loads                                    128  thrpt           3998.891                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-dcache-stores                                   128  thrpt           1939.678                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:L1-icache-load-misses                              128  thrpt              0.519                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-load-misses                                    128  thrpt              0.091                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-loads                                          128  thrpt              0.321                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-store-misses                                   128  thrpt              4.985                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:LLC-stores                                         128  thrpt              8.820                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:branch-misses                                      128  thrpt              0.503                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:branches                                           128  thrpt           3968.700                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:cycles                                             128  thrpt           4736.928                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-load-misses                                   128  thrpt              0.215                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-loads                                         128  thrpt           3910.219                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-store-misses                                  128  thrpt              0.003                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:dTLB-stores                                        128  thrpt           1890.854                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:iTLB-load-misses                                   128  thrpt              0.015                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:iTLB-loads                                         128  thrpt              0.014                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScala:instructions                                       128  thrpt          18829.582                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    804610.227 ±   10238.507  ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:CPI                                        128  thrpt              0.249                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                      128  thrpt              1.393                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                            128  thrpt           3850.360                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                           128  thrpt           1859.199                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                      128  thrpt              0.128                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                            128  thrpt              0.064                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                  128  thrpt              0.141                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                           128  thrpt              0.006                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                 128  thrpt              0.077                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branch-misses                              128  thrpt              0.362                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:branches                                   128  thrpt           3826.724                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:cycles                                     128  thrpt           4524.734                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                           128  thrpt              0.018                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                 128  thrpt           3874.238                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                          128  thrpt              0.005                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                                128  thrpt           1856.877                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                           128  thrpt              0.008                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                 128  thrpt              0.046                 #/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:instructions                               128  thrpt          18173.155                 #/op
[info] SetOfIntsBenchmark.writePlayJson                                                         128  thrpt    5     37793.367 ±    3394.280  ops/s
[info] SetOfIntsBenchmark.writePlayJson:CPI                                                     128  thrpt              0.375                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-dcache-load-misses                                   128  thrpt           1910.781                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-dcache-loads                                         128  thrpt          58531.570                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-dcache-stores                                        128  thrpt          34993.311                 #/op
[info] SetOfIntsBenchmark.writePlayJson:L1-icache-load-misses                                   128  thrpt            439.405                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-load-misses                                         128  thrpt              8.729                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-loads                                               128  thrpt            102.511                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-store-misses                                        128  thrpt             28.313                 #/op
[info] SetOfIntsBenchmark.writePlayJson:LLC-stores                                              128  thrpt            180.053                 #/op
[info] SetOfIntsBenchmark.writePlayJson:branch-misses                                           128  thrpt            261.915                 #/op
[info] SetOfIntsBenchmark.writePlayJson:branches                                                128  thrpt          63521.272                 #/op
[info] SetOfIntsBenchmark.writePlayJson:cycles                                                  128  thrpt         116817.788                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-load-misses                                        128  thrpt              7.365                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-loads                                              128  thrpt          59671.724                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-store-misses                                       128  thrpt              0.407                 #/op
[info] SetOfIntsBenchmark.writePlayJson:dTLB-stores                                             128  thrpt          34951.798                 #/op
[info] SetOfIntsBenchmark.writePlayJson:iTLB-load-misses                                        128  thrpt              4.314                 #/op
[info] SetOfIntsBenchmark.writePlayJson:iTLB-loads                                              128  thrpt             26.685                 #/op
[info] SetOfIntsBenchmark.writePlayJson:instructions                                            128  thrpt         311378.381                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce                                                    128  thrpt    5   4633142.349 ±  171139.049  ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:CPI                                                128  thrpt              0.248                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-dcache-load-misses                              128  thrpt             18.022                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-dcache-loads                                    128  thrpt            467.806                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-dcache-stores                                   128  thrpt            246.084                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:L1-icache-load-misses                              128  thrpt              0.163                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-load-misses                                    128  thrpt              0.018                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-loads                                          128  thrpt              0.083                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-store-misses                                   128  thrpt              2.600                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:LLC-stores                                         128  thrpt              6.477                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:branch-misses                                      128  thrpt              1.987                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:branches                                           128  thrpt            836.684                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:cycles                                             128  thrpt            826.088                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-load-misses                                   128  thrpt              0.182                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-loads                                         128  thrpt            490.554                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-store-misses                                  128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:dTLB-stores                                        128  thrpt            255.245                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:iTLB-load-misses                                   128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:iTLB-loads                                         128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.readCirce:instructions                                       128  thrpt           3329.412                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                              128  thrpt    5   6597184.868 ±  137431.366  ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:CPI                                          128  thrpt              0.206                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses                        128  thrpt              5.065                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads                              128  thrpt            317.012                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores                             128  thrpt            295.414                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses                        128  thrpt              0.074                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses                              128  thrpt              0.029                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-loads                                    128  thrpt              0.098                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses                             128  thrpt              0.270                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:LLC-stores                                   128  thrpt              0.854                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:branch-misses                                128  thrpt              1.114                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:branches                                     128  thrpt            695.758                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:cycles                                       128  thrpt            593.148                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses                             128  thrpt              0.049                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-loads                                   128  thrpt            319.799                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses                            128  thrpt             ≈ 10⁻³                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:dTLB-stores                                  128  thrpt            310.378                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses                             128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:iTLB-loads                                   128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:instructions                                 128  thrpt           2872.855                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                             128  thrpt    5   5180200.363 ±  149300.056  ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:CPI                                         128  thrpt              0.250                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses                       128  thrpt              5.165                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads                             128  thrpt            566.729                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores                            128  thrpt            203.932                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses                       128  thrpt              0.090                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-load-misses                             128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-loads                                   128  thrpt              0.039                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-store-misses                            128  thrpt              0.079                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:LLC-stores                                  128  thrpt              1.019                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:branch-misses                               128  thrpt              1.035                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:branches                                    128  thrpt            645.325                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:cycles                                      128  thrpt            735.818                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses                            128  thrpt              0.013                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-loads                                  128  thrpt            563.845                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses                           128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:dTLB-stores                                 128  thrpt            202.926                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses                            128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:iTLB-loads                                  128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:instructions                                128  thrpt           2946.862                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                            128  thrpt    5   6691881.619 ±  282706.679  ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:CPI                                        128  thrpt              0.218                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses                      128  thrpt              4.917                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads                            128  thrpt            323.868                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores                           128  thrpt            179.772                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses                      128  thrpt              0.019                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses                            128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-loads                                  128  thrpt              0.024                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses                           128  thrpt              0.330                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:LLC-stores                                 128  thrpt              0.793                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:branch-misses                              128  thrpt              1.451                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:branches                                   128  thrpt            795.643                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:cycles                                     128  thrpt            573.092                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses                           128  thrpt              0.053                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-loads                                 128  thrpt            324.604                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses                          128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:dTLB-stores                                128  thrpt            175.850                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses                           128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:iTLB-loads                                 128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:instructions                               128  thrpt           2623.134                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                 128  thrpt    5   5321256.326 ±  475650.491  ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:CPI                                             128  thrpt              0.254                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses                           128  thrpt              4.862                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-loads                                 128  thrpt            541.363                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-dcache-stores                                128  thrpt            208.967                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses                           128  thrpt              0.112                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-load-misses                                 128  thrpt              0.015                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-loads                                       128  thrpt              0.038                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-store-misses                                128  thrpt              0.267                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:LLC-stores                                      128  thrpt              0.789                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:branch-misses                                   128  thrpt              1.057                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:branches                                        128  thrpt            600.767                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:cycles                                          128  thrpt            706.486                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-load-misses                                128  thrpt              0.052                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-loads                                      128  thrpt            540.123                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-store-misses                               128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:dTLB-stores                                     128  thrpt            204.760                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:iTLB-load-misses                                128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:iTLB-loads                                      128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:instructions                                    128  thrpt           2784.836                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce                                                   128  thrpt    5   3683034.390 ±   11671.954  ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:CPI                                               128  thrpt              0.225                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses                             128  thrpt             13.389                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-loads                                   128  thrpt            367.012                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-dcache-stores                                  128  thrpt            206.236                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:L1-icache-load-misses                             128  thrpt              0.235                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-load-misses                                   128  thrpt              0.013                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-loads                                         128  thrpt              0.079                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-store-misses                                  128  thrpt              2.373                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:LLC-stores                                        128  thrpt              4.628                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:branch-misses                                     128  thrpt              2.097                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:branches                                          128  thrpt           1693.371                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:cycles                                            128  thrpt           1053.216                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-load-misses                                  128  thrpt              0.136                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-loads                                        128  thrpt            377.780                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-store-misses                                 128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:dTLB-stores                                       128  thrpt            220.625                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:iTLB-load-misses                                  128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:iTLB-loads                                        128  thrpt              0.010                 #/op
[info] StringOfAsciiCharsBenchmark.writeCirce:instructions                                      128  thrpt           4672.053                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                             128  thrpt    5   6779956.121 ±  428956.676  ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:CPI                                         128  thrpt              0.223                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses                       128  thrpt              2.630                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads                             128  thrpt            187.987                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores                            128  thrpt            154.364                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses                       128  thrpt              0.080                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses                             128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-loads                                   128  thrpt              0.024                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses                            128  thrpt              0.024                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:LLC-stores                                  128  thrpt              0.518                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:branch-misses                               128  thrpt              1.419                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:branches                                    128  thrpt            805.997                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:cycles                                      128  thrpt            561.387                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses                            128  thrpt              0.007                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads                                  128  thrpt            189.014                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses                           128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores                                 128  thrpt            155.899                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses                            128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads                                  128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:instructions                                128  thrpt           2522.811                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                            128  thrpt    5   6251411.515 ±  652975.288  ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:CPI                                        128  thrpt              0.248                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses                      128  thrpt              2.639                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads                            128  thrpt            404.610                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores                           128  thrpt            209.960                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses                      128  thrpt              0.173                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses                            128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-loads                                  128  thrpt              0.042                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses                           128  thrpt              0.003                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:LLC-stores                                 128  thrpt              0.508                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:branch-misses                              128  thrpt              1.052                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:branches                                   128  thrpt            620.265                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:cycles                                     128  thrpt            601.576                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses                           128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-loads                                 128  thrpt            406.596                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses                          128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:dTLB-stores                                128  thrpt            210.873                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses                           128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:iTLB-loads                                 128  thrpt              0.012                 #/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:instructions                               128  thrpt           2429.647                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                           128  thrpt    5   7163025.478 ±   21762.223  ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:CPI                                       128  thrpt              0.201                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses                     128  thrpt              2.587                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads                           128  thrpt            320.529                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores                          128  thrpt            163.517                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses                     128  thrpt              0.052                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses                           128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-loads                                 128  thrpt              0.024                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses                          128  thrpt              0.009                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:LLC-stores                                128  thrpt              0.564                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:branch-misses                             128  thrpt              1.041                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:branches                                  128  thrpt            696.661                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:cycles                                    128  thrpt            543.154                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses                          128  thrpt              0.006                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads                                128  thrpt            318.953                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses                         128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores                               128  thrpt            159.226                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses                          128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads                                128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:instructions                              128  thrpt           2698.183                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   7371702.788 ±    6406.489  ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI                               128  thrpt              0.199                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses             128  thrpt              0.152                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                   128  thrpt            306.272                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                  128  thrpt            159.091                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses             128  thrpt              0.013                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                   128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                         128  thrpt              0.005                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                  128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                        128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses                     128  thrpt              1.009                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches                          128  thrpt            663.822                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles                            128  thrpt            516.642                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                  128  thrpt             ≈ 10⁻⁴                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                        128  thrpt            306.308                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                 128  thrpt             ≈ 10⁻³                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                       128  thrpt            158.368                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                  128  thrpt              0.002                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                        128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions                      128  thrpt           2593.515                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                128  thrpt    5   6314868.259 ±   98021.332  ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:CPI                                            128  thrpt              0.251                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses                          128  thrpt              2.619                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-loads                                128  thrpt            407.470                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-dcache-stores                               128  thrpt            215.252                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses                          128  thrpt              0.069                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-load-misses                                128  thrpt              0.016                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-loads                                      128  thrpt              0.057                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-store-misses                               128  thrpt              0.004                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:LLC-stores                                     128  thrpt              0.411                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:branch-misses                                  128  thrpt              1.058                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:branches                                       128  thrpt            619.552                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:cycles                                         128  thrpt            604.656                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-load-misses                               128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-loads                                     128  thrpt            409.482                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-store-misses                              128  thrpt             ≈ 10⁻³                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:dTLB-stores                                    128  thrpt            214.219                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:iTLB-load-misses                               128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:iTLB-loads                                     128  thrpt              0.001                 #/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:instructions                                   128  thrpt           2409.651                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                 128  thrpt    5   1760063.201 ±   83506.590  ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:CPI                                             128  thrpt              0.226                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-load-misses                           128  thrpt             31.479                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-loads                                 128  thrpt            880.175                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-dcache-stores                                128  thrpt            416.419                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:L1-icache-load-misses                           128  thrpt              0.484                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-load-misses                                 128  thrpt              0.043                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-loads                                       128  thrpt              0.233                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-store-misses                                128  thrpt              9.283                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:LLC-stores                                      128  thrpt             16.574                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:branch-misses                                   128  thrpt              2.121                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:branches                                        128  thrpt           2592.216                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:cycles                                          128  thrpt           2172.434                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-load-misses                                128  thrpt              0.361                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-loads                                      128  thrpt            902.348                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-store-misses                               128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:dTLB-stores                                     128  thrpt            424.377                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:iTLB-load-misses                                128  thrpt              0.006                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:iTLB-loads                                      128  thrpt              0.015                 #/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:instructions                                    128  thrpt           9622.915                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                           128  thrpt    5   3004622.008 ±   31722.826  ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:CPI                                       128  thrpt              0.212                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-load-misses                     128  thrpt              5.189                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-loads                           128  thrpt            583.272                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-dcache-stores                          128  thrpt            557.933                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:L1-icache-load-misses                     128  thrpt              0.189                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-load-misses                           128  thrpt              0.014                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-loads                                 128  thrpt              0.074                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-store-misses                          128  thrpt              0.218                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:LLC-stores                                128  thrpt              0.732                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:branch-misses                             128  thrpt              1.114                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:branches                                  128  thrpt           1320.958                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:cycles                                    128  thrpt           1266.375                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-load-misses                          128  thrpt              0.045                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-loads                                128  thrpt            585.078                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-store-misses                         128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:dTLB-stores                               128  thrpt            558.906                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-load-misses                          128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:iTLB-loads                                128  thrpt              0.006                 #/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:instructions                              128  thrpt           5972.799                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                          128  thrpt    5   1875499.745 ±  214830.686  ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:CPI                                      128  thrpt              0.224                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-load-misses                    128  thrpt              5.798                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-loads                          128  thrpt           1087.710                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-dcache-stores                         128  thrpt            344.300                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:L1-icache-load-misses                    128  thrpt              0.120                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-load-misses                          128  thrpt              0.011                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-loads                                128  thrpt              0.076                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-store-misses                         128  thrpt              0.092                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:LLC-stores                               128  thrpt              0.846                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:branch-misses                            128  thrpt              2.167                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:branches                                 128  thrpt           2017.917                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:cycles                                   128  thrpt           2008.032                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-load-misses                         128  thrpt              0.015                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-loads                               128  thrpt           1098.426                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-store-misses                        128  thrpt             ≈ 10⁻³                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:dTLB-stores                              128  thrpt            342.839                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-load-misses                         128  thrpt              0.009                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:iTLB-loads                               128  thrpt              0.017                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:instructions                             128  thrpt           8961.014                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                         128  thrpt    5   2255576.488 ±  178895.810  ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:CPI                                     128  thrpt              0.209                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-load-misses                   128  thrpt              5.110                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-loads                         128  thrpt            596.059                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-dcache-stores                        128  thrpt            184.148                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:L1-icache-load-misses                   128  thrpt              0.055                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-load-misses                         128  thrpt              0.023                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-loads                               128  thrpt              0.069                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-store-misses                        128  thrpt              0.262                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:LLC-stores                              128  thrpt              0.731                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:branch-misses                           128  thrpt              1.091                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:branches                                128  thrpt           2022.321                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:cycles                                  128  thrpt           1679.727                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-load-misses                        128  thrpt              0.064                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-loads                              128  thrpt            586.219                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:dTLB-stores                             128  thrpt            181.533                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-load-misses                        128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:iTLB-loads                              128  thrpt              0.014                 #/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:instructions                            128  thrpt           8025.291                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                              128  thrpt    5   1974778.351 ±   20704.267  ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:CPI                                          128  thrpt              0.219                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-load-misses                        128  thrpt              5.229                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-loads                              128  thrpt           1071.438                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-dcache-stores                             128  thrpt            344.682                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:L1-icache-load-misses                        128  thrpt              0.303                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-load-misses                              128  thrpt              0.011                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-loads                                    128  thrpt              0.096                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-store-misses                             128  thrpt              0.263                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:LLC-stores                                   128  thrpt              0.731                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:branch-misses                                128  thrpt              2.073                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:branches                                     128  thrpt           1996.943                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:cycles                                       128  thrpt           1934.405                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-load-misses                             128  thrpt              0.051                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-loads                                   128  thrpt           1067.668                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-store-misses                            128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:dTLB-stores                                  128  thrpt            343.483                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-load-misses                             128  thrpt              0.006                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:iTLB-loads                                   128  thrpt              0.013                 #/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:instructions                                 128  thrpt           8848.381                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                128  thrpt    5   2596307.097 ±   17087.508  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:CPI                                            128  thrpt              0.243                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-load-misses                          128  thrpt             17.654                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-loads                                128  thrpt            388.275                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-dcache-stores                               128  thrpt            473.576                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:L1-icache-load-misses                          128  thrpt              0.585                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-load-misses                                128  thrpt              0.014                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-loads                                      128  thrpt              0.086                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-store-misses                               128  thrpt              2.794                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:LLC-stores                                     128  thrpt              5.862                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:branch-misses                                  128  thrpt              2.142                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:branches                                       128  thrpt           1449.253                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:cycles                                         128  thrpt           1498.097                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-load-misses                               128  thrpt              0.233                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-loads                                     128  thrpt            399.437                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-store-misses                              128  thrpt              0.004                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:dTLB-stores                                    128  thrpt            494.489                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-load-misses                               128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:iTLB-loads                                     128  thrpt              0.010                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:instructions                                   128  thrpt           6176.328                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                          128  thrpt    5   3572768.470 ±  311259.455  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:CPI                                      128  thrpt              0.225                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-load-misses                    128  thrpt              7.064                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-loads                          128  thrpt            206.574                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-dcache-stores                         128  thrpt            539.876                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:L1-icache-load-misses                    128  thrpt              0.071                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-load-misses                          128  thrpt              0.031                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-loads                                128  thrpt              0.127                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-store-misses                         128  thrpt              0.789                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:LLC-stores                               128  thrpt              2.275                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branch-misses                            128  thrpt              1.220                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:branches                                 128  thrpt            836.695                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:cycles                                   128  thrpt           1065.739                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-load-misses                         128  thrpt              0.092                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-loads                               128  thrpt            204.059                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-store-misses                        128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:dTLB-stores                              128  thrpt            562.575                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-load-misses                         128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:iTLB-loads                               128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:instructions                             128  thrpt           4741.221                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                         128  thrpt    5   3401334.100 ±  113979.284  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:CPI                                     128  thrpt              0.240                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-load-misses                   128  thrpt              6.964                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-loads                         128  thrpt            301.095                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-dcache-stores                        128  thrpt            626.753                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:L1-icache-load-misses                   128  thrpt              0.277                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-load-misses                         128  thrpt              0.023                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-loads                               128  thrpt              0.096                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-store-misses                        128  thrpt              0.671                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:LLC-stores                              128  thrpt              2.095                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:branch-misses                           128  thrpt              1.137                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:branches                                128  thrpt            793.739                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:cycles                                  128  thrpt           1130.820                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-load-misses                        128  thrpt              0.093                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-loads                              128  thrpt            295.069                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-store-misses                       128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:dTLB-stores                             128  thrpt            625.081                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-load-misses                        128  thrpt              0.007                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:iTLB-loads                              128  thrpt              0.067                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:instructions                            128  thrpt           4715.017                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                        128  thrpt    5   3692232.289 ±  222953.958  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:CPI                                    128  thrpt              0.235                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-load-misses                  128  thrpt              6.739                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-loads                        128  thrpt            202.949                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-dcache-stores                       128  thrpt            567.689                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:L1-icache-load-misses                  128  thrpt              0.038                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-load-misses                        128  thrpt              0.007                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-loads                              128  thrpt              0.031                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-store-misses                       128  thrpt              0.754                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:LLC-stores                             128  thrpt              2.207                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branch-misses                          128  thrpt              1.111                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:branches                               128  thrpt            717.268                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:cycles                                 128  thrpt           1033.899                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-load-misses                       128  thrpt              0.091                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-loads                             128  thrpt            203.847                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-store-misses                      128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:dTLB-stores                            128  thrpt            546.291                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-load-misses                       128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:iTLB-loads                             128  thrpt              0.008                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:instructions                           128  thrpt           4396.078                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5   3881059.135 ±    3716.522  ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:CPI                            128  thrpt              0.226                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses          128  thrpt              0.312                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                128  thrpt            181.536                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores               128  thrpt            541.109                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses          128  thrpt              0.074                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-loads                      128  thrpt              0.019                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses               128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:LLC-stores                     128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branch-misses                  128  thrpt              1.019                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:branches                       128  thrpt            692.525                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:cycles                         128  thrpt            973.438                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses               128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                     128  thrpt            179.284                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses              128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                    128  thrpt            539.077                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses               128  thrpt              0.002                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                     128  thrpt              0.004                 #/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:instructions                   128  thrpt           4300.993                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                             128  thrpt    5   3313705.132 ±  149099.649  ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:CPI                                         128  thrpt              0.244                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-load-misses                       128  thrpt              6.919                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-loads                             128  thrpt            308.693                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-dcache-stores                            128  thrpt            636.074                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:L1-icache-load-misses                       128  thrpt              0.157                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-load-misses                             128  thrpt              0.009                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-loads                                   128  thrpt              0.057                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-store-misses                            128  thrpt              0.743                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:LLC-stores                                  128  thrpt              2.254                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:branch-misses                               128  thrpt              1.199                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:branches                                    128  thrpt            789.830                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:cycles                                      128  thrpt           1144.251                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-load-misses                            128  thrpt              0.089                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-loads                                  128  thrpt            306.998                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-store-misses                           128  thrpt              0.001                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:dTLB-stores                                 128  thrpt            638.367                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-load-misses                            128  thrpt              0.005                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:iTLB-loads                                  128  thrpt              0.003                 #/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:instructions                                128  thrpt           4688.987                 #/op
[info] TwitterAPIBenchmark.readCirce                                                            N/A  thrpt    5     12378.617 ±     958.937  ops/s
[info] TwitterAPIBenchmark.readCirce:CPI                                                        N/A  thrpt              0.364                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-dcache-load-misses                                      N/A  thrpt           8945.165                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-dcache-loads                                            N/A  thrpt         222544.087                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-dcache-stores                                           N/A  thrpt         126240.899                 #/op
[info] TwitterAPIBenchmark.readCirce:L1-icache-load-misses                                      N/A  thrpt           5508.235                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-load-misses                                            N/A  thrpt             60.228                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-loads                                                  N/A  thrpt            713.591                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-store-misses                                           N/A  thrpt            996.255                 #/op
[info] TwitterAPIBenchmark.readCirce:LLC-stores                                                 N/A  thrpt           1763.740                 #/op
[info] TwitterAPIBenchmark.readCirce:branch-misses                                              N/A  thrpt           1020.711                 #/op
[info] TwitterAPIBenchmark.readCirce:branches                                                   N/A  thrpt         246502.536                 #/op
[info] TwitterAPIBenchmark.readCirce:cycles                                                     N/A  thrpt         396231.903                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-load-misses                                           N/A  thrpt             38.335                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-loads                                                 N/A  thrpt         225020.144                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-store-misses                                          N/A  thrpt             14.807                 #/op
[info] TwitterAPIBenchmark.readCirce:dTLB-stores                                                N/A  thrpt         128879.457                 #/op
[info] TwitterAPIBenchmark.readCirce:iTLB-load-misses                                           N/A  thrpt             19.083                 #/op
[info] TwitterAPIBenchmark.readCirce:iTLB-loads                                                 N/A  thrpt            194.653                 #/op
[info] TwitterAPIBenchmark.readCirce:instructions                                               N/A  thrpt        1088642.652                 #/op
[info] TwitterAPIBenchmark.readJacksonScala                                                     N/A  thrpt    5     21420.700 ±     969.842  ops/s
[info] TwitterAPIBenchmark.readJacksonScala:CPI                                                 N/A  thrpt              0.340                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-dcache-load-misses                               N/A  thrpt           5321.692                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-dcache-loads                                     N/A  thrpt         126797.730                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-dcache-stores                                    N/A  thrpt          59129.732                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:L1-icache-load-misses                               N/A  thrpt           2065.376                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-load-misses                                     N/A  thrpt             13.732                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-loads                                           N/A  thrpt            275.436                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-store-misses                                    N/A  thrpt             17.209                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:LLC-stores                                          N/A  thrpt            114.214                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:branch-misses                                       N/A  thrpt            340.697                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:branches                                            N/A  thrpt         122305.344                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:cycles                                              N/A  thrpt         195787.927                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-load-misses                                    N/A  thrpt             12.937                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-loads                                          N/A  thrpt         129397.026                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-store-misses                                   N/A  thrpt              0.641                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:dTLB-stores                                         N/A  thrpt          60820.631                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:iTLB-load-misses                                    N/A  thrpt             11.954                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:iTLB-loads                                          N/A  thrpt             75.776                 #/op
[info] TwitterAPIBenchmark.readJacksonScala:instructions                                        N/A  thrpt         575625.888                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala                                                    N/A  thrpt    5     20301.217 ±     883.851  ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:CPI                                                N/A  thrpt              0.444                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-dcache-load-misses                              N/A  thrpt           1031.077                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-dcache-loads                                    N/A  thrpt         100595.396                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-dcache-stores                                   N/A  thrpt          53292.478                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:L1-icache-load-misses                              N/A  thrpt           6356.044                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-load-misses                                    N/A  thrpt             13.081                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-loads                                          N/A  thrpt            127.700                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-store-misses                                   N/A  thrpt             14.698                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:LLC-stores                                         N/A  thrpt             85.921                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:branch-misses                                      N/A  thrpt            278.319                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:branches                                           N/A  thrpt         120133.004                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:cycles                                             N/A  thrpt         203426.088                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-load-misses                                   N/A  thrpt              8.371                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-loads                                         N/A  thrpt          98838.505                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-store-misses                                  N/A  thrpt              4.050                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:dTLB-stores                                        N/A  thrpt          53213.182                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:iTLB-load-misses                                   N/A  thrpt              6.060                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:iTLB-loads                                         N/A  thrpt             63.749                 #/op
[info] TwitterAPIBenchmark.readJsoniterScala:instructions                                       N/A  thrpt         457943.400                 #/op
[info] TwitterAPIBenchmark.readPlayJson                                                         N/A  thrpt    5      8905.561 ±     443.931  ops/s
[info] TwitterAPIBenchmark.readPlayJson:CPI                                                     N/A  thrpt              0.376                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-dcache-load-misses                                   N/A  thrpt          11828.134                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-dcache-loads                                         N/A  thrpt         273527.029                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-dcache-stores                                        N/A  thrpt         164148.034                 #/op
[info] TwitterAPIBenchmark.readPlayJson:L1-icache-load-misses                                   N/A  thrpt           8957.177                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-load-misses                                         N/A  thrpt             30.202                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-loads                                               N/A  thrpt            843.100                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-store-misses                                        N/A  thrpt            137.334                 #/op
[info] TwitterAPIBenchmark.readPlayJson:LLC-stores                                              N/A  thrpt            946.151                 #/op
[info] TwitterAPIBenchmark.readPlayJson:branch-misses                                           N/A  thrpt           1228.423                 #/op
[info] TwitterAPIBenchmark.readPlayJson:branches                                                N/A  thrpt         207964.267                 #/op
[info] TwitterAPIBenchmark.readPlayJson:cycles                                                  N/A  thrpt         435191.329                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-load-misses                                        N/A  thrpt             23.662                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-loads                                              N/A  thrpt         278295.275                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-store-misses                                       N/A  thrpt              0.827                 #/op
[info] TwitterAPIBenchmark.readPlayJson:dTLB-stores                                             N/A  thrpt         164531.063                 #/op
[info] TwitterAPIBenchmark.readPlayJson:iTLB-load-misses                                        N/A  thrpt              3.976                 #/op
[info] TwitterAPIBenchmark.readPlayJson:iTLB-loads                                              N/A  thrpt            135.966                 #/op
[info] TwitterAPIBenchmark.readPlayJson:instructions                                            N/A  thrpt        1155942.479                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala                                                    N/A  thrpt    5     65758.244 ±    6318.337  ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:CPI                                                N/A  thrpt              0.352                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-dcache-load-misses                              N/A  thrpt           3041.447                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-dcache-loads                                    N/A  thrpt          39262.320                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-dcache-stores                                   N/A  thrpt          23384.170                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:L1-icache-load-misses                              N/A  thrpt           1267.887                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-load-misses                                    N/A  thrpt              4.303                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-loads                                          N/A  thrpt             78.288                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-store-misses                                   N/A  thrpt            239.003                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:LLC-stores                                         N/A  thrpt            374.703                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:branch-misses                                      N/A  thrpt            144.499                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:branches                                           N/A  thrpt          43188.276                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:cycles                                             N/A  thrpt          64727.484                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-load-misses                                   N/A  thrpt              5.316                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-loads                                         N/A  thrpt          38192.640                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-store-misses                                  N/A  thrpt              1.598                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:dTLB-stores                                        N/A  thrpt          22309.079                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:iTLB-load-misses                                   N/A  thrpt              4.308                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:iTLB-loads                                         N/A  thrpt             14.450                 #/op
[info] TwitterAPIBenchmark.writeJacksonScala:instructions                                       N/A  thrpt         183914.432                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala                                                   N/A  thrpt    5    107027.172 ±    6595.673  ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:CPI                                               N/A  thrpt              0.288                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-load-misses                             N/A  thrpt            556.331                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-loads                                   N/A  thrpt          20330.820                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-dcache-stores                                  N/A  thrpt          11981.087                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:L1-icache-load-misses                             N/A  thrpt            521.867                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-load-misses                                   N/A  thrpt              0.182                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-loads                                         N/A  thrpt              2.910                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-store-misses                                  N/A  thrpt            135.579                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:LLC-stores                                        N/A  thrpt            199.730                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:branch-misses                                     N/A  thrpt             36.375                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:branches                                          N/A  thrpt          29270.687                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:cycles                                            N/A  thrpt          35462.563                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-load-misses                                  N/A  thrpt              1.140                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-loads                                        N/A  thrpt          20937.345                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-store-misses                                 N/A  thrpt              1.437                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:dTLB-stores                                       N/A  thrpt          12050.098                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:iTLB-load-misses                                  N/A  thrpt              0.175                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:iTLB-loads                                        N/A  thrpt              0.263                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScala:instructions                                      N/A  thrpt         123055.119                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5    118877.415 ±   10825.361  ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:CPI                                       N/A  thrpt              0.269                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses                     N/A  thrpt            271.139                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                           N/A  thrpt          17621.154                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                          N/A  thrpt          11303.958                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses                     N/A  thrpt            757.802                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                           N/A  thrpt              0.097                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-loads                                 N/A  thrpt              0.407                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                          N/A  thrpt              0.012                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:LLC-stores                                N/A  thrpt              0.113                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branch-misses                             N/A  thrpt             23.949                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:branches                                  N/A  thrpt          28315.927                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:cycles                                    N/A  thrpt          31306.731                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                          N/A  thrpt              0.018                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                                N/A  thrpt          17650.848                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                         N/A  thrpt              0.007                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                               N/A  thrpt          11323.699                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                          N/A  thrpt              0.161                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                                N/A  thrpt              0.520                 #/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:instructions                              N/A  thrpt         116352.910                 #/op
[info] VectorOfBooleansBenchmark.readCirce                                                      128  thrpt    5    387036.759 ±   21989.062  ops/s
[info] VectorOfBooleansBenchmark.readCirce:CPI                                                  128  thrpt              0.305                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-dcache-load-misses                                128  thrpt            144.891                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-dcache-loads                                      128  thrpt           6061.397                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-dcache-stores                                     128  thrpt           5311.040                 #/op
[info] VectorOfBooleansBenchmark.readCirce:L1-icache-load-misses                                128  thrpt              2.511                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-load-misses                                      128  thrpt              0.506                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-loads                                            128  thrpt              2.404                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-store-misses                                     128  thrpt             24.973                 #/op
[info] VectorOfBooleansBenchmark.readCirce:LLC-stores                                           128  thrpt             53.606                 #/op
[info] VectorOfBooleansBenchmark.readCirce:branch-misses                                        128  thrpt             11.080                 #/op
[info] VectorOfBooleansBenchmark.readCirce:branches                                             128  thrpt           7557.224                 #/op
[info] VectorOfBooleansBenchmark.readCirce:cycles                                               128  thrpt           9991.058                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-load-misses                                     128  thrpt              1.011                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-loads                                           128  thrpt           6145.076                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-store-misses                                    128  thrpt              0.013                 #/op
[info] VectorOfBooleansBenchmark.readCirce:dTLB-stores                                          128  thrpt           5521.438                 #/op
[info] VectorOfBooleansBenchmark.readCirce:iTLB-load-misses                                     128  thrpt              0.058                 #/op
[info] VectorOfBooleansBenchmark.readCirce:iTLB-loads                                           128  thrpt              0.097                 #/op
[info] VectorOfBooleansBenchmark.readCirce:instructions                                         128  thrpt          32714.213                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala                                               128  thrpt    5    938736.250 ±  145758.195  ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:CPI                                           128  thrpt              0.245                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-load-misses                         128  thrpt             25.787                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-loads                               128  thrpt           3004.699                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-dcache-stores                              128  thrpt           1720.550                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:L1-icache-load-misses                         128  thrpt              9.714                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-load-misses                               128  thrpt              0.208                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-loads                                     128  thrpt              2.066                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-store-misses                              128  thrpt              0.835                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:LLC-stores                                    128  thrpt              5.008                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:branch-misses                                 128  thrpt              3.761                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:branches                                      128  thrpt           4794.969                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:cycles                                        128  thrpt           4195.982                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-load-misses                              128  thrpt              0.260                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-loads                                    128  thrpt           2953.801                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-store-misses                             128  thrpt              0.011                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:dTLB-stores                                   128  thrpt           1706.048                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:iTLB-load-misses                              128  thrpt              0.098                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:iTLB-loads                                    128  thrpt              0.763                 #/op
[info] VectorOfBooleansBenchmark.readJacksonScala:instructions                                  128  thrpt          17105.235                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala                                              128  thrpt    5   1961991.725 ±   21257.003  ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:CPI                                          128  thrpt              0.230                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-load-misses                        128  thrpt             13.127                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-loads                              128  thrpt           1092.023                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-dcache-stores                             128  thrpt            891.802                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:L1-icache-load-misses                        128  thrpt              0.097                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-load-misses                              128  thrpt              0.038                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-loads                                    128  thrpt              0.117                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-store-misses                             128  thrpt              0.584                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:LLC-stores                                   128  thrpt              3.095                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:branch-misses                                128  thrpt              2.675                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:branches                                     128  thrpt           2590.529                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:cycles                                       128  thrpt           1978.854                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-load-misses                             128  thrpt              0.133                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-loads                                   128  thrpt           1106.862                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-store-misses                            128  thrpt              0.003                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:dTLB-stores                                  128  thrpt            899.340                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:iTLB-load-misses                             128  thrpt              0.009                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:iTLB-loads                                   128  thrpt              0.017                 #/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:instructions                                 128  thrpt           8599.297                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson                                                   128  thrpt    5    193598.068 ±   18601.851  ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:CPI                                               128  thrpt              0.297                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-dcache-load-misses                             128  thrpt            711.971                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-dcache-loads                                   128  thrpt          15659.710                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-dcache-stores                                  128  thrpt          13431.185                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:L1-icache-load-misses                             128  thrpt              5.401                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-load-misses                                   128  thrpt              1.083                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-loads                                         128  thrpt              4.009                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-store-misses                                  128  thrpt             83.294                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:LLC-stores                                        128  thrpt            203.332                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:branch-misses                                     128  thrpt             29.375                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:branches                                          128  thrpt          12274.365                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:cycles                                            128  thrpt          19862.529                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-load-misses                                  128  thrpt              1.584                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-loads                                        128  thrpt          14737.281                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-store-misses                                 128  thrpt              0.037                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:dTLB-stores                                       128  thrpt          12652.341                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:iTLB-load-misses                                  128  thrpt              0.139                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:iTLB-loads                                        128  thrpt              0.351                 #/op
[info] VectorOfBooleansBenchmark.readPlayJson:instructions                                      128  thrpt          66853.772                 #/op
[info] VectorOfBooleansBenchmark.writeCirce                                                     128  thrpt    5    450782.397 ±    4786.742  ops/s
[info] VectorOfBooleansBenchmark.writeCirce:CPI                                                 128  thrpt              0.291                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-dcache-load-misses                               128  thrpt             82.635                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-dcache-loads                                     128  thrpt           6651.085                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-dcache-stores                                    128  thrpt           6086.355                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:L1-icache-load-misses                               128  thrpt              2.240                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-load-misses                                     128  thrpt              0.089                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-loads                                           128  thrpt              0.914                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-store-misses                                    128  thrpt             53.262                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:LLC-stores                                          128  thrpt             77.610                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:branch-misses                                       128  thrpt              8.931                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:branches                                            128  thrpt           5608.305                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:cycles                                              128  thrpt           8086.208                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-load-misses                                    128  thrpt              1.167                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-loads                                          128  thrpt           6705.088                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-store-misses                                   128  thrpt              0.029                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:dTLB-stores                                         128  thrpt           6112.715                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:iTLB-load-misses                                    128  thrpt              0.049                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:iTLB-loads                                          128  thrpt              0.106                 #/op
[info] VectorOfBooleansBenchmark.writeCirce:instructions                                        128  thrpt          27803.240                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala                                              128  thrpt    5   1236164.970 ±  164472.566  ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:CPI                                          128  thrpt              0.243                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-load-misses                        128  thrpt             12.655                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-loads                              128  thrpt           3099.120                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-dcache-stores                             128  thrpt           1906.923                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:L1-icache-load-misses                        128  thrpt              0.903                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-load-misses                              128  thrpt              0.027                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-loads                                    128  thrpt              0.208                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-store-misses                             128  thrpt              3.181                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:LLC-stores                                   128  thrpt              6.946                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:branch-misses                                128  thrpt              1.266                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:branches                                     128  thrpt           2058.930                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:cycles                                       128  thrpt           3034.273                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-load-misses                             128  thrpt              0.175                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-loads                                   128  thrpt           3088.579                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-store-misses                            128  thrpt              0.001                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:dTLB-stores                                  128  thrpt           1910.128                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:iTLB-load-misses                             128  thrpt              0.006                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:iTLB-loads                                   128  thrpt              0.007                 #/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:instructions                                 128  thrpt          12510.064                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5   1571632.787 ±  227871.523  ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:CPI                                         128  thrpt              0.239                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-load-misses                       128  thrpt             12.240                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-loads                             128  thrpt           1659.470                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-dcache-stores                            128  thrpt           1730.272                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:L1-icache-load-misses                       128  thrpt              0.161                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-load-misses                             128  thrpt              0.023                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-loads                                   128  thrpt              0.095                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-store-misses                            128  thrpt              3.358                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:LLC-stores                                  128  thrpt              7.174                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:branch-misses                               128  thrpt              1.203                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:branches                                    128  thrpt           2383.794                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:cycles                                      128  thrpt           2357.142                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-load-misses                            128  thrpt              0.173                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-loads                                  128  thrpt           1665.088                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-store-misses                           128  thrpt              0.003                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:dTLB-stores                                 128  thrpt           1687.113                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-load-misses                            128  thrpt              0.007                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:iTLB-loads                                  128  thrpt              0.021                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:instructions                                128  thrpt           9861.457                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5   1693190.397 ±   21973.353  ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:CPI                                 128  thrpt              0.229                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-load-misses               128  thrpt              0.849                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-loads                     128  thrpt           1651.666                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-dcache-stores                    128  thrpt           1677.543                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:L1-icache-load-misses               128  thrpt              0.078                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-load-misses                     128  thrpt              0.017                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-loads                           128  thrpt              0.080                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-store-misses                    128  thrpt              0.004                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:LLC-stores                          128  thrpt              0.026                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branch-misses                       128  thrpt              1.119                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:branches                            128  thrpt           2347.504                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:cycles                              128  thrpt           2262.590                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-load-misses                    128  thrpt              0.008                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-loads                          128  thrpt           1653.747                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-store-misses                   128  thrpt              0.001                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:dTLB-stores                         128  thrpt           1680.560                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-load-misses                    128  thrpt              0.006                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:iTLB-loads                          128  thrpt              0.021                 #/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:instructions                        128  thrpt           9882.878                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson                                                  128  thrpt    5    639765.954 ±   46420.284  ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:CPI                                              128  thrpt              0.269                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-dcache-load-misses                            128  thrpt             44.118                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-dcache-loads                                  128  thrpt           6112.506                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-dcache-stores                                 128  thrpt           4023.962                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:L1-icache-load-misses                            128  thrpt              2.881                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-load-misses                                  128  thrpt              0.441                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-loads                                        128  thrpt              2.242                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-store-misses                                 128  thrpt              4.069                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:LLC-stores                                       128  thrpt             13.881                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:branch-misses                                    128  thrpt              5.957                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:branches                                         128  thrpt           3962.438                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:cycles                                           128  thrpt           6419.801                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-load-misses                                 128  thrpt              0.408                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-loads                                       128  thrpt           6241.905                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-store-misses                                128  thrpt              0.005                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:dTLB-stores                                      128  thrpt           4173.605                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:iTLB-load-misses                                 128  thrpt              0.024                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:iTLB-loads                                       128  thrpt              0.177                 #/op
[info] VectorOfBooleansBenchmark.writePlayJson:instructions                                     128  thrpt          23836.623                 #/op
[info] Benchmark result is saved to graalvmee1.json
[success] Total time: 6202 s, completed May 19, 2018 10:54:23 PM
